{
	"name": "svelte-preprocess-highlight",
	"description": "Syntax highlight code blocks within Svelte components.",
	"repo_url": "https://github.com/metonym/svelte-preprocess-highlight",
	"authors": ["metonym"],
	"homepage": "https://github.com/metonym/svelte-preprocess-highlight",
	"downloads": 5,
	"updated": "2022-06-26T18:16:41.603Z",
	"tags": ["tooling"],
	"github_stars": 2,
	"typescript": true,
	"version": "0.1.0",
	"svelte_range": "^3.48.0",
	"last_rune_check_version": "0.1.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-preprocess-highlight",
				"version": "0.1.0",
				"size": 11531
			},
			{
				"name": "highlight.js",
				"version": "11.11.1",
				"size": 5433042
			},
			{
				"name": "magic-string",
				"version": "0.26.7",
				"size": 400761
			},
			{
				"name": "sourcemap-codec",
				"version": "1.4.8",
				"size": 31802
			},
			{
				"name": "prettier",
				"version": "2.8.8",
				"size": 11238446
			},
			{
				"name": "prettier-plugin-svelte",
				"version": "2.10.1",
				"size": 268019
			}
		],
		"dependencies": [
			[0, 1],
			[0, 2],
			[2, 3],
			[0, 4],
			[0, 5]
		],
		"circular": []
	},
	"readme": "# svelte-preprocess-highlight\n\n> Svelte preprocessor that syntax highlights code using [highlight.js](https://github.com/highlightjs/highlight.js)\n\nThis preprocessor uses `highlight.js` to syntax highlight and [Prettier](https://github.com/prettier/prettier) to format the text. This approach can greatly decrease the amount of client-side JavaScript because the transformations are done at compile time.\n\nBundle sizes:\n\n```diff\nhighlight.js@11.5.1\n- 896 kB (minified)\n\nprettier@2.7.1\n- 423.2 kB (minified)\n```\n\n**Original**\n\n```svelte\n<pre data-language=\"typescript\">\n{`\n  const sum = (a: number, b: number) => a + b;\n`}\n</pre>\n```\n\n**Processed**\n\n<!-- prettier-ignore-start -->\n```svelte\n<pre><code class=\"hljs\"><span class=\"hljs-keyword\">const</span> <span class=\"hljs-title function_\">sum</span> = (<span class=\"hljs-params\">a: <span class=\"hljs-built_in\">number</span>, b: <span class=\"hljs-built_in\">number</span></span>) =&gt; a + b;\n</code></pre>\n```\n<!-- prettier-ignore-end -->\n\n## Limitations\n\nThe preprocessor only works for static text; the result must be deterministic. For dynamic use cases, you must include `highlight.js` and Prettier on the client-side.\n\nFor example, the following will not work because the code must be re-highlighted when it changes.\n\n```svelte\n<pre>\n  {toggleFunctionCode\n    ? \"const sum = (a: number, b: number) => a + b;\"\n    : \"const difference = (a: number, b: number) => a - b;\"}\n</pre>\n```\n\n## Installation\n\n```bash\n# Yarn\nyarn add -D svelte-preprocess-highlight\n\n# NPM\nnpm i -D svelte-preprocess-highlight\n\n# pnpm\npnpm i -D svelte-preprocess-highlight\n```\n\n## Set-up\n\nAdd `highlight` to the list of Svelte preprocessors.\n\n### SvelteKit\n\n```js\n// svelte.config.js\nimport { highlight } from \"svelte-preprocess-highlight\";\n\nconst config = {\n  preprocess: [highlight()],\n};\n\nexport default config;\n```\n\n### Vite\n\n```js\n// vite.config.js\nimport { defineConfig } from \"vite\";\nimport { svelte } from \"@sveltejs/vite-plugin-svelte\";\nimport { highlight } from \"svelte-preprocess-highlight\";\n\nexport default defineConfig({\n  plugins: [\n    svelte({\n      preprocess: [highlight()],\n    }),\n  ],\n});\n```\n\n## Usage\n\nUse a `pre` element with a `data-language` attribute to denote what to highlight. The code to highlight should be placed inside of the `pre` element.\n\n**Single Line**\n\n```svelte\n<pre data-language=\"typescript\">{\"const sum = (a: number, b: number) => a + b;\"}</pre>\n```\n\n**Multi-line**\n\n```svelte\n<pre data-language=\"typescript\">\n{`\n  const sum = (a: number, b: number) => a + b;\n\n  const difference = (a: number, b: number) => a - b;\n`}\n</pre>\n```\n\n## Options\n\n### `ignorePath`\n\nBy default, the preprocessor will ignore files in `node_modules` and auto-generated files by SvelteKit (located in `.svelte-kit`).\n\nUse the `ignorePath` option to customize files to ignore.\n\n```js\nhighlight({\n  ignorePath: (filename) => {\n    // Ignore file names that do not end with `.svelte`\n    if (!/\\.(svelte)$/.test(filename)) return true;\n\n    // Ignore file names that do not contain \"demo\"\n    return !/demo/.test(filename);\n  },\n});\n```\n\n### `prettierOptions`\n\nThe text is formatted by Prettier before being highlighted.\n\nPass custom [Prettier options](https://prettier.io/docs/en/options.html) to `prettierOptions`.\n\n```js\nhighlight({\n  prettierOptions: {\n    printWidth: 100,\n    svelteStrictMode: true,\n  },\n});\n```\n\n## Changelog\n\n[CHANGELOG.md](CHANGELOG.md)\n\n## License\n\n[MIT](LICENSE)\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3589, 1],
		[3596, 4],
		[3603, 1],
		[3610, 1],
		[3617, 1],
		[3624, 2],
		[3631, 2],
		[3645, 2],
		[3659, 2],
		[3666, 1],
		[3673, 2],
		[3687, 1],
		[3694, 1],
		[3701, 1],
		[3708, 1],
		[3722, 1],
		[3743, 1],
		[3757, 1],
		[3771, 2],
		[3778, 1],
		[3792, 4],
		[3799, 2],
		[3806, 1],
		[3820, 1],
		[3827, 1],
		[3834, 15],
		[3848, 2],
		[3855, 5],
		[3869, 1],
		[3876, 1],
		[3883, 1],
		[3890, 3],
		[3897, 4],
		[3904, 1],
		[3911, 2],
		[3918, 5],
		[3925, 23],
		[3932, 6],
		[3939, 1],
		[3946, 3],
		[3953, 1],
		[3967, 3],
		[3974, 1],
		[3981, 1],
		[3988, 1],
		[3995, 1],
		[4002, 3],
		[4009, 2],
		[4016, 1],
		[4023, 3],
		[4030, 3],
		[4037, 2],
		[4044, 7],
		[4051, 2],
		[4065, 1],
		[4100, 4],
		[4107, 2],
		[4114, 5],
		[4121, 5],
		[4128, 2]
	],
	"esm": false,
	"cjs": true
}
