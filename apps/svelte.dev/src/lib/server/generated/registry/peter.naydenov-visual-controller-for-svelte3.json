{
	"name": "@peter.naydenov/visual-controller-for-svelte3",
	"description": "Build micro-frontends based on Svelte components.",
	"repo_url": "https://github.com/PeterNaydenov/visual-controller-for-svelte3",
	"authors": ["dreamgfx"],
	"homepage": "https://github.com/PeterNaydenov/visual-controller-for-svelte3#readme",
	"downloads": 5,
	"updated": "2024-12-21T06:25:07.482Z",
	"tags": ["miscellaneous"],
	"github_stars": 0,
	"typescript": false,
	"version": "2.1.2",
	"svelte_range": "^4.2.19",
	"last_rune_check_version": "2.1.2",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@peter.naydenov/visual-controller-for-svelte3",
				"version": "2.1.2",
				"size": 27244
			},
			{
				"name": "ask-for-promise",
				"version": "3.0.1",
				"size": 29445
			}
		],
		"dependencies": [[0, 1]],
		"circular": []
	},
	"readme": "# Visual Controller for Svelte (@peter.naydenov/visual-controller-for-svelte3)\n\n*NOTE: After version 2.0.2 the library works with `Svelte 4`. Product is not changed, just the dependency. If you need version 3 of Svelte, use version 2.0.1 of this library.*\n\n![version](https://img.shields.io/github/package-json/v/peterNaydenov/visual-controller-for-svelte3)\n![license](https://img.shields.io/github/license/peterNaydenov/visual-controller-for-svelte3)\n\n\n\nTool for building a micro-frontends(MFE) based on Svelte components - Start multiple Svelte applications in the same HTML page and control them.\n\nInstall visual controller:\n```\nnpm i @peter.naydenov/visual-controller-for-svelte3\n```\n\nInitialization process:\n```js\n// for es6 module projects:\nimport notice from '@peter.naydenov/notice' // event emitter by your personal choice.\nimport VisualController from '@peter.naydenov/visual-controller-for-svelte3'\n\n// for commonjs projects:\nconst notice = require('@peter.naydenov/notice')\nconst VisualController = require('@peter.naydenov/visual-controller-for-svelte3')\n\n\n\nlet \n      eBus = notice ()\n    , dependencies = { eBus }  // Provide everything that should be exposed to components \n    , html = new VisualController ( dependencies ) \n    ;\n// Ready for use...\n```\n\nLet's show something on the screen:\n```js\n// Let's have svelte component 'Hello' with prop 'greeting'\n\nhtml.publish ( Hello, {greeting:'Hi'}, 'app' )\n//arguments are: ( component, props, containerID )\n```\n\n## Inside of the Components\n\n*Note: If your component should be displayed only, that section can be skipped.*\n\nAll provided libraries during visualController initialization are available if you export variable with name `dependencies`. Export also `setupUpdates` if you need to manipulate component \n\n```js\n\nlet msg = 'Vite + Svelte'\nexport let dependencies, setupUpdates;\nconst { eBus } = dependencies\n\nsetupUpdates ({   // Provides to visualContoller method 'changeMessage' \n          changeMessage (update) {\n                  msg = update\n              }\n    })\n```\n\nThe external call will look like this:\n\n```js\nhtml.getApp ( 'app' ).changeMessage ( 'New message content' )\n```\n\n\n\n\n## Visual Controller Methods\n```js\n  publish : 'Render svelte app in container. Associate app instance with the container.'\n, getApp  : 'Returns app instance by container name'\n, destroy : 'Destroy app by using container name '\n, has     : 'Checks if app with specific \"id\" was published'\n```\n\n\n\n### VisualController.publish ()\nPublish a svelte app.\n```js\nhtml.publish ( component, props, containerID )\n```\n- **component**: *object*. Svelte component\n- **props**: *object*. Svelte components props\n- **containerID**: *string*. Id of the container where svelte-app will live.\n- **returns**: *Promise<Object>*. Update methods library if defined. Else will return a empty object;\n\nExample:\n```js\n let html = new VisualController ();\n html.publish ( Hi, { greeting: 'hi'}, 'app' )\n```\n\nRender component 'Hi' with prop 'greeting' and render it in html element with id \"app\".\n\n\n\n\n\n### VisualController.getApp ()\nReturns the library of functions provided from method `setupUpdates`. If svelte-app never called `setupUpdates`, result will be an empty object.\n\n```js\n let controls = html.getApp ( containerID )\n```\n- **containerID**: *string*. Id of the container.\n\nExample:\n```js\nlet \n      id = 'videoControls'\n    , controls = html.getApp ( id )\n    ;\n    // if app with 'id' doesn't exist -> returns false, \n    // if app exists and 'setupUpdates' was not used -> returns {}\n    // in our case -> returns { changeMessage:f }\nif ( !controls )   console.error ( `App for id:\"${id}\" is not available` )\nelse {\n        if ( controls.changeMessage )   controls.changeMessage ('new title') \n   }\n```\nIf visual controller(html) has a svelte app associated with this name will return it. Otherwise will return **false**.\n\n\n\n\n\n### VisualController.destroy ()\nWill destroy svelte app associated with this container name and container will become empty. Function will return 'true' on success and 'false' on failure. \nFunction will not delete content of provided container if there is no svelte app associated with it.\n\n```js\nhtml.destroy ( containerID )\n```\n- **containerID**: *string*. Id name.\n\n\n\n### Extra\n\nVisual Controller has versions for few other front-end frameworks:\n- [React](https://github.com/PeterNaydenov/visual-controller-for-react) \n- [Vue 3](https://github.com/PeterNaydenov/visual-controller-for-vue3)\n- [Vue 2](https://github.com/PeterNaydenov/visual-controller-for-vue)\n\n\n\n\n\n## Links\n\n- [History of changes](https://github.com/PeterNaydenov/visual-controller-for-svelte3/blob/master/Changelog.md)\n- [License](https://github.com/PeterNaydenov/visual-controller-for-svelte3/blob/master/LICENSE)\n\n\n\n## Credits\n'visual-controller-for-svelte3' is created and supported by Peter Naydenov\n\n\n\n## License\n\n'visual-controller-for-svelte3' is released under the [MIT license](https://github.com/PeterNaydenov/visual-controller-for-svelte3/blob/master/LICENSE)",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 68],
		[3596, 13],
		[3603, 7],
		[3610, 3],
		[3617, 2],
		[3624, 3],
		[3631, 2],
		[3638, 1],
		[3645, 4],
		[3652, 5],
		[3659, 10],
		[3666, 10],
		[3673, 3],
		[3680, 2],
		[3687, 74],
		[3694, 7],
		[3708, 5],
		[3715, 8],
		[3722, 7],
		[3729, 4],
		[3736, 2],
		[3743, 4],
		[3750, 2],
		[3757, 1],
		[3764, 4],
		[3771, 5],
		[3778, 4],
		[3785, 4],
		[3792, 2],
		[3799, 2],
		[3806, 5],
		[3813, 7],
		[3820, 1],
		[3834, 8],
		[3841, 28],
		[3848, 2],
		[3855, 8],
		[3862, 10],
		[3869, 1],
		[3876, 2],
		[3883, 1],
		[3890, 1],
		[3897, 2],
		[3911, 4],
		[3918, 1],
		[3925, 1],
		[3932, 3],
		[3939, 5],
		[3946, 1],
		[3953, 1],
		[3960, 1],
		[3967, 1],
		[3974, 1],
		[3981, 2],
		[3988, 1],
		[3995, 1],
		[4002, 125],
		[4009, 7],
		[4016, 12],
		[4023, 9],
		[4030, 4],
		[4037, 20],
		[4044, 11],
		[4051, 8],
		[4058, 6],
		[4065, 5],
		[4072, 2],
		[4079, 3],
		[4093, 9],
		[4100, 2],
		[4107, 21],
		[4114, 5],
		[4121, 8],
		[4128, 17]
	]
}
