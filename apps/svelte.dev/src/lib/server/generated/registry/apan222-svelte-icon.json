{
	"name": "@apan222/svelte-icon",
	"description": "Render SVG icons in Svelte components.",
	"repo_url": "https://github.com/02rasjac/svelte-icon-ts",
	"authors": ["apan222"],
	"homepage": "https://github.com/02rasjac/svelte-icon-ts#readme",
	"downloads": 5,
	"updated": "2023-08-16T12:36:42.741Z",
	"tags": ["ui"],
	"typescript": true,
	"version": "0.0.3",
	"svelte_range": "^4.0.0",
	"kit_range": "^1.20.4",
	"last_rune_check_version": "0.0.3",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@apan222/svelte-icon",
				"version": "0.0.3",
				"size": 6616
			}
		],
		"dependencies": [],
		"circular": []
	},
	"legacy_svelte": true,
	"readme": "# Icon-component for Svelte\n\nThis is a simple component to render an SVG-icon in svelte. **NOTE:** It is basically a _typescript_-version of [svelte-icon by Pictogrammers](https://github.com/Pictogrammers/svelte-icon/tree/main).\n\n## Usage\n\n1. Install:\n\n   ```\n   npm install @apan222/svelte-icon\n   ```\n\n2. Import:\n\n   ```ts\n   import SvgIcon from '@apan222/svelte-icon';\n   ```\n\n3. Use the component like any other svelte-component, i.e:\n\n   ```html\n   <SvgIcon path=\"M19,6.41L17.59,5L7,15.59V9H5V19H15V17H8.41L19,6.41Z\" flip=\"horizontal\" />\n   ```\n\n## Props\n\n| Name      | Default      | Description                                                                                                                                 |\n| --------- | ------------ | ------------------------------------------------------------------------------------------------------------------------------------------- |\n| `path`    | **Required** | SVG-path to render.                                                                                                                         |\n| `size`    | 24           | The side-length (square) of the icon.                                                                                                       |\n| `viewBox` | '0 0 24 24'  | The SVG viewport coordinates for the current SVG fragment. Same as html `<svg/>`.                                                           |\n| `flip`    | 'none'       | Flip the icon. **Options:** `'vertical'`, `'horizontal'`, `'both'` and `'none'`.                                                            |\n| `rotate`  | '0deg'       | Allows rotation of the icon. Any string containing valid _CSS_-angle is valid, i.e `'90deg'` and `'0.25turn'` results in the same rotation. |\n\nFurthermore, any other attributes that can be used on an html `<svg />`-element can be used. Examples could be `fill`, `stroke` and `aria-label`. It is recommended for accessibility-reasons to include a `aria-label` or `aria-labelledby` so screenreaders can tell what the icon means.\n\n## Style\n\nBy default, the `fill` is set to `currentColor`. However, you can change it by explicitly adding a `fill`-attribute, or add a global `class` and style it through that. For examples:\n\n```html\n<div style=\"color: white; background-color: #333\">\n\t<h2>Colors</h2>\n\t<SvgIcon {path} />\n\t<SvgIcon {path} fill=\"red\" />\n\t<SvgIcon {path} class=\"custom-class\" />\n</div>\n\n<style>\n\t:global(.custom-class) {\n\t\tfill: pink;\n\t}\n</style>\n```\n\nResult:\n![Example of three x's with different colors](/static/result_colors.png)\n",
	"downloads_history": [
		[3589, 2],
		[3596, 4],
		[3603, 5],
		[3610, 1],
		[3617, 3],
		[3624, 6],
		[3638, 2],
		[3645, 8],
		[3659, 7],
		[3666, 3],
		[3687, 1],
		[3694, 1],
		[3708, 1],
		[3729, 1],
		[3736, 1],
		[3764, 2],
		[3771, 3],
		[3778, 3],
		[3785, 1],
		[3799, 1],
		[3806, 2],
		[3813, 1],
		[3827, 1],
		[3834, 1],
		[3841, 15],
		[3855, 1],
		[3862, 7],
		[3876, 4],
		[3883, 1],
		[3904, 3],
		[3911, 4],
		[3918, 3],
		[3932, 5],
		[3939, 1],
		[3960, 1],
		[3974, 2],
		[3981, 2],
		[3988, 1],
		[3995, 3],
		[4002, 3],
		[4009, 1],
		[4016, 3],
		[4023, 1],
		[4030, 5],
		[4037, 4],
		[4044, 7],
		[4051, 2],
		[4058, 1],
		[4072, 1],
		[4086, 10],
		[4100, 12],
		[4107, 1],
		[4114, 5],
		[4121, 10],
		[4128, 3]
	]
}
