{
	"name": "sveltekit-auth0",
	"description": "Integrate Auth0 authentication into SvelteKit applications.",
	"repo_url": "",
	"authors": ["kalis99"],
	"downloads": 8,
	"updated": "2023-01-08T08:29:40.563Z",
	"tags": ["auth"],
	"typescript": true,
	"version": "0.1.1",
	"svelte_range": "^3.54.0",
	"kit_range": "^1.0.0",
	"last_rune_check_version": "0.1.1",
	"github_stars": 0,
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "sveltekit-auth0",
				"version": "0.1.1",
				"size": 10859
			},
			{
				"name": "@auth0/auth0-spa-js",
				"version": "1.22.6",
				"size": 2542246
			},
			{
				"name": "core-js",
				"version": "3.42.0",
				"size": 1272681
			},
			{
				"name": "unfetch",
				"version": "4.2.0",
				"size": 28142
			},
			{
				"name": "es-cookie",
				"version": "1.3.2",
				"size": 14972
			},
			{
				"name": "promise-polyfill",
				"version": "8.3.0",
				"size": 49710
			},
			{
				"name": "browser-tabs-lock",
				"version": "1.3.0",
				"size": 35366
			},
			{
				"name": "lodash",
				"version": "4.17.21",
				"size": 1412415
			},
			{
				"name": "fast-text-encoding",
				"version": "1.0.6",
				"size": 32194
			},
			{
				"name": "abortcontroller-polyfill",
				"version": "1.7.8",
				"size": 158064
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[1, 3],
			[1, 4],
			[1, 5],
			[1, 6],
			[6, 7],
			[1, 8],
			[1, 9]
		],
		"circular": []
	},
	"readme": "# Introduction\n\nThis package is designed to provide you with auth0 authentication for your svelte-kit app\n\n[Github repository](https://github.com/Golemas7/sveltekit-auth0)\n\nIf something is unclear, you can take a look at the [Demo App](https://master--extraordinary-babka-cc02be.netlify.app) and [Demo app repo](https://github.com/Golemas7/sveltekit-auth0)\n\n\n### NOTE: Please use 0.1.0 or later version of this package.\n\n\n### \n\n# Setting up this package\n\n1. Create an Application in [Auth0 website](https://auth0.com/)\n\n2. Under the settings tab of you application, find the Basic Information section.\nThen find the `Domain` and `Client ID` strings. You will need these later.\n\n3. Under the settings tab of you application, find the Application URIs section. \n   Then find the `Allowed Logout URLs`, `Allowed Web Origins` and `Allowed Origins (CORS)` inputs. \n   Fill these inputs with the url that your app is running locally ( e.x. `http://localhost:3000` ).\n   There is an additional input `Allowed Callback URLs`, fill this with your callback URL, if you do not have one - fill the url that your app is running at ( e.x. `http://localhost:3000` ).\n\n4. Create an .env file for your project and declare these variables:\n\n* `VITE_AUTH0_DOMAIN` - Fill with the `Domain` data from step 2 of Setting up this package section\n* `VITE_AUTH0_CLIENT_ID` - Fill with the `Client ID` data from step 2 of Setting up this package section\n* `VITE_AUTH0_REDIRECT_URI` - Fill if your app has a `redirect URI` ( optional )\n\n## Initializing the Auth0\n\n1. In your root layout file import the auth object that is the default export like this:\n```import auth from 'sveltekit-auth0'```\n2. Use the onMount hook and call ```auth.initializeAuth0()``` to initialize the `Auth0` client\n\n## Using the initialized Auth0\nYou should now be able to use the main methods for interacting with Auth0\n\nTwo other methods are bundled in the default export:\n1. `loginWithPopup` - will attempt to log the user in by providing a popup with a login window from Auth0\n2. `logout` - will log the user out\n\nYou would use them as such:\n```\nimport auth from 'sveltekit-auth0'\n\nauth.loginWithPopup()\n\n// AND\n\nauth.logout()\n```\n\n\nAll other methods can be imported as such:\n\n```\nimport { getIsAuthenticatedValue, getIsAuthenticated } from 'sveltekit-auth0'\n\n// And used like\n\nconst isAuthenticatedValue = getIsAuthenticatedValue();\n\n// OR\n\nconst isAuthenticated = getIsAuthenticated();\n\n// Listen for changes on the value\nisAuthenticated.subscribe((value: boolean) => {\n   // Do something with the value\n})\n```\n\nMethods available:\n\n* `getUser` - will return the Readable<User> object from Auth0 which you can subscribe for changes\n* `getUserValue` - will return the User object from Auth0\n* `getIsAuthenticated` - will return Readable<boolean> object which you can subscribe for changes in isAuthenticated. \nEx. after login/logout it would get the new value.\n* `getIsAuthenticatedValue` - will return if the user is authenticated or not at this point in time\n* `getPopupOpen` - will return Readable<boolean> object which you can subscribe for changes of login popup is it open or not\n* `getPopupOpenValue` - will return if the login popup is open or not at this point in time\n* `loginWithPopup` - will attempt to log the user in by providing a popup with a login window from Auth0\n* `logout` - will log the user out\n\n\n## Reporting issues, asking for features\n\nIf you find any issues, please open up an issue on the [repository](https://github.com/Golemas7/sveltekit-auth0).\nYou can also post anny feature suggestions or improvements there.\n\n## Happy coding!",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 21],
		[3603, 22],
		[3610, 21],
		[3617, 2],
		[3624, 5],
		[3631, 15],
		[3645, 10],
		[3652, 7],
		[3666, 22],
		[3687, 5],
		[3694, 1],
		[3701, 2],
		[3715, 2],
		[3722, 1],
		[3736, 23],
		[3743, 3],
		[3757, 2],
		[3764, 2],
		[3771, 4],
		[3778, 1],
		[3792, 2],
		[3799, 2],
		[3806, 5],
		[3820, 1],
		[3827, 2],
		[3834, 88],
		[3841, 98],
		[3848, 1],
		[3855, 7],
		[3862, 1],
		[3869, 4],
		[3876, 4],
		[3883, 3],
		[3890, 23],
		[3897, 2],
		[3904, 1],
		[3911, 2],
		[3918, 3],
		[3939, 3],
		[3946, 2],
		[3953, 2],
		[3960, 1],
		[3967, 21],
		[3974, 8],
		[3995, 12],
		[4002, 1],
		[4009, 1],
		[4016, 1],
		[4023, 8],
		[4030, 2],
		[4037, 29],
		[4044, 21],
		[4051, 8],
		[4058, 2],
		[4065, 5],
		[4072, 2],
		[4079, 1],
		[4086, 1],
		[4093, 3],
		[4100, 59],
		[4107, 4],
		[4114, 8],
		[4121, 20],
		[4128, 6],
		[4135, 6]
	],
	"esm": true,
	"cjs": false
}
