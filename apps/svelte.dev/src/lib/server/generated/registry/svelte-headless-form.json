{
	"name": "svelte-headless-form",
	"description": "Provides a fast, light, and feature-rich form library for Svelte.",
	"repo_url": "https://github.com/nickt26/svelte-headless-form",
	"authors": ["nickt1997"],
	"homepage": "https://github.com/nickt26/svelte-headless-form#readme",
	"downloads": 19,
	"updated": "2023-05-16T19:15:07.998Z",
	"tags": ["miscellaneous"],
	"github_stars": 9,
	"typescript": true,
	"version": "0.2.1",
	"svelte_range": "^3.0.0",
	"last_rune_check_version": "0.2.1",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-headless-form",
				"version": "0.2.1",
				"size": 139782
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# Svelte Headless Form\n\nA fast, light and batteries-included form library to make you more productive.\n\n## Getting Started\n\n```bash\nnpm install svelte-headless-form\n```\n\n## How to use\n\n```html\n<script>\n    import { createForm } from 'svelte-headless-form';\n    const { submitForm, input, errors, values, register } = createForm({\n        validateMode: 'onBlur', // Defaults - Schemaless:onChange Schema:onBlur\n        initialValues: {\n            username: '',\n            password: ''\n        },\n        initialValidators: {\n            username: (value) => (value.length > 0 ? false : 'Name is required'),\n            password: (value) => (value.length > 0 ? false : 'Password is required')\n        }\n    });\n</script>\n\n<form on:submit|preventDefault={submitForm((values) => console.log(values))}>\n    <input\n        type=\"text\"\n        bind:value={$values.username}\n        use:register={{ name: 'username' }}\n    />\n    {#if $errors.username}\n        <div>\n            {$errors.username}\n        </div>\n    {/if}\n\n    <input\n        type=\"password\"\n        bind:value={$values.password}\n        use:register={{ name: 'password' }}\n    />\n    {#if $errors.password}\n        <div>\n            {$errors.password}\n        </div>\n    {/if}\n\n    <button type=\"submit\">Submit</button>\n</form>\n```\n\n## Philosophy\n\nSvelte Headless Form allows for 2 different validation implementations, called schema-based validation and schemaless validation.\nIn the [How To Use](#how-to-use) section we are demonstrating schemaless validation by giving each form value it's own validator in the initialValidators prop.\nIf you are intereseted in using schema based validaton please give your createForm() a prop called 'validationResolver' which is a single function that returns an object with error strings located at the same path of the corresponding values. In the future we plan to have pre-built validation resolvers for all the major schema based validators like zod, yup and joi to name a few.\n\n## Roadmap\n\nThese roadmap features are not ordered by priority.\n\n - [x] Support schemaless validation updates after form creation.\n - [x] Support validation dependencies.\n - [ ] Update README with more advanced examples.\n - [ ] Create a website with a tutorial, an API overview and documentation.\n - [x] Send through entire form state to schemaless validators.\n - [x] Support async schemaless validators.\n - [x] Support schema-based validation.\n - [x] Unify useField and useFieldArray api by passing down control.\n - [ ] Support a revalidateMode in createForm options.\n - [x] Explore simpler options for attaching handleChange, handleBlur and handleFocus events to inputs.\n\nPlease consider svelte-headless-form in beta until a 1.0 release.\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3589, 7],
		[3596, 12],
		[3603, 13],
		[3610, 12],
		[3617, 1],
		[3624, 5],
		[3645, 1],
		[3652, 4],
		[3666, 13],
		[3673, 2],
		[3680, 1],
		[3687, 1],
		[3694, 1],
		[3708, 2],
		[3722, 4],
		[3729, 2],
		[3736, 4],
		[3743, 2],
		[3750, 1],
		[3757, 1],
		[3764, 2],
		[3771, 9],
		[3778, 5],
		[3792, 4],
		[3799, 2],
		[3806, 1],
		[3813, 2],
		[3820, 1],
		[3827, 1],
		[3834, 11],
		[3841, 55],
		[3848, 2],
		[3855, 2],
		[3862, 2],
		[3869, 1],
		[3876, 3],
		[3883, 3],
		[3890, 13],
		[3897, 3],
		[3904, 2],
		[3911, 10],
		[3918, 10],
		[3925, 250],
		[3932, 109],
		[3939, 36],
		[3946, 30],
		[3953, 18],
		[3960, 18],
		[3967, 3],
		[3974, 1],
		[3981, 21],
		[3988, 11],
		[3995, 5],
		[4002, 6],
		[4009, 5],
		[4016, 3],
		[4023, 4],
		[4030, 7],
		[4037, 19],
		[4044, 16],
		[4051, 68],
		[4058, 38],
		[4065, 5],
		[4072, 6],
		[4079, 6],
		[4093, 3],
		[4100, 29],
		[4107, 17],
		[4114, 19],
		[4121, 18],
		[4128, 32]
	]
}
