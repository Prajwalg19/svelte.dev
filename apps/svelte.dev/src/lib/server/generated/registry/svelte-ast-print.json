{
	"name": "svelte-ast-print",
	"description": "Print Svelte AST nodes as string, useful for codemods.",
	"repo_url": "https://github.com/xeho91/svelte-ast-print",
	"authors": ["xeho91"],
	"homepage": "https://github.com/xeho91/svelte-ast-print",
	"downloads": 24867,
	"updated": "2025-05-01T03:46:48.114Z",
	"tags": ["tooling"],
	"github_stars": 12,
	"typescript": false,
	"version": "1.0.0",
	"svelte_range": "^5.20.0",
	"last_rune_check_version": "1.0.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-ast-print",
				"version": "1.0.0",
				"size": 4285
			},
			{
				"name": "esrap",
				"version": "1.4.6",
				"size": 50818
			},
			{
				"name": "@jridgewell/sourcemap-codec",
				"version": "1.5.0",
				"size": 112815
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2]
		],
		"circular": []
	},
	"readme": "# `svelte-ast-print`\n\n![NPM Version](https://img.shields.io/npm/v/svelte-ast-print?style=for-the-badge&logo=npm)\n\nPrint _(serialize)_ **[Svelte] [AST]** nodes into stringified code syntax.\\\nA.k.a. [`parse()`] in reverse.\n\n## Usage\n\n[See documentation](https://xeho91.github.io/js-ast/svelte-ast-print.svelte-ast-print.html).\n\n> [!IMPORTANT]\n>\n> When using [`parse()`] from `\"svelte/compiler\"`...\\\n> **please remember about passing `modern: true` to options** _(second argument)_.\n>\n> This option is only available starting `svelte@5`.\n>\n> Example:\n>\n> ```js\n> import { parse } from \"svelte/compiler\";\n>\n> parse(code, { modern: true });\n> //          ðŸ‘† Don't forget about this!\n> ```\n>\n> You can omit it from [Svelte] `v6` - [source](https://github.com/sveltejs/svelte/blob/5a05f6371a994286626a44168cb2c02f8a2ad567/packages/svelte/src/compiler/index.js#L99-L100).\n\n---\n\n## How does it work under the hood?\n\n1. It determines whether the provided AST node `type` is related to [Svelte] syntax only.\n1. Based on node's `type` check from above:\n    - it uses either this package's printer to print [AST] node related to [Svelte] syntax,\n    - otherwise it uses [`esrap`] to print [ESTree] specification-complaint [AST] node.\n\n---\n\n## Author\n\nMateusz \"[xeho91](https://github.com/xeho91)\" Kadlubowski\n\n### Acknowledgements\n\n- [@manuel3108](https://github.com/manuel3108) for bringing TypeScript support to [`esrap`]\n\n<!-- links -->\n\n[Svelte]: https://github.com/sveltejs/svelte\n[`esrap`]: https://github.com/rich-harris/esrap\n[`zimmerframe`]: https://github.com/rich-harris/zimmerframe\n[ESTree]: https://github.com/estree/estree\n[codemods]: https://codemod.com/blog/what-are-codemods#ill-find-replace-whats-the-issue-hint-a-lot\n[`parse()`]: https://svelte.dev/docs/svelte-compiler#parse\n[AST]: https://en.wikipedia.org/wiki/Abstract_syntax_tree\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3834, 762],
		[3841, 356],
		[3848, 137],
		[3855, 65],
		[3862, 6],
		[3869, 59],
		[3876, 4],
		[3890, 105],
		[3897, 334],
		[3904, 39],
		[3911, 23],
		[3918, 8],
		[3925, 9],
		[3932, 2],
		[3939, 368],
		[3946, 2301],
		[3953, 3966],
		[3960, 4873],
		[3967, 6541],
		[3974, 7358],
		[3981, 7734],
		[3988, 8086],
		[3995, 8746],
		[4002, 9638],
		[4009, 4976],
		[4016, 6041],
		[4023, 9990],
		[4030, 12635],
		[4037, 13870],
		[4044, 17028],
		[4051, 16985],
		[4058, 19239],
		[4065, 20967],
		[4072, 20711],
		[4079, 20933],
		[4086, 21704],
		[4093, 22305],
		[4100, 22571],
		[4107, 24936],
		[4114, 24867],
		[4121, 23632],
		[4128, 22887]
	]
}
