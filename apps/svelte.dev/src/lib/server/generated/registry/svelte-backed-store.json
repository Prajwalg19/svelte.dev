{
	"name": "svelte-backed-store",
	"description": "Create localStorage or sessionStorage backed stores for Svelte.",
	"repo_url": "https://github.com/JohnPeel/svelte-backed-store",
	"authors": ["johnpeel"],
	"homepage": "https://github.com/JohnPeel/svelte-backed-store#readme",
	"downloads": 11,
	"updated": "2019-12-01T10:34:39.778Z",
	"tags": ["miscellaneous"],
	"github_stars": 4,
	"typescript": true,
	"version": "1.1.1",
	"svelte_range": "^3.15.0",
	"last_rune_check_version": "1.1.1",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-backed-store",
				"version": "1.1.1",
				"size": 8081
			},
			{
				"name": "svelte",
				"version": "3.59.2",
				"size": 10624206
			}
		],
		"dependencies": [[0, 1]],
		"circular": []
	},
	"readme": "# svelte-backed-store\r\n\r\nProvides svelte stores backed by localStorage or sessionStorage.\r\n\r\n## Getting Started (the easy way)\r\n\r\nInstall the package...\r\n\r\n```bash\r\nnpm install svelte-backed-store\r\n```\r\n\r\n...and import the polyfill in your `stores.js`...\r\n\r\n```js\r\nimport \"svelte-backed-store/polyfill\";\r\n```\r\n\r\n...and use the store method on localStorage or sessionStorage:\r\n\r\n```js\r\nexport const myStore = localStorage.store(\"myKey\", \"myInitialValue\");\r\n```\r\n\r\n## Getting Started (the slightly harder way)\r\n\r\nInstall the package...\r\n\r\n```bash\r\nnpm install svelte-backed-store\r\n```\r\n\r\n...and import it in your `stores.js`...\r\n\r\n```js\r\nimport { backedStore } from \"svelte-backed-store\";\r\n```\r\n\r\n...then bind backedStore to any Storage instance (e.g. localStorage or sessionStorage)...\r\n\r\n```js\r\nconst localStore = backedStore.bind(localStorage);\r\n```\r\n\r\n...and use the store:\r\n\r\n```js\r\nexport const myStore = localStore(\"myKey\", \"myInitialValue\");\r\n```\r\n\r\n## For use in Sapper\r\n\r\nWhen using the polyfill version, it includes a simple Storage polyfill for localStorage and sessionStorage on the server-side.\r\n\r\nAs such, it should work just fine in any Sapper project.\r\n\r\nWithout the polyfill version, you can use Storage exported from this project to create a localStorage/sessionStorage for the server-side.\r\n\r\n```js\r\nimport { globals } from \"svelte/internal\";\r\nimport { Storage, backedStore } from \"svelte-backed-store\";\r\n\r\nif (typeof localStorage === \"undefined\") {\r\n    globals.localStorage = new Storage();\r\n}\r\nconst localStore = backedStore.bind(globals.localStorage);\r\n\r\nexport const myStore = localStore(\"myKey\", \"myInitialValue\");\r\n```\r\n\r\n## Readonly stores\r\n\r\nTo create a readonly store call `toReadOnly`.\r\n\r\n```js\r\nimport \"svelte-backed-store/polyfill\";\r\nimport { toReadOnly } from \"svelte-backed-store\";\r\nexport const myStore = toReadOnly(localStorage.store(\"myKey\", \"myInitialValue\"));\r\n```\r\n\r\n## Development\r\n\r\nThis project is very simple, but pull requests and issue reports are welcome.\r\n\r\n## License\r\n\r\n[MIT](LICENSE)",
	"legacy_svelte": false,
	"downloads_history": [
		[3589, 4],
		[3596, 7],
		[3603, 3],
		[3610, 4],
		[3631, 1],
		[3638, 1],
		[3659, 1],
		[3666, 3],
		[3680, 1],
		[3687, 1],
		[3694, 1],
		[3701, 1],
		[3708, 1],
		[3715, 1],
		[3729, 4],
		[3736, 1],
		[3750, 2],
		[3757, 2],
		[3764, 1],
		[3771, 2],
		[3778, 2],
		[3785, 2],
		[3792, 2],
		[3799, 1],
		[3806, 2],
		[3820, 3],
		[3834, 3],
		[3848, 1],
		[3855, 1],
		[3862, 21],
		[3869, 1],
		[3876, 1],
		[3883, 1],
		[3890, 4],
		[3904, 1],
		[3911, 4],
		[3918, 5],
		[3925, 2],
		[3932, 3],
		[3939, 1],
		[3946, 1],
		[3960, 3],
		[3974, 2],
		[3981, 1],
		[3988, 1],
		[4023, 1],
		[4030, 6],
		[4037, 9],
		[4044, 4],
		[4051, 1],
		[4058, 1],
		[4065, 1],
		[4072, 2],
		[4079, 1],
		[4093, 8],
		[4100, 5],
		[4107, 5],
		[4114, 11],
		[4121, 12],
		[4128, 7]
	],
	"esm": false,
	"cjs": true
}
