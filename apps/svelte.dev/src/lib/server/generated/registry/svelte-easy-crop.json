{
	"name": "svelte-easy-crop",
	"description": "Crop images with easy drag and zoom interactions in Svelte.",
	"repo_url": "https://github.com/ValentinH/svelte-easy-crop",
	"authors": ["valentinhervieu"],
	"homepage": "https://github.com/ValentinH/svelte-easy-crop",
	"downloads": 5218,
	"updated": "2025-03-19T10:01:04.759Z",
	"tags": ["media"],
	"github_stars": 220,
	"typescript": true,
	"version": "4.0.1",
	"svelte_range": "^5.0.0",
	"kit_range": "^2.15.0",
	"last_rune_check_version": "4.0.1",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-easy-crop",
				"version": "4.0.1",
				"size": 30324
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# svelte-easy-crop\n\nA Svelte component to crop images with easy interactions\n\nThis is a rewrite of `react-easy-crop` (https://github.com/valentinh/react-easy-crop).\n\n\n> ℹ️ The minimum supported Svelte version is v5. If you are still on an older version, you need to use the 3.x.x versions of `svelte-easy-crop`\n\n[![version][version-badge]][package] [![Monthly downloads][npmstats-badge]][npmstats] ![gzip size][gzip-badge] [![MIT License][license-badge]][license] [![PRs Welcome][prs-badge]][prs]\n\n![svelte-easy-crop Demo](https://user-images.githubusercontent.com/2678610/41561426-365e7a44-734a-11e8-8e0e-1c04251f53e4.gif)\n\n\n## Demo\n\n- [Basic example](https://codesandbox.io/s/svelte-easy-crop-basic-demo-q1005?file=/App.svelte)\n\n## Features\n\n- Supports drag and zoom interactions\n- Provides crop dimensions as pixels and percentages\n- Supports any images format (JPEG, PNG, even GIF) as url or base 64 string\n- Mobile friendly\n\n## Installation\n\n```shell\nyarn add svelte-easy-crop\n```\n\nor\n\n```shell\nnpm install svelte-easy-crop --save\n```\n\n## Basic usage\n\n> The Cropper is styled with `position: absolute` to take the full space of its parent.\n> Thus, you need to wrap it with an element that uses `position: relative` or the Cropper will fill the whole page.\n\n```jsx\n<script>\n  import Cropper from 'svelte-easy-crop'\n\n  let image = '/images/dog.jpeg'\n  let crop = { x: 0, y: 0 }\n  let zoom = 1\n</script>\n\n<Cropper\n {image}\n bind:crop\n bind:zoom\n on:cropcomplete={e => console.log(e.detail)}\n/>\n```\n\n## Props\n\n| Prop               | Type                                | Required | Description                                                                                                                                                                                                                                                                                                 |\n| :----------------- | :---------------------------------- | :------: | :---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `image`            | string                              |    ✓     | The image to be cropped.                                                                                                                                                                                                                                                                                    |\n| `crop`             | `{ x: number, y: number }`          |    ✓     | Position of the image. `{ x: 0, y: 0 }` will center the image under the cropper.                                                                                                                                                                                                                            |\n| `zoom`             | number                              |          | Zoom of the image between `minZoom` and `maxZoom`. Defaults to 1.                                                                                                                                                                                                                                           |\n| `aspect`           | number                              |          | Aspect of the cropper. The value is the ratio between its width and its height. The default value is `4/3`                                                                                                                                                                                                  |\n| `minZoom`          | number                              |          | Minimum zoom of the image. Defaults to 1.                                                                                                                                                                                                                                                                   |\n| `maxZoom`          | number                              |          | Maximum zoom of the image. Defaults to 3.                                                                                                                                                                                                                                                                   |\n| `cropShape`        | 'rect' \\| 'round'                   |          | Shape of the crop area. Defaults to 'rect'.                                                                                                                                                                                                                                                                 |\n| `cropSize`         | `{ width: number, height: number }` |          | Size of the crop area (in pixels). If you don't provide it, it will be computed automatically using the `aspect` prop and the image size.                                                                                                                                                                   |\n| `showGrid`         | boolean                             |          | Whether to show or not the grid (third-lines). Defaults to `true`.                                                                                                                                                                                                                                          |\n| `zoomSpeed`        | number                              |          | Multiplies the value by which the zoom changes. Defaults to 1.                                                                                                                                                                                                                                              |\n| `crossOrigin`      | string                              |          | Allows setting the crossOrigin attribute on the image.                                                                                                                                                                                                                                                      |\n| `restrictPosition` | boolean                             |          | Whether the position of the image should be restricted to the boundaries of the cropper. Useful setting in case of `zoom < 1` or if the cropper should preserve all image content while forcing a specific aspect ratio for image throughout the application. Example: https://codesandbox.io/s/1rmqky233q. |\n| `oncropcomplete` | function(details)                             |          | This callback is the one you should use to save the cropped area of the image. |\n\n## Callbacks\n\n### oncropcomplete\n\n```tsx\n<Cropper\n  {image}\n  bind:crop\n  bind:zoom\n  oncropcomplete={(e) => console.log(e)}\n/>\n```\n\nThe `detail` property is an object with 2 values:\n\n1. `percent`: coordinates and dimensions of the cropped area in percentage of the image dimension\n1. `pixels`: coordinates and dimensions of the cropped area in pixels.\n\nBoth arguments have the following shape:\n\n```js\nconst area = {\n  x: number, // x/y are the coordinates of the top/left corner of the cropped area\n  y: number,\n  width: number, // width of the cropped area\n  height: number, // height of the cropped area\n}\n```\n\n\n## Development\n\n```shell\nyarn\nyarn dev\n```\n\nNow, open `http://localhost:5000` and start hacking!\n\n## License\n\n[MIT](https://github.com/ValentinH/svelte-easy-crop/blob/master/LICENSE)\n\n[npm]: https://www.npmjs.com/\n[node]: https://nodejs.org\n[version-badge]: https://img.shields.io/npm/v/svelte-easy-crop.svg?style=flat-square\n[package]: https://www.npmjs.com/package/svelte-easy-crop\n[downloads-badge]: https://img.shields.io/npm/dm/svelte-easy-crop.svg?style=flat-square\n[npmstats]: http://npm-stat.com/charts.html?package=svelte-easy-crop&from=2018-06-18\n[npmstats-badge]: https://img.shields.io/npm/dm/svelte-easy-crop.svg?style=flat-square\n[gzip-badge]: http://img.badgesize.io/https://unpkg.com/svelte-easy-crop@1.0.0/index.js?compression=gzip&style=flat-square\n[license-badge]: https://img.shields.io/badge/license-MIT-blue.svg?style=flat-square\n[license]: https://github.com/ValentinH/svelte-easy-crop/blob/master/LICENSE\n[prs-badge]: https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square\n[prs]: http://makeapullrequest.com\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3589, 1183],
		[3596, 1993],
		[3603, 1776],
		[3610, 1729],
		[3617, 1750],
		[3624, 1823],
		[3631, 2096],
		[3638, 2202],
		[3645, 1565],
		[3652, 2255],
		[3659, 2480],
		[3666, 3688],
		[3673, 4654],
		[3680, 3249],
		[3687, 3495],
		[3694, 2974],
		[3701, 2559],
		[3708, 2743],
		[3715, 2712],
		[3722, 2666],
		[3729, 2437],
		[3736, 1994],
		[3743, 2057],
		[3750, 1743],
		[3757, 2235],
		[3764, 2245],
		[3771, 2122],
		[3778, 2447],
		[3785, 2963],
		[3792, 3039],
		[3799, 1995],
		[3806, 2297],
		[3813, 2425],
		[3820, 2591],
		[3827, 2904],
		[3834, 2771],
		[3841, 2678],
		[3848, 2546],
		[3855, 2312],
		[3862, 2439],
		[3869, 2493],
		[3876, 2242],
		[3883, 2259],
		[3890, 2714],
		[3897, 2716],
		[3904, 2310],
		[3911, 2663],
		[3918, 2755],
		[3925, 3046],
		[3932, 3207],
		[3939, 2732],
		[3946, 3622],
		[3953, 3400],
		[3960, 3890],
		[3967, 5932],
		[3974, 4069],
		[3981, 3771],
		[3988, 2981],
		[3995, 3143],
		[4002, 3806],
		[4009, 1503],
		[4016, 1278],
		[4023, 3582],
		[4030, 3871],
		[4037, 4321],
		[4044, 4177],
		[4051, 5026],
		[4058, 4190],
		[4065, 4626],
		[4072, 4542],
		[4079, 3580],
		[4086, 3717],
		[4093, 3848],
		[4100, 4023],
		[4107, 4357],
		[4114, 5218],
		[4121, 4196],
		[4128, 4011]
	]
}
