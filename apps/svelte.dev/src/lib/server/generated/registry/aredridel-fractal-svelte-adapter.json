{
	"name": "@aredridel/fractal-svelte-adapter",
	"description": "Adapt Fractal styleguide to use Svelte components.",
	"repo_url": "https://github.com/aredridel/fractal-svelte-adapter",
	"authors": ["aredridel"],
	"homepage": "https://github.com/aredridel/fractal-svelte-adapter#readme",
	"downloads": 5,
	"updated": "2021-05-12T17:11:52.922Z",
	"tags": ["tooling"],
	"github_stars": 2,
	"typescript": false,
	"version": "2.0.0",
	"svelte_range": "^3.19.0",
	"last_rune_check_version": "2.0.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@aredridel/fractal-svelte-adapter",
				"version": "2.0.0",
				"size": 7046
			}
		],
		"dependencies": [],
		"circular": []
	},
	"legacy_svelte": true,
	"readme": "# fractal-svelte-adapter\n\nAllows the use of [svelte](https://svelte.dev) components as templates in a\n[fractal](https://fractal.build) 1.x styleguide.\n\n## Use\n\nIn your `fractal.js` configuration:\n\n```javascript\nfractal.components.engine(\"@aredridel/fractal-svelte-adapter\");\nfractal.components.set(\"ext\", \".svelte\");\n```\n\n## Fractal concepts\n\nThe connection between how Fractal conceives of templates and how Svelte thinks\nof the world in components has some small friction for which this library\nprovides some workarounds.\n\n### Context data & properties\n\nContext data from the styleguide is passed to components as properties.\n\nA `component.config.json` such as this\n\n```json\n{\n  \"context\": {\n    \"text\": \"Hello, World\"\n  }\n}\n```\n\nInforms a `component.svelte` such as this:\n\n```svelte\n<script>\n  export let text;\n</script>\n\n<h2>{text}</h2>\n```\n\nWill render `<h2>Hello, World</h2>`.\n\n### Asset Helper\n\nFor static generation, knowing the root path is important for generating links\nto assets properly.\n\nAs we can't use a handlebars helper such as `{{ path \"filename\" }}`, a similar\ntool is injected into the Svelte context. To use it, fetch it from the context:\n\n```svelte\n<script>\n  import { getContext } from \"svelte\";\n  const { assetPath } = getContext(\"fractal\");\n</script>\n\n<img src={assetPath(\"/assets/some-image.png\")} />\n```\n\nAssuming you've configured `public/` as your static assets path with\n`fractal.web.set(\"static.path\", __dirname + \"/public\");`, this will link to the\nasset in `public/assets/some-image.png`.\n\n### Layout Template & Generated HTML\n\nThe overall HTML output is wrapped in an `<html>` element with an html5 doctype.\n\nLayouts are handled as svelte components, which provide a `<body>`:\n\n`layout.svelte`:\n\n```svelte\n<script>\n  import SomeComponent from \"./some-component.svelte\";\n  import { getContext } from \"svelte\";\n  const { assetPath } = getContext(\"fractal\");\n</script>\n\n<svelte:head>\n  <meta charset=\"UTF-8\" />\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n  <link rel=\"stylesheet\" href={assetPath(\"/css/app.css\")} />\n  <script defer type=\"module\" src={assetPath(\"/js/app.js\")}></script>\n  <title>Preview</title>\n</svelte:head>\n\n<body>\n  <SomeComponent />\n\n  <p>Lorem ipsum dolor sit amet miss Bacon sic amundiam</p>\n  <slot />\n  <p>Lorem ipsum dolor sit amet miss Bacon sic amundiam</p>\n\n</body>\n```\n\nThe component being previewed is inserted into the default slot in the component.\n",
	"downloads_history": [
		[3589, 1],
		[3596, 5],
		[3603, 2],
		[3610, 1],
		[3631, 1],
		[3638, 1],
		[3645, 2],
		[3659, 7],
		[3666, 2],
		[3687, 1],
		[3701, 2],
		[3708, 2],
		[3715, 2],
		[3722, 2],
		[3729, 1],
		[3736, 1],
		[3757, 1],
		[3764, 3],
		[3778, 2],
		[3785, 1],
		[3799, 3],
		[3806, 3],
		[3813, 2],
		[3827, 1],
		[3834, 1],
		[3855, 5],
		[3862, 10],
		[3869, 1],
		[3876, 4],
		[3883, 1],
		[3890, 3],
		[3897, 2],
		[3904, 6],
		[3911, 3],
		[3918, 2],
		[3925, 2],
		[3932, 2],
		[3939, 1],
		[3946, 1],
		[3953, 2],
		[3960, 2],
		[3967, 1],
		[3974, 1],
		[3981, 1],
		[3988, 1],
		[3995, 2],
		[4002, 2],
		[4009, 2],
		[4016, 2],
		[4023, 2],
		[4030, 4],
		[4037, 1],
		[4044, 5],
		[4051, 2],
		[4058, 1],
		[4072, 2],
		[4086, 7],
		[4093, 18],
		[4100, 2],
		[4107, 1],
		[4114, 5],
		[4121, 6],
		[4128, 3]
	],
	"esm": false,
	"cjs": true
}
