{
	"name": "svelte-css-scoper",
	"description": "Scope CSS classes to Svelte applications.",
	"repo_url": "https://github.com/pgloria/svelte-css-scoper",
	"authors": ["pedro_gloria"],
	"homepage": "https://github.com/pgloria/svelte-css-scoper#readme",
	"downloads": 4,
	"updated": "2020-11-18T19:04:28.027Z",
	"tags": ["tooling"],
	"github_stars": 0,
	"typescript": true,
	"version": "0.0.1",
	"svelte_range": "^3.0.0",
	"last_rune_check_version": "0.0.1",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-css-scoper",
				"version": "0.0.1",
				"size": 5769
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# Svelte CSS Scoper\n\nA [Svelte](https://svelte.dev) preprocessor that allows to add a suffix to every class \nThe svelte scoped class mechanism works great to prevent our component classes to mess with other css on the page.\nAdding a random suffix to the classes prevent the contrary case, when css on the page interferes with your components css.\n\nMy use case was the creation of a widget with a modal popup on non svelte websites, classes names like button or modal were already being used on some of those websites and clashed with my own\n\nThe library is a preprocessor that for now takes a simple parameter, it's the value to append to every css class\n\nif you use any kind of preprocessing you will need to use [svelte-sequential-preprocessor](https://github.com/pchynoweth/svelte-sequential-preprocessor)\n\n## Installation\n\nUsing npm:\n```bash\n$ npm i -D svelte-sequential-preprocessor\n```\n\n## Usage\n\n### With `rollup-plugin-svelte` and `svelte-sequential-preprocessor` \n```js\nimport sveltePreprocess from 'svelte-preprocess';\nimport seqPreprocessor from 'svelte-sequential-preprocessor';\nimport cssScoper from 'svelte-css-scoper';\n\nexport default {\n\tinput: 'src/main.ts',\n\toutput: {\n\t\tsourcemap: true,\n\t\tformat: 'iife',\n\t\tname: 'app',\n\t\tfile: `public/app.js`\n\t},\n\tplugins: [\n\t\tsvelte({\n\t\t\tpreprocess: seqPreprocessor([sveltePreprocess(), cssScoper({ staticSuffix: '-QWERTY'})])\n    })]\n}\n```\n\n## Sample \n#### input\n```html\n<script>\n\tlet error = false;\n\tlet isValid = true;\n\tlet rounded = true;\n</script>\n\n<div class=\"button {rounded ? 'btn-rounded' : 'btn-squared'}\" class:error class:roundedError={rounded && error}>\n\ttest 1 2 3\n</div>\n\n<style>\n\t.error {}\n\t.btn-rounded {}\n\t.btn-squared {}\n\t.button {}\n\t.roundedError {}\n</style>\n\n```\n#### output\n```html\n<script>\n\tlet error = false;\n\tlet isValid = true;\n\tlet rounded = true;\n</script>\n\n<div class=\"button-QWERTY {(rounded ? 'btn-rounded' : 'btn-squared') + '-QWERTY'}\" class:error-QWERTY={error} class:roundedError-QWERTY={rounded && error}>\n\ttest 1 2 3\n</div>\n\n<style>\n\t.error-QWERTY {}\n\t.btn-rounded-QWERTY {}\n\t.btn-squared-QWERTY {}\n\t.button-QWERTY {}\n\t.roundedError-QWERTY {}\n</style>\n```\n\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 3],
		[3603, 1],
		[3610, 2],
		[3617, 1],
		[3631, 1],
		[3638, 1],
		[3659, 1],
		[3666, 3],
		[3680, 1],
		[3701, 3],
		[3708, 4],
		[3715, 1],
		[3722, 1],
		[3729, 2],
		[3757, 2],
		[3764, 1],
		[3771, 2],
		[3778, 2],
		[3785, 1],
		[3792, 2],
		[3806, 2],
		[3834, 2],
		[3848, 3],
		[3855, 6],
		[3883, 1],
		[3890, 2],
		[3904, 1],
		[3911, 1],
		[3925, 1],
		[3932, 1],
		[3960, 1],
		[3981, 1],
		[3988, 1],
		[4002, 1],
		[4016, 3],
		[4030, 1],
		[4037, 3],
		[4044, 7],
		[4051, 1],
		[4065, 2],
		[4093, 7],
		[4100, 2],
		[4107, 1],
		[4114, 4],
		[4121, 5],
		[4128, 3]
	]
}
