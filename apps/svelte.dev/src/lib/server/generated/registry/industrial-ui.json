{
	"name": "industrial-ui",
	"description": "Provides unstyled UI components for Svelte applications.",
	"repo_url": "https://github.com/VanishMax/industrial-ui",
	"authors": ["vanishmax"],
	"homepage": "https://github.com/VanishMax/industrial-ui#readme",
	"downloads": 7,
	"updated": "2020-05-13T14:15:08.738Z",
	"tags": ["ui"],
	"github_stars": 3,
	"typescript": false,
	"version": "0.2.0",
	"svelte_range": "3.21.0",
	"last_rune_check_version": "0.2.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "industrial-ui",
				"version": "0.2.0",
				"size": 42932
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# Industrial-ui\n*Industry-oriented library of unstyled UI-components.*\n\nHere is the short description. Please, refer to\n[full documentation](https://industrial-ui.now.sh/)\nabout all features of Industrial-ui.\n\n## Problem\n\nIn industry, front-end developers either write all markup by themselves, or they\nget an archive with the markup and styles for some project from the\ndesigner who also does it or from an out-source markupper. \n\nIf you do it on your own, you are most probably interested in creation of the\nlogic of an application, and the process of making components from project to\nproject annoys you. Many companies have their own UI-library, but its implementation\nis time-consuming and expensive.\n\nOn the other hand, if you get the markup, you have to change all the styles in your\ncopy-pasted components from previous projects, and you waste a lot of time on\ndoing so instead of real front-end stuff!\n\nJust imagine a case: the studio AlphaCoders gets a technical description of some new\nproject from a random customer. They perform requirements elicitation, make a prototype\nand so on. Design in this company is done by a person with professional skills of any online\ntool like Bootstrap studio, Webflow, Silex or other services for markup creation, so it makes\na static html and css. They, a frontenter like you gets an archive, look through the\ncode and realizes that some classes are repeated for different blocks. You rapidly begin\ncreation of the functional components by extracting these blocks in your favorite\nframework. But what if I tell you that this step can easily be skipped?!\n\n## Solution â€“ Industrial-ui\n\nWhether you use Svelte, React or Vue (other libraries support will come later), [install](https://industrial-ui.now.sh/docs/installation)\n\n```bash\n  npm install industrial-ui\n```\n\nNow you have a library of fully-functional UI-components but with no styles at all!\nPure logic and nothing more. The styles will be added by you via extracting them from\nmarkup's classes, or you can easily create them for the components. Let's take a look\nat the Svelte example:\n\n```html\n<script>\n  import {IUI, Button} from 'industrial-ui';\n  const config = {}; \n</script>\n\n<IUI {config}>\n  <Button>Hello, world!</Button>\n</IUI>\n```\n\nYou will see the button naked like in good-old nineties. Let's imagine we don't have\ncompany's own markup, but instead we use Tailwind CSS. That is how easy it is to\nintegrate it's CDN styles with Industrial-ui. Just [configure](https://industrial-ui.now.sh/docs/configuration):\n\n```javascript\n  const config = {\n    stylesheets: ['https://unpkg.com/tailwindcss@^1.0/dist/tailwind.min.css'],\n    components: {\n      button: {\n        class: 'bg-gray-200 font-semibold py-2 px-6 rounded inline-flex items-center'\n      }\n    }\n  };\n``` \n\nThe IUI usage above will be transformed into a nice-looking Button with all the\nlogic behind.\n\n## License\n\nThis project is licensed under the terms of the [MIT license](https://github.com/VanishMax/industrial-ui/blob/master/LICENSE).\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3596, 13],
		[3603, 3],
		[3610, 1],
		[3617, 3],
		[3638, 3],
		[3645, 1],
		[3659, 3],
		[3666, 7],
		[3673, 5],
		[3694, 1],
		[3701, 1],
		[3722, 1],
		[3736, 2],
		[3743, 1],
		[3757, 4],
		[3764, 3],
		[3771, 7],
		[3778, 1],
		[3792, 2],
		[3799, 1],
		[3806, 1],
		[3820, 2],
		[3827, 5],
		[3834, 1],
		[3841, 3],
		[3848, 7],
		[3862, 25],
		[3869, 3],
		[3883, 1],
		[3890, 5],
		[3897, 1],
		[3911, 2],
		[3918, 5],
		[3932, 2],
		[3939, 3],
		[3946, 1],
		[3967, 1],
		[3974, 2],
		[3995, 9],
		[4002, 1],
		[4016, 5],
		[4023, 2],
		[4030, 5],
		[4037, 11],
		[4044, 9],
		[4058, 2],
		[4065, 3],
		[4079, 1],
		[4093, 11],
		[4100, 10],
		[4107, 1],
		[4114, 7],
		[4121, 6],
		[4128, 3]
	]
}
