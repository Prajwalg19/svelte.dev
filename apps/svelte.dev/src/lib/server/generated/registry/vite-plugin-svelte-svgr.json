{
	"name": "vite-plugin-svelte-svgr",
	"description": "Enable SVG imports, transforming SVGs into Svelte components.",
	"repo_url": "https://github.com/blujedis/vite-plugin-svelte-svgr",
	"authors": ["blujedis"],
	"homepage": "https://github.com/blujedis/vite-plugin-svelte-svgr#readme",
	"downloads": 209,
	"updated": "2022-09-22T22:15:54.613Z",
	"tags": ["tooling"],
	"github_stars": 2,
	"typescript": true,
	"version": "1.0.4",
	"svelte_range": ">=3.x",
	"last_rune_check_version": "1.0.4",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "vite-plugin-svelte-svgr",
				"version": "1.0.4",
				"size": 186871
			},
			{
				"name": "@rollup/pluginutils",
				"version": "4.2.1",
				"size": 50858
			},
			{
				"name": "picomatch",
				"version": "2.3.1",
				"size": 89952
			},
			{
				"name": "estree-walker",
				"version": "2.0.2",
				"size": 50243
			},
			{
				"name": "svgo",
				"version": "2.8.0",
				"size": 975338
			},
			{
				"name": "csso",
				"version": "4.2.0",
				"size": 592991
			},
			{
				"name": "css-tree",
				"version": "1.1.3",
				"size": 989149
			},
			{
				"name": "mdn-data",
				"version": "2.0.14",
				"size": 561782
			},
			{
				"name": "source-map",
				"version": "0.6.1"
			},
			{
				"name": "stable",
				"version": "0.1.8",
				"size": 8408
			},
			{
				"name": "commander",
				"version": "7.2.0",
				"size": 144710
			},
			{
				"name": "css-select",
				"version": "4.3.0",
				"size": 82444
			},
			{
				"name": "boolbase",
				"version": "1.0.0"
			},
			{
				"name": "css-what",
				"version": "6.1.0",
				"size": 66038
			},
			{
				"name": "domhandler",
				"version": "4.3.1",
				"size": 44583
			},
			{
				"name": "domelementtype",
				"version": "2.3.0",
				"size": 11359
			},
			{
				"name": "domutils",
				"version": "2.8.0",
				"size": 56647
			},
			{
				"name": "dom-serializer",
				"version": "1.4.1",
				"size": 28312
			},
			{
				"name": "entities",
				"version": "2.2.0",
				"size": 57673
			},
			{
				"name": "nth-check",
				"version": "2.1.1",
				"size": 42555
			},
			{
				"name": "picocolors",
				"version": "1.1.1",
				"size": 6373
			},
			{
				"name": "@trysound/sax",
				"version": "0.2.0",
				"size": 48776
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[1, 3],
			[0, 2],
			[0, 4],
			[4, 5],
			[5, 6],
			[6, 7],
			[6, 8],
			[4, 9],
			[4, 6],
			[4, 10],
			[4, 11],
			[11, 12],
			[11, 13],
			[11, 14],
			[14, 15],
			[11, 16],
			[16, 14],
			[16, 17],
			[17, 15],
			[17, 14],
			[17, 18],
			[16, 15],
			[11, 19],
			[19, 12],
			[4, 20],
			[4, 21]
		],
		"circular": []
	},
	"readme": "# Vite Plugin Svelte SVGR\n\n<div style=\"margin-bottom: 12px;\">\n  <img src=\"fixtures/example.png\" alt=\"Plugin example image\" width=\"300\"/>\n</div>\n\nA Vite plugin which enables SVG import similar to what you may be accustomed to in React.\n\nThis plugin will preprocess SVG elements for [SvelteKit](https://kit.svelte.dev/) that may then be easily imported into your project. Additionally the proper types for Typescript users have been provided.\n\n**Note**\n\nWhile this plugin or similar may be required for your needs I would encourage you to consider using a library such as [Iconify](https://docs.iconify.design/) if you are only interested in using Icons from icon sets.\n\n[See Instructions for Typescript](#imports-with-typescript)\n\n## Install\n\n```sh\npnpm i vite-plugin-svelte-svgr -D\n```\n\n```sh\nyarn add vite-plugin-svelte-svgr --dev\n```\n\n```sh\nnpm install vite-plugin-svelte-svgr -D\n```\n\n## Configuration\n\nImport the plugin and extend `svelte.config.js` with an instance of the plugin containing your options as shown below.\n\n### @sveltejs/kit@1.0.0-next.346 and Above\n\nDefined in `vite.config.js`\n\n```js\nimport svgr from 'vite-plugin-svelte-svgr';\nimport { sveltekit } from '@sveltejs/kit/vite';\n\nconst config = {\n\t// see https://github.com/svg/svgo for svgo plugin options.\n\tplugins: [sveltekit(), svgr()]\n};\nexport default config;\n```\n\n### @sveltejs/kit@1.0.0-next.345 and Below\n\nDefined in `svelte.config.js`\n\n```js\nimport svgr from 'vite-plugin-svelte-svgr';\nimport { sveltekit } from '@sveltejs/kit/vite';\n\n/** @type {import('@sveltejs/kit').Config} */\nconst config = {\n  ...,\n  kit: {\n    ...,\n    vite: {\n      // see https://github.com/svg/svgo for svgo plugin options.\n      plugins: [sveltekit(), svgr()]\n    }\n  }\n};\nexport default config\n```\n\n## Advanced Options\n\nIt's not uncommon to have one group of svg icons that you use as urls or raw only, while others you may wish to use as a component. This can be achieved by defining your include/exclude parameters along with whatever [SVGO](https://github.com/svg/svgo) options you wish to use.\n\n**Example specifying type with include**\n\nWhen no query is used the defined type below will be applied for any SVG in the included path.\n\n```svelte\n<script lang=\"ts\">\n  import SomeSvg from '$lib/icons/raw/some.svg'\n</script>\n```\n\n```js\n// see above for imports excluded for brevity.\nconst config = {\n\tplugins: [\n\t\tsveltekit(),\n\t\tsvgr({\n\t\t\ttype: 'raw',\n\t\t\t// see https://github.com/rollup/plugins/tree/master/packages/pluginutils#createfilter\n\t\t\t// for how to use root, include and exclude options. If you are familiar with Rollup's\n\t\t\t// create filter it's exactly that utility here doing its magic!!\n\t\t\tinclude: ['src/lib/icons/raw']\n\t\t})\n\t]\n};\n```\n\n**Note**\n\nIf in the case above you imported as `from '$lib/icons/raw/some.svg?component'` then the type designation in the configuration would be overridden a SvelteComponent SVG would be returned instead.\n\n### SVGO Options\n\nThe following shows an example with customized SVGO options. It demonstrates how to override the default present as well as adding an attribute to all SVGs. In this case setting fill to \"currentColor\" which is a common use case causing the SVG to inherit or use the current css color property from the parent element. To make your SVG work like icons from iconsets setting this attribute or perhaps `stroke` is likely what you're after!\n\n```js\nconst svgoOptions = {\n\tmultipass: true,\n\tplugins: [\n\t\t// Ensuring viewbox isn't removed.\n\t\t{\n\t\t\tname: 'preset-default',\n\t\t\tparams: {\n\t\t\t\toverrides: {\n\t\t\t\t\tremoveViewBox: false\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t// setting fill attribute to \"currentColor\"\n\t\t\tname: 'addAttributesToSVGElement',\n\t\t\tparams: {\n\t\t\t\tattributes: [{ fill: 'currentColor' }]\n\t\t\t}\n\t\t}\n\t]\n};\n\n// showing config in `vite.config.js` for older\n// svelte kit configurations see above.\nconst config = {\n\tplugins: [\n\t\tsveltekit(),\n\t\tsvgr({\n\t\t\tsvgo: svgoOptions\n\t\t})\n\t]\n};\n\nexport default config;\n```\n\n## Usage\n\n**Import as Component:**\n\nUse the component as you would any Svelte component including passing props.\n\nWhile you can import without using the ?component param typings may complain due to default exports being overridden. If Typescript complains just use the `\"./some/path/icon.svg?component\"` instead of `\"./some/path/icon.svg\"`\n\n```svelte\n<script>\n  import Logo from \"./logo.svg?component\";\n</script>\n\n<Logo width={200} />\n```\n\nOr perhaps a class when using [Tailwind](https://tailwindcss.com/)\n\n```svelte\n  <Logo class=\"w-5 h-5\">\n```\n\n**Url Import**\n\n```svelte\n<script>\n  import logoUrl from \"./logo.svg?url\";\n</script>\n\n<img src={logoUrl} />\n```\n\n**Raw Import**\n\n```svelte\n<script>\n  import logo from \"./logo.svg?raw\";\n</script>\n\n{@html logo}\n```\n\n## Options\n\nWhile not using [Rollup](https://rollupjs.org/guide/en/) we are underneath using a filtering tool created for Rollup. See [reference](https://github.com/rollup/plugins/tree/master/packages/pluginutils#createfilter) for more information on how to use `root`, `include` and `exclude` properties.\n\n```ts\ninterface Options {\n\t/**\n\t * The default output type for imported SVG.\n\t *\n\t * @default 'component'\n\t */\n\ttype?: SvgType;\n\n\t/**\n\t * The root path that below include/exclude scopes will be resolved from.\n\t * If undefined process.cwd() is used and likely what you want.\n\t *\n\t * @default undefined\n\t */\n\troot?: string;\n\n\t/**\n\t * The scopes/paths to be processed. If undefined all resolved SVG are processed.\n\t *\n\t * @default undefined\n\t */\n\tinclude?: FilterPattern;\n\n\t/**\n\t * The scopes/paths to be excluded. If undefined no svg files will be unprocessed.\n\t *\n\t * @default undefined\n\t */\n\texclude?: FilterPattern;\n\n\t/**\n\t * Specify svgo options, leave undefined for defaults or false to disabled\n\t * optimization. The plugin will also look for `svgo.config.js` if you prefer\n\t * a configuration file.\n\t *\n\t * @see https://github.com/svg/svgo\n\t * @default undefined\n\t */\n\tsvgo?: OptimizeOptions | boolean;\n}\n```\n\n## Imports with Typescript\n\nYou'll likely want to create a reference to the ambient modules types in your `app.d.ts` (for Svelte Kit) or applicable. Typescript will likely complain about importing a path like`./path/to/some.svg?component`;\n\nSimply add the reference to our plugin and the error should go away. **After updating you may need to close your editor or restart the [Typescript](https://www.typescriptlang.org/) server**.\n\n```ts\n/* app.d.ts or other global types file */\n/// <reference types=\"vite-plugin-svelte-svgr\" />\n```\n\n**You can also reference in tsconfig.json**\n\n```json\n{\n\t\"compilerOptions\": {\n\t\t\"types\": [\"vite-plugin-svelte-svgr\"]\n\t}\n}\n```\n\n## Jest Testing\n\nTo make [Jest](https://jestjs.io/) happy you'll need to adjust your `jest.config.js` telling Jest how to handle `.svg` components. There are a couple of ways of doing this. Here's one.\n\nInstall the `jest-transform-stub`\n\n```js\nmodule.exports = {\n  ...\n  moduleNameMapper: {\n    '^.+\\\\.svg$': 'jest-transform-stub',\n  }\n};\n```\n\nAnother options is to create a Mock component then point the module mapper to the Mock component. This is similar to what you might do with React and `createClass`.\n\n**Create Mock Component**\n\nCreate an empty SVG element at `src/lib/icons/Mock.svelte`\n\n```svelte\n<svg />\n```\n\n**Update Jest Config**\n\nUpdate module name mapper to reflect the above path in your `package.json` or jest config file.\n\n```js\nmodule.exports = {\n\tmoduleNameMapper: {\n\t\t'^.+\\\\.svg$': '<rootDir>/src/lib/icons/Mock.svelte'\n\t}\n};\n```\n\n## Docs\n\nSee [https://blujedis.github.io/vite-plugin-svelte-svgr/](https://blujedis.github.io/vite-plugin-svelte-svgr/)\n\n## License\n\nSee [LICENSE](LICENSE)\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 58],
		[3603, 79],
		[3610, 77],
		[3617, 161],
		[3624, 104],
		[3631, 246],
		[3638, 95],
		[3645, 14],
		[3652, 86],
		[3659, 159],
		[3666, 87],
		[3673, 85],
		[3680, 128],
		[3687, 104],
		[3694, 195],
		[3701, 80],
		[3708, 90],
		[3715, 142],
		[3722, 75],
		[3729, 45],
		[3736, 57],
		[3743, 51],
		[3750, 63],
		[3757, 41],
		[3764, 60],
		[3771, 90],
		[3778, 88],
		[3785, 77],
		[3792, 88],
		[3799, 28],
		[3806, 67],
		[3813, 59],
		[3820, 53],
		[3827, 66],
		[3834, 28],
		[3841, 70],
		[3848, 68],
		[3855, 74],
		[3862, 44],
		[3869, 27],
		[3876, 41],
		[3883, 31],
		[3890, 50],
		[3897, 61],
		[3904, 45],
		[3911, 49],
		[3918, 73],
		[3925, 111],
		[3932, 42],
		[3939, 52],
		[3946, 71],
		[3953, 35],
		[3960, 42],
		[3967, 94],
		[3974, 87],
		[3981, 100],
		[3988, 170],
		[3995, 193],
		[4002, 199],
		[4009, 29],
		[4016, 52],
		[4023, 131],
		[4030, 118],
		[4037, 164],
		[4044, 151],
		[4051, 165],
		[4058, 156],
		[4065, 412],
		[4072, 314],
		[4079, 133],
		[4086, 290],
		[4093, 140],
		[4100, 181],
		[4107, 126],
		[4114, 209],
		[4121, 242],
		[4128, 209],
		[4135, 158]
	],
	"esm": true,
	"cjs": true
}
