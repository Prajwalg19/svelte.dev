{
	"name": "svault",
	"description": "Provide authentication and user management for SvelteKit applications.",
	"repo_url": "https://github.com/oslabs-beta/Svault",
	"authors": ["mbuen21", "tristbt"],
	"homepage": "https://svault.dev",
	"downloads": 5,
	"updated": "2023-07-23T00:08:53.291Z",
	"tags": ["auth"],
	"github_stars": 65,
	"typescript": true,
	"version": "1.1.3",
	"svelte_range": "^4.0.0",
	"kit_range": "^1.20.4",
	"last_rune_check_version": "1.1.3",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svault",
				"version": "1.1.3",
				"size": 112177
			},
			{
				"name": "bcrypt",
				"version": "5.1.1",
				"size": 110858
			},
			{
				"name": "node-addon-api",
				"version": "5.1.0",
				"size": 379971
			},
			{
				"name": "@mapbox/node-pre-gyp",
				"version": "1.0.11",
				"size": 169518
			},
			{
				"name": "tar",
				"version": "6.2.1",
				"size": 166613
			},
			{
				"name": "chownr",
				"version": "2.0.0",
				"size": 5748
			},
			{
				"name": "mkdirp",
				"version": "1.0.4",
				"size": 19088
			},
			{
				"name": "yallist",
				"version": "4.0.0",
				"size": 14752
			},
			{
				"name": "minipass",
				"version": "5.0.0",
				"size": 69475
			},
			{
				"name": "minizlib",
				"version": "2.1.2",
				"size": 17309
			},
			{
				"name": "minipass",
				"version": "3.3.6",
				"size": 48090
			},
			{
				"name": "fs-minipass",
				"version": "2.1.0",
				"size": 14089
			},
			{
				"name": "nopt",
				"version": "5.0.0",
				"size": 25840
			},
			{
				"name": "abbrev",
				"version": "1.1.1"
			},
			{
				"name": "npmlog",
				"version": "5.0.1",
				"size": 16566
			},
			{
				"name": "gauge",
				"version": "3.0.2",
				"size": 48549
			},
			{
				"name": "aproba",
				"version": "2.0.0",
				"size": 8047
			},
			{
				"name": "strip-ansi",
				"version": "6.0.1",
				"size": 4029
			},
			{
				"name": "ansi-regex",
				"version": "5.0.1",
				"size": 5609
			},
			{
				"name": "wide-align",
				"version": "1.1.5",
				"size": 4467
			},
			{
				"name": "string-width",
				"version": "4.2.3",
				"size": 5161
			},
			{
				"name": "emoji-regex",
				"version": "8.0.0",
				"size": 48255
			},
			{
				"name": "is-fullwidth-code-point",
				"version": "3.0.0",
				"size": 4994
			},
			{
				"name": "has-unicode",
				"version": "2.0.1"
			},
			{
				"name": "signal-exit",
				"version": "3.0.7",
				"size": 9958
			},
			{
				"name": "color-support",
				"version": "1.1.3"
			},
			{
				"name": "object-assign",
				"version": "4.1.1"
			},
			{
				"name": "console-control-strings",
				"version": "1.1.0"
			},
			{
				"name": "set-blocking",
				"version": "2.0.0"
			},
			{
				"name": "are-we-there-yet",
				"version": "2.0.0",
				"size": 14102
			},
			{
				"name": "delegates",
				"version": "1.0.0"
			},
			{
				"name": "readable-stream",
				"version": "3.6.2",
				"size": 123971
			},
			{
				"name": "inherits",
				"version": "2.0.4",
				"size": 3958
			},
			{
				"name": "string_decoder",
				"version": "1.3.0",
				"size": 14427
			},
			{
				"name": "safe-buffer",
				"version": "5.2.1",
				"size": 32101
			},
			{
				"name": "util-deprecate",
				"version": "1.0.2"
			},
			{
				"name": "rimraf",
				"version": "3.0.2",
				"size": 17327
			},
			{
				"name": "glob",
				"version": "7.2.3",
				"size": 55064
			},
			{
				"name": "once",
				"version": "1.4.0"
			},
			{
				"name": "wrappy",
				"version": "1.0.2"
			},
			{
				"name": "inflight",
				"version": "1.0.6"
			},
			{
				"name": "minimatch",
				"version": "3.1.2",
				"size": 34902
			},
			{
				"name": "brace-expansion",
				"version": "1.1.11",
				"size": 11059
			},
			{
				"name": "balanced-match",
				"version": "1.0.2",
				"size": 6939
			},
			{
				"name": "concat-map",
				"version": "0.0.1"
			},
			{
				"name": "fs.realpath",
				"version": "1.0.0"
			},
			{
				"name": "path-is-absolute",
				"version": "1.0.1"
			},
			{
				"name": "semver",
				"version": "7.7.1",
				"size": 96674
			},
			{
				"name": "make-dir",
				"version": "3.1.0",
				"size": 10042
			},
			{
				"name": "semver",
				"version": "6.3.1",
				"size": 68343
			},
			{
				"name": "node-fetch",
				"version": "2.7.0",
				"size": 162253
			},
			{
				"name": "whatwg-url",
				"version": "5.0.0"
			},
			{
				"name": "tr46",
				"version": "0.0.3"
			},
			{
				"name": "webidl-conversions",
				"version": "3.0.1"
			},
			{
				"name": "detect-libc",
				"version": "2.0.4",
				"size": 23652
			},
			{
				"name": "https-proxy-agent",
				"version": "5.0.1",
				"size": 26008
			},
			{
				"name": "debug",
				"version": "4.4.0",
				"size": 42798
			},
			{
				"name": "ms",
				"version": "2.1.3",
				"size": 6721
			},
			{
				"name": "agent-base",
				"version": "6.0.2",
				"size": 34582
			},
			{
				"name": "bcryptjs",
				"version": "2.4.3"
			},
			{
				"name": "cookie",
				"version": "0.5.0",
				"size": 23137
			},
			{
				"name": "dotenv",
				"version": "16.5.0",
				"size": 75565
			},
			{
				"name": "google-auth-library",
				"version": "8.9.0",
				"size": 516019
			},
			{
				"name": "jws",
				"version": "4.0.0",
				"size": 17682
			},
			{
				"name": "jwa",
				"version": "2.0.0",
				"size": 13685
			},
			{
				"name": "ecdsa-sig-formatter",
				"version": "1.0.11",
				"size": 20588
			},
			{
				"name": "buffer-equal-constant-time",
				"version": "1.0.1"
			},
			{
				"name": "arrify",
				"version": "2.0.1",
				"size": 3185
			},
			{
				"name": "gaxios",
				"version": "5.1.3",
				"size": 73554
			},
			{
				"name": "extend",
				"version": "3.0.2",
				"size": 23461
			},
			{
				"name": "is-stream",
				"version": "2.0.1",
				"size": 5927
			},
			{
				"name": "gtoken",
				"version": "6.1.2",
				"size": 38695
			},
			{
				"name": "google-p12-pem",
				"version": "4.0.1",
				"size": 25216
			},
			{
				"name": "node-forge",
				"version": "1.3.1",
				"size": 1657079
			},
			{
				"name": "base64-js",
				"version": "1.5.1",
				"size": 9624
			},
			{
				"name": "lru-cache",
				"version": "6.0.0",
				"size": 15643
			},
			{
				"name": "gcp-metadata",
				"version": "5.3.0",
				"size": 75154
			},
			{
				"name": "json-bigint",
				"version": "1.0.0",
				"size": 37345
			},
			{
				"name": "bignumber.js",
				"version": "9.3.0",
				"size": 351328
			},
			{
				"name": "fast-text-encoding",
				"version": "1.0.6",
				"size": 32194
			},
			{
				"name": "nanoid",
				"version": "4.0.2",
				"size": 15272
			},
			{
				"name": "pg",
				"version": "8.15.6",
				"size": 87939
			},
			{
				"name": "pg-connection-string",
				"version": "2.8.5",
				"size": 15072
			},
			{
				"name": "pg-pool",
				"version": "3.9.6",
				"size": 29299
			},
			{
				"name": "pg-protocol",
				"version": "1.9.5",
				"size": 188347
			},
			{
				"name": "pg-types",
				"version": "2.2.0",
				"size": 35296
			},
			{
				"name": "pg-int8",
				"version": "1.0.1"
			},
			{
				"name": "postgres-array",
				"version": "2.0.0",
				"size": 4903
			},
			{
				"name": "postgres-bytea",
				"version": "1.0.0"
			},
			{
				"name": "postgres-date",
				"version": "1.0.7",
				"size": 5915
			},
			{
				"name": "postgres-interval",
				"version": "1.2.0",
				"size": 6727
			},
			{
				"name": "xtend",
				"version": "4.0.2",
				"size": 6465
			},
			{
				"name": "pgpass",
				"version": "1.0.5",
				"size": 10323
			},
			{
				"name": "split2",
				"version": "4.2.0",
				"size": 17419
			},
			{
				"name": "process",
				"version": "0.11.10"
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[1, 3],
			[3, 4],
			[4, 5],
			[4, 6],
			[4, 7],
			[4, 8],
			[4, 9],
			[9, 7],
			[9, 10],
			[10, 7],
			[4, 11],
			[11, 10],
			[3, 12],
			[12, 13],
			[3, 14],
			[14, 15],
			[15, 16],
			[15, 17],
			[17, 18],
			[15, 19],
			[19, 20],
			[20, 17],
			[20, 21],
			[20, 22],
			[15, 23],
			[15, 24],
			[15, 20],
			[15, 25],
			[15, 26],
			[15, 27],
			[14, 28],
			[14, 29],
			[29, 30],
			[29, 31],
			[31, 32],
			[31, 33],
			[33, 34],
			[31, 35],
			[14, 27],
			[3, 36],
			[36, 37],
			[37, 38],
			[38, 39],
			[37, 40],
			[40, 38],
			[40, 39],
			[37, 32],
			[37, 41],
			[41, 42],
			[42, 43],
			[42, 44],
			[37, 45],
			[37, 46],
			[3, 47],
			[3, 48],
			[48, 49],
			[3, 50],
			[50, 51],
			[51, 52],
			[51, 53],
			[3, 54],
			[3, 55],
			[55, 56],
			[56, 57],
			[55, 58],
			[58, 56],
			[0, 59],
			[0, 60],
			[0, 61],
			[0, 62],
			[62, 63],
			[63, 64],
			[64, 34],
			[64, 65],
			[65, 34],
			[64, 66],
			[63, 34],
			[62, 67],
			[62, 68],
			[68, 69],
			[68, 70],
			[68, 50],
			[68, 55],
			[62, 71],
			[71, 63],
			[71, 68],
			[71, 72],
			[72, 73],
			[62, 74],
			[62, 75],
			[75, 7],
			[62, 76],
			[76, 68],
			[76, 77],
			[77, 78],
			[62, 79],
			[62, 65],
			[0, 80],
			[0, 81],
			[81, 82],
			[81, 83],
			[81, 84],
			[81, 85],
			[85, 86],
			[85, 87],
			[85, 88],
			[85, 89],
			[85, 90],
			[90, 91],
			[81, 92],
			[92, 93],
			[0, 94]
		],
		"circular": []
	},
	"readme": "<div align=\"center\">\n\n![banner](https://i.imgur.com/djX1j8N.png)\n\n<br>\n\n# Authentication for SvelteKit\n\nSvault is an authentication, authorization, and user management library for Svelte/SvelteKit applications. Svault supports both native username/password authentication as well as OAuth.\n\n![NPM Downloads](https://img.shields.io/npm/dt/svault?color=%23fb7182&label=downloads)\n![GitHub Stars](https://img.shields.io/github/stars/oslabs-beta/svault?color=%23fb7182)\n![GitHub Forks](https://img.shields.io/github/forks/oslabs-beta/svault?color=%23fb7182)\n![NPM Version](https://img.shields.io/npm/v/svault?color=%23fb7182&label=version)\n![MIT License](https://img.shields.io/badge/license-MIT-%23fb7182)\n\n[üîê Website](https://svault.dev) | [üìö Documentation](https://svault.mintlify.app) | [‚å®Ô∏è Blog](https://medium.com/svault/svault-the-spanish-fly-of-svelte-security-beb03fda32be) | [üíº LinkedIn](https://www.linkedin.com/company/svault/)\n\n</div>\n\n<br>\n\n## Features\n\n- Svault is an open-source developer library that simplifies the authentication process in SvelteKit projects.\n- Svault is flexible and lightweight, and allows the developer to decide which authentication types they would like to deploy in their application.\n- With native username/password authentication, implementing registration and login functionality have never been easier. Cookies and sessions are automatically created and deleted upon logout or expiration.\n- Svault also supports OAuth with a number of providers. Currently, it offers easy setup with Google, Github, and Discord, with more providers to come.\n- Currently, Svault's database adapter connects to the developer's PostgreSQL database, with additional database functionality in the works.\n\n## Demo\n\n\n![Demo](static/Demo.gif)\nThis demo simulates implementing authentication functionality into an already existing SvelteKit app. First demonstrating log in component scaffolding without Svault authentication logic. Then moving on to implementing Svault, following documentation specs for the hooks server file. Developers will need to first set up their own log in components (buttons, input forms, etc.) following the Svault documentation for the correct endpoints/actions (this step is not pictured in the demo).\n\n\n## Installation\n\n1. Navigate to your SvelteKit project directory in the command line.\n2. Run:\n```bash\nnpm install svault\n```\n\n\n### Implementing OAuth in Your Application\n\n1. When registering your application for OAuth set your callback url to match this format `/oauth/[provider]/validate`.\n\n2. In the `src` directory of your project, create a `hooks.server.ts` file and paste the following code:\n```TypeScript\n// Import if you would like to use Oauth login (necessary for all Oauth)\nimport { SvaultOauth } from 'svault';\n\n\n// Import if you would like to use Github Oauth\nimport { github } from 'svault';\nimport { GITHUB_CLIENT_ID, GITHUB_CLIENT_SECRET } from '$env/static/private';\n\n\n// Import if you would like to use Google Oauth\nimport { google } from 'svault';\nimport { GOOGLE_CLIENT_ID, GOOGLE_CLIENT_SECRET } from '$env/static/private';\n// Google callback urls have to match the callback url you setup in your development app so paste it here to pass into the Oauth function\nconst googleCallback = 'http://localhost:5173/oauth/google/validate';\n\n\n// Import if you would like to use Discord Oauth\nimport { discord } from 'svault';\nimport { DISCORD_CLIENT_ID, DISCORD_CLIENT_SECRET } from \"$env/static/private\";\n// Discord callback urls have to match the callback url you setup in your development app so paste it here to pass into the Oauth function\nconst discordCallback = 'http://localhost:5173/oauth/discord/validate';\n\n\n// Set redirect path to your desired endpoint upon user login\nconst redirectPath = '/(yourPathHere)'; //ex. 'const redirectPath = '/redirectPage'\n\n\n// Place the Oauth providers here\nconst providers = [\n    github(GITHUB_CLIENT_ID, GITHUB_CLIENT_SECRET, redirectPath),\n    google(GOOGLE_CLIENT_ID, GOOGLE_CLIENT_SECRET, redirectPath, googleCallback),\n    discord(DISCORD_CLIENT_ID, DISCORD_CLIENT_SECRET, redirectPath, discordCallback)\n];\n\n// Svault Oauth handler\nexport const handle = SvaultOauth({ providers });\n```\n3. Create an `.env` file at the root level of your project and define your client ID and secret as variables. Example:\n```TypeScript\n// Paste if using Discord Oauth\nDISCORD_CLIENT_ID = YOURIDHERE\nDISCORD_CLIENT_SECRET = YOURSECRETHERE\n\n// Paste if using Github Oauth\nGITHUB_CLIENT_ID = YOURIDHERE\nGITHUB_CLIENT_SECRET = YOURSECRETHERE\n\n// Paste if using Google Oauth\nGOOGLE_CLIENT_ID = YOURIDHERE\nGOOGLE_CLIENT_SECRET = YOURSECRETHERE\n```\n4. In your `+page.svelte` file that has your login page:\n\n    - Create a button or component for each provider you want to use, that will route to an endpoint of `/oauth/[provider-name-here]/auth`\n    - Make sure to include an anchor tag within the button and/or component.\n```TypeScript\n// Example +page.svelte file for github authentication\n\n<button>\n    <a href=\"/oauth/github/auth\">Github</a>\n</button>\n\n<button>\n    <a href=\"/oauth/google/auth\">Google</a>\n</button>\n\n<button>\n    <a href=\"/oauth/discord/auth\">Discord</a>\n</button>\n```\n\n\n\n5. And you're good to go!\n\n*Note: OAuth providers are not set up to store any data in a database in this current iteration of Svault.*\n\n<br>\n\n### Implementing Native Authentication\n1. In your `src` directory, create a `hooks.server.ts` file\n```TypeScript\n// Import if you would like to utilize native user registration and login\nimport { SvaultNative } from 'svault';\n\n\n// Set redirect path to your desired endpoint upon user login\nconst redirectPath = '/[yourPathHere]'; //ex. 'const redirectPath = '/homepage'\n\n\n// Svault native handler\nexport const handle = SvaultNative(redirectPath);\n```\n2. Create a PostgreSQL table with the following columns:\n```SQL\nCREATE TABLE [YOURTABLENAME] (\n    username VARCHAR NOT NULL,\n    password VARCHAR NOT NULL\n)\n```\n3. In your `routes` directory, create a route called `login`. In your login `+page.svelte`, create form elements for taking in username and password inputs. Create buttons for login and register.\n    - Ensure the endpoints are set to `registerValidate` and `loginValidate`\n    - Create a separate button that is set to `logout` endpoint\n```TypeScript\n// Example routes/login/+page.svelte\n\n<form method=\"post\">\n    <input\n        type=\"text\"\n        placeholder=\"Username\"\n        name=\"username\"\n        required\n    />\n    <input\n        type=\"password\"\n        placeholder=\"Password\"\n        name=\"password\"\n        required\n    />\n\n    <button type=\"submit\" formaction=\"?/registerValidate\">\n        Register\n    </button>\n    <button type=\"submit\" formaction=\"?/loginValidate\">\n        Login\n    </button>\n  </form>\n```\n```TypeScript\n// To implement logout functionality, create a button or anchor tag in your page.svelte that redirects to '/logout'\n\n<button>\n    <a href=\"/logout\">Logout</a>\n</button>\n```\n4. In your `.env` file (create if you haven't done so) that takes in your database URI and user table name\n```TypeScript\n// Paste if using native authentication with a PostgreSQL database\nPG_URI = YOURDATABASEURI\nTABLE_NAME = YOURTABLENAME\n\n//MAX_AGE will determine the expiration time of the user's session\nMAX_AGE = Date.now() + {someNumberHere} * {someNumberHere}\n// ex. Date.now() + 1000 * 60 * 60 --> session will last for 1 hour\n```\n5. After submitting the form, the user will be redirected to the endpoint of your choice.\n    - Upon registering, the user will be added to the database with the username and a secure hashed password.\n    - On login, the user will be authenticated through your database.\n        - A browser cookie will be created as well as a session in local memory storage called \"svault-auth\".  \n        \n        <div align=\"center\">\n        <img src=\"cookiepicture.png\">\n        </div>\n        \n        - The session will have an expiration time determined in your `.env` file.\n        - Sessions will automatically be cleaned and deleted upon expiration.\n    - On logout, the user will be redirected to the home page, the cookie will be deleted from the browser, and the session will be deleted from local memory store.\n6. And you're good to go!\n\n<br>\n\n\n### Using Both Native Authentication and OAuth\n1. To implement native authentication and OAuth, you can use SvelteKit's <a href=https://kit.svelte.dev/docs/modules#sveltejs-kit-hooks-sequence>Sequence</a> helper function.\n2. In your existing `hooks.server.ts` file, add the following:\n```TypeScript\nimport { sequence } from '@sveltejs/kit/hooks';\n/*\nNOTE: CANNOT HAVE 2 HANDLE FUNCTIONS!\n\nexport const handle = SvaultNative(redirectPath);\nexport const handle = SvaultOauth({ providers });\n*/\n\n// Rename functions to their corresponding type of authentication\nexport const native = SvaultNative(redirectPath);\nexport const oauth = SvaultOauth({ providers });\n\n// Use sveltekit sequence method to run both hooks in sequence\nexport const handle = sequence(oauth, native);\n```\n\n<br>\n\n### Serving Data Client-Side\n- Svault automatically sends back authentication information to the frontend via the `event.locals` object. This allows you to display any necessary information you would like, client-side.\n    - If you would like to display the user‚Äôs username on the page, simply load `event.locals.username` in your `+layout.server.ts`, and then call it on your `+page.svelte`.\n    - If you would like to display an appropriate error message upon incorrect login, the error will be returned back to the client side on the `event.locals.failure` object.\n- See example below:\n```TypeScript\n// In +layout.server.ts\n\nimport type { LayoutServerLoad } from '/$types';\n\nexport const load = (async ({ locals }) => {\n  const { username, failure } = locals;\n  return await { username, failure };\n}) satisfies LayoutServerLoad;\n```\n```TypeScript\n// In +page.svelte\n\n<!-- displays username upon successful login -->\n{#if data.username}\n        <a\n          href=\"/logout\"\n          data-sveltekit-reload\n        >\n            Hello {data.username}, Log out\n        </a>\n{:else}\n\n<!-- displays error message if login is unsuccessful -->\n\t\t{#if data.failure}\n\t\t\t<div>\n\t\t\t\t{data.failure}\n\t\t\t</div>\n\t\t{/if}\n```\n\n<br>\n\n## Roadmap\nSvault is an amazing project with many areas for iteration. Here are some of the ideas to add and improve our features:\n- Implement long term storage for OAuth users in the database\n- Add more OAuth providers! (Facebook, Reddit, Twitter...)\n- Change session cache to Redis rather than in-memory store\n- Create a My Profile page that displays after a user has been authenticated\n- Add additional DB adapters- MySQL, MongoDB, etc.\n- Add access authorization and roles to different users\n- Complete frontend sessions logic in browser\n- Create testing suites\n- Add UI components for login, making it a one-stop-shop\n- Refactor the TypeScript code and define correct typings/interfaces\n\n\n## How to Contribute\n1. Fork and clone this repository.\n2. Create a new branch on your local repository, giving it a meaningful name, such as one that details what feature is being developed.\n3. Commit and push your work to your own forked repository.\n4. Submit a Pull Request from your forked branch, to the dev branch of the Svault repository.\n5. Your Pull Request will then be reviewed, and then merged if approved!\n\n\n## The Svault Team\nFranki Biswas <a href=\"https://github.com/fpena213\">Github</a> | <a href=\"https://www.linkedin.com/in/franki-biswas/\">LinkedIn</a>\n\nTristan Bott <a href=\"https://github.com/trisbt\">Github</a> | <a href=\"https://www.linkedin.com/in/tristan-bott/\">LinkedIn</a>\n\nMichael Buenrostro <a href=\"https://github.com/mbuenrostro21\">Github</a> | <a href=\"https://www.linkedin.com/in/michael-buenrostro/\">LinkedIn</a>\n\nMichelle Conroy <a href=\"https://github.com/missmshel\">Github</a> | <a href=\"https://www.linkedin.com/in/michelleaconroy\">LinkedIn</a>\n\nDaniel Park <a href=\"https://github.com/parkdaniel731\">Github</a> | <a href=\"https://www.linkedin.com/in/danielpark137/\">LinkedIn</a>\n\n\n## Credits\nInspired by <a href=\"https://lucia-auth.com/\">Lucia</a> and <a href=\"https://authjs.dev/\">Auth.js</a>, Svault expands the authentication tools available to Svelte/SvelteKit developers.\n\n\n## License\nSvault is developed under the <a href=\"https://github.com/oslabs-beta/Svault/blob/main/LICENSE\">MIT license</a>.",
	"legacy_svelte": false,
	"downloads_history": [
		[3589, 3],
		[3596, 3],
		[3603, 6],
		[3610, 5],
		[3617, 1],
		[3631, 2],
		[3638, 24],
		[3645, 12],
		[3652, 10],
		[3659, 7],
		[3666, 11],
		[3673, 6],
		[3680, 4],
		[3687, 5],
		[3694, 2],
		[3701, 3],
		[3708, 1],
		[3715, 2],
		[3722, 1],
		[3729, 2],
		[3736, 2],
		[3743, 1],
		[3750, 4],
		[3757, 3],
		[3764, 4],
		[3771, 3],
		[3778, 6],
		[3785, 2],
		[3792, 2],
		[3799, 1],
		[3806, 5],
		[3813, 2],
		[3820, 1],
		[3827, 3],
		[3834, 4],
		[3841, 17],
		[3848, 6],
		[3855, 1],
		[3862, 4],
		[3869, 1],
		[3876, 5],
		[3883, 1],
		[3890, 5],
		[3897, 2],
		[3911, 3],
		[3918, 1],
		[3925, 2],
		[3932, 4],
		[3939, 5],
		[3946, 1],
		[3953, 1],
		[3960, 2],
		[3967, 4],
		[3974, 1],
		[3981, 1],
		[3988, 2],
		[3995, 1],
		[4002, 1],
		[4009, 1],
		[4016, 5],
		[4023, 1],
		[4030, 3],
		[4037, 10],
		[4044, 12],
		[4051, 3],
		[4058, 2],
		[4065, 2],
		[4072, 1],
		[4079, 1],
		[4086, 1],
		[4093, 1],
		[4100, 11],
		[4107, 3],
		[4114, 5],
		[4121, 7],
		[4128, 3]
	],
	"esm": true,
	"cjs": false
}
