{
	"name": "svelte-overlay",
	"description": "Create overlay components for dropdowns, tooltips, and popovers.",
	"repo_url": "https://github.com/wysher/svelte-overlay",
	"authors": ["wysher"],
	"homepage": "https://github.com/wysher/svelte-overlay#readme",
	"downloads": 85,
	"updated": "2020-06-07T15:38:40.344Z",
	"tags": ["ui"],
	"github_stars": 22,
	"typescript": false,
	"version": "1.4.1",
	"svelte_range": "3.22.2",
	"last_rune_check_version": "1.4.1",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-overlay",
				"version": "1.4.1",
				"size": 189842
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# Svelte overlay\n\n> Fully customizable Svelte overlay which fits to available space\n\n> Great for creating dropdowns, tooltips and popovers\n\nSvelte overlay is wrapper copmponent which makes all difficult stuff for you, but you decide when to open/close it and how it looks.\n\n## Features\n- may be nested\n- if content has not enough space on one side it will try to render on other side. For instance if position is set to `top-left` and there's no room on top position will be set to `bottom-left`. This feature listens to window resize event\n- may be open/closed on every trigger and content event or from outside\n- you decide how trigger and content looks\n- may be closed on click outside, window keydown, or body scroll\n- may update position on scroll\n- dispatches toggle event when open state changed\n\n[![License](http://img.shields.io/:license-mit-blue.svg)](http://doge.mit-license.org)\n\n## Example [REPL](https://svelte.dev/repl/59ae56c6e9f544c7a098bb961843a310?version=3.22.2)\n\n```javascript\n<script>\n  import Overlay from 'svelte-overlay';\n</script>\n\n<Overlay>\n\n  <!-- TRIGGER -->\n  <button slot=\"parent\" let:toggle on:click={toggle}>\n    Click Me!\n  </button>\n\n  <!-- CONTENT -->\n  <div slot=\"content\">\n    Lorem ipsum dolor sit.\n  </div>\n\n</Overlay>\n```\n---\n\n![Positions](https://j.gifs.com/p8P3v6.gif)\n\n---\n\n![It fits](https://j.gifs.com/JyRogo.gif)\n\n## Installation\n\n```npm install --save svelte-overlay```\n\nor\n\n```yarn add svelte-overlay```\n\n---\n## Props\n\n**Important**\nTo get it work component requires two slots:\n- `parent`\n- `content`\n\n**Overlay props**\n\n| Prop name | Type | Default | Description |\n| --- |  --- | --- | --- |\n| isOpen | Boolean | false | isOpen state |\n| position | String | `bottom-right` | `top-left`<br />`top-center`<br />`top-right`<br />`bottom-left`<br />`bottom-center`<br />`bottom-right`<br />`left-top`<br />`left-center`<br />`left-bottom`<br />`right-top`<br />`right-center`<br />`right-bottom`<br /><br />Uses default position when wrong position was passed.<br/> You may import array of all positions with:<br /> ``` import { positions } from 'svelte-overlay'; ``` |\n| zIndex | Number | 1 | value of z-index for overlay and content |\n| class | string | \"\" | global class name |\n| style | string | \"\" | style string which will be added at the end of component style attribute |\n| closeOnClickOutside | Boolean | false | if true - click outside will close overlay |\n| closeOnScroll | Boolean | false | if true - scrolling outside content will close overlay |\n| updateOnScroll | Boolean | false | if true - scrolling will update content position |\n| onWindowKeyDown | Function | undefined | triggers when overlay is opened and user hit any button.<br/>Gets Event as first argument and object of { open, close, toggle, isOpen } |\n| on:toggle | Function | undefined | Event dispatched on overlay toggle.<br/>Gets Event as first argument and object of { open, close, toggle, isOpen } |\n\n**slot props**\n\nEach slot gets theese props, available through let:propName\n\n| Prop name | Type | Description |\n| --- |  --- | --- |\n| isOpen | Boolean | isOpen state |\n| toggle | Function | allows to toggle open state. Gets current isOpen value as argument |\n| open | Function | allows to open overlay |\n| close | Function | allows to close overlay |\n\n---\n\n## Usage\n\n### Close on escape keydown and click outside [REPL](https://svelte.dev/repl/08a2a569d1354426ab747445ece60fcb?version=3.22.2)\n\n```javascript\n<script>\n  import Overlay from 'svelte-overlay';\n\tlet isOpen = false;\n\t\n\tfunction handleWindowKeyDown(event) {\n\t\tif (event.key === 'Escape') {\n\t\t\tisOpen = false;\t\n\t\t}\n\t}\n</script>\n\n<Overlay\n\tonWindowKeyDown={handleWindowKeyDown}\n\tcloseOnClickOutside\n\tbind:isOpen={isOpen}\n>\n  <button slot=\"parent\" let:toggle on:click={toggle}>\n    Click Me!\n  </button>\n\n  <div slot=\"content\" let:close>\n    <p>Lorem ipsum dolor sit.</p>\n    <button on:click={close}>Close</button>\n  </div>\n\n</Overlay>\n```\n\n### Close from content [REPL](https://svelte.dev/repl/a13dde11268a4ec6a560add54287c8f2?version=3.22.2)\n\n```javascript\n<script>\n  import Overlay from 'svelte-overlay';\n</script>\n\n<Overlay>\n  <button slot=\"parent\" let:toggle on:click={toggle}>\n    Click Me!\n  </button>\n\n  <div slot=\"content\" let:close>\n    <p>Lorem ipsum dolor sit.</p>\n    <button on:click={close}>Close</button>\n  </div>\n\n</Overlay>\n```\n\n---\n### Open/close on mouseenter/mouseleave [REPL](https://svelte.dev/repl/d04cf212c9a8406aad8932ca039634ac?version=3.22.2)\n\n```javascript\n<script>\n  import Overlay from 'svelte-overlay';\n</script>\n\n<Overlay>\n  <button slot=\"parent\" let:open let:close on:mouseenter={open} on:mouseleave={close}>\n    Hover Me!\n  </button>\n\n  <div slot=\"content\">\n    Lorem ipsum dolor sit.\n  </div>\n\n</Overlay>\n```\n\n---\n### Open from outside [REPL](https://svelte.dev/repl/f96379b640d74556bf415ae8d74b2598?version=3.22.2)\n\n```javascript\n<script>\n  import Overlay from 'svelte-overlay';\n  let isOpen = false;\n\n  function toggleFromOutside() {\n    isOpen = !isOpen;\n  }\n</script>\n\n<button on:click={toggleFromOutside}>Toggle from outside</button>\n\n<Overlay bind:isOpen={isOpen} >\n  <div slot=\"parent\">\n    I am a parent\n  </div>\n\n  <div slot=\"content\">\n    Lorem ipsum dolor sit.\n  </div>\n\n</Overlay>\n```\n\n---\n### With backdrop, disabled scroll and animations [REPL](https://svelte.dev/repl/cf3db92312394dd1a6efaf3374118b2c?version=3.22.2)\n\n```javascript\n<script>\n  import Overlay from 'svelte-overlay';\n  import { fly, fade } from 'svelte/transition';\n\n  let isOpen = false;\n\n  function handleToggle(event) {\n    if (event.detail !== isOpen) {\n      isOpen = event.detail;\n      document.body.classList.toggle('no-scroll', isOpen);\n    }\n  }\n</script>\n\n{#if isOpen}\n  <div class=\"backdrop\" transition:fade={{ duration: 200 }}/>\n{/if}\n\n<Overlay\n  on:toggle={handleToggle}\n  closeOnClickOutside\n  zIndex={100}\n  bind:isOpen={isOpen}>\n  <button slot=\"parent\" let:toggle on:click={toggle}>Click Me!</button>\n  <div slot=\"content\" transition:fly={{ y: 5, duration: 200 }} class=\"content\">\n    Lorem ipsum dolor sit.\n  </div>\n</Overlay>\n\n<style>\n  :global(.no-scroll) {\n    overflow: hidden;\n  }\n\n  .backdrop {\n    z-index: 99;\n    position: fixed;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.2);\n  }\n\n  .content {\n    border: 1px solid #ddd;\n    background: #f7f7f7;\n    padding: 1em;\n    width: max-content;\n  }\n</style>\n\n```\n\n---\n### Nested with click outside and close on esc key [REPL](https://svelte.dev/repl/284b4a09eddc4b64b5bd6734712d30ee?version=3.22.2)\n\n```javascript\n<script>\n  import Overlay from 'svelte-overlay';\n  let isOpen = false;\n\n  function toggleFromOutside() {\n    isOpen = !isOpen;\n  }\n</script>\n\n<button on:click={toggleFromOutside}>Toggle from outside</button>\n\n<Overlay bind:isOpen={isOpen} >\n  <div slot=\"parent\">\n    I am a parent\n  </div>\n\n  <div slot=\"content\">\n    Lorem ipsum dolor sit.\n  </div>\n\n</Overlay>\n```\n\n---\n\n## License\n\n[![License](http://img.shields.io/:license-mit-blue.svg?style=flat-square)](http://badges.mit-license.org)\n\n- **[MIT license](http://opensource.org/licenses/mit-license.php)**\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 572],
		[3596, 782],
		[3603, 722],
		[3610, 688],
		[3617, 777],
		[3624, 738],
		[3631, 708],
		[3638, 580],
		[3645, 498],
		[3652, 394],
		[3659, 746],
		[3666, 981],
		[3673, 671],
		[3680, 731],
		[3687, 846],
		[3694, 473],
		[3701, 319],
		[3708, 251],
		[3715, 271],
		[3722, 242],
		[3729, 322],
		[3736, 264],
		[3743, 253],
		[3750, 293],
		[3757, 347],
		[3764, 298],
		[3771, 275],
		[3778, 250],
		[3785, 124],
		[3792, 167],
		[3799, 226],
		[3806, 190],
		[3813, 326],
		[3820, 230],
		[3827, 178],
		[3834, 190],
		[3841, 218],
		[3848, 201],
		[3855, 122],
		[3862, 268],
		[3869, 190],
		[3876, 170],
		[3883, 132],
		[3890, 185],
		[3897, 261],
		[3904, 211],
		[3911, 202],
		[3918, 115],
		[3925, 84],
		[3932, 146],
		[3939, 161],
		[3946, 91],
		[3953, 133],
		[3960, 172],
		[3967, 141],
		[3974, 149],
		[3981, 158],
		[3988, 93],
		[3995, 120],
		[4002, 85],
		[4009, 57],
		[4016, 75],
		[4023, 225],
		[4030, 224],
		[4037, 188],
		[4044, 115],
		[4051, 169],
		[4058, 120],
		[4065, 137],
		[4072, 81],
		[4079, 113],
		[4086, 83],
		[4093, 50],
		[4100, 51],
		[4107, 46],
		[4114, 85],
		[4121, 63],
		[4128, 23]
	]
}
