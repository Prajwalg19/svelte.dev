{
	"name": "svelte-writable-derived",
	"description": "Create writable derived stores for Svelte, transforming data bidirectionally.",
	"repo_url": "https://github.com/PixievoltNo1/svelte-writable-derived",
	"authors": ["pixievoltno1"],
	"homepage": "https://github.com/PixievoltNo1/svelte-writable-derived",
	"downloads": 21082,
	"updated": "2024-04-04T06:55:02.096Z",
	"tags": ["miscellaneous"],
	"github_stars": 89,
	"typescript": true,
	"version": "3.1.1",
	"svelte_range": "^3.2.1 || ^4.0.0-next.1 || ^5.0.0-next.94",
	"last_rune_check_version": "3.1.1",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-writable-derived",
				"version": "3.1.1",
				"size": 22021
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# svelte-writable-derived\n[![npm](https://img.shields.io/npm/v/svelte-writable-derived.svg)](https://www.npmjs.com/package/svelte-writable-derived)\n[![Bundle size](https://img.shields.io/bundlephobia/minzip/svelte-writable-derived.svg)](https://bundlephobia.com/result?p=svelte-writable-derived)\n[![GitHub CI Status](https://img.shields.io/github/actions/workflow/status/PixievoltNo1/svelte-writable-derived/node.js.yml?branch=master&label=tests)](https://github.com/PixievoltNo1/svelte-writable-derived/actions/workflows/node.js.yml)\n[![License](https://img.shields.io/github/license/PixievoltNo1/svelte-writable-derived.svg)](https://github.com/PixievoltNo1/svelte-writable-derived/blob/master/LICENSE.txt)\n![GitHub Repo stars](https://img.shields.io/github/stars/PixievoltNo1/svelte-writable-derived?style=social)\n\nFor users of [Svelte](https://svelte.dev/) v3 and v4, this is a read-write variant of Svelte's [derived stores](https://svelte.dev/tutorial/derived-stores) that accepts an extra callback to send values back to the source. It builds on the derived & writable stores provided by Svelte, and emulates their behavior as closely as possible.\n\nThis project has a [Code of Conduct](CODE_OF_CONDUCT.md). By participating in the Git repo or issues tracker, you agree to be as courteous, welcoming, and generally a lovely person as its terms require. üòä\n\n<!-- Table of contents generated mostly by the markdown-toc package - however, it includes emoji in the URLs, and they need to be stripped for GitHub -->\n\n<!-- toc -->\n\n  * [Default & named export: `writableDerived()`](#default--named-export-writablederived)\n    + [New parameter: `reflect`](#new-parameter-reflect)\n  * [Named export: `propertyStore()`](#named-export-propertystore)\n  * [Regarding Subscription-less `svelte-writable-derived` Stores](#regarding-subscription-less-svelte-writable-derived-stores)\n  * [Examples](#examples)\n    + [Making an object store from a JSON string store](#making-an-object-store-from-a-json-string-store)\n    + [Making a single-value store from an object store](#making-a-single-value-store-from-an-object-store)\n      - [... when the object is an array](#-when-the-object-is-an-array)\n      - [... when the value is deeply nested in the object](#-when-the-value-is-deeply-nested-in-the-object)\n    + [Making an object store from several single-value stores](#making-an-object-store-from-several-single-value-stores)\n    + [Chaining all of the above together](#chaining-all-of-the-above-together)\n  * [Browser compatibility](#browser-compatibility)\n- [üíñ Support the developer](#-support-the-developer)\n  * [üí∏ ... with money](#--with-money)\n  * [üíå ... with kind words](#--with-kind-words)\n  * [ü§ù ... with a job](#--with-a-job)\n\n<!-- tocstop -->\n\n## Default & named export: `writableDerived()`\n\n<i>Parameters: `origins` ([store](https://svelte.dev/docs#component-format-script-4-prefix-stores-with-$-to-access-their-values-store-contract) or array of stores), `derive` (function), [`reflect`](#new-parameter-reflect) (see documentation), optional `initial` (any)</i><br>\n<i>Returns a store with [`writable`](https://svelte.dev/docs#run-time-svelte-store-writable) methods</i>\n\nCreate a store that behaves similarly to [Svelte's `derived`](https://svelte.dev/docs#run-time-svelte-store-derived), with `origins`, `derive`, and `initial` working like its 1st, 2nd, and 3rd parameters respectively. Values introduced to the store via its `set` and `update` methods are passed to the new 3rd parameter, `reflect`, which can in turn set values for the origin stores.\n\nAs long as `derived` and `reflect` set stores only by the means provided to them and not via any store's methods, they won't trigger calls to each other.\n\n### New parameter: `reflect`\n\n<i>Function with parameters: `reflecting` (any), optional `old` (any)</i>\n\nThis function is called when the derived store gets a new value via its `set` and `update` methods (not via the `derive` callback). Its `reflecting` parameter is this new value, and `old` is the origin store's current value, or an array of values if `origins` is an array. It must return a value to set in the origin store, or an array of values to set if `origins` was an array. If the returned array is sparse or shorter than `origins`, it will only set the stores it has elements for, and other stores don't necessarily need to be writable.\n\n`reflect` is called after the derived store's subscriptions are called. If the derived store has its `set` and/or `update` methods called again in the process of calling its subscriptions, `reflect` will be called only once, with the most-recently-set value.\n\n`arguments`, default parameters, and rest parameters will not receive `old` unless the function's [length](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/length) is at least 2.\n\n## Named export: `propertyStore()`\n\n<i>Parameters: `origin` ([store](https://svelte.dev/docs#component-format-script-4-prefix-stores-with-$-to-access-their-values-store-contract)), `propName` (string, number, symbol, or array of strings/numbers/symbols)</i><br>\n<i>Returns a store with [`writable`](https://svelte.dev/docs#run-time-svelte-store-writable) methods</i>\n\nA utility wrapper for `writableDerived`. Given a store containing an object, this function returns a store containing the value of the object's property `propName`. If `propName` is an array, it's used as a path to navigate nested objects.\n\n## Regarding Subscription-less `svelte-writable-derived` Stores\n\nOne of the ways this package emulates the behavior of Svelte's `derived` is that it does not subscribe to any origin store until the derived store itself has a subscription. However, there's an exception: Calling the `set` and `update` methods when the derived store has no subscriptions will subscribe to & then unsubscribe from all its origins.\n\n## Examples\n\n### Making an object store from a JSON string store\n\n```javascript\nimport { writable, get } from \"svelte/store\";\nimport writableDerived from \"svelte-writable-derived\";\n\nvar jsonStore = writable(`{\"I'm a property\": true}`);\nvar objectStore = writableDerived(\n\tjsonStore,\n\t(json) => JSON.parse(json),\n\t(object) => JSON.stringify(object)\n);\nconsole.log( Object.keys( get(objectStore) ) ); // [\"I'm a property\"]\nobjectStore.set({\"I'm not a property\": false});\nconsole.log( get(jsonStore) ); // \"{\\\"I'm not a property\\\": false}\"\n```\n\n### Making a single-value store from an object store\n\n```javascript\nimport { writable, get } from \"svelte/store\";\nimport { propertyStore } from \"svelte-writable-derived\";\n\nvar objectStore = writable({\"a horse\": \"a horse\", \"of course\": \"of course\"});\nvar valueStore = propertyStore(objectStore, \"a horse\");\nconsole.log( get(valueStore) ); // \"a horse\"\nvalueStore.set(\"*whinny*\");\nconsole.log( get(objectStore) ); // {\"a horse\": \"*whinny*\", \"of course\": \"of course\"}\n\n// propertyStore is just a wrapper. You could also use writableDerived directly:\n\nimport writableDerived from \"svelte-writable-derived\";\n\nvar valueStore = writableDerived(\n\tobjectStore,\n\t(object) => object[\"a horse\"],\n\t(reflecting, object) => {\n\t\tobject[\"a horse\"] = reflecting;\n\t\treturn object; // needed to call objectStore.set with the proper value\n\t}\n);\n```\n\n#### ... when the object is an array\n\n```javascript\n// An array is an object with numerically-named properties.\n// Access them using a number for the propName parameter.\n\nimport { writable, get } from \"svelte/store\";\nimport { propertyStore } from \"svelte-writable-derived\";\n\nvar treasureCoordinates = writable([7, -2, 31]);\nvar treasureElevation = propertyStore(treasureCoordinates, 1);\nconsole.log( get(treasureElevation) ); // -2\ntreasureElevation.set(1); // dig up the treasure\nconsole.log( get(treasureCoordinates) ); // [7, 1, 31]\n```\n\n#### ... when the value is deeply nested in the object\n\n```javascript\nimport { writable, get } from \"svelte/store\";\nimport { propertyStore } from \"svelte-writable-derived\";\n\nvar objectStore = writable({ deeply: { buried: { item: \"trash\" } } });\nvar valueStore = propertyStore(objectStore, [\"deeply\", \"buried\", \"item\"]);\nconsole.log( get(valueStore) ); // \"trash\"\nvalueStore.set(\"treasure\");\nconsole.log( get(objectStore) ); // { deeply: { buried: { item: \"treasure\" } } }\n\n// Using writableDerived directly:\n\nimport writableDerived from \"svelte-writable-derived\";\n\nvar valueStore = writableDerived(\n\tobjectStore,\n\t(object) => object.deeply.buried.item,\n\t(reflecting, object) => {\n\t\tobject.deeply.buried.item = reflecting;\n\t\treturn object; // needed to call objectStore.set with the proper value\n\t}\n);\n```\n\n### Making an object store from several single-value stores\n\n```javascript\nimport { writable, get } from \"svelte/store\";\nimport writableDerived from \"svelte-writable-derived\";\n\nvar valueStore1 = \"sparta\", valueStore2 = \"monty python's flying circus\";\nvar objectStore = writableDerived(\n\t[valueStore1, valueStore2],\n\t([value1, value2]) => ( {\"this is\": value1, \"it's\": value2} ),\n\t(object) => [ object[\"this is\"], object[\"it's\"] ]\n);\nconsole.log( get(objectStore) ); // {\"this is\": \"sparta\", \"it's\": \"monty python's flying circus\"}\nobjectStore.set( {\"this is\": \"rocket league\", \"it's\": \"over 9000\"} );\nconsole.log( get(valueStore1), get(valueStore2) ); // \"rocket league\" \"over 9000\"\n```\n\n### Chaining all of the above together\n\n```javascript\n// What if Rube Goldberg were a JavaScript developer?\nimport { writable, get } from \"svelte/store\";\nimport { writableDerived, propertyStore } from \"svelte-writable-derived\";\n\nvar jsonStore = writable(`{\"owner\": \"dragon\", \"possessions\": [\"crown\", \"gold\"]}`);\nvar hoardStore = writableDerived(\n\tjsonStore,\n\t(json) => JSON.parse(json),\n\t(object) => JSON.stringify(object)\n);\n\nvar hoarderStore = propertyStore(hoardStore, \"owner\");\nvar hoardContentsStore = propertyStore(hoardStore, \"possessions\");\n\nvar itemListStore = writableDerived(\n\t[hoarderStore, hoardContentsStore],\n\t([hoarder, hoardContents]) => {\n\t\treturn hoardContents.map( (item) => {\n\t\t\treturn {item, owner: hoarder};\n\t\t});\n\t},\n\t(itemList) => {\n\t\t// This is only for demonstration purposes, so we won't handle differing owners\n\t\tvar hoarder = itemList[0].owner;\n\t\tvar hoardContents = itemList.map( (itemListEntry) => {\n\t\t\treturn itemListEntry[\"item\"];\n\t\t} );\n\t\treturn [hoarder, hoardContents];\n\t}\n);\n\njsonStore.subscribe(console.log);\nhoardStore.subscribe(console.log);\nhoarderStore.subscribe(console.log);\n// skipping hoardContentsStore\nitemListStore.subscribe(console.log);\nitemListStore.update( (itemList) => {\n\treturn itemList.map( (itemListEntry) => {\n\t\treturn {item: itemListEntry.item, owner: \"protagonist\"};\n\t} );\n} );\n/*\n\tUpon the update, the console logs:\n\t[{item: \"crown\", owner: \"protagonist\"}, {item: \"gold\", owner: \"protagonist\"}]\n\t\"protagonist\"\n\t{owner: \"protagonist\", possessions: [\"crown\", \"gold\"]}\n\t\"{\\\"owner\\\": \\\"protagonist\\\", \\\"possessions\\\": [\\\"crown\\\", \\\"gold\\\"]}\"\n*/\n```\n\n## Browser compatibility\n\nThis package should run anywhere Svelte can run. Use transpilers/polyfills as needed.\n\n# üíñ Support the developer\n\nI muchly appreciate any way you'd like to show your thanks - knowing people are helped gives me warm fuzzies and makes it all worthwhile!\n\n## üí∏ ... with money\n\nAt [my Ko-Fi page](https://ko-fi.com/pixievoltno1), you can make a one-time or monthly donation, or [commission work on an issue](https://ko-fi.com/pixievoltno1/commissions).\n\nYou can also support *all* your dependencies at once using [StackAid](https://www.stackaid.us/)!\n\n## üíå ... with kind words\n\nCurrent contact info is on [this page](https://pixievoltno1.com/contact/) - or you can create an \"issue\" on this repo just to say thanks! Thank-you \"issues\" will be closed right away, but are treasured regardless~\n\n## ü§ù ... with a job\n\nWant me to sling some JavaScript for you? [Look over my other work](https://github.com/PixievoltNo1) and [contact me!](https://pixievoltno1.com/contact/)",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 11555],
		[3603, 10576],
		[3610, 11750],
		[3617, 12500],
		[3624, 17394],
		[3631, 30062],
		[3638, 47205],
		[3645, 8388],
		[3652, 21713],
		[3659, 31583],
		[3666, 53973],
		[3673, 27031],
		[3680, 13548],
		[3687, 38507],
		[3694, 35183],
		[3701, 41394],
		[3708, 25442],
		[3715, 19036],
		[3722, 23695],
		[3729, 49095],
		[3736, 29418],
		[3743, 42312],
		[3750, 47694],
		[3757, 37901],
		[3764, 33037],
		[3771, 36629],
		[3778, 32465],
		[3785, 34942],
		[3792, 23554],
		[3799, 32045],
		[3806, 26690],
		[3813, 32300],
		[3820, 36078],
		[3827, 39042],
		[3834, 48271],
		[3841, 38634],
		[3848, 28771],
		[3855, 46269],
		[3862, 34633],
		[3869, 25875],
		[3876, 26116],
		[3883, 27260],
		[3890, 15258],
		[3897, 15391],
		[3904, 14335],
		[3911, 33526],
		[3918, 32758],
		[3925, 32586],
		[3932, 24500],
		[3939, 25835],
		[3946, 21595],
		[3953, 20700],
		[3960, 15810],
		[3967, 23333],
		[3974, 24739],
		[3981, 33202],
		[3988, 25621],
		[3995, 23782],
		[4002, 21248],
		[4009, 34234],
		[4016, 34304],
		[4023, 21435],
		[4030, 39640],
		[4037, 42330],
		[4044, 29051],
		[4051, 25932],
		[4058, 16716],
		[4065, 13965],
		[4072, 16416],
		[4079, 18287],
		[4086, 33051],
		[4093, 30336],
		[4100, 17623],
		[4107, 25269],
		[4114, 21082],
		[4121, 22185],
		[4128, 11557],
		[4135, 13212]
	]
}
