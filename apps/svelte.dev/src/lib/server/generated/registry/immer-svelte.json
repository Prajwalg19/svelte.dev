{
	"name": "immer-svelte",
	"description": "Use Immer for immutable state management in Svelte.",
	"repo_url": "https://github.com/distolma/immer-svelte",
	"authors": ["distolma"],
	"homepage": "https://github.com/distolma/immer-svelte#readme",
	"downloads": 4,
	"updated": "2020-03-28T09:50:13.266Z",
	"tags": ["miscellaneous"],
	"github_stars": 4,
	"typescript": true,
	"version": "0.2.0",
	"svelte_range": "^3.20.0",
	"last_rune_check_version": "0.2.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "immer-svelte",
				"version": "0.2.0",
				"size": 5605
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# immer-svelte\n\n[![npm version](https://badge.fury.io/js/immer-svelte.svg)](https://www.npmjs.com/package/immer-svelte)\n[![Build Status](https://travis-ci.com/distolma/immer-svelte.svg?branch=master)](https://travis-ci.com/distolma/immer-svelte)\n\n## Installation\n\n```sh\nnpm i -S immer immer-svelte\n```\nor\n```sh\nyarn add immer immer-svelte\n```\n\n## API\n\n#### useImmer\n\nThe function returns a tuple, the first value of the tuple is the current state, the second is the updater function,\nwhich accepts an [immer producer function](https://github.com/mweststrate/immer#api), in which the `draft` can be mutated freely, until the producer ends and the changes will be made immutable and become the next state.\n\n```html\n<script>\n  import { useImmer } from \"immer-svelte\";\n\n  const [state, updateState] = useImmer({ count: 0 });\n\n  function increase() {\n    updateState(draft => {\n      draft.count++;\n    });\n  }\n</script>\n\n<div>Count: {$state.count}</div>\n<button on:click={increase}>Increase</button>\n```\n\n#### useImmerReducer\n\n```html\n<script>\n  import { useImmerReducer } from \"immer-svelte\";\n\n  const initialState = { count: 0 };\n\n  function reducer(draft, action) {\n    switch (action.type) {\n      case \"reset\":\n        return initialState;\n      case \"increment\":\n        return void draft.count++;\n      case \"decrement\":\n        return void draft.count--;\n    }\n  }\n\n  const [state, dispatch] = useImmerReducer(reducer, initialState);\n</script>\n\n<div>\n  Count: {$state.count}\n  <button on:click={() => dispatch({ type: \"reset\" })}>Reset</button>\n  <button on:click={() => dispatch({ type: \"increment\" })}>+</button>\n  <button on:click={() => dispatch({ type: \"decrement\" })}>-</button>\n</div>\n```\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 6],
		[3603, 1],
		[3610, 6],
		[3617, 1],
		[3624, 1],
		[3645, 3],
		[3652, 10],
		[3666, 4],
		[3673, 14],
		[3680, 6],
		[3687, 1],
		[3694, 1],
		[3708, 8],
		[3715, 8],
		[3736, 7],
		[3743, 1],
		[3750, 13],
		[3771, 11],
		[3778, 1],
		[3785, 6],
		[3792, 2],
		[3799, 1],
		[3806, 1],
		[3813, 6],
		[3820, 7],
		[3841, 2],
		[3855, 6],
		[3862, 22],
		[3869, 1],
		[3876, 1],
		[3883, 2],
		[3890, 10],
		[3904, 1],
		[3911, 4],
		[3918, 3],
		[3932, 1],
		[3939, 6],
		[3946, 2],
		[3960, 1],
		[3967, 1],
		[3995, 3],
		[4023, 3],
		[4030, 9],
		[4037, 9],
		[4044, 10],
		[4058, 1],
		[4065, 7],
		[4072, 13],
		[4086, 6],
		[4093, 8],
		[4100, 4],
		[4107, 1],
		[4114, 4],
		[4121, 8],
		[4128, 4]
	]
}
