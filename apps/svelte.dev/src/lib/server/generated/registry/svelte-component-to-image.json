{
	"name": "svelte-component-to-image",
	"description": "Render .png images from Svelte components in SvelteKit.",
	"repo_url": "https://github.com/StephenGunn/svelte-component-to-image",
	"authors": ["jovian_moon"],
	"homepage": "https://github.com/StephenGunn/svelte-component-to-image",
	"downloads": 134,
	"updated": "2024-11-09T17:17:00.413Z",
	"tags": ["tooling"],
	"github_stars": 48,
	"typescript": true,
	"version": "1.0.16",
	"svelte_range": "^5.1.13",
	"kit_range": "^2.8.0",
	"last_rune_check_version": "1.0.16",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-component-to-image",
				"version": "1.0.16",
				"size": 14787
			},
			{
				"name": "@resvg/resvg-js",
				"version": "2.6.2",
				"size": 44489
			},
			{
				"name": "juice",
				"version": "11.0.1",
				"size": 51098
			},
			{
				"name": "cheerio",
				"version": "1.0.0",
				"size": 1252107
			},
			{
				"name": "cheerio-select",
				"version": "2.1.0",
				"size": 62620
			},
			{
				"name": "boolbase",
				"version": "1.0.0"
			},
			{
				"name": "css-select",
				"version": "5.1.0",
				"size": 224084
			},
			{
				"name": "css-what",
				"version": "6.1.0",
				"size": 66038
			},
			{
				"name": "domhandler",
				"version": "5.0.3",
				"size": 75339
			},
			{
				"name": "domelementtype",
				"version": "2.3.0",
				"size": 11359
			},
			{
				"name": "domutils",
				"version": "3.2.2",
				"size": 166738
			},
			{
				"name": "dom-serializer",
				"version": "2.0.0",
				"size": 28813
			},
			{
				"name": "entities",
				"version": "4.5.0",
				"size": 412892
			},
			{
				"name": "nth-check",
				"version": "2.1.1",
				"size": 42555
			},
			{
				"name": "encoding-sniffer",
				"version": "0.2.0",
				"size": 167439
			},
			{
				"name": "iconv-lite",
				"version": "0.6.3",
				"size": 348518
			},
			{
				"name": "safer-buffer",
				"version": "2.1.2",
				"size": 42299
			},
			{
				"name": "whatwg-encoding",
				"version": "3.1.1",
				"size": 13339
			},
			{
				"name": "htmlparser2",
				"version": "9.1.0",
				"size": 253719
			},
			{
				"name": "parse5",
				"version": "7.3.0",
				"size": 695873
			},
			{
				"name": "entities",
				"version": "6.0.0",
				"size": 540419
			},
			{
				"name": "parse5-htmlparser2-tree-adapter",
				"version": "7.1.0",
				"size": 18745
			},
			{
				"name": "parse5-parser-stream",
				"version": "7.1.2",
				"size": 15862
			},
			{
				"name": "undici",
				"version": "6.21.2",
				"size": 1172055
			},
			{
				"name": "whatwg-mimetype",
				"version": "4.0.0",
				"size": 16721
			},
			{
				"name": "commander",
				"version": "12.1.0",
				"size": 186398
			},
			{
				"name": "mensch",
				"version": "0.3.4",
				"size": 36564
			},
			{
				"name": "slick",
				"version": "1.12.2"
			},
			{
				"name": "web-resource-inliner",
				"version": "7.0.0",
				"size": 26688
			},
			{
				"name": "ansi-colors",
				"version": "4.1.3",
				"size": 26143
			},
			{
				"name": "escape-goat",
				"version": "3.0.0",
				"size": 6358
			},
			{
				"name": "htmlparser2",
				"version": "5.0.1",
				"size": 101666
			},
			{
				"name": "domutils",
				"version": "2.8.0",
				"size": 56647
			},
			{
				"name": "domhandler",
				"version": "4.3.1",
				"size": 44583
			},
			{
				"name": "dom-serializer",
				"version": "1.4.1",
				"size": 28312
			},
			{
				"name": "entities",
				"version": "2.2.0",
				"size": 57673
			},
			{
				"name": "domhandler",
				"version": "3.3.0",
				"size": 32610
			},
			{
				"name": "mime",
				"version": "2.6.0",
				"size": 60114
			},
			{
				"name": "valid-data-url",
				"version": "3.0.1",
				"size": 8320
			},
			{
				"name": "satori",
				"version": "0.11.3",
				"size": 4066987
			},
			{
				"name": "linebreak",
				"version": "1.1.0",
				"size": 218833
			},
			{
				"name": "base64-js",
				"version": "0.0.8"
			},
			{
				"name": "unicode-trie",
				"version": "2.0.0",
				"size": 48887
			},
			{
				"name": "pako",
				"version": "0.2.9"
			},
			{
				"name": "tiny-inflate",
				"version": "1.0.3",
				"size": 43000
			},
			{
				"name": "emoji-regex",
				"version": "10.4.0",
				"size": 31990
			},
			{
				"name": "escape-html",
				"version": "1.0.3"
			},
			{
				"name": "yoga-wasm-web",
				"version": "0.3.3",
				"size": 289748
			},
			{
				"name": "css-box-shadow",
				"version": "1.0.0-3"
			},
			{
				"name": "parse-css-color",
				"version": "0.2.1",
				"size": 24044
			},
			{
				"name": "color-name",
				"version": "1.1.4",
				"size": 6693
			},
			{
				"name": "hex-rgb",
				"version": "4.3.0",
				"size": 6677
			},
			{
				"name": "css-gradient-parser",
				"version": "0.0.16",
				"size": 43116
			},
			{
				"name": "css-to-react-native",
				"version": "3.2.0",
				"size": 90021
			},
			{
				"name": "camelize",
				"version": "1.0.1",
				"size": 12487
			},
			{
				"name": "css-color-keywords",
				"version": "1.0.0"
			},
			{
				"name": "postcss-value-parser",
				"version": "4.2.0",
				"size": 27193
			},
			{
				"name": "@shuding/opentype.js",
				"version": "1.4.0-beta.0",
				"size": 2963010
			},
			{
				"name": "fflate",
				"version": "0.7.4",
				"size": 535414
			},
			{
				"name": "string.prototype.codepointat",
				"version": "0.2.1",
				"size": 5382
			},
			{
				"name": "css-background-parser",
				"version": "0.1.0"
			},
			{
				"name": "satori-html",
				"version": "0.3.2",
				"size": 7679
			},
			{
				"name": "ultrahtml",
				"version": "1.6.0",
				"size": 368385
			}
		],
		"dependencies": [
			[0, 1],
			[0, 2],
			[2, 3],
			[3, 4],
			[4, 5],
			[4, 6],
			[6, 5],
			[6, 7],
			[6, 8],
			[8, 9],
			[6, 10],
			[10, 11],
			[11, 9],
			[11, 8],
			[11, 12],
			[10, 9],
			[10, 8],
			[6, 13],
			[13, 5],
			[4, 7],
			[4, 9],
			[4, 8],
			[4, 10],
			[3, 11],
			[3, 8],
			[3, 10],
			[3, 14],
			[14, 15],
			[15, 16],
			[14, 17],
			[17, 15],
			[3, 18],
			[18, 10],
			[18, 12],
			[18, 8],
			[18, 9],
			[3, 19],
			[19, 20],
			[3, 21],
			[21, 8],
			[21, 19],
			[3, 22],
			[22, 19],
			[3, 23],
			[3, 24],
			[2, 25],
			[2, 12],
			[2, 26],
			[2, 27],
			[2, 28],
			[28, 29],
			[28, 30],
			[28, 31],
			[31, 32],
			[32, 33],
			[33, 9],
			[32, 34],
			[34, 9],
			[34, 33],
			[34, 35],
			[32, 9],
			[31, 35],
			[31, 36],
			[36, 9],
			[31, 9],
			[28, 37],
			[28, 38],
			[0, 39],
			[39, 40],
			[40, 41],
			[40, 42],
			[42, 43],
			[42, 44],
			[39, 45],
			[39, 46],
			[39, 47],
			[39, 48],
			[39, 49],
			[49, 50],
			[49, 51],
			[39, 52],
			[39, 53],
			[53, 54],
			[53, 55],
			[53, 56],
			[39, 57],
			[57, 58],
			[57, 59],
			[39, 56],
			[39, 60],
			[0, 61],
			[61, 62]
		],
		"circular": []
	},
	"readme": "# svelte-component-to-image\n\nA package for easily rendering .png images from svelte components in SvelteKit. Inspired by Vercel's\n[`OG Image Generation`](https://vercel.com/docs/concepts/functions/edge-functions/og-image-generation) tool.\n\nGood for rendering dynamic Open Graph images quickly and effeciently without having to use canvas.\n\n[Demo](https://svelte-component-to-image.vercel.app/)\n\n## Features\n\n- Renders a normal svelte component as a png\n- Component props are supported for dynamic image generation\n- Use basic CSS like flexbox and absolute positioning ([See valid CSS](https://github.com/vercel/satori#css))\n- Lightweight and fast (doesn't use canvas or puppeteer)\n- Load custom fonts: tff, otf, woff accepted (woff2 not accepted currently)\n\n## Svelte 5 Usage\n\nThe svelte 5 version will be available as the 1.0.0+ release.\n\nYou will need to add `<svelte:options css=\"injected\" />` to every component you want to render as an image. You will see an error if you don't and the component will not render.\n\n### Warning\n\nThere is currently a bug with the Svelte 5 version deep in a dependency that will render radial gradients fine in dev but will crash production. I am working on a fix.\n\n## Svelte 4 Usage\n\nThe Svelte 4 version is available as the 0.1.0 release.\n\n## Installation\n\n```\nnpm install svelte-component-to-image\n```\n\n### Tested On\n\n- Vercel (working)\n- Netlify (working)\n- Cloudflare Pages (not working)\n\n## Usage\n\nThis package is NOT for rendering normal svelte components as images, you will need to write your components with image rendering in mind. The guidelines are set by ([Satori's CSS Guidelines](https://github.com/vercel/satori#css)) - you will need to write your markup and css with these factors in mind.\n\n### Create A Component\n\nCreate a `.svelte` component with JS/HTML/CSS. You can pass props or use additional technologies\nthat require preproccesors like TypeScript or SASS.\n\n#### HelloWorld.svelte\n\n```svelte\n<script lang=\"ts\">\n\texport let text: string = 'hello';\n</script>\n\n<div id=\"container\">\n\t<h1>\n\t\t{text} world!\n\t</h1>\n</div>\n\n<style>\n\t* {\n\t\tdisplay: flex; /* if you're having problems with satori errors, this line can really help */\n\t}\n\t#container {\n\t\twidth: 1200px;\n\t\theight: 600px;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tposition: relative;\n\t\tbackground: rgb(63, 94, 251);\n\t\tbackground: radial-gradient(circle, rgba(63, 94, 251, 1) 0%, rgba(252, 70, 107, 1) 100%);\n\t}\n\th1 {\n\t\tcolor: red;\n\t\tfont-size: 75px;\n\t}\n</style>\n```\n\n### +server.ts Endpoint\n\nCreate a +server.ts endpoint to render and serve the image. Import the package and options type.\n\nMore on how the font importing works below.\n\n#### image/+server.ts\n\n```TS\nimport { error } from '@sveltejs/kit'\nimport type { RequestHandler } from './$types'\n\n// Svelte Component To Image\nimport { image_from_component, type RenderOptions } from 'svelte-component-to-image'\n\n// Normal .svelte component\nimport HelloWorld from './HelloWorld.svelte'\n\nexport const GET: RequestHandler = (async ({url}) => {\n    try {\n        const options: RenderOptions = {\n            width: 1200,\n            height: 600,\n            props: {\n                text: url.searchParams.get('text') ?? 'text not found'\n            },\n            fonts: [\n                {\n                    name: 'Typewriter',\n                    url: `${url.origin}/TYPEWR__.TTF`,\n                    weight: 400,\n                    style: 'normal'\n                }\n            ],\n            debug: false // you can omit this or set it to true to see logs of data, it can help for debug edge cases\n        }\n\n        // pass the component and options to the package\n        const image    = await image_from_component(HelloWorld, options)\n        const response = new Response(image)\n        if(!dev){\n            // caching on dev will make it hard to see iterations\n            response.headers.append('Content-Type', 'image/png')\n            response.headers.append('Cache-Control', 's-maxage=604800, stale-while-revalidate=604800')\n        }\n        return response\n    } catch (e) {\n        console.error(e)\n        throw error(500, 'Error trying to generate image from component.')\n    }\n}) satisfies RequestHandler\n```\n\n### Font Importing\n\nYou can import as many ttf, otf, and woff fonts as you want to use inside of your component.\nAlthough, importing 100 fonts is going to affect server load and speed.\n\n**woff2 files are not currently supported.**\n\nFonts files can be local or remote. They need a full URL to be properly loaded. Local fonts\nstored in `/static` can be loaded using `${url.origin}/` as long as `{url}` is made available\nin the endpoint.\n\nOnce the font is loaded, you can reference them in the CSS using `font-family`. If only one font is loaded,\nit will be the default.\n\n### Not All Fonts Work!\n\nNot all fonts work! If a font fails to load it will break the image rendering. I am not sure what causes this or which fonts are \"approved\" - but I have had luck using [Font Squirrel's Webfont Generator](https://www.fontsquirrel.com/tools/webfont-generator) to convert fonts to web-safe formats and using those.\n\n### Images\n\nImages can be used and rendered like normal. You will want to set the height and width.\n\n```HTML\n<img src=\"https://picsum.photos/200/300\" width=\"200\" height=\"300\" />\n```\n\n### More info\n\nThis uses Vercel's Satori. You can find out more about what is and isn't supported by reading it's docs:\n[Vercel's Satori](https://github.com/vercel/satori)\n\n## License\n\nMIT\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3589, 8],
		[3596, 29],
		[3603, 105],
		[3610, 53],
		[3617, 37],
		[3624, 90],
		[3631, 27],
		[3638, 65],
		[3645, 75],
		[3652, 35],
		[3659, 55],
		[3666, 52],
		[3673, 28],
		[3680, 37],
		[3687, 42],
		[3694, 31],
		[3701, 64],
		[3708, 14],
		[3715, 40],
		[3722, 26],
		[3729, 65],
		[3736, 96],
		[3743, 77],
		[3750, 84],
		[3757, 131],
		[3764, 108],
		[3771, 93],
		[3778, 106],
		[3785, 118],
		[3792, 79],
		[3799, 100],
		[3806, 123],
		[3813, 41],
		[3820, 146],
		[3827, 124],
		[3834, 76],
		[3841, 176],
		[3848, 78],
		[3855, 88],
		[3862, 87],
		[3869, 86],
		[3876, 124],
		[3883, 108],
		[3890, 112],
		[3897, 70],
		[3904, 113],
		[3911, 77],
		[3918, 145],
		[3925, 154],
		[3932, 120],
		[3939, 143],
		[3946, 150],
		[3953, 108],
		[3960, 731],
		[3967, 182],
		[3974, 176],
		[3981, 242],
		[3988, 164],
		[3995, 148],
		[4002, 136],
		[4009, 47],
		[4016, 66],
		[4023, 133],
		[4030, 83],
		[4037, 139],
		[4044, 143],
		[4051, 193],
		[4058, 201],
		[4065, 152],
		[4072, 216],
		[4079, 173],
		[4086, 165],
		[4093, 147],
		[4100, 202],
		[4107, 177],
		[4114, 134],
		[4121, 77],
		[4128, 192]
	]
}
