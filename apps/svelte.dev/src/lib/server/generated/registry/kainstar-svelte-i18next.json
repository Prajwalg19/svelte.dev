{
	"name": "@kainstar/svelte-i18next",
	"description": "Integrate i18next for internationalization in Svelte apps.",
	"repo_url": "https://github.com/kainstar/svelte-i18next",
	"authors": ["kainstar"],
	"homepage": "https://github.com/kainstar/svelte-i18next#readme",
	"downloads": 4,
	"updated": "2024-03-23T12:58:19.977Z",
	"tags": ["integration"],
	"github_stars": 1,
	"typescript": true,
	"version": "1.0.1",
	"svelte_range": "^4.2.12",
	"last_rune_check_version": "1.0.1",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@kainstar/svelte-i18next",
				"version": "1.0.1",
				"size": 19762
			},
			{
				"name": "html-parse-stringify",
				"version": "3.0.1",
				"size": 55524
			},
			{
				"name": "void-elements",
				"version": "3.1.0"
			},
			{
				"name": "i18next",
				"version": "23.16.8",
				"size": 639937
			},
			{
				"name": "@babel/runtime",
				"version": "7.27.1",
				"size": 246647
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[0, 3],
			[3, 4]
		],
		"circular": []
	},
	"readme": "# @kainstar/svelte-i18next\n\n[![npm package][npm-img]][npm-url] [![Build Status][build-img]][build-url] [![Downloads][downloads-img]][downloads-url] [![Issues][issues-img]][issues-url] [![Commitizen Friendly][commitizen-img]][commitizen-url] [![Semantic Release][semantic-release-img]][semantic-release-url]\n\n`@kainstar/svelte-i18next` is a Svelte library for internationalization using [i18next](https://github.com/i18next/i18next). It referenced partial features provided by [react-i18next](https://github.com/i18next/react-i18next) and do some simplification.\n\n## Why not `svelte-i18next` or `svelte-i18n`?\n\n`svelte-i18n` is based on `intl-messageformat` rather than `i18next` which I am more familiar with, and it's a singleton architecture that is not easy to expand.\n\n`svelte-i18next` is a very simple wrapper for `i18next` and no any options to customize behaviors.\n\nAnd most important, both `svelte-i18next` and `svelte-i18n` are not provide powerful features like `Trans` in `react-i18next`, that's why I making this library.\n\n## Features\n\n- Context-based multi-instance by `setI18nContext`\n- Basic `t` function\n- Advanced `Trans` Component\n\n## Install\n\n```bash\nnpm install @kainstar/svelte-i18next\n```\n\n## Usage\n\ni18n.ts:\n\n```ts i18n.ts\nimport i18next from 'i18next';\n\ni18next.init({\n  debug: true,\n  lng: 'zh-CN',\n  resources: {\n    // ...\n  },\n});\n\nexport default i18next;\n```\n\nApp.svelte:\n\n```svelte\n<script lang=\"ts\">\nimport { setI18nContext } from '@kainstar/svelte-i18next';\nimport i18nInstance from './i18n';\n\nsetI18nContext(i18nInstance);\n</script>\n```\n\nChild.svelte:\n\n```svelte\n<script lang=\"ts\">\nimport { getTranslation, Trans } from '@kainstar/svelte-i18next';\n\nconst { t } = getTranslation();\n</script>\n\n<!-- use $t function or Trans component to translate -->\n<p>{$t('i18nKey')}</p>\n<Trans i18nKey=\"i18nKey\">\n```\n\n### Advanced `Trans` Component\n\n`Trans` component can enables you nest any svelte components and native html tag to be translated as one cohesive string.\n\nLet's say you have a translation like this:\n\n> `@kainstar/svelte-i18next` is a **powerful** internationalization library. [Here to see](https://github.com/kainstar/svelte-i18next)\n\nBefore:\n\n```svelte\n<p>\n  <code>@kainstar/svelte-i18next</code> is a <strong>powerful</strong> internationalization library. <Link href=\"https://github.com/kainstar/svelte-i18next\">Here to see</Link>\n</p>\n```\n\nAfter:\n\n```yaml\nmessage: <code>@kainstar/svelte-i18next</code>is a <strong>powerful</strong> internationalization library. <Link href=\"https://github.com/kainstar/svelte-i18next\">Here to see</Link>\n```\n\n```svelte\n<p>\n  <Trans\n    i18nKey=\"message\"\n    components={{\n      Link\n    }}\n  />\n</p>\n```\n\n#### What different with {@html} ?\n\n`{@html}` is a svelte directive that can render raw html string, but it can't render you custom components.\n\n#### Can I attach props to components?\n\nYes, you can pass a [comp, props] tuple as component value like:\n\n```svelte\n<Trans i18nKey=\"message\" components={{\n  Link: [Link, { target: '_blank' }]\n}}>\n```\n\n### Is `Trans` treat component children as defaultValue?\n\nNo, svelte can't check or modify slot content, so `Trans` will ignore children and only use `i18nKey`.\n\n## I18next extends options\n\n`@kainstar/svelte-i18next` extends some options for `i18next.init`:\n\n```ts\ninterface SvelteI18nextOptions {\n  /**\n   * Set which events trigger a re-render, can be set to false or string of events\n   * @default 'languageChanged'\n   */\n  bindI18n?: string | false;\n  /**\n   * Set which events on store trigger a re-render, can be set to false or string of events\n   * @default false\n   */\n  bindI18nStore?: string | false;\n  /**\n   * Which tag will be treated as native HTML tag Trans component.\n   * If a tag is not custom component and native HTML tag, it will be render as string.\n   * `true` will keep all tags\n   * @default true\n   */\n  transKeepTags?: readonly string[] | true;\n}\n\ni18next.init({\n  svelte: {\n    // ...custom options here\n  },\n});\n```\n\n[build-img]: https://github.com/kainstar/svelte-i18next/actions/workflows/release.yml/badge.svg\n[build-url]: https://github.com/kainstar/svelte-i18next/actions/workflows/release.yml\n[downloads-img]: https://img.shields.io/npm/dt/@kainstar/svelte-i18next\n[downloads-url]: https://www.npmtrends.com/@kainstar/svelte-i18next\n[npm-img]: https://img.shields.io/npm/v/@kainstar/svelte-i18next\n[npm-url]: https://www.npmjs.com/package/@kainstar/svelte-i18next\n[issues-img]: https://img.shields.io/github/issues/kainstar/svelte-i18next\n[issues-url]: https://github.com/kainstar/svelte-i18next/issues\n[semantic-release-img]: https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg\n[semantic-release-url]: https://github.com/semantic-release/semantic-release\n[commitizen-img]: https://img.shields.io/badge/commitizen-friendly-brightgreen.svg\n[commitizen-url]: http://commitizen.github.io/cz-cli/\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3722, 43],
		[3729, 75],
		[3736, 8],
		[3743, 3],
		[3750, 8],
		[3757, 5],
		[3764, 1],
		[3778, 2],
		[3806, 2],
		[3827, 1],
		[3834, 19],
		[3855, 1],
		[3862, 4],
		[3876, 1],
		[3883, 3],
		[3897, 2],
		[3904, 1],
		[3932, 5],
		[3939, 1],
		[3946, 1],
		[3953, 3],
		[3974, 2],
		[3981, 2],
		[4016, 5],
		[4023, 2],
		[4030, 2],
		[4037, 4],
		[4044, 8],
		[4051, 2],
		[4058, 1],
		[4065, 1],
		[4072, 1],
		[4086, 1],
		[4093, 2],
		[4100, 6],
		[4107, 4],
		[4114, 4],
		[4121, 8],
		[4128, 2]
	],
	"esm": true,
	"cjs": false
}
