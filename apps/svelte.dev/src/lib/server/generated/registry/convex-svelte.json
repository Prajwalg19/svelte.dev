{
	"name": "convex-svelte",
	"description": "Integrates Convex backend with Svelte apps.",
	"repo_url": "https://github.com/get-convex/convex-svelte",
	"authors": [
		"cowling",
		"jordanhunt",
		"gautamg795",
		"emmaling27",
		"nipunn",
		"sujayakar",
		"ikhare",
		"ldanilek",
		"ballingt",
		"sshader",
		"aritrakh",
		"ianatconvex",
		"erquhart",
		"jamwt"
	],
	"homepage": "https://convex.dev",
	"downloads": 35,
	"updated": "2025-01-20T21:45:20.095Z",
	"tags": ["integration"],
	"github_stars": 31,
	"typescript": true,
	"version": "0.0.11",
	"svelte_range": "^5.0.0",
	"kit_range": "^2.0.0",
	"last_rune_check_version": "0.0.11",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "convex-svelte",
				"version": "0.0.11",
				"size": 24699
			}
		],
		"dependencies": [],
		"circular": []
	},
	"legacy_svelte": false,
	"readme": "[Convex](https://www.convex.dev/) is the typesafe backend-as-a-service with realtime updates, server functions, crons and scheduled jobs, file storage, vector search, and more.\n\n[Quickstart](https://docs.convex.dev/quickstart/svelte)\n\n# convex-svelte\n\nReceive live updates to Convex query subscriptions and call mutations and actions from Svelte with `convex-svelte`.\n\nTo install:\n\n```\nnpm install convex convex-svelte\n```\n\nRun `npx convex init` to get started with Convex.\n\nSee the [example app live](https://convex-svelte.vercel.app/).\n\n`convex-svelte` provides a `setupConvex()` function which takes a Convex deployment URL,\na `useConvexClient()` which returns a [ConvexClient](https://docs.convex.dev/api/classes/browser.ConvexClient)\nused to set authentication credentials and run Convex mutations and actions,\nand a `useQuery()` function for subscribing to Convex queries.\n\n### Example\n\nCall `setupConvex()` in a component above the components that need to Convex queries\nand use `useQuery()` components where you need to listen to the query.\n\nSee [+layout.svelte](src/routes/+layout.svelte) for `setupConvex()`\n\n```svelte\n<script>\n\timport { PUBLIC_CONVEX_URL } from '$env/static/public';\n\n\tsetupConvex(PUBLIC_CONVEX_URL);\n</script>\n```\n\nand [Chat.svelte](src/routes/Chat.svelte) for how to use `useQuery()`\n\n```svelte\n<script>\n\tconst query = useQuery(api.messages.list, () => ({ muteWords }), {\n\t\tuseResultFromPreviousArguments: true\n\t});\n</script>\n\n...\n{#if query.isLoading}\n\tLoading...\n{:else if query.error != null}\n\tfailed to load: {query.error.toString()}\n{:else}\n\t<ul>\n\t\t{#each query.data as message}\n\t\t\t<li>\n\t\t\t\t<span>{message.author}</span>\n\t\t\t\t<span>{message.body}</span>\n\t\t\t</li>\n\t\t{/each}\n\t</ul>\n{/if}\n```\n\nRunning a mutation looks like\n\n```svelte\n<script>\n\tconst client = useConvexClient();\n\n\tlet toSend = $state('');\n\tlet author = $state('me');\n\n\tfunction onSubmit(e: SubmitEvent) {\n\t\tconst data = Object.fromEntries(new FormData(e.target as HTMLFormElement).entries());\n\t\tclient.mutation(api.messages.send, {\n\t\t\tauthor: data.author as string,\n\t\t\tbody: data.body as string\n\t\t});\n\t}\n</script>\n\n<form on:submit|preventDefault={onSubmit}>\n\t<input type=\"text\" id=\"author\" name=\"author\" />\n\t<input type=\"text\" id=\"body\" name=\"body\" bind:value={toSend} />\n\t<button type=\"submit\" disabled={!toSend}>Send</button>\n</form>\n```\n\n### Deploying a Svelte App\n\nIn production build pipelines use the build command\n\n```bash\nnpx convex deploy --cmd-url-env-var-name PUBLIC_CONVEX_URL --cmd 'npm run build'\n```\n\nto build your Svelte app and deploy Convex functions.\n\n# Trying out this library\n\nClone this repo and install dependencies with `npm install` then start a development server:\n\n```bash\nnpm run dev\n```\n\nThis will run you through creating a Convex account and a deployment.\n\nEverything inside `src/lib` is part of the library, everything inside `src/routes` is an example app.\n\n# Developing this library\n\nTo build the library:\n\n```bash\nnpm run package\n```\n\nTo create a production version of the showcase app:\n\n```bash\nnpm run build\n```\n\nYou can preview the production build with `npm run preview`.\n\n> To deploy your app, you may need to install an [adapter](https://kit.svelte.dev/docs/adapters) for your target environment.\n\n## Publishing\n\nGo into the `package.json` and give your package the desired name through the `\"name\"` option. Also consider adding a `\"license\"` field and point it to a `LICENSE` file which you can create from a template (one popular option is the [MIT license](https://opensource.org/license/mit/)).\n\nTo publish your library to [npm](https://www.npmjs.com):\n\n```bash\nnpm publish\n```\n",
	"downloads_history": [
		[3750, 195],
		[3757, 141],
		[3764, 117],
		[3771, 31],
		[3778, 19],
		[3785, 18],
		[3792, 35],
		[3799, 55],
		[3806, 58],
		[3813, 74],
		[3820, 9],
		[3827, 23],
		[3834, 56],
		[3841, 64],
		[3848, 17],
		[3855, 10],
		[3862, 22],
		[3869, 24],
		[3876, 37],
		[3883, 35],
		[3890, 58],
		[3897, 46],
		[3904, 38],
		[3911, 98],
		[3918, 52],
		[3925, 90],
		[3932, 60],
		[3939, 40],
		[3946, 53],
		[3953, 82],
		[3960, 17],
		[3967, 36],
		[3974, 64],
		[3981, 74],
		[3988, 22],
		[3995, 24],
		[4002, 19],
		[4009, 21],
		[4016, 68],
		[4023, 73],
		[4030, 66],
		[4037, 141],
		[4044, 50],
		[4051, 41],
		[4058, 49],
		[4065, 53],
		[4072, 60],
		[4079, 40],
		[4086, 55],
		[4093, 109],
		[4100, 79],
		[4107, 39],
		[4114, 35],
		[4121, 45],
		[4128, 50]
	],
	"esm": true,
	"cjs": false
}
