{
	"name": "svelte-wagmi-stores",
	"description": "Provide readable stores for Wagmi in Svelte/SvelteKit apps.",
	"repo_url": "https://github.com/hardyjosh/svelte-wagmi-stores",
	"authors": ["highonhopium"],
	"homepage": "https://github.com/hardyjosh/svelte-wagmi-stores#readme",
	"downloads": 8,
	"updated": "2023-08-13T20:05:04.710Z",
	"tags": ["integration"],
	"github_stars": 1,
	"typescript": true,
	"version": "0.0.9",
	"svelte_range": "^4.0.0",
	"kit_range": "^1.20.4",
	"last_rune_check_version": "0.0.9",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-wagmi-stores",
				"version": "0.0.9",
				"size": 14442
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# svelte-wagmi-stores\n\nA simple wrapper around the @wagmi/core library, providing readable stores for use in Svelte/SvelteKit applications.\n\n**This library is currently under active development and is subject to frequent breaking changes. It is recommended to pin dependencies to a specific version.**\n\n## Installation\n\nAdd the `svelte-wagmi-stores` package and the peer dependencies.\n\n```bash\nnpm i svelte-wagmi-stores @wagmi/core viem\n```\n\n## Usage\n\nThis library provides the following stores as wrappers around the corresponding `watch` actions from the [@wagmi/core api](https://wagmi.sh/core/actions/watchAccount).\n\n```javascript\nimport {\n    account,\n    blockNumber,\n    network,\n    publicClient,\n    walletClient\n}\n```\n\nHowever, before you can use the stores, you must use `createConfig` from this package instead of directly from wagmi (see below). This is because wagmi provides no hook for when a config has been created.\n\n### Example Setup\n\n```html\n<script>\nimport { browser } from '$app/environment';\nimport { configureChains } from '@wagmi/core'\nimport { mainnet, polygon } from '@wagmi/core/chains'\nimport { createConfig, account } from 'svelte-wagmi-stores';\n// this example also uses Web3Modal - you'll need to install this yourself\nimport { Web3Modal } from '@web3modal/html'\nimport { EthereumClient, w3mConnectors, w3mProvider } from '@web3modal/ethereum'\n\n\n// all this boilerplate is from the web3modal docs\nconst chains = [mainnet, polygon]\nconst projectId = import.meta.env.VITE_PROJECT_ID\n\nconst { publicClient } = configureChains(chains, [w3mProvider({ projectId })])\n\n// except here we're using createConfig form this package instead of wagmi\nconst wagmiConfig = createConfig({\n  autoConnect: true,\n  connectors: w3mConnectors({ projectId, chains }),\n  publicClient\n})\n\nconst ethereumClient = new EthereumClient(wagmiConfig, chains)\n\nlet web3modal: Web3Modal\n\n// necessary if you're using SSR, because there's no window for the modal to attach to\n$: if (browser) {\n  web3modal = new Web3Modal({ projectId }, ethereumClient)\n  web3modal.setDefaultChain(polygon)\n}\n</script>\n\n{#if web3modal}\n    <button on:click={() => web3modal.openModal()}>\n    {#if $account?.isConnected}\n        Disconnect\n    {:else}\n        Connect\n    {/if}\n    </button>\n{/if}\n```\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 14],
		[3603, 17],
		[3610, 10],
		[3631, 1],
		[3645, 3],
		[3652, 6],
		[3659, 1],
		[3666, 13],
		[3673, 13],
		[3680, 5],
		[3687, 4],
		[3694, 70],
		[3701, 226],
		[3708, 206],
		[3715, 90],
		[3722, 320],
		[3729, 300],
		[3736, 83],
		[3743, 107],
		[3750, 109],
		[3757, 39],
		[3764, 38],
		[3771, 8],
		[3778, 21],
		[3785, 2],
		[3792, 1],
		[3806, 2],
		[3813, 7],
		[3820, 1],
		[3827, 2],
		[3834, 1],
		[3841, 45],
		[3848, 11],
		[3855, 1],
		[3862, 1],
		[3876, 5],
		[3883, 2],
		[3890, 10],
		[3897, 1],
		[3911, 1],
		[3918, 1],
		[3925, 2],
		[3932, 11],
		[3939, 1],
		[3946, 2],
		[3953, 1],
		[3960, 3],
		[3981, 2],
		[3988, 2],
		[3995, 1],
		[4002, 3],
		[4009, 8],
		[4016, 9],
		[4023, 2],
		[4030, 2],
		[4037, 20],
		[4044, 10],
		[4051, 2],
		[4058, 1],
		[4065, 2],
		[4072, 1],
		[4086, 1],
		[4100, 27],
		[4107, 2],
		[4114, 8],
		[4121, 12],
		[4128, 4],
		[4135, 5]
	],
	"esm": true,
	"cjs": false
}
