{
	"name": "svelte-blockly",
	"description": "Integrate Blockly visual programming in Svelte apps.",
	"repo_url": "https://github.com/SillyFreak/svelte-blockly",
	"authors": ["sillyfreak"],
	"homepage": "https://github.com/SillyFreak/svelte-blockly#readme",
	"downloads": 5,
	"updated": "2021-11-09T14:57:07.440Z",
	"tags": ["integration"],
	"github_stars": 8,
	"typescript": true,
	"version": "0.1.0",
	"svelte_range": "^3.42.6",
	"kit_range": "next",
	"last_rune_check_version": "0.1.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-blockly",
				"version": "0.1.0",
				"size": 9116
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# svelte-blockly\n\n[Blockly](https://developers.google.com/blockly/) Wrapper for Svelte. The `Blockly` component does roughly the work of [`Blockly.inject()`](https://developers.google.com/blockly/reference/js/Blockly#.inject), plus some handling of localization and change tracking.\n\nThis was extracted from a personal project, so its initial scope was rather limited. Expect rough edges, but bug reports and contributions are welcome!\n\n[**Live Demo**](https://sillyfreak.github.io/svelte-blockly/)\n\n**Features**\n\n- configuration like [`Blockly.inject()`](https://developers.google.com/blockly/reference/js/Blockly#.inject)\n- automatic workspace refresh on configuration & locale changes\n- reactive transform prop - change or monitor the workspace transform\n- change event\n- automatic resizing of the layout within its containing HTML element\n\n## Installation & development\n\nThis library can be installed from NPM:\n\n```sh\n# from NPM\nnpm i svelte-blockly\n```\n\nFor development, clone the repo and add the dependency as shown:\n\n```sh\n# clone this repo and package the library\ngit clone https://github.com/SillyFreak/svelte-blockly\ncd svelte-blockly\nnpm i\nnpm run package\n\n# add it & blockly to your own project\ncd ../your-own-project\nnpm i blockly ../svelte-blockly/package\n```\n\n## simple example\n\nIn this example, `svelte:component` is used to select a specific component for each tab, and the `componentState` object is passed as props to that component:\n\n```svelte\n<script lang=\"ts\">\n  import Blockly from 'blockly/core';\n  \n  import En from 'blockly/msg/en';\n  import 'blockly/blocks';\n  import 'blockly/javascript';\n\n  import BlocklyComponent, { Locale, Transform } from 'svelte-blockly';\n\n  const en: Locale = {\n    rtl: false,\n    msg: {\n      ...En,\n      ...\n    },\n  };\n\n  const config = {\n    toolbox: ...,\n    ...\n  };\n\n  let workspace: Blockly.WorkspaceSvg;\n  let code = '';\n\n  function onChange() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const lang = (Blockly as any)['JavaScript'];\n    try {\n      code = lang.workspaceToCode(workspace);\n    } catch (_err) {\n      // Happens e.g. when deleting a function that is used somewhere.\n      // Blockly will quickly recover from this, so it's not a big deal.\n      // Just make sure the app doesn't crash until then.\n    }\n  }\n</script>\n\n<div class=\"blockly-container\">\n  <BlocklyComponent\n    {config}\n    locale={en}\n    bind:workspace\n    on:change={onChange}\n  />\n</div>\n<pre>{code}</pre>\n\n<style>\n  .blockly-container {\n    height: 600px;\n\n    border: 1px solid black;\n  }\n\n  pre {\n    overflow-x: auto;\n  }\n</style>\n```\n\nYou can also run this repo as an app ([live demo](https://sillyfreak.github.io/svelte-blockly/)); the example code is in [routes/index.svelte](src/routes/index.svelte) and demonstates the features of the library.\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3596, 29],
		[3603, 13],
		[3610, 5],
		[3617, 3],
		[3624, 3],
		[3631, 3],
		[3638, 7],
		[3645, 5],
		[3652, 6],
		[3659, 4],
		[3666, 50],
		[3673, 10],
		[3680, 5],
		[3687, 10],
		[3694, 3],
		[3701, 14],
		[3708, 2],
		[3715, 2],
		[3722, 3],
		[3729, 5],
		[3736, 2],
		[3743, 2],
		[3750, 1],
		[3757, 7],
		[3764, 10],
		[3771, 9],
		[3778, 5],
		[3785, 8],
		[3792, 5],
		[3799, 3],
		[3806, 3],
		[3813, 6],
		[3820, 9],
		[3827, 2],
		[3834, 3],
		[3841, 2],
		[3848, 2],
		[3855, 8],
		[3862, 3],
		[3869, 1],
		[3876, 2],
		[3883, 7],
		[3890, 3],
		[3897, 3],
		[3904, 5],
		[3911, 5],
		[3918, 6],
		[3925, 9],
		[3932, 9],
		[3939, 7],
		[3946, 3],
		[3953, 34],
		[3960, 18],
		[3967, 2],
		[3974, 4],
		[3981, 4],
		[3988, 4],
		[3995, 4],
		[4002, 1],
		[4009, 2],
		[4016, 1],
		[4023, 3],
		[4030, 1],
		[4037, 11],
		[4044, 19],
		[4051, 4],
		[4058, 7],
		[4065, 17],
		[4079, 1],
		[4086, 5],
		[4093, 6],
		[4100, 6],
		[4107, 6],
		[4114, 5],
		[4121, 7],
		[4128, 6]
	]
}
