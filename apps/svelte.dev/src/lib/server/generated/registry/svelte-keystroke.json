{
	"name": "svelte-keystroke",
	"description": "Observe keystrokes, focused on simplicity.",
	"repo_url": "https://github.com/nvlgzr/svelte-keystroke",
	"authors": ["nvlgzr"],
	"homepage": "https://github.com/nvlgzr/svelte-keystroke#readme",
	"downloads": 15,
	"updated": "2021-08-05T23:48:52.603Z",
	"tags": ["miscellaneous"],
	"github_stars": 2,
	"typescript": false,
	"version": "1.0.3",
	"svelte_range": "^3.41.0",
	"last_rune_check_version": "1.0.3",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-keystroke",
				"version": "1.0.3",
				"size": 173241
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "![Issues Badge](https://img.shields.io/github/issues/nvlgzr/svelte-keystroke)\n\n<img src=\"lonekey.jpg\" alt=\"photo of antique keyboard with all the keys removed except for a key whose combination of : and > combine into a smiley face\" width=\"25%\" height=\"25%\" style=\"float:right;\" />\n\n# svelte-keystroke\n\nA key-stroke observer for Svelte, focussed on simplicity\n\n```html\n<script>\n  import Keystroke from \"svelte-keystroke\";\n</script>\n\n<Keystroke on:stroke={ ({ detail }) => console.log(detail) } />\n```\n\nWant to try it out real quick? Here's a [basic demo](https://svelte.dev/repl/16a2fa4f9ca14dcb98b0894f50598caf?version=3.41.0), and here's a busier, [comprehensive demo](https://svelte.dev/repl/83918eedc5df44a8814bb114c5716b06?version=3.41.0).\n\n## Summary\n\n_Keystroke_ offers four ways to respond to keyboard input, all through Svelte's `on:<foo>` events. The first three are pretty straightfoward.\n\n- ① `on:stroke` Reports single, printable characters\n- ② `on:combo` Only reports combinations involving modifier keys (Shift, Control, Alt, and Meta)\n- ③ `on:heldKeys` For when you need raw details about which keys are currently depressed\n\nThe third option — let's call it \"Binding Mode\" lets you bind a function to whatever character you like.\n\n- ③ `on:<key>` Runs the associated function every time the given key is pressed, regardless of its involvement as part of a stroke or combo\n\nFor examples, see `on:Enter`, `on:Escape`, `on:q`, & `on:Q` in the [comprehensive demo](https://svelte.dev/repl/83918eedc5df44a8814bb114c5716b06?version=3.41.0).\n\n## Where's Meta / Command❓\n\n> svelte-keystroke pauses whenever the Meta key (⌘ on macOS) is depressed.\n\nThis is intentional. Why?\n\nWell, it [turns out](https://stackoverflow.com/a/27512489/230615) that the <a title=\"macOS Command\">⌘</a> key — reported as \"Meta\" by keydown and keyup events, exibits some [funky behaviors](https://codepen.io/alexduloz/pen/nteqG), that make it rather torturous to work with. In this first release (and perhaps indefinitely), `svelte-keystroke` \"handles\" this weirdness by simply pausing operations until the ⌘/Meta key is lifted again.\n\n## How is svelte-keystroke different?\n\n### Built for svelte\n\nAs compared with [most js keystroke-handling libraries](#other-key-handling-libraries), `svelte-keystroke`'s most obvious feature is that it's a Svelte\\* component.\n\n> \\*If you're not using Svelte, stop reading now and [go play for a few minutes!](https://svelte.dev/tutorial/basics).\n\n### Comparison with `svelte-keydown`\n\n`svelte-keystroke` owes its basic design to [`svelte-keydown`](https://github.com/metonym/svelte-keydown), and there's significant overlap between the two.\n\n**Same**\n\n- Arbitrary single-key binding via `on:<key>`…e.g., `on:Enter`, `on:Tab`\n\n**Similar**\n\nThese events behave in similar ways, with the differences best observed by [experimenting in the REPL](https://svelte.dev/repl/a546827278fc4209a27262cc99b51315?version=3.42.1):\n\n- key*down*: `on:key` ≈ key*stroke*: `on:stroke`\n- key*down*: `on:combo` ≈ key*stroke*; `on:combo`\n\n**Unique to `svelte-keystroke`**\n\n- key*stroke*; `on:heldKeys`\n\n## Brief History\n\n> Why svelte-keystroke?<br><br> > _TL;DR — It does exactly what I need it to, no more, no less._\n\nI was working on a Svelte app (link TBD) — a typing trainer, with the need to directly manage basic ASCII input (letters & basic punctuation), as well as keyboard combinations like _Control+R_. `svelte-keydown` seemed perfect at first, but there were subtle issues that made it unsuitable for my specific needs. (Don't ask what issues…I've since forgotten.) But it was close!\n\nLuckily, `svelte-keydown` is simple enough that it was fairly trivial to create my own component and make it do exactly what I want. Now, as I prepare to for the first release of that typing app, I'm pausing to separate out this generic component. It works for me, but ymmv. Enjoy!\n\n## Other Key Handling Libraries\n\n### Svelte\n\n- [svelte-keydown](https://github.com/metonym/svelte-keydown)\n\n### JS\n\n- [tinykeys](https://github.com/jamiebuilds/tinykeys)\n- [hotkeys](https://github.com/jaywcjlove/hotkeys)\n- [keymaster](https://github.com/madrobby/keymaster)\n- [mousetrap](https://github.com/ccampbell/mousetrap)\n- [clack](https://github.com/ulisesantana/clack)\n- [keymage](https://github.com/piranha/keymage)\n- [Keypress](https://github.com/dmauro/Keypress/)\n- [KeyboardJS](https://github.com/RobertWHurst/KeyboardJS)\n\n---\n\n_Title image — \"Alone on the keyboard\" — slightly modified from [the original](https://www.flickr.com/photos/fdecomite/361512861/in/photostream/)_\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3596, 11],
		[3603, 4],
		[3610, 8],
		[3631, 2],
		[3638, 1],
		[3652, 1],
		[3659, 5],
		[3666, 7],
		[3673, 5],
		[3680, 10],
		[3687, 1],
		[3694, 5],
		[3708, 6],
		[3715, 5],
		[3729, 5],
		[3736, 9],
		[3743, 5],
		[3750, 2],
		[3757, 7],
		[3764, 5],
		[3771, 9],
		[3778, 2],
		[3785, 5],
		[3792, 6],
		[3799, 14],
		[3806, 12],
		[3820, 1],
		[3827, 4],
		[3834, 1],
		[3841, 9],
		[3848, 2],
		[3855, 24],
		[3862, 11],
		[3869, 5],
		[3876, 3],
		[3883, 5],
		[3890, 7],
		[3897, 5],
		[3904, 4],
		[3911, 4],
		[3918, 11],
		[3925, 9],
		[3932, 3],
		[3939, 8],
		[3946, 3],
		[3953, 5],
		[3960, 12],
		[3967, 10],
		[3974, 8],
		[3981, 8],
		[3988, 1],
		[3995, 9],
		[4002, 5],
		[4009, 5],
		[4016, 4],
		[4023, 9],
		[4030, 9],
		[4037, 14],
		[4044, 13],
		[4051, 6],
		[4058, 5],
		[4065, 10],
		[4072, 12],
		[4079, 5],
		[4086, 6],
		[4093, 9],
		[4100, 6],
		[4107, 10],
		[4114, 15],
		[4121, 14],
		[4128, 6]
	]
}
