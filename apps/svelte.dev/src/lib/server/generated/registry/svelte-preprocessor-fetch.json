{
	"name": "svelte-preprocessor-fetch",
	"description": "Fetches data before Svelte component compilation.",
	"repo_url": "https://github.com/kevmodrome/svelte-preprocessor-fetch",
	"authors": ["kevmodrome"],
	"homepage": "https://github.com/kevmodrome/svelte-preprocessor-fetch#readme",
	"downloads": 6,
	"updated": "2020-03-10T15:01:23.759Z",
	"tags": ["tooling"],
	"github_stars": 51,
	"typescript": false,
	"version": "1.0.7",
	"last_rune_check_version": "1.0.7",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-preprocessor-fetch",
				"version": "1.0.7",
				"size": 886651
			},
			{
				"name": "acorn",
				"version": "7.4.1",
				"size": 1209760
			},
			{
				"name": "acorn-walk",
				"version": "7.2.0",
				"size": 100036
			},
			{
				"name": "node-fetch",
				"version": "2.7.0",
				"size": 162253
			},
			{
				"name": "whatwg-url",
				"version": "5.0.0"
			},
			{
				"name": "tr46",
				"version": "0.0.3"
			},
			{
				"name": "webidl-conversions",
				"version": "3.0.1"
			}
		],
		"dependencies": [
			[0, 1],
			[0, 2],
			[0, 3],
			[3, 4],
			[4, 5],
			[4, 6]
		],
		"circular": []
	},
	"readme": "# svelte-preprocessor-fetch\n\n> A preprocessor for Svelte that can be used to fetch data before components are compiled.\n\n## Demos\n\n![ScreenShot](screenshot.gif)\n\n## Installation\n\n```bash\nyarn add -D svelte-preprocessor-fetch\n```\n\n## Usage\n\n### With `rollup-plugin-svelte`\n\n```js\n// rollup.config.js\nimport svelte from 'rollup-plugin-svelte';\nimport preprocessFetch from 'svelte-preprocessor-fetch'\n\nexport default {\n  ...,\n  plugins: [\n    svelte({\n      preprocess: preprocessFetch()\n    })\n  ]\n}\n```\n\n### In components\n\nCreate a function called `getStaticProps()` in your script tag and do your fetches here. The content of this function must be fully self-container. You can not use any variables from outside or import any packages. It has support for fetch via `node-fetch`.\n\nThe data is available using as `data` in your component.\n\n```html\n<script>\n  async function getStaticProps() {\n    const query = `{\n\t\t\tcontinents {\n\t\t\t\tname\n\t\t\t}\n\t\t}`;\n\n    const res = await fetch(\"https://countries.trevorblades.com/\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({ query })\n    });\n    const { data } = await res.json();\n\n    return data;\n  }\n</script>\n\n<main>\n  <h2>Continents:</h2>\n  <ul>\n    {#each data.continents as { name }}\n    <li>\n      <h3>{name}</h3>\n    </li>\n    {/each}\n  </ul>\n</main>\n```\n\n## Caveats\n\nThis preprocessor is probably extremely brittle, PRs are welcome to improve it further.\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 1],
		[3603, 8],
		[3610, 8],
		[3617, 9],
		[3624, 1],
		[3631, 1],
		[3638, 13],
		[3645, 14],
		[3652, 5],
		[3659, 5],
		[3666, 12],
		[3673, 11],
		[3680, 6],
		[3687, 3],
		[3694, 2],
		[3701, 3],
		[3708, 2],
		[3715, 1],
		[3722, 1],
		[3729, 9],
		[3736, 1],
		[3743, 1],
		[3750, 1],
		[3757, 16],
		[3764, 5],
		[3771, 5],
		[3778, 2],
		[3785, 2],
		[3792, 3],
		[3799, 2],
		[3806, 5],
		[3813, 1],
		[3820, 1],
		[3827, 1],
		[3834, 3],
		[3841, 1],
		[3848, 3],
		[3855, 5],
		[3862, 37],
		[3869, 1],
		[3876, 1],
		[3883, 9],
		[3890, 8],
		[3897, 1],
		[3904, 1],
		[3911, 2],
		[3918, 1],
		[3925, 1],
		[3932, 5],
		[3939, 2],
		[3946, 3],
		[3953, 2],
		[3960, 2],
		[3967, 4],
		[3974, 1],
		[3981, 2],
		[3988, 1],
		[3995, 2],
		[4002, 1],
		[4009, 2],
		[4016, 4],
		[4023, 5],
		[4030, 9],
		[4037, 12],
		[4044, 13],
		[4051, 3],
		[4058, 1],
		[4065, 2],
		[4072, 2],
		[4079, 1],
		[4086, 2],
		[4093, 12],
		[4100, 9],
		[4107, 4],
		[4114, 6],
		[4121, 9],
		[4128, 7]
	]
}
