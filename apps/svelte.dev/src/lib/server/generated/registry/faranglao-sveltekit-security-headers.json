{
	"name": "@faranglao/sveltekit-security-headers",
	"description": "Improve SvelteKit app security using HTTP response headers.",
	"repo_url": "https://github.com/kevinobee/sveltekit-security-headers",
	"authors": ["faranglao"],
	"homepage": "https://sveltekit-security-headers.vercel.app/",
	"downloads": 176,
	"updated": "2024-02-26T12:08:11.041Z",
	"tags": ["server"],
	"github_stars": 5,
	"typescript": true,
	"version": "0.2.2",
	"svelte_range": "^4.0.0",
	"kit_range": "^2.0.0",
	"last_rune_check_version": "0.2.2",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@faranglao/sveltekit-security-headers",
				"version": "0.2.2",
				"size": 19338
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# SvelteKit Security Headers\n\nEnhance visitor security in [SvelteKit](https://kit.svelte.dev) based web applications.\n\nAdd those missing HTTP response headers with `sveltekit-security-headers`.\n\n[![Node.js CI](https://github.com/kevinobee/sveltekit-security-headers/actions/workflows/node.js.yml/badge.svg)](https://github.com/kevinobee/sveltekit-security-headers/actions/workflows/node.js.yml)\n[![Lint](https://github.com/kevinobee/sveltekit-security-headers/actions/workflows/lint.yml/badge.svg)](https://github.com/kevinobee/sveltekit-security-headers/actions/workflows/lint.yml)\n[![Playwright Tests](https://github.com/kevinobee/sveltekit-security-headers/actions/workflows/playwright.yml/badge.svg)](https://github.com/kevinobee/sveltekit-security-headers/actions/workflows/playwright.yml)\n\n## Installation\n\n```shell\nnpm install @faranglao/sveltekit-security-headers\n```\n\n## Getting Started\n\nTo add HTTP response headers to your application install the package and export the `SvelteKitSecurityHeaders().handle` function.\n\nThe `SvelteKitSecurityHeaders().handle` function is a SvelteKit [Server Hook](https://kit.svelte.dev/docs/hooks#server-hooks) that is exported in `src/hooks.server.ts`.\n\n```ts\n// samples/securityheaders/hooks.server.ts\n// copy to src/hooks.server.ts\nimport { SvelteKitSecurityHeaders } from '@faranglao/sveltekit-security-headers';\n\nexport const handle = SvelteKitSecurityHeaders().handle;\n```\n\nThen run the web application using `npm run dev`.\n\nThe `handle` function will add the following headers to your sites HTTP traffic.\n\n```http\n# Headers added to HTTP Response\nX-Frame-Options: DENY\nX-Content-Type-Options: nosniff\nReferrer-Policy: strict-origin-when-cross-origin\nPermissions-Policy: geolocation=(), camera=(), microphone=()\n```\n\n## Security Headers\n\nHaving already delivered over 250 million scans the [Security Headers](https://securityheaders.com/) site is a useful tool for analyzing HTTP headers.\n\nThe scan returns a score from an A+ grade down to an F grade. You can find more information on scoring on Scott Helme's [Security Headers](https://scotthelme.co.uk/tag/security-headers/) blog.\n\nWith minimal configuration `SvelteKitSecurityHeaders().handle` will add those missing HTTP headers required to achieve an **A&nbsp;grade** score on [securityheaders.com](https://securityheaders.com/?q=https%3A%2F%2Fsveltekit-security-headers.vercel.app%2F&followRedirects=on)\n\n## Customizing Response Headers\n\nThe `SvelteKitSecurityHeaders().handle` function makes it possible to fully customize the HTTP response headers returned from your application.\n\nThe code below shows how to apply both pre-configured headers and add customer values to your HTTP responses.\n\n```ts\n// samples/custom/hooks.server.ts\n// copy to src/hooks.server.ts\nimport { SvelteKitSecurityHeaders, RuleSet } from '@faranglao/sveltekit-security-headers';\n\nexport const handle = SvelteKitSecurityHeaders({\n  headers: [\n    // remove any duplicates with a Set\n    ...new Set([\n      ...RuleSet.SecurityHeaders,\n      ...RuleSet.SvelteKitSpecific,\n      ...RuleSet.OwaspRecommendedMinimal,\n\n      // Access-Control-Allow-Origin header to allow requests\n      // from your domain .. override value\n      {\n        name: 'Access-Control-Allow-Origin',\n        value: 'https://sveltekit-security-headers.vercel.app'\n      }\n\n      // .. add custom headers\n    ])\n  ],\n  verbose: true\n}).handle;\n```\n\n## Multiple Server Hooks\n\nThe following code sample shows how to use [the sequence helper function](https://kit.svelte.dev/docs/modules#sveltejs-kit-hooks) to wrap existing server hook code and invoke the `SvelteKitSecurityHeaders().handle` function.\n\n```ts\n// samples/sequence/hooks.server.ts\n// copy to src/hooks.server.ts\nimport type { Handle } from '@sveltejs/kit';\nimport { sequence } from '@sveltejs/kit/hooks';\nimport { SvelteKitSecurityHeaders } from '@faranglao/sveltekit-security-headers';\n\nexport const handle: Handle = sequence(\n  /* existing Hook code , */\n  SvelteKitSecurityHeaders().handle\n);\n```\n\n## Source Code\n\nSource code for the <code>sveltekit-security-headers</code> package is maintained on [GitHub](https://github.com/kevinobee/sveltekit-security-headers).\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3729, 2],
		[3736, 2],
		[3743, 2],
		[3757, 2],
		[3764, 34],
		[3778, 8],
		[3792, 1],
		[3799, 2],
		[3806, 1],
		[3813, 1],
		[3827, 1],
		[3834, 4],
		[3841, 11],
		[3848, 2],
		[3855, 11],
		[3862, 2],
		[3869, 2],
		[3883, 1],
		[3890, 3],
		[3904, 2],
		[3911, 5],
		[3918, 3],
		[3925, 3],
		[3932, 2],
		[3939, 5],
		[3946, 2],
		[3953, 4],
		[3960, 12],
		[3967, 3],
		[3974, 5],
		[3981, 6],
		[3988, 7],
		[3995, 3],
		[4002, 4],
		[4016, 11],
		[4023, 111],
		[4030, 219],
		[4037, 214],
		[4044, 181],
		[4051, 106],
		[4058, 160],
		[4065, 200],
		[4072, 123],
		[4079, 138],
		[4086, 135],
		[4093, 116],
		[4100, 301],
		[4107, 95],
		[4114, 176],
		[4121, 113],
		[4128, 154]
	],
	"esm": true,
	"cjs": false
}
