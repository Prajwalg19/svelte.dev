{
	"name": "sveltedoc-parser",
	"description": "Generate JSON documentation for Svelte components.",
	"repo_url": "https://github.com/alexprey/sveltedoc-parser",
	"authors": ["ardenivanov", "alexprey"],
	"homepage": "https://github.com/alexprey/sveltedoc-parser",
	"downloads": 113608,
	"updated": "2021-12-15T10:08:28.326Z",
	"tags": ["tooling"],
	"github_stars": 92,
	"typescript": true,
	"version": "4.2.1",
	"last_rune_check_version": "4.2.1",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "sveltedoc-parser",
				"version": "4.2.1",
				"size": 162126
			},
			{
				"name": "espree",
				"version": "9.2.0",
				"size": 83177
			},
			{
				"name": "acorn",
				"version": "8.14.1",
				"size": 547473
			},
			{
				"name": "acorn-jsx",
				"version": "5.3.2",
				"size": 24385
			},
			{
				"name": "eslint-visitor-keys",
				"version": "3.4.3",
				"size": 32278
			},
			{
				"name": "eslint",
				"version": "8.4.1",
				"size": 2677742
			},
			{
				"name": "ajv",
				"version": "6.12.6",
				"size": 929154
			},
			{
				"name": "uri-js",
				"version": "4.4.1",
				"size": 469879
			},
			{
				"name": "punycode",
				"version": "2.3.1",
				"size": 33514
			},
			{
				"name": "fast-deep-equal",
				"version": "3.1.3",
				"size": 12966
			},
			{
				"name": "json-schema-traverse",
				"version": "0.4.1",
				"size": 19564
			},
			{
				"name": "fast-json-stable-stringify",
				"version": "2.1.0",
				"size": 16959
			},
			{
				"name": "levn",
				"version": "0.4.1",
				"size": 24947
			},
			{
				"name": "prelude-ls",
				"version": "1.2.1",
				"size": 36741
			},
			{
				"name": "type-check",
				"version": "0.4.0",
				"size": 21167
			},
			{
				"name": "chalk",
				"version": "4.1.2",
				"size": 35047
			},
			{
				"name": "ansi-styles",
				"version": "4.3.0",
				"size": 16978
			},
			{
				"name": "color-convert",
				"version": "2.0.1",
				"size": 27189
			},
			{
				"name": "color-name",
				"version": "1.1.4",
				"size": 6693
			},
			{
				"name": "supports-color",
				"version": "7.2.0",
				"size": 7035
			},
			{
				"name": "has-flag",
				"version": "4.0.0",
				"size": 4419
			},
			{
				"name": "debug",
				"version": "4.4.0",
				"size": 42798
			},
			{
				"name": "ms",
				"version": "2.1.3",
				"size": 6721
			},
			{
				"name": "espree",
				"version": "9.6.1",
				"size": 73642
			},
			{
				"name": "ignore",
				"version": "4.0.6",
				"size": 37759
			},
			{
				"name": "semver",
				"version": "7.7.1",
				"size": 96674
			},
			{
				"name": "esquery",
				"version": "1.6.0",
				"size": 1037210
			},
			{
				"name": "estraverse",
				"version": "5.3.0",
				"size": 37094
			},
			{
				"name": "esutils",
				"version": "2.0.3",
				"size": 50582
			},
			{
				"name": "globals",
				"version": "13.24.0",
				"size": 52113
			},
			{
				"name": "type-fest",
				"version": "0.20.2",
				"size": 110590
			},
			{
				"name": "is-glob",
				"version": "4.0.3",
				"size": 13609
			},
			{
				"name": "is-extglob",
				"version": "2.1.1"
			},
			{
				"name": "js-yaml",
				"version": "4.1.0",
				"size": 404738
			},
			{
				"name": "argparse",
				"version": "2.0.1",
				"size": 171548
			},
			{
				"name": "regexpp",
				"version": "3.2.0",
				"size": 302373
			},
			{
				"name": "doctrine",
				"version": "3.0.0",
				"size": 106364
			},
			{
				"name": "enquirer",
				"version": "2.4.1",
				"size": 188681
			},
			{
				"name": "ansi-colors",
				"version": "4.1.3",
				"size": 26143
			},
			{
				"name": "strip-ansi",
				"version": "6.0.1",
				"size": 4029
			},
			{
				"name": "ansi-regex",
				"version": "5.0.1",
				"size": 5609
			},
			{
				"name": "progress",
				"version": "2.0.3",
				"size": 15499
			},
			{
				"name": "minimatch",
				"version": "3.1.2",
				"size": 34902
			},
			{
				"name": "brace-expansion",
				"version": "1.1.11",
				"size": 11059
			},
			{
				"name": "balanced-match",
				"version": "1.0.2",
				"size": 6939
			},
			{
				"name": "concat-map",
				"version": "0.0.1"
			},
			{
				"name": "optionator",
				"version": "0.9.4",
				"size": 50157
			},
			{
				"name": "deep-is",
				"version": "0.1.4",
				"size": 8114
			},
			{
				"name": "word-wrap",
				"version": "1.2.5",
				"size": 11845
			},
			{
				"name": "fast-levenshtein",
				"version": "2.0.6"
			},
			{
				"name": "text-table",
				"version": "0.2.0"
			},
			{
				"name": "cross-spawn",
				"version": "7.0.6",
				"size": 16094
			},
			{
				"name": "which",
				"version": "2.0.2",
				"size": 9975
			},
			{
				"name": "isexe",
				"version": "2.0.0"
			},
			{
				"name": "path-key",
				"version": "3.1.1",
				"size": 4553
			},
			{
				"name": "shebang-command",
				"version": "2.0.0",
				"size": 2556
			},
			{
				"name": "shebang-regex",
				"version": "3.0.0",
				"size": 2828
			},
			{
				"name": "glob-parent",
				"version": "6.0.2",
				"size": 7719
			},
			{
				"name": "imurmurhash",
				"version": "0.1.4"
			},
			{
				"name": "eslint-scope",
				"version": "7.2.2",
				"size": 146333
			},
			{
				"name": "esrecurse",
				"version": "4.3.0",
				"size": 13527
			},
			{
				"name": "eslint-utils",
				"version": "3.0.0",
				"size": 358383
			},
			{
				"name": "eslint-visitor-keys",
				"version": "2.1.0",
				"size": 24680
			},
			{
				"name": "import-fresh",
				"version": "3.3.1",
				"size": 4693
			},
			{
				"name": "parent-module",
				"version": "1.0.1",
				"size": 3922
			},
			{
				"name": "callsites",
				"version": "3.1.0",
				"size": 6332
			},
			{
				"name": "resolve-from",
				"version": "4.0.0"
			},
			{
				"name": "lodash.merge",
				"version": "4.6.2",
				"size": 54132
			},
			{
				"name": "natural-compare",
				"version": "1.4.0"
			},
			{
				"name": "@eslint/eslintrc",
				"version": "1.4.1",
				"size": 652462
			},
			{
				"name": "ignore",
				"version": "5.3.2",
				"size": 53630
			},
			{
				"name": "strip-json-comments",
				"version": "3.1.1",
				"size": 6959
			},
			{
				"name": "file-entry-cache",
				"version": "6.0.1",
				"size": 25561
			},
			{
				"name": "flat-cache",
				"version": "3.2.0",
				"size": 29445
			},
			{
				"name": "keyv",
				"version": "4.5.4",
				"size": 27751
			},
			{
				"name": "json-buffer",
				"version": "3.0.1",
				"size": 5404
			},
			{
				"name": "rimraf",
				"version": "3.0.2",
				"size": 17327
			},
			{
				"name": "glob",
				"version": "7.2.3",
				"size": 55064
			},
			{
				"name": "once",
				"version": "1.4.0"
			},
			{
				"name": "wrappy",
				"version": "1.0.2"
			},
			{
				"name": "inflight",
				"version": "1.0.6"
			},
			{
				"name": "inherits",
				"version": "2.0.4",
				"size": 3958
			},
			{
				"name": "fs.realpath",
				"version": "1.0.0"
			},
			{
				"name": "path-is-absolute",
				"version": "1.0.1"
			},
			{
				"name": "flatted",
				"version": "3.3.3",
				"size": 31530
			},
			{
				"name": "v8-compile-cache",
				"version": "2.4.0",
				"size": 14909
			},
			{
				"name": "escape-string-regexp",
				"version": "4.0.0",
				"size": 3790
			},
			{
				"name": "functional-red-black-tree",
				"version": "1.0.1"
			},
			{
				"name": "@humanwhocodes/config-array",
				"version": "0.9.5",
				"size": 45535
			},
			{
				"name": "@humanwhocodes/object-schema",
				"version": "1.2.1",
				"size": 49395
			},
			{
				"name": "json-stable-stringify-without-jsonify",
				"version": "1.0.1"
			},
			{
				"name": "htmlparser2-svelte",
				"version": "4.1.0",
				"size": 107857
			},
			{
				"name": "domelementtype",
				"version": "2.3.0",
				"size": 11359
			},
			{
				"name": "domhandler",
				"version": "3.3.0",
				"size": 32610
			},
			{
				"name": "domutils",
				"version": "2.8.0",
				"size": 56647
			},
			{
				"name": "domhandler",
				"version": "4.3.1",
				"size": 44583
			},
			{
				"name": "dom-serializer",
				"version": "1.4.1",
				"size": 28312
			},
			{
				"name": "entities",
				"version": "2.2.0",
				"size": 57673
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[1, 3],
			[1, 4],
			[0, 5],
			[5, 6],
			[6, 7],
			[7, 8],
			[6, 9],
			[6, 10],
			[6, 11],
			[5, 12],
			[12, 13],
			[12, 14],
			[14, 13],
			[5, 15],
			[15, 16],
			[16, 17],
			[17, 18],
			[15, 19],
			[19, 20],
			[5, 21],
			[21, 22],
			[5, 23],
			[23, 2],
			[23, 3],
			[23, 4],
			[5, 24],
			[5, 25],
			[5, 26],
			[26, 27],
			[5, 28],
			[5, 29],
			[29, 30],
			[5, 31],
			[31, 32],
			[5, 33],
			[33, 34],
			[5, 35],
			[5, 36],
			[36, 28],
			[5, 37],
			[37, 38],
			[37, 39],
			[39, 40],
			[5, 41],
			[5, 42],
			[42, 43],
			[43, 44],
			[43, 45],
			[5, 46],
			[46, 13],
			[46, 47],
			[46, 48],
			[46, 14],
			[46, 12],
			[46, 49],
			[5, 39],
			[5, 50],
			[5, 51],
			[51, 52],
			[52, 53],
			[51, 54],
			[51, 55],
			[55, 56],
			[5, 57],
			[57, 31],
			[5, 58],
			[5, 59],
			[59, 60],
			[60, 27],
			[59, 27],
			[5, 61],
			[61, 62],
			[5, 63],
			[63, 64],
			[64, 65],
			[63, 66],
			[5, 67],
			[5, 9],
			[5, 68],
			[5, 69],
			[69, 6],
			[69, 21],
			[69, 23],
			[69, 70],
			[69, 29],
			[69, 33],
			[69, 42],
			[69, 63],
			[69, 71],
			[5, 72],
			[72, 73],
			[73, 74],
			[74, 75],
			[73, 76],
			[76, 77],
			[77, 78],
			[78, 79],
			[77, 80],
			[80, 78],
			[80, 79],
			[77, 81],
			[77, 42],
			[77, 82],
			[77, 83],
			[73, 84],
			[5, 85],
			[5, 4],
			[5, 71],
			[5, 86],
			[5, 87],
			[5, 88],
			[88, 21],
			[88, 42],
			[88, 89],
			[5, 90],
			[0, 91],
			[91, 92],
			[91, 93],
			[93, 92],
			[91, 94],
			[94, 95],
			[95, 92],
			[94, 96],
			[96, 92],
			[96, 95],
			[96, 97],
			[94, 92],
			[91, 97]
		],
		"circular": []
	},
	"readme": "# The sveltedoc parser <!-- omit in toc -->\r\n\r\nGenerate a JSON documentation for a Svelte file.\r\n\r\n[![npm](https://img.shields.io/npm/v/sveltedoc-parser.svg)](https://www.npmjs.com/package/sveltedoc-parser)\r\n![GitHub Workflow Status (branch)](https://img.shields.io/github/workflow/status/alexprey/sveltedoc-parser/Node%20CI/master)\r\n\r\n## Table of Contents <!-- omit in toc -->\r\n\r\n- [Changelog](#changelog)\r\n  - [[4.2.1] 15.12.2021](#421-15122021)\r\n  - [[4.2.0] 14.12.2021](#420-14122021)\r\n  - [[4.1.0] 19.02.2021](#410-19022021)\r\n  - [[4.0.0] 25.01.2021](#400-25012021)\r\n- [Install](#install)\r\n- [Features](#features)\r\n  - [Common](#common)\r\n  - [Svelte 2](#svelte-2)\r\n  - [Svelte 3](#svelte-3)\r\n- [Options](#options)\r\n  - [Supported feature names](#supported-feature-names)\r\n- [Output format](#output-format)\r\n- [Usage](#usage)\r\n- [API](#api)\r\n  - [parse(options)](#parseoptions)\r\n  - [detectVersion(options)](#detectversionoptions)\r\n- [Issues](#issues)\r\n- [Contributors](#contributors)\r\n- [License](#license)\r\n\r\n## Changelog\r\n\r\n### [4.2.1] 15.12.2021\r\n- 🛠 **[Fixed]** - Add missed dependency.\r\n\r\n### [4.2.0] 14.12.2021\r\n\r\n- 🔒 **[Fixed]** Upgrade all dependecies to latest version to solve known vulnarability issues.\r\n- ✔ **[Added]** Add support ES6 default value assignment for method parameter [Issue #75](https://github.com/alexprey/sveltedoc-parser/issues/75). Thanks for [@ekhaled](https://github.com/ekhaled).\r\n- ✔ **[Added]** Add support of method parsing when it assigned to identifier [Issue #78](https://github.com/alexprey/sveltedoc-parser/issues/78). Thanks for [@ekhaled](https://github.com/ekhaled).\r\n- ✔ **[Added]** Extend typings to support `self` and `trusted` event modifiers [Issue #80].\r\n- ✔ **[Added]** Introduce `JSDocTypeFunction` to support functions types in variable definitions and provide details about function parameters and methods.\r\n- ✔ **[Added]** Extend `JSDocType` to support new `JSDocTypeFunction`.\r\n- ✔ **[Added]** Improve type infering from assigned value. Currently support simple infering: `array`, `object`, `function`.\r\n- 🛠 **[Fixed]** Fix the [Issue #67](https://github.com/alexprey/sveltedoc-parser/issues/67), [Issue #69](https://github.com/alexprey/sveltedoc-parser/issues/69): specifier comments are not parsed properly; Thanks to [@ekhaled](https://github.com/ekhaled).\r\n- 🛠 **[Fixed]** Fix the [Issue #72](https://github.com/alexprey/sveltedoc-parser/issues/72): Module context scripts look for the wrong attribute.\r\n- 🛠 **[Fixed]** Fix the [Issue #83](https://github.com/alexprey/sveltedoc-parser/issues/83): Default value and keywords of exported aliases not merged.\r\n\r\n### [4.1.0] 19.02.2021\r\n\r\n- 🎉 **[Misc]** Update the ReadMe by [@soft-decay](https://github.com/soft-decay).\r\n- ✔ **[Added]** Implement support of imported types parsing, f.ex. `@type {import('../typings.d.ts').ExternalTypeClass}`. In order to do this, new field `importPath` introduced to `JSDocType`, in the name property now it returns imported class name, f.ex.: `ExternalTypeClass`.\r\n- 🛠 **[Fixed]** Complete fix of [Issue #1](https://github.com/alexprey/sveltedoc-parser/issues/1): Support parsing event names from top-level constant objects with accessing to their properties by naming strings. Introduce the new issue [Issue #48](https://github.com/alexprey/sveltedoc-parser/issues/48) about supporting parse of event names by external references.\r\n- 🛠 **[Fixed]** Fix the [Issue #47](https://github.com/alexprey/sveltedoc-parser/issues/48), now all comments in markup are parsed correctly and attached to required items in document. Support JSDoc comment markup parsing in all places where comment can be used.\r\n- 🛠 **[Fixed]** Fix the [Issue #61](https://github.com/alexprey/sveltedoc-parser/issues/61), now slot parameter items enrich with all detailed information that was parsed from markup comment.\r\n- 🛠 **[Fixed]** Spec: add the module definition typings to `typings.d.ts` file.\r\n- 🛠 **[Fixed]** Fix some edge-cases in script parsing logic.\r\n- 🛠 **[Tech]** Refactor internal parser logic to make it easy to introduce new features, moves forward to TS support! ;)\r\n- 🔥 **[Breaking]** Spec: change the `SvelteSlotParameter` definition, to support `name`, `description`, `type` fields, instead of many not relevant fields that was inherited from `ISvelteItem` interface.\r\n- 🔥 **[Breaking]** Spec: change the `SvelteSlotItem` definition, to improve consistency:\r\n  - Rename `parameters` property to `params` to be most likely the same as `SvelteMethodItem`. Old field still available until 5.* release.\r\n\r\nThanks a lot [@soft-decay](https://github.com/soft-decay) for contributing in this release!\r\n\r\n### [4.0.0] 25.01.2021\r\n\r\n- 🛠 **[Fixed]** Fix [Issue #42](https://github.com/alexprey/sveltedoc-parser/issues/42)\r\n- 🛠 **[Fixed]** Partially fixed [Issue #1](https://github.com/alexprey/sveltedoc-parser/issues/1). Event names are now correctly parsed if provided by a top-level constant in the same file. Thanks to [@soft-decay](https://github.com/soft-decay)\r\n- ✔ **[Added]** Support complete parsing of component method arguments [Issue #39](https://github.com/alexprey/sveltedoc-parser/issues/39). Thanks to [@soft-decay](https://github.com/soft-decay)\r\n- ✔ **[Added]** Support parsing of return type and description for methods in component [Issue #37](https://github.com/alexprey/sveltedoc-parser/issues/37). Thanks to [@soft-decay](https://github.com/soft-decay)\r\n- ✔ **[Added]** Options validation, Thanks to [@soft-decay](https://github.com/soft-decay)\r\n- 🔥 **[Breaking]** API rework for component methods description:\r\n  - `args` property renamed to `params`;\r\n  - Change the structure of `return` item for methods:\r\n    - `desc` property renamed to `description`;\r\n    - `type` property now contains a `JSDocType` object instead of a `string` with a text representation of the type. This text representation is still available from the `text` property of the `JSDocType` object;\r\n  - [Svelte2]: method arguments presented with plain array with names, now that replaced with objects of `SvelteMethodParamItem` type;\r\n- 🔥 **[Breaking]** Cleanup deprecated code:\r\n  - `loc` property removed: Use `locations` instead;\r\n  - `value` property of `SvelteComponentItem` removed: Use `importPath` instead;\r\n\r\nFull changelog of release versions can be found [here](/CHANGELOG.md).\r\n\r\n## Install\r\n\r\n```shell\r\nnpm install --save sveltedoc-parser\r\n```\r\n\r\n## Features\r\n\r\n### Common\r\n\r\n- JSDoc support\r\n  - Support description extraction for everything items\r\n  - Support visibility scope from JSDoc keywords: `@public`, `@protected`, `@private`\r\n- Extract list of imported components\r\n  - Extract relative path to imported component (supports full-syntax and short-syntax import styles)\r\n- Extract data properties\r\n  - Extract description from JSDoc comment\r\n  - Extract JS type from JSDoc (`@type {string}`) or parse default value if is not provided\r\n- Extract computed properties with list of dependencies\r\n- Extract list of references attached to components or HTML elements\r\n- Extract information about events\r\n  - Events that propagated from child component or HTML elements `<button on:click>...</button>`\r\n  - Parse event modifiers `... on:click|once`\r\n- Extract list of used default and named `slots`\r\n- Extract component methods\r\n  - Extract description from JSDoc comment\r\n  - Extract parameters description from JSDoc comment\r\n  - Extract JS type from JSDoc for parameters (`@param {string} parameter`)\r\n  - Identify optional parameters using brackets (`@param [parameter]`) or using Google ClosureCompiler syntax (`@param {string=} parameter`)\r\n    - Identify default values for optional parameters (`@param [parameter=Default value]`)\r\n- Extract source locations for component symbols\r\n  - data (props)\r\n  - slots\r\n  - methods\r\n  - refs\r\n  - events\r\n\r\n### Svelte 2\r\n\r\n- Extract fired events\r\n  - Events fired by this component using the `fire(...)` method\r\n  - Custom event handlers with `private` visibility scope\r\n- Extract component helpers\r\n- Extract component actions\r\n- Extract component transitions\r\n\r\n### Svelte 3\r\n\r\n- Extract global component description and keywords from JSDoc comment\r\n  - Top level comment must include `@component`. [Example script](/test/svelte3/integration/globalComment/globalComment.script.svelte), [Example html](/test/svelte3/integration/globalComment/globalComment.markup.svelte)\r\n- Extract all dispatched events\r\n  - Events that dispatched from script block by user-created dispatcher\r\n  - Events that dispatched from markup expressions by user-created dispatcher\r\n\r\n## Options\r\n\r\nThe `options` object passed to the `parse` function ***must include*** `filename` or `fileContent`.\r\n\r\nHere are the properties supported by `options` (see the [Usage](#Usage) section below):\r\n\r\n| json Path | Description | Type | Default value |\r\n|-----------|-------------|------|---------------|\r\n| **filename** | The filename to parse. **Required**, unless `fileContent` is passed. | string |\r\n| **fileContent** | The file content to parse. **Required**, unless `filename` is passed. | string |\r\n| **encoding** | The file encoding. | string | `utf8` |\r\n| **features** | The component features to parse and extract. | string[] | [All supported features](#Supported-feature-names) |\r\n| **ignoredVisibilities** | The list of ignored visibilities. Symbols with a visibility that is ignored will not be included in the output. | string[] | `['private', 'protected']` |\r\n| **includeSourceLocations** | Flag, which indicates that source locations should be provided for component symbols. | boolean | `false` |\r\n| **version** | Optional. Use `2` or `3` to specify which svelte syntax should be used. When that is not provided, parser try to detect version of the syntax. | number? | `undefined` |\r\n| **defaultVersion** | Optional. Specify default version of svelte syntax, if auto-detector can't identify correct version. | number? | `undefined` |\r\n\r\n### Supported feature names\r\n\r\nThese are the values that can be included in the `options.features` array:\r\n\r\n| Feature       | Svelte 2 | Svelte 3 | Description                                           |\r\n|---------------|:--------:|:--------:|-------------------------------------------------------|\r\n| `name`        |     ✔    |     ✔    | Component's name                                      |\r\n| `description` |     ✔    |     ✔    | Component's description                               |\r\n| `keywords`    |     ✔    |     ✔    | List of JSDoc keywords found in the top level comment |\r\n| `components`  |     ✔    |     ✔    | List of imported components                           |\r\n| `computed`    |     ✔    |     ✔    | List of computed properties                           |\r\n| `data`        |     ✔    |     ✔    | List of data properties (Component's props)           |\r\n| `events`      |     ✔    |     ✔    | List of events fired/dispatched by this component     |\r\n| `methods`     |     ✔    |     ✔    | List of methods                                       |\r\n| `refs`        |     ✔    |     ✔    | List of references used by this component             |\r\n| `slots`       |     ✔    |     ✔    | List of slots provided by this component              |\r\n| `actions`     |     ✔    |          | List of actions                                       |\r\n| `helpers`     |     ✔    |          | List of helpers                                       |\r\n| `transitions` |     ✔    |          | List of transitions used by this component            |\r\n| `store`       |          |          | NOT SUPPORTED                                         |\r\n\r\n## Output format\r\n\r\nOutput format is described in [this document](/typings.d.ts).\r\n\r\nFor Svelte 3 examples, take a look at the [examples folder](/examples/) to check how Svelte 3 components are transformed to JSON documents.\r\n\r\nFor a Svelte 2 example, take a look at the [JSON output](/test/svelte2/integration/overall/overall.main.doc.json) generated from [this component](/test/svelte2/integration/overall/main.svelte).\r\n\r\n## Usage\r\n\r\nMinimal example:\r\n\r\n```js\r\nconst sveltedoc = require('sveltedoc-parser');\r\nconst options = {\r\n    filename: 'main.svelte'\r\n};\r\n\r\nsveltedoc.parse(options)\r\n    .then(componentDoc => {\r\n        console.log(componentDoc);\r\n    })\r\n    .catch(e => {\r\n        console.error(e);\r\n    });\r\n```\r\n\r\nor with options customization:\r\n\r\n```js\r\nconst { parse } = require('sveltedoc-parser');\r\nconst { externalFileContent } = require('./local-file');\r\nconst options = {\r\n    fileContent: externalFileContent,\r\n    encoding: 'ascii',\r\n    features: ['data', 'computed', 'methods'],\r\n    ignoredVisibilities: ['private'],\r\n    includeSourceLocations: true,\r\n    version: 3\r\n};\r\nconst doc = await parse(options);\r\nconsole.log(doc)\r\n```\r\n\r\n## API\r\n\r\n### parse(options)\r\n\r\nMethod to parse svelte component and provide doc object structure with details information.\r\n\r\n### detectVersion(options)\r\n\r\nMethod to detect the Svelte syntax used in the component. It returns, in order:\r\n\r\n- the value of `options.version`, if present; else\r\n- `2` or `3` if Svelte 2 syntax or Svelte 3 syntax is detected, respectively; else\r\n- the value of `options.defaultVersion`, if present; else\r\n- `undefined` if the function failed to detect the syntax to use\r\n\r\n## Issues\r\n\r\nA list of known issues can be found [here](https://github.com/alexprey/sveltedoc-parser/issues).\r\n\r\nFound a new issue? Please contribute and write a detailed description [here](https://github.com/alexprey/sveltedoc-parser/issues/new).\r\n\r\n## Contributors\r\n\r\nAuthor [Alexey Mulyukin](https://github.com/alexprey)\r\n\r\nInspired by [Vuedoc Parser](https://gitlab.com/vuedoc/parser)\r\n\r\n## License\r\n\r\n[MIT](/LICENSE)\r\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 130086],
		[3603, 124323],
		[3610, 109497],
		[3617, 123516],
		[3624, 125995],
		[3631, 123516],
		[3638, 103414],
		[3645, 49096],
		[3652, 70470],
		[3659, 101433],
		[3666, 107135],
		[3673, 103923],
		[3680, 100919],
		[3687, 100968],
		[3694, 92875],
		[3701, 96788],
		[3708, 98995],
		[3715, 95983],
		[3722, 97189],
		[3729, 99933],
		[3736, 89009],
		[3743, 94972],
		[3750, 94307],
		[3757, 93626],
		[3764, 87025],
		[3771, 74715],
		[3778, 74981],
		[3785, 88781],
		[3792, 87628],
		[3799, 78562],
		[3806, 80735],
		[3813, 80901],
		[3820, 81129],
		[3827, 80602],
		[3834, 71203],
		[3841, 81751],
		[3848, 80276],
		[3855, 75808],
		[3862, 77780],
		[3869, 78789],
		[3876, 69313],
		[3883, 75559],
		[3890, 78190],
		[3897, 78161],
		[3904, 80900],
		[3911, 81537],
		[3918, 82324],
		[3925, 80307],
		[3932, 87797],
		[3939, 86228],
		[3946, 87809],
		[3953, 80341],
		[3960, 77384],
		[3967, 82572],
		[3974, 88567],
		[3981, 81429],
		[3988, 89068],
		[3995, 87494],
		[4002, 86647],
		[4009, 38025],
		[4016, 39237],
		[4023, 82795],
		[4030, 86601],
		[4037, 86539],
		[4044, 88342],
		[4051, 97902],
		[4058, 96202],
		[4065, 99738],
		[4072, 103283],
		[4079, 105037],
		[4086, 112183],
		[4093, 107689],
		[4100, 117660],
		[4107, 116140],
		[4114, 113608],
		[4121, 107052],
		[4128, 107015],
		[4135, 90325]
	]
}
