{
	"name": "@pageql/pageql-auth",
	"description": "Provide authentication and authorization helpers for Svelte apps.",
	"repo_url": "https://github.com/pageql/pageql-auth",
	"authors": ["conprogramming"],
	"homepage": "https://github.com/pageql/pageql-auth#readme",
	"downloads": 5,
	"updated": "2020-08-06T05:26:33.669Z",
	"tags": ["auth"],
	"github_stars": 2,
	"typescript": false,
	"version": "1.0.1",
	"svelte_range": "^3.24.0",
	"last_rune_check_version": "1.0.1",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@pageql/pageql-auth",
				"version": "1.0.1",
				"size": 14033
			},
			{
				"name": "magic-string",
				"version": "0.25.9",
				"size": 373056
			},
			{
				"name": "sourcemap-codec",
				"version": "1.4.8",
				"size": 31802
			},
			{
				"name": "parse5",
				"version": "6.0.1",
				"size": 331125
			},
			{
				"name": "svelte",
				"version": "3.59.2",
				"size": 10624206
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[0, 3],
			[0, 4]
		],
		"circular": []
	},
	"readme": "# [PageQL Auth](https://pageql.dev) &middot; [![GitHub license](https://img.shields.io/badge/license-MIT-blue.svg)](https://github.com/pageql/pageql-auth/blob/master/LICENSE) [![npm version](https://img.shields.io/npm/v/@pageql/pageql-auth.svg?style=flat)](https://www.npmjs.com/package/@pageql/pageql-auth) [![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://reactjs.org/docs/how-to-contribute.html#your-first-pull-request)\r\nPageQL Authentiction and Authorization helpers for Svelte\r\n\r\nGet started by installing to an existing Svelte project\r\n`npm install -D @pageql/pageql-auth`\r\n\r\nAdding PageQL to your rollup config\r\n```\r\nimport { pageqlPreproccesor } from '@pageql/pageql-auth';\r\n...\r\nplugins: [\r\n    svelte({\r\n        ...\r\n        preprocess: [\r\n            pageqlPreproccesor(),\r\n        ]\r\n    }),\r\n    ...\r\n]\r\n...\r\n```\r\n\r\nInit PageQL on App.svelte (_layout.svelte if you're using Sapper)\r\n```\r\n<script>\r\n  /* PageQL BoilerPlate*/\r\n  import pageqlConfig from \"../pageql.config.js\";\r\n  import { writable } from \"svelte/store\";\r\n\r\n  window.pageql = {};\r\n  window.pageql.authState = writable({ loggedIn: false });\r\n  window.pageql.auth = pageqlConfig.auth;\r\n  window.pageql.user = {};\r\n\r\n  const authState = window.pageql.authState;\r\n  /* PageQL BoilerPlate*/\r\n</script>\r\n...\r\n```\r\n\r\nSetup your `pageql.config.js` in your project's root\r\n```\r\nexport default {\r\n    auth: {\r\n        checkRole: (requiredRole) => {\r\n            //Used by pageql:authRole directive\r\n            //Return false if user's role fails to hit specifications\r\n            //Returning false hides the component\r\n\r\n            return !window.pageql.user.role.includes(requiredRole);\r\n        },\r\n        doLogin: (loginCallback, event) => {\r\n            //Used by pageql:authLogin directive\r\n            //Can get value of \"password\" input with event.target.password.value\r\n\r\n            //Do login logic here\r\n\r\n            window.pageql.user = {\r\n                name: event.target.email.value,\r\n                role: [\r\n                    \"admin\"\r\n                ], //Get from login response\r\n            };\r\n\r\n            window.pageql.authState.set({ loggedIn: true });\r\n\r\n            loginCallback();\r\n        },\r\n        doLogout: (logoutCallback, event) => {\r\n            //Used by pageql:authLogout directive\r\n            window.pageql.authState.set({ loggedIn: false });\r\n\r\n            logoutCallback();\r\n        },\r\n        doRegister: (registerCallback, event) => {\r\n            //Used by pageql:authRegister directive\r\n            //Can get value of \"password\" input with event.target.password.value\r\n\r\n            //Do register logic here\r\n\r\n            window.pageql.user = {\r\n                name: event.target.email.value,\r\n                role: [\r\n                    \"admin\"\r\n                ], //Get from login response\r\n            };\r\n\r\n            window.pageql.authState.set({ loggedIn: true });\r\n\r\n            registerCallback();\r\n        },\r\n        getUserId: () => {\r\n            //Custom functions like this can be defined and accessed anywhere with window.pageql.auth.getUserId()\r\n            return \"my-user-id\";\r\n        },\r\n        getTenantId: () => {\r\n            //You can remove this if you're not using multi tenant!\r\n            return \"1\";\r\n        }\r\n    },\r\n}\r\n```\r\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3589, 2],
		[3596, 4],
		[3603, 2],
		[3617, 1],
		[3645, 1],
		[3652, 1],
		[3659, 1],
		[3666, 3],
		[3694, 1],
		[3708, 1],
		[3715, 1],
		[3722, 1],
		[3736, 1],
		[3743, 1],
		[3764, 2],
		[3771, 1],
		[3778, 1],
		[3792, 1],
		[3799, 1],
		[3806, 1],
		[3820, 1],
		[3827, 1],
		[3834, 1],
		[3841, 5],
		[3855, 1],
		[3862, 14],
		[3869, 1],
		[3883, 1],
		[3890, 1],
		[3904, 2],
		[3911, 2],
		[3918, 2],
		[3932, 1],
		[3939, 1],
		[3953, 2],
		[3967, 1],
		[3995, 1],
		[4016, 3],
		[4023, 5],
		[4037, 5],
		[4044, 8],
		[4051, 1],
		[4058, 2],
		[4072, 1],
		[4093, 16],
		[4114, 5],
		[4121, 6],
		[4128, 4]
	],
	"esm": false,
	"cjs": true
}
