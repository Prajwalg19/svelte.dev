{
	"name": "svelte-snappy-carousel",
	"description": "Create touch-friendly, snappy horizontal carousels in Svelte.",
	"repo_url": "https://github.com/yoonbuck/svelte-snappy-carousel",
	"authors": ["yoonbuck"],
	"homepage": "https://github.com/yoonbuck/svelte-snappy-carousel#readme",
	"downloads": 6,
	"updated": "2021-10-09T23:08:16.301Z",
	"tags": ["ui"],
	"github_stars": 0,
	"typescript": true,
	"version": "0.2.2",
	"svelte_range": "^3.24.0",
	"last_rune_check_version": "0.2.2",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-snappy-carousel",
				"version": "0.2.2",
				"size": 287220
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# svelte-snappy-carousel\n\nTouch-friendly snappy horizontal carousel for svelte.\n\n[Demo](https://svelte-snappy-carousel.dev.yoonbuck.com/)\n\n## Usage\n\n```svelte\n<script lang=\"ts\">\n  import { Carousel, CarouselItem } from \"svelte-snappy-carousel\";\n</script>\n\n<Carousel>\n  <!-- CarouselItems represent carousel panes -->\n  <CarouselItem>\n    <h1>Pane 1</h1>\n    <p>...</p>\n  </CarouselItem>\n  <CarouselItem>\n    <h1>Pane 2</h1>\n    <p>...</p>\n  </CarouselItem>\n  <CarouselItem>\n    <h1>Pane 3</h1>\n    <p>...</p>\n  </CarouselItem>\n</Carousel>\n```\n\n## Adding controls\n\nUse `slot=\"inner-controls\"` or `slot=\"outer-controls\"` to add controls to the carousel.\n\n`inner-controls` will be placed inside the carousel container; `outer-controls` will be after.\n\n```svelte\n<Carousel>\n  <!-- ... -->\n  <div\n    slot=\"inner-controls\"\n    class=\"controls\"\n    let:position\n    let:count\n    let:previous\n    let:previousAvailable\n    let:next\n    let:nextAvailable\n  >\n    <button on:click={previous} disabled={!previousAvailable}>←</button>\n    {position + 1} / {count}\n    <button on:click={next} disabled={!nextAvailable}>→</button>\n  </div>\n</Carousel>\n\n<style>\n  .controls {\n    /* e.g., position absolutely inside carousel container */\n  }\n</style>\n```\n\n# Limitations\n\nThese are some\nthings to watch out for. Note that these limitations might change in the future.\n\n- **No nested Carousels**\n\n  You can't place a `<Carousel>` inside another `<Carousel>`\n\n- **No dynamic content**\n\n  You shouldn't add or remove `<CarouselItem>`s after the parent `<Carousel>` is mounted.\n\n  It's okay to use an `{#each}` block if you know the backing array won't change. The contents of the array can change, as long as the `(key)`s stay the same, and the array doesn't grow or shrink.\n\n  If you're loading content asynchronously, you should either wrap the entire `<Carousel>` in your `{#await}` block, or place `{#await}` blocks inside of individual `<CarouselItem>` components.\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3596, 1],
		[3603, 5],
		[3610, 6],
		[3631, 1],
		[3645, 5],
		[3659, 1],
		[3666, 6],
		[3680, 1],
		[3701, 1],
		[3708, 3],
		[3729, 6],
		[3736, 1],
		[3743, 4],
		[3757, 2],
		[3771, 5],
		[3778, 1],
		[3785, 1],
		[3792, 2],
		[3799, 1],
		[3806, 2],
		[3820, 1],
		[3834, 1],
		[3841, 1],
		[3848, 1],
		[3855, 26],
		[3869, 1],
		[3876, 1],
		[3883, 2],
		[3890, 6],
		[3904, 12],
		[3918, 1],
		[3925, 1],
		[3932, 1],
		[3939, 1],
		[3946, 1],
		[3960, 2],
		[3981, 6],
		[4023, 2],
		[4030, 5],
		[4037, 14],
		[4044, 7],
		[4051, 1],
		[4058, 1],
		[4065, 1],
		[4093, 11],
		[4100, 7],
		[4107, 4],
		[4114, 6],
		[4121, 5],
		[4128, 4],
		[4135, 7]
	]
}
