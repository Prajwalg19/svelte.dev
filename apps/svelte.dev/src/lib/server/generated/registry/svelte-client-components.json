{
	"name": "svelte-client-components",
	"description": "Preprocessor for Svelte, annotating components as client-side only.",
	"repo_url": "",
	"authors": ["pablopang"],
	"downloads": 7,
	"updated": "2024-01-05T17:53:34.370Z",
	"tags": ["tooling"],
	"typescript": false,
	"version": "0.1.0",
	"svelte_range": "^4",
	"last_rune_check_version": "0.1.0",
	"github_stars": 0,
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-client-components",
				"version": "0.1.0",
				"size": 8855
			},
			{
				"name": "magic-string",
				"version": "0.30.17",
				"size": 467464
			},
			{
				"name": "@jridgewell/sourcemap-codec",
				"version": "1.5.0",
				"size": 112815
			},
			{
				"name": "zimmerframe",
				"version": "1.1.2",
				"size": 12266
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[0, 3]
		],
		"circular": []
	},
	"readme": "# svelte-client-components\n\nA preprocessor for svelte that allows you to annotate a component as a client component with the extension `.client.svelte`\n\n[![MIT License](https://img.shields.io/badge/License-MIT-green.svg)](https://choosealicense.com/licenses/mit/)\n\n![npm](https://img.shields.io/npm/v/svelte-client-components)\n\n![npm](https://img.shields.io/npm/dt/svelte-client-components)\n\n![GitHub last commit](https://img.shields.io/github/last-commit/paoloricciuti/svelte-client-components)\n\n## Contributing\n\nContributions are always welcome!\n\nIf you want to start contributing take a look at [the contributions guidelines](./CONTRIBUTING.md), otherwise if you found a problem or have an idea feel free to [open an issue](https://github.com/paoloricciuti/svelte-client-components/issues/new)\n\nIf you want the fastest way to open a PR try out Codeflow\n\n[![Open in Codeflow](https://developer.stackblitz.com/img/open_in_codeflow.svg)](https://pr.new/paoloricciuti/svelte-client-components/)\n\n## Authors\n\n-   [@paoloricciuti](https://www.github.com/paoloricciuti)\n\n## Installation\n\nInstall svelte-client-components with pnpm (or npm, or yarn)\n\n```bash\n  pnpm install svelte-client-components@latest -D\n```\n\n## Usage\n\nThe only thing you have to do to use this preprocessor is add it to your `svelte.config.js`\n\n```js\nimport adapter from '@sveltejs/adapter-static';\nimport { svelte_client_components } from 'svelte-client-components';\n\n/** @type {import('@sveltejs/kit').Config} */\nconst config = {\n\tpreprocess: svelte_client_components(),\n\tkit: {\n\t\tadapter: adapter(),\n\t},\n};\n\nexport default config;\n```\n\nto annotate a component as a client component you can just use the extension `.client.svelte` (eg. `Button.client.svelte`).\n\n## How it works\n\nThe preprocessor will be invoked before the svelte compiler and will change your code to prevent the component to be rendered during SSR. How? It make use of the fact that server svelte will not await Promises inside the `{#await}` block.\n\nWhenever you will use a Component that has `.client.svelte` in the import path will be changed to a dynamic import and the usage will be wrapped in an `await` block to await that import. Let's see a simple example.\n\nThis code\n\n```svelte\n<script>\n\timport Test from './Test.client.svelte';\n</script>\n\n<Test />\n```\n\nwill be preprocessed to become this\n\n```svelte\n<script>\n\tconst Test = import('./Test.client.svelte');\n</script>\n\n{#await Test then { default: Test }}<Test />{/await}\n```\n\n## Gotcha's\n\nAs you have just read this preprocessor uses static analysis to do his job. This means that it has unfortunately some gotcha's. For example you cannot import anything else from the component file. This is not usual in svelte but it might happen if you export something from `<script context=\"module\">`. This is the cases that are currently tracked by the preprocessor\n\n### Basic import\n\n```svelte\n<script>\n\timport Test from './Test.client.svelte';\n</script>\n\n<Test />\n```\n\n### Usage with `svelte:component`\n\n```svelte\n<script>\n\timport Test from './Test.client.svelte';\n</script>\n\n<svelte:component this={Test} />\n```\n\nN.b. this will only work if you use the actual imported component in the `this` attribute\n\n### Reassignment to a `const` variable\n\n```svelte\n<script>\n\timport Test from './Test.client.svelte';\n\n\tconst Test2 = Test;\n</script>\n\n<Test2 />\n```\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3652, 255],
		[3659, 31],
		[3666, 16],
		[3673, 9],
		[3680, 4],
		[3687, 12],
		[3694, 12],
		[3701, 3],
		[3708, 4],
		[3715, 7],
		[3722, 8],
		[3729, 4],
		[3736, 9],
		[3743, 2],
		[3750, 5],
		[3757, 6],
		[3764, 22],
		[3771, 9],
		[3778, 55],
		[3785, 5],
		[3792, 87],
		[3799, 61],
		[3806, 31],
		[3813, 32],
		[3820, 25],
		[3827, 27],
		[3834, 59],
		[3841, 12],
		[3848, 15],
		[3855, 27],
		[3862, 42],
		[3869, 85],
		[3876, 47],
		[3883, 53],
		[3890, 22],
		[3897, 50],
		[3904, 35],
		[3911, 7],
		[3918, 45],
		[3925, 15],
		[3932, 21],
		[3939, 46],
		[3946, 41],
		[3953, 11],
		[3960, 13],
		[3967, 3],
		[3974, 10],
		[3981, 15],
		[3988, 37],
		[3995, 31],
		[4002, 24],
		[4009, 34],
		[4016, 44],
		[4023, 27],
		[4030, 56],
		[4037, 68],
		[4044, 36],
		[4051, 25],
		[4058, 2],
		[4065, 7],
		[4072, 6],
		[4079, 27],
		[4086, 25],
		[4093, 16],
		[4100, 17],
		[4107, 26],
		[4114, 7],
		[4121, 17],
		[4128, 25]
	],
	"esm": true,
	"cjs": false
}
