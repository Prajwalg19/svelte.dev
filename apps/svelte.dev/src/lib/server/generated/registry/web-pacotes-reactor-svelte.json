{
	"name": "@web-pacotes/reactor-svelte",
	"description": "Manage reactive state using Flutter Bloc in Svelte apps.",
	"repo_url": "https://github.com/web-pacotes/reactor-svelte",
	"authors": ["freitzzz"],
	"homepage": "https://github.com/web-pacotes/reactor-svelte#readme",
	"downloads": 6,
	"updated": "2024-04-17T22:26:52.027Z",
	"tags": ["miscellaneous"],
	"typescript": true,
	"version": "0.0.5",
	"svelte_range": "^4.0.0",
	"last_rune_check_version": "0.0.5",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@web-pacotes/reactor-svelte",
				"version": "0.0.5",
				"size": 17406
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# reactor-svelte\n\nReactive state manager based on Flutter Bloc library using Svelte stores\n\n<p align=\"center\">\n    <img src=\"https://raw.githubusercontent.com/web-pacotes/reactor/master/art/reactor-svelte-logo.webp\" alt=\"library logo\"/>\n</p>\n\n![npm version](https://badgen.net/npm/v/@web-pacotes/reactor-svelte) ![npm total downloads](https://badgen.net/npm/dt/@web-pacotes/reactor-svelte) ![bundlephobia bundle size](https://badgen.net/bundlephobia/min/@web-pacotes/reactor-svelte)\n\n---\n\n## How to use\n\nFirst, install the dependency using your package manager:\n\n```shell\nnpm i @web-pacotes/reactor-svelte\n```\n\nNow create your first reactor:\n\n```typescript\n// counter-reactor.ts\n\ntype CounterEvent = 'inc' | 'dec';\ntype CounterState = number;\n\nexport class CounterReactor extends Reactor<CounterEvent, CounterState> {\n\tconstructor() {\n\t\tsuper(0);\n\n\t\tthis.on(\n\t\t\t(event, emit) => {\n\t\t\t\tswitch (event) {\n\t\t\t\t\tcase 'inc':\n\t\t\t\t\t\temit(this.state + 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'dec':\n\t\t\t\t\t\temit(this.state - 1);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t},\n\t\t\t(event) => event !== undefined\n\t\t);\n\t}\n}\n```\n\nOn your Svelte component/page, instantiate the reactor and react to state changes:\n\n```sveltehtml\n// counter.svelte\n\n<script lang=\"ts\">\n\timport { CounterReactor } from './counter-reactor';\n\n\tconst counter = new CounterReactor();\n</script>\n\n<div>\n\tCounter: {$counter}\n\t<div>\n\t\t<button on:click={() => counter.add('inc')}>+</button>\n\t\t<button on:click={() => counter.add('dec')}>-</button>\n\t</div>\n</div>\n```\n\n## Features\n\nCurrently, the package provides APIs for:\n\n- implementing new reactors\n- providing one or more reactors to child\n  components ([ReactorProvider](src/lib/provider.svelte), [MultiReactorProvider](src/lib/multi-provider.svelte))\n- resolving reactors from parent components ([resolve](src/lib/provider.ts))\n- listening to reactor state changes ([ReactorListener](src/lib/reactor.svelte))\n\n### Upcoming features\n\nIn the future I plan to bring:\n\n- globally observe reactor events and states\n\n---\n\n## Bugs and Contributions\n\nFound any bug (including typos) in the package? Do you have any suggestion\nor feature to include for future releases? Please create an issue via\nGitHub in order to track each contribution. Also, pull requests are very\nwelcome!\n\nTo contribute, start by setting up your local development environment. The [setup.md](setup.md) document will onboard\nyou on how to do so!\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3736, 50],
		[3743, 91],
		[3750, 108],
		[3757, 93],
		[3764, 10],
		[3771, 11],
		[3778, 16],
		[3785, 5],
		[3792, 6],
		[3799, 1],
		[3806, 6],
		[3813, 4],
		[3820, 4],
		[3834, 27],
		[3841, 1],
		[3848, 3],
		[3855, 2],
		[3862, 10],
		[3869, 3],
		[3876, 2],
		[3883, 2],
		[3890, 1],
		[3897, 4],
		[3904, 4],
		[3911, 5],
		[3918, 2],
		[3925, 8],
		[3932, 1],
		[3939, 3],
		[3946, 3],
		[3953, 2],
		[3960, 2],
		[3974, 6],
		[3981, 3],
		[3995, 3],
		[4016, 11],
		[4023, 13],
		[4030, 2],
		[4037, 15],
		[4044, 10],
		[4051, 7],
		[4058, 1],
		[4065, 1],
		[4072, 1],
		[4079, 3],
		[4093, 12],
		[4100, 13],
		[4107, 2],
		[4114, 6],
		[4121, 13],
		[4128, 2],
		[4135, 6]
	],
	"esm": true,
	"cjs": false
}
