{
	"name": "ninjaformkit",
	"description": "Build forms with validation in SvelteKit apps.",
	"repo_url": "https://github.com/ninjagator/NinjaFormKit",
	"authors": ["ninjagator"],
	"homepage": "https://github.com/ninjagator/NinjaFormKit#readme",
	"downloads": 8,
	"updated": "2024-08-17T15:03:17.755Z",
	"tags": ["design-system"],
	"github_stars": 1,
	"typescript": true,
	"version": "0.0.7",
	"svelte_range": "^4.0.0",
	"kit_range": "^2.0.0",
	"last_rune_check_version": "0.0.7",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "ninjaformkit",
				"version": "0.0.7",
				"size": 61248
			},
			{
				"name": "@tailwindcss/container-queries",
				"version": "0.1.1",
				"size": 8459
			},
			{
				"name": "@types/node",
				"version": "22.15.3",
				"size": 2350386
			},
			{
				"name": "undici-types",
				"version": "6.21.0",
				"size": 83680
			},
			{
				"name": "tailwindcss",
				"version": "3.4.17",
				"size": 5734489
			},
			{
				"name": "arg",
				"version": "5.0.2",
				"size": 13665
			},
			{
				"name": "dlv",
				"version": "1.1.3",
				"size": 5802
			},
			{
				"name": "jiti",
				"version": "1.21.7",
				"size": 2003102
			},
			{
				"name": "is-glob",
				"version": "4.0.3",
				"size": 13609
			},
			{
				"name": "is-extglob",
				"version": "2.1.1"
			},
			{
				"name": "postcss",
				"version": "8.5.3",
				"size": 201969
			},
			{
				"name": "nanoid",
				"version": "3.3.11",
				"size": 32583
			},
			{
				"name": "picocolors",
				"version": "1.1.1",
				"size": 6373
			},
			{
				"name": "source-map-js",
				"version": "1.2.1",
				"size": 139872
			},
			{
				"name": "resolve",
				"version": "1.22.10",
				"size": 145619
			},
			{
				"name": "is-core-module",
				"version": "2.16.1",
				"size": 33475
			},
			{
				"name": "hasown",
				"version": "2.0.2",
				"size": 8765
			},
			{
				"name": "function-bind",
				"version": "1.1.2",
				"size": 31427
			},
			{
				"name": "path-parse",
				"version": "1.0.7",
				"size": 4511
			},
			{
				"name": "supports-preserve-symlinks-flag",
				"version": "1.0.0",
				"size": 9178
			},
			{
				"name": "sucrase",
				"version": "3.35.0",
				"size": 1136988
			},
			{
				"name": "@jridgewell/gen-mapping",
				"version": "0.3.8",
				"size": 81596
			},
			{
				"name": "@jridgewell/set-array",
				"version": "1.2.1",
				"size": 17945
			},
			{
				"name": "@jridgewell/sourcemap-codec",
				"version": "1.5.0",
				"size": 112815
			},
			{
				"name": "@jridgewell/trace-mapping",
				"version": "0.3.25",
				"size": 169330
			},
			{
				"name": "@jridgewell/resolve-uri",
				"version": "3.1.2",
				"size": 53153
			},
			{
				"name": "commander",
				"version": "4.1.1",
				"size": 93231
			},
			{
				"name": "glob",
				"version": "10.4.5",
				"size": 474716
			},
			{
				"name": "minipass",
				"version": "7.1.2",
				"size": 286202
			},
			{
				"name": "jackspeak",
				"version": "3.4.3",
				"size": 297017
			},
			{
				"name": "@isaacs/cliui",
				"version": "8.0.2",
				"size": 27797
			},
			{
				"name": "string-width",
				"version": "5.1.2",
				"size": 5781
			},
			{
				"name": "strip-ansi",
				"version": "7.1.0",
				"size": 4321
			},
			{
				"name": "ansi-regex",
				"version": "6.1.0",
				"size": 5412
			},
			{
				"name": "emoji-regex",
				"version": "9.2.2",
				"size": 97916
			},
			{
				"name": "eastasianwidth",
				"version": "0.2.0"
			},
			{
				"name": "string-width-cjs",
				"version": "4.2.3",
				"size": 5161
			},
			{
				"name": "strip-ansi",
				"version": "6.0.1",
				"size": 4029
			},
			{
				"name": "ansi-regex",
				"version": "5.0.1",
				"size": 5609
			},
			{
				"name": "emoji-regex",
				"version": "8.0.0",
				"size": 48255
			},
			{
				"name": "is-fullwidth-code-point",
				"version": "3.0.0",
				"size": 4994
			},
			{
				"name": "strip-ansi-cjs",
				"version": "6.0.1",
				"size": 4029
			},
			{
				"name": "wrap-ansi",
				"version": "8.1.0",
				"size": 11777
			},
			{
				"name": "ansi-styles",
				"version": "6.2.1",
				"size": 17512
			},
			{
				"name": "wrap-ansi-cjs",
				"version": "7.0.0",
				"size": 10648
			},
			{
				"name": "ansi-styles",
				"version": "4.3.0",
				"size": 16978
			},
			{
				"name": "color-convert",
				"version": "2.0.1",
				"size": 27189
			},
			{
				"name": "color-name",
				"version": "1.1.4",
				"size": 6693
			},
			{
				"name": "string-width",
				"version": "4.2.3",
				"size": 5161
			},
			{
				"name": "minimatch",
				"version": "9.0.5",
				"size": 435003
			},
			{
				"name": "brace-expansion",
				"version": "2.0.1",
				"size": 11486
			},
			{
				"name": "balanced-match",
				"version": "1.0.2",
				"size": 6939
			},
			{
				"name": "path-scurry",
				"version": "1.11.1",
				"size": 535479
			},
			{
				"name": "lru-cache",
				"version": "10.4.3",
				"size": 804301
			},
			{
				"name": "foreground-child",
				"version": "3.3.1",
				"size": 68302
			},
			{
				"name": "cross-spawn",
				"version": "7.0.6",
				"size": 16094
			},
			{
				"name": "which",
				"version": "2.0.2",
				"size": 9975
			},
			{
				"name": "isexe",
				"version": "2.0.0"
			},
			{
				"name": "path-key",
				"version": "3.1.1",
				"size": 4553
			},
			{
				"name": "shebang-command",
				"version": "2.0.0",
				"size": 2556
			},
			{
				"name": "shebang-regex",
				"version": "3.0.0",
				"size": 2828
			},
			{
				"name": "signal-exit",
				"version": "4.1.0",
				"size": 76966
			},
			{
				"name": "package-json-from-dist",
				"version": "1.0.1",
				"size": 36453
			},
			{
				"name": "lines-and-columns",
				"version": "1.2.4",
				"size": 5386
			},
			{
				"name": "mz",
				"version": "2.7.0"
			},
			{
				"name": "any-promise",
				"version": "1.3.0"
			},
			{
				"name": "object-assign",
				"version": "4.1.1"
			},
			{
				"name": "thenify-all",
				"version": "1.6.0"
			},
			{
				"name": "thenify",
				"version": "3.3.1",
				"size": 7920
			},
			{
				"name": "pirates",
				"version": "4.0.7",
				"size": 12564
			},
			{
				"name": "ts-interface-checker",
				"version": "0.1.13",
				"size": 68036
			},
			{
				"name": "chokidar",
				"version": "3.6.0",
				"size": 90200
			},
			{
				"name": "braces",
				"version": "3.0.3",
				"size": 44635
			},
			{
				"name": "fill-range",
				"version": "7.1.1",
				"size": 16743
			},
			{
				"name": "to-regex-range",
				"version": "5.0.1",
				"size": 22939
			},
			{
				"name": "is-number",
				"version": "7.0.0",
				"size": 9615
			},
			{
				"name": "anymatch",
				"version": "3.1.3",
				"size": 9654
			},
			{
				"name": "picomatch",
				"version": "2.3.1",
				"size": 89952
			},
			{
				"name": "normalize-path",
				"version": "3.0.0",
				"size": 9219
			},
			{
				"name": "readdirp",
				"version": "3.6.0",
				"size": 20472
			},
			{
				"name": "glob-parent",
				"version": "5.1.2",
				"size": 12134
			},
			{
				"name": "is-binary-path",
				"version": "2.1.0",
				"size": 3078
			},
			{
				"name": "binary-extensions",
				"version": "2.3.0",
				"size": 5030
			},
			{
				"name": "fast-glob",
				"version": "3.3.3",
				"size": 98396
			},
			{
				"name": "@nodelib/fs.stat",
				"version": "2.0.5",
				"size": 11845
			},
			{
				"name": "@nodelib/fs.walk",
				"version": "1.2.8",
				"size": 26377
			},
			{
				"name": "fastq",
				"version": "1.19.1",
				"size": 45922
			},
			{
				"name": "reusify",
				"version": "1.1.0",
				"size": 11696
			},
			{
				"name": "@nodelib/fs.scandir",
				"version": "2.1.5",
				"size": 22155
			},
			{
				"name": "run-parallel",
				"version": "1.2.0",
				"size": 6563
			},
			{
				"name": "queue-microtask",
				"version": "1.2.3",
				"size": 8367
			},
			{
				"name": "merge2",
				"version": "1.4.1",
				"size": 8897
			},
			{
				"name": "micromatch",
				"version": "4.0.8",
				"size": 56599
			},
			{
				"name": "lilconfig",
				"version": "3.1.3",
				"size": 17959
			},
			{
				"name": "didyoumean",
				"version": "1.2.2",
				"size": 17255
			},
			{
				"name": "postcss-js",
				"version": "4.0.1",
				"size": 8449
			},
			{
				"name": "camelcase-css",
				"version": "2.0.1",
				"size": 4051
			},
			{
				"name": "glob-parent",
				"version": "6.0.2",
				"size": 7719
			},
			{
				"name": "object-hash",
				"version": "3.0.0",
				"size": 58857
			},
			{
				"name": "postcss-import",
				"version": "15.1.0",
				"size": 30855
			},
			{
				"name": "postcss-value-parser",
				"version": "4.2.0",
				"size": 27193
			},
			{
				"name": "read-cache",
				"version": "1.0.0"
			},
			{
				"name": "pify",
				"version": "2.3.0"
			},
			{
				"name": "postcss-nested",
				"version": "6.2.0",
				"size": 13962
			},
			{
				"name": "postcss-selector-parser",
				"version": "6.1.2",
				"size": 186430
			},
			{
				"name": "cssesc",
				"version": "3.0.0",
				"size": 17488
			},
			{
				"name": "util-deprecate",
				"version": "1.0.2"
			},
			{
				"name": "@alloc/quick-lru",
				"version": "5.2.0",
				"size": 14099
			},
			{
				"name": "postcss-load-config",
				"version": "4.0.2",
				"size": 21626
			},
			{
				"name": "yaml",
				"version": "2.7.1",
				"size": 682531
			}
		],
		"dependencies": [
			[0, 1],
			[0, 2],
			[2, 3],
			[0, 4],
			[4, 5],
			[4, 6],
			[4, 7],
			[4, 8],
			[8, 9],
			[4, 10],
			[10, 11],
			[10, 12],
			[10, 13],
			[4, 14],
			[14, 15],
			[15, 16],
			[16, 17],
			[14, 18],
			[14, 19],
			[4, 20],
			[20, 21],
			[21, 22],
			[21, 23],
			[21, 24],
			[24, 25],
			[24, 23],
			[20, 26],
			[20, 27],
			[27, 28],
			[27, 29],
			[29, 30],
			[30, 31],
			[31, 32],
			[32, 33],
			[31, 34],
			[31, 35],
			[30, 36],
			[36, 37],
			[37, 38],
			[36, 39],
			[36, 40],
			[30, 32],
			[30, 41],
			[41, 38],
			[30, 42],
			[42, 43],
			[42, 31],
			[42, 32],
			[30, 44],
			[44, 45],
			[45, 46],
			[46, 47],
			[44, 48],
			[48, 37],
			[48, 39],
			[48, 40],
			[44, 37],
			[27, 49],
			[49, 50],
			[50, 51],
			[27, 52],
			[52, 28],
			[52, 53],
			[27, 54],
			[54, 55],
			[55, 56],
			[56, 57],
			[55, 58],
			[55, 59],
			[59, 60],
			[54, 61],
			[27, 62],
			[20, 63],
			[20, 64],
			[64, 65],
			[64, 66],
			[64, 67],
			[67, 68],
			[68, 65],
			[20, 69],
			[20, 70],
			[4, 71],
			[71, 72],
			[72, 73],
			[73, 74],
			[74, 75],
			[71, 8],
			[71, 76],
			[76, 77],
			[76, 78],
			[71, 79],
			[79, 77],
			[71, 80],
			[80, 8],
			[71, 81],
			[81, 82],
			[71, 78],
			[4, 83],
			[83, 84],
			[83, 85],
			[85, 86],
			[86, 87],
			[85, 88],
			[88, 89],
			[89, 90],
			[88, 84],
			[83, 80],
			[83, 91],
			[83, 92],
			[92, 72],
			[92, 77],
			[4, 93],
			[4, 94],
			[4, 92],
			[4, 12],
			[4, 95],
			[95, 96],
			[4, 97],
			[97, 8],
			[4, 98],
			[4, 78],
			[4, 99],
			[99, 100],
			[99, 101],
			[101, 102],
			[99, 14],
			[4, 103],
			[103, 104],
			[104, 105],
			[104, 106],
			[4, 107],
			[4, 108],
			[108, 109],
			[108, 93],
			[4, 104]
		],
		"circular": []
	},
	"readme": "# Ninja Form Kit\n\nElevate your form development with Ninja Form Kit, a powerful TypeScript library that seamlessly integrates with your theme. This robust toolkit unifies UI generation and form validation into a single configuration object, streamlining your workflow. Leverage type-safe components to create polished, responsive forms with minimal effort. From basic inputs to complex layouts, Ninja Form Kit empowers developers to build professional, user-friendly forms while maintaining code consistency across projects. Simplify your form creation process and enhance productivity with our comprehensive, TypeScript-first solution.\n\n\n## Table of Contents\n\n- [Ninja Form Kit](#ninja-form-kit)\n  - [Table of Contents](#table-of-contents)\n  - [Installation](#installation)\n  - [Quick Start](#quick-start)\n    - [Define the config in loader](#define-the-config-in-loader)\n    - [Use the Form in your template/component](#use-the-form-in-your-templatecomponent)\n    - [Validate the form with actions](#validate-the-form-with-actions)\n    - [Form Config Options](#form-config-options)\n    - [FormField Options](#formfield-options)\n  - [Validation](#validation)\n    - [Validation Options](#validation-options)\n  - [Theming](#theming)\n  - [More examples](#more-examples)\n    - [Register Form](#register-form)\n    - [Login Form](#login-form)\n  - [License](#license)\n\n## Installation\n\nTo install Ninja Form Kit, use npm or yarn:\n\n```sh\nnpm install ninjaformkit\n# or\nyarn add ninjaformkit\n\n```\n\n## Quick Start\n\nTo configure your form, define a formConfig object in your `+page.server.ts` file. This object allows you to specify form properties such as method, action, fields, and validation rules. For optimal type safety, ensure your formConfig adheres to the FormConfig interface. Important: Define `formConfig` outside the load function to guarantee accessibility within actions.\n\n### Define the config in loader\n\n```ts\n\nimport { type FormConfig } from 'ninjaformkit'\n\nconst formConfig = {\n\tmethod: 'post',\n\tfields: {\n\t\temail: {\n\t\t\ttype: 'text',\n\t\t\tvariant: 'email',\n\t\t\tplaceholder: 'Enter your email...',\n\t\t\tlabel: 'Email',\n\t\t\tvalidate: {\n\t\t\t\trequired: true,\n\t\t\t\tisEmail: true\n\t\t\t}\n\t\t},\n\t\tmessage: {\n\t\t\ttype: 'textarea',\n\t\t\tplaceholder: 'Enter your message...',\n\t\t\tlabel: 'Message',\n\t\t\tvalidate: {\n\t\t\t\trequired: true,\n\t\t\t\tminLength: 10,\n\t\t\t\tmaxLength: 500\n\t\t\t}\n\t\t},\n\t\tsubmit: {\n\t\t\ttype: 'submit',\n\t\t\tlabel: 'Submit'\n\t\t}\n\t}\n} satisfies FormConfig;\n\nexport const load: PageServerLoad = async () => {\n\treturn { formConfig };\n};\n\n```\n\n### Use the Form in your template/component\n\n```svelte\n\n<script lang=\"ts\">\n    import { Form } from 'ninjaformkit'\n    export let data;\n</script>\n\n<Form config={data.formConfig} />\n\n\n```\n\n### Validate the form with actions\n\n```ts\n\nimport { validate } from 'ninjaformkit'\n\nexport const actions = {\n\tdefault: async ({ request }) => {\n\t\tconst { errors, hasErrors, values } = await validate(request, formConfig);\n\n\t\tif (hasErrors) {\n                        // Errors will appears under each input that validation fails\n\t\t\treturn fail(400, { errors });\n\t\t}\n\n\t// Process the type safe form values \n        await sendEmail({\n            email: values.email, // string\n            message: values.message // string\n        });\n        \n        return redirect(301, '/');\n \n\t}\n} satisfies Actions;\n\n```\n\n### Form Config Options\n\nThe `formConfig` object allows you to configure various aspects of your form. Below is a table explaining each option:\n\n| Option      | Type                                                                 | Description                                                                                   |\n|-------------|----------------------------------------------------------------------|-----------------------------------------------------------------------------------------------|\n| `action`    | `string`                                                             | The URL to which the form data will be submitted. Optional.                                   |\n| `encType`   | `'application/x-www-form-urlencoded' \\| 'multipart/form-data' \\| 'text/plain'` | The encoding type for the form. Optional.                                                     |\n| `method`    | `'get' \\| 'post'`                                                    | The HTTP method to use when submitting the form. Required.                                    |\n| `fields`    | `Record<string, FormField>`                                          | An object where each key is a field name and the value is a `FormField` object. Required.     |\n| `runLoader` | `boolean` | Denotes weather to run sveltekits `invalidateAll` hook. Optional\n\n### FormField Options\n\nEach field in the `fields` object is a `FormField` with the following options:\n\n| Option          | Type                                                                 | Description                                                                                   |\n|-----------------|----------------------------------------------------------------------|-----------------------------------------------------------------------------------------------|\n| `type`          | `'text' \\| 'textarea' \\| 'submit' \\| 'checkbox' \\| 'radio' \\| 'toggle' \\| 'select' \\| 'file'` | The type of the form field. Required.                                                         |\n| `label`         | `string`                                                             | The label for the form field. Required.                                                       |\n| `defaultValue`  | `string \\| number \\| null`                                           | The default value for the form field. Optional.                                               |\n| `defaultChecked`| `boolean`                                                            | The default checked state for checkbox, radio, or toggle fields. Optional.                    |\n| `width`         | `1 \\| 2 \\| 3 \\| 4 \\| 5 \\| 6 \\| 7 \\| 8 \\| 9 \\| 10 \\| 11 \\| 12`         | The width of the form field, used for fieldset grid layout. Optional. Defaults to 12.                       |\n| `variant`       | `'password' \\| 'email' \\| 'text' \\| 'color' \\| 'number'`             | The variant of the form field, specifying a more specific type. Works with the \"text\" input type. Defaults to \"text\". Optional.                     |\n| `placeholder`   | `string`                                                             | The placeholder text for the form field. Optional.                                            |\n| `multiple`      | `boolean`                                                            | Whether the field allows multiple values (e.g., for file and select inputs). Optional.                   |\n| `break`         | `boolean`                                                            | Weather to break into a new row in grid. Optional.                                     |\n| `icon`          | `string`                                                             | An icon to display with the form field. This relies on @iconify library (e.g. `material-symbols:verified-user`) Optional.                                             |\n| `options`       | `{ value: string \\| number; label: string; }[]`                      | An array of options for select and radio fields. Each option has a `value` and a `label`. Optional. Note Select and Radio inputs will throw an error if these values are not set.    |\n| `disabled`      | `boolean`                                                            | Whether the form field is disabled. Optional.                                                 |\n| `before`        | `string`                                                             | Content to display before the form field. Optional.                                           |\n| `after`         | `string`                                                             | Content to display after the form field. Optional.                                            |\n| `validate`      | `object`                                                             | Validation rules for the form field. Optional.          \n\n## Validation                                      \n\nNinja Form Kit currently has 19 validate options.\n\n### Validation Options\n\nThe `validate` object allows you to specify validation rules for the form field. Below is a table explaining each option:\n\n| Option            | Type          | Description                                                                                   |\n|-------------------|---------------|-----------------------------------------------------------------------------------------------|\n| `required`        | `boolean`     | Whether the field is required.                                                                |\n| `minLength`       | `number`      | The minimum length of the field value.                                                        |\n| `maxLength`       | `number`      | The maximum length of the field value.                                                        |\n| `min`             | `number`      | The minimum value for numeric fields.                                                         |\n| `max`             | `number`      | The maximum value for numeric fields.                                                         |\n| `isEmail`         | `boolean`     | Whether the field value should be a valid email address.                                      |\n| `isUrl`           | `boolean`     | Whether the field value should be a valid URL.                                                |\n| `isNumber`        | `boolean`     | Whether the field value should be a valid number.                                             |\n| `isFloat`         | `boolean`     | Whether the field value should be a valid float.                                              |\n| `isAlpha`         | `boolean`     | Whether the field value should contain only alphabetic characters.                            |\n| `isAlphanumeric`  | `boolean`     | Whether the field value should contain only alphanumeric characters.                          |\n| `isDate`          | `boolean`     | Whether the field value should be a valid date.                                               |\n| `isTime`          | `boolean`     | Whether the field value should be a valid time.                                               |\n| `isDateTime`      | `boolean`     | Whether the field value should be a valid date-time.                                          |\n| `mimeTypes`       | `Array<string>`| An array of acceptable MIME types for file inputs.                                            |\n| `maxSize`         | `number`      | The maximum file size for file inputs, in bytes.                                              |\n| `matches`         | `string`      | A regex pattern that the field value should match.                                            |\n| `badPasswordCheck`| `boolean`     | Whether to check the field value against a list of common bad passwords. Utilises pwned passwords API.                   |\n\n## Theming\n\nNinja Form Kit offers a wide array of customizable CSS variables. Simply import the CSS file into your `+layout.svelte` and tailor the variables to perfectly match your theme.\n\n```css\n\n:root {\n    --nfk-font: ui-sans-serif, system-ui, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\n    --nfk-default: #005f8b; // Button, radio and toggle colours\n    --nfk-default-hover: #0a5171; // Button, radio and toggle colours hover\n    --nfk-text: #000000; // text colour for labels\n    --nkf-input-bg: #f3f4f6; // Back ground colour for form inputs\n    --nkf-input-bg-file-hover: #f3f4f6; // Hover state for file input\n    --nfk-button-text: #ffffff; // Text colout for buttons and radio\n    --nkf-placeholder: #a0aec0; // Placeholder text colour\n    --nfk-border: #e2e8f0; // Input border\n    --nkf-error: #e53e3e; // Error color for border and error text\n    --nkf-required: #e84949; // Required asterix on inouts with validation rules\n    --nfk-outline: #0073aa; // Outline for inout focused\n    --nfk-gap-x: 14px; // Gap between inputs row\n    --nfk-gap-y: 14px; // Gap between inputs colun\n}\n\n@media (prefers-color-scheme: dark) {\n    :root {\n        --nfk-default: #005f8b;\n        --nfk-text: #FFFFFF;\n        --nkf-input-bg: #35383c;\n        --nkf-input-bg-file-hover: #595c61;\n        --nfk-button-text: #ffffff;\n        --nkf-placeholder: #dfe3e7;\n        --nfk-border: #e2e8f0;\n        --nkf-error: #e53e3e;\n        --nkf-required: #e84949;\n        --nfk-outline: #0073aa;\n        --nkf-btn-text: #ffffff;\n    }\n}\n\n```\n\n## More examples\n\n### Register Form\n\n```ts \nconst formConfig = {\n\tmethod: 'post',\n\tfields: {\n\t\tusername: {\n\t\t\ttype: 'text',\n\t\t\tlabel: 'Username',\n\t\t\tplaceholder: 'Enter your username...',\n\t\t\twidth: 5,\n\t\t\tvalidate: {\n\t\t\t\trequired: true,\n\t\t\t\tminLength: 3,\n\t\t\t\tmaxLength: 20\n\t\t\t}\n\t\t},\n\t\temail: {\n\t\t\ttype: 'text',\n\t\t\tvariant: 'email',\n\t\t\tlabel: 'Email',\n\t\t\tplaceholder: 'Enter your email...',\n\t\t\twidth: 7,\n\t\t\tvalidate: {\n\t\t\t\trequired: true,\n\t\t\t\tisEmail: true\n\t\t\t}\n\t\t},\n\t\treferer: {\n\t\t\ttype: 'select',\n\t\t\tlabel: 'Referer',\n\t\t\tplaceholder: 'Select an option...',\n\t\t\twidth: 4,\n\t\t\toptions: [\n\t\t\t\t{ label: 'Google', value: 'google' },\n\t\t\t\t{ label: 'Friend', value: 'friend' },\n\t\t\t\t{ label: 'Other', value: 'other' }\n\t\t\t],\n\t\t\tbreak: true,\n\t\t\tvalidate: {\n\t\t\t\trequired: true\n\t\t\t}\n\t\t},\n\t\taccountType: {\n\t\t\ttype: 'radio',\n\t\t\tlabel: 'Account Type',\n\t\t\twidth: 8,\n\t\t\toptions: [\n\t\t\t\t{ label: 'Personal', value: 'personal' },\n\t\t\t\t{ label: 'Business', value: 'business' }\n\t\t\t],\n\t\t\tvalidate: {\n\t\t\t\trequired: true\n\t\t\t}\n\t\t},\n\t\tpassword: {\n\t\t\ttype: 'text',\n\t\t\tvariant: 'password',\n\t\t\tlabel: 'Password',\n\t\t\tplaceholder: 'Enter your password...',\n\t\t\twidth: 6,\n\t\t\tvalidate: {\n\t\t\t\trequired: true,\n\t\t\t\tminLength: 8,\n\t\t\t\tbadPasswordCheck: true\n\t\t\t}\n\t\t},\n\t\tconfirmPassword: {\n\t\t\ttype: 'text',\n\t\t\tvariant: 'password',\n\t\t\tlabel: 'Confirm Password',\n\t\t\tplaceholder: 'Confirm your password...',\n\t\t\twidth: 6,\n\t\t\tvalidate: {\n\t\t\t\trequired: true,\n\t\t\t\tmatches: 'password'\n\t\t\t}\n\t\t},\n\t\tnewsletter: {\n\t\t\ttype: 'checkbox',\n\t\t\tlabel: 'Subscribe to newsletter',\n\t\t\tdefaultChecked: true\n\t\t},\n\t\tsubmit: {\n\t\t\ttype: 'submit',\n\t\t\tlabel: 'Submit'\n\t\t}\n\t}\n} satisfies FormConfig;\n\n```\n\n### Login Form\n\n```ts\n\nconst formConfig = {\n\tmethod: 'post',\n\tfields: {\n\t\temail: {\n\t\t\ttype: 'text',\n\t\t\tvariant: 'email',\n\t\t\tplaceholder: 'Enter your email...',\n\t\t\tlabel: 'Email',\n\t\t\tvalidate: {\n\t\t\t\trequired: true,\n\t\t\t\tisEmail: true\n\t\t\t},\n                        after: `<a href=\"/reset-password\" class=\"text-sm mt-3 text-right\">Forgot Password</a>`\n\t\t},\n\t\tpassword: {\n\t\t\ttype: 'text',\n\t\t\tvariant: 'password',\n\t\t\tplaceholder: 'Enter your password...',\n\t\t\tlabel: 'Password',\n\t\t\tvalidate: {\n\t\t\t\trequired: true\n\t\t\t}\n\t\t},\n\t\trememberMe: {\n\t\t\ttype: 'checkbox',\n\t\t\tlabel: 'Remember me'\n\t\t},\n\t\tsubmit: {\n\t\t\ttype: 'submit',\n\t\t\tlabel: 'Submit'\n\t\t}\n\t}\n} satisfies FormConfig;\n\n```\n\n## License\n\nThis project is licensed under the MIT License. See the [LICENSE](LICENSE) file for details.",
	"legacy_svelte": true,
	"downloads_history": [
		[3876, 322],
		[3883, 26],
		[3890, 31],
		[3897, 7],
		[3904, 21],
		[3911, 7],
		[3918, 5],
		[3925, 2],
		[3939, 8],
		[3946, 1],
		[3953, 2],
		[3981, 1],
		[3988, 7],
		[4002, 1],
		[4009, 1],
		[4016, 4],
		[4023, 11],
		[4030, 5],
		[4037, 4],
		[4044, 8],
		[4051, 4],
		[4065, 1],
		[4100, 7],
		[4107, 15],
		[4114, 8],
		[4121, 6],
		[4128, 8]
	],
	"esm": true,
	"cjs": false
}
