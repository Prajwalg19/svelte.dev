{
	"name": "@sveltejs/svelte-scroller",
	"description": "Create scroll-based components for Svelte apps.",
	"repo_url": "https://github.com/sveltejs/svelte-scroller",
	"authors": ["dominik_g", "rich_harris", "svelte-admin", "conduitry"],
	"homepage": "https://github.com/sveltejs/svelte-scroller#readme",
	"downloads": 718,
	"updated": "2021-06-10T04:13:51.114Z",
	"tags": ["ui"],
	"github_stars": 360,
	"typescript": false,
	"version": "2.0.7",
	"svelte_range": "^3.38.2",
	"last_rune_check_version": "2.0.7",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@sveltejs/svelte-scroller",
				"version": "2.0.7",
				"size": 11662
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# svelte-scroller ([demo](https://svelte.dev/repl/76846b7ae27b3a21becb64ffd6e9d4a6?version=3))\n\nA scroller component for Svelte apps.\n\n## Installation\n\n```bash\nyarn add @sveltejs/svelte-scroller\n```\n\n## Usage\n\n```html\n<script>\n  import Scroller from \"@sveltejs/svelte-scroller\";\n\n  let index, offset, progress;\n</script>\n\n<style>\n  section {\n    height: 80vh;\n  }\n</style>\n\n<Scroller top=\"{0.2}\" bottom=\"{0.8}\" bind:index bind:offset bind:progress>\n  <div slot=\"background\">\n    <p>\n      This is the background content. It will stay fixed in place while the\n      foreground scrolls over the top.\n    </p>\n\n    <p>Section {index + 1} is currently active.</p>\n  </div>\n\n  <div slot=\"foreground\">\n    <section>This is the first section.</section>\n    <section>This is the second section.</section>\n    <section>This is the third section.</section>\n  </div>\n</Scroller>\n```\n\nYou must have one `slot=\"background\"` element and one `slot=\"foreground\"` element — see [composing with &lt;slot&gt;](https://svelte.dev/tutorial/slots) for more info.\n\n## Parameters\n\nThe following parameters are available:\n\n| parameter | default   | description                                                                                                                                                                                                         |\n| --------- | --------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| top       | 0         | The vertical position that the top of the foreground must scroll past before the background becomes fixed, as a proportion of window height                                                                         |\n| bottom    | 1         | The inverse of `top` — once the bottom of the foreground passes this point, the background becomes unfixed                                                                                                          |\n| threshold | 0.5       | Once a section crosses this point, it becomes 'active'                                                                                                                                                              |\n| query     | 'section' | A CSS selector that describes the individual sections of your foreground                                                                                                                                            |\n| parallax  | false     | If `true`, the background will scroll such that the bottom edge reaches the `bottom` at the same time as the foreground. This effect can be unpleasant for people with high motion sensitivity, so use it advisedly |\n\n## `index`, `offset`, `progress` and `count`\n\nBy binding to these properties, you can track the user's behaviour:\n\n- `index` — the currently active section\n- `offset` — how far the section has scrolled past the `threshold`, as a value between 0 and 1\n- `progress` — how far the foreground has travelled, where 0 is the top of the foreground crossing `top`, and 1 is the bottom crossing `bottom`\n- `count` — the number of sections\n\nYou can rename them with e.g. `bind:index={i}`.\n\n## Configuring webpack\n\nIf you're using webpack with [svelte-loader](https://github.com/sveltejs/svelte-loader), make sure that you add `\"svelte\"` to [`resolve.mainFields`](https://webpack.js.org/configuration/resolve/#resolve-mainfields) in your webpack config. This ensures that webpack imports the uncompiled component (`src/index.html`) rather than the compiled version (`index.mjs`) — this is more efficient.\n\nIf you're using Rollup with [rollup-plugin-svelte](https://github.com/rollup/rollup-plugin-svelte), this will happen automatically.\n\n## License\n\n[LIL](LICENSE)\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3596, 797],
		[3603, 750],
		[3610, 700],
		[3617, 739],
		[3624, 639],
		[3631, 585],
		[3638, 521],
		[3645, 390],
		[3652, 639],
		[3659, 618],
		[3666, 658],
		[3673, 730],
		[3680, 736],
		[3687, 636],
		[3694, 712],
		[3701, 1314],
		[3708, 1097],
		[3715, 1074],
		[3722, 1055],
		[3729, 737],
		[3736, 814],
		[3743, 807],
		[3750, 1115],
		[3757, 864],
		[3764, 821],
		[3771, 914],
		[3778, 869],
		[3785, 930],
		[3792, 1009],
		[3799, 950],
		[3806, 1042],
		[3813, 963],
		[3820, 911],
		[3827, 890],
		[3834, 665],
		[3841, 877],
		[3848, 809],
		[3855, 821],
		[3862, 1203],
		[3869, 1426],
		[3876, 849],
		[3883, 1072],
		[3890, 1161],
		[3897, 774],
		[3904, 775],
		[3911, 881],
		[3918, 1127],
		[3925, 904],
		[3932, 1374],
		[3939, 1188],
		[3946, 894],
		[3953, 1410],
		[3960, 1004],
		[3967, 672],
		[3974, 746],
		[3981, 486],
		[3988, 572],
		[3995, 681],
		[4002, 665],
		[4009, 204],
		[4016, 365],
		[4023, 535],
		[4030, 631],
		[4037, 673],
		[4044, 642],
		[4051, 802],
		[4058, 953],
		[4065, 661],
		[4072, 975],
		[4079, 621],
		[4086, 487],
		[4093, 690],
		[4100, 844],
		[4107, 639],
		[4114, 718],
		[4121, 862],
		[4128, 486],
		[4135, 621]
	]
}
