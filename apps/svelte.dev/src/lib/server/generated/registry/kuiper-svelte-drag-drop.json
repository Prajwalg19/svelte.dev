{
	"name": "@kuiper/svelte-drag-drop",
	"description": "Create drag and drop image lists in Svelte applications.",
	"repo_url": "https://github.com/kofkuiper/svelte-drag-drop",
	"authors": ["kuiper"],
	"homepage": "https://github.com/kofkuiper/svelte-drag-drop",
	"downloads": 4,
	"updated": "2023-12-05T15:17:34.946Z",
	"tags": ["ui"],
	"github_stars": 1,
	"typescript": true,
	"version": "0.0.1",
	"svelte_range": "^4.0.0",
	"kit_range": "^1.27.4",
	"last_rune_check_version": "0.0.1",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@kuiper/svelte-drag-drop",
				"version": "0.0.1",
				"size": 9641
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# Svelte Drag Drop\r\n\r\nThis component is designed to effortlessly showcase a dynamic list of items, primarily images, allowing users to easily reorder them via intuitive drag-and-drop functionality.\r\n\r\nUtilizing this component is a breezeâ€”simply set the 'items' prop, and you're good to go! \r\n\r\n## :rocket: Installation\r\nYou can install the svelte-drag-drop component from npm by running the following command:\r\n```\r\n$ npm install @kuiper/svelte-drag-drop\r\n```\r\n\r\n\r\nhttps://github.com/kofkuiper/svelte-drag-drop/assets/104291370/eed53dd0-fd17-48ae-ae3c-db2827b0bb96\r\n\r\n\r\n## :fire: Usage\r\n### Basic usage example\r\n```ts\r\n<script lang=\"ts\">\r\n\timport DragDrop from '@kuiper/svelte-drag-drop';\r\n\tlet items = [\r\n\t\t'https://images.unsplash.com/photo-1700730025710-58ff304c1c8b?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwxfDB8MXxyYW5kb218MHx8fHx8fHx8MTcwMTc4MTEyMA&ixlib=rb-4.0.3&q=80&w=1080',\r\n        ...\r\n\t];\r\n</script>\r\n\r\n\r\n<DragDrop bind:items/>\r\n```\r\n\r\n### Handle events example\r\n\r\n```ts\r\n<script lang=\"ts\">\r\n\timport DragDrop from '@kuiper/svelte-drag-drop';\r\n\tlet items = [\r\n\t\t'https://images.unsplash.com/photo-1700730025710-58ff304c1c8b?crop=entropy&cs=tinysrgb&fit=max&fm=jpg&ixid=MnwxfDB8MXxyYW5kb218MHx8fHx8fHx8MTcwMTc4MTEyMA&ixlib=rb-4.0.3&q=80&w=1080',\r\n        ...\r\n\t];\r\n\ttype EventType = Event & { dataTransfer?: any; target?: any };\r\n\r\n\t// Handle Drag & Drop events\r\n\tfunction onDragStart(e: EventType) {\r\n\t\tconsole.log('onDragStart: ', e);\r\n\t}\r\n\tfunction onDrag(e: EventType) {\r\n\t\tconsole.log('onDrag: ', e);\r\n\t}\r\n\tfunction onDragEnd(e: EventType) {\r\n\t\tconsole.log('onDragEnd: ', e);\r\n\t}\r\n\tfunction onDragEnter(e: EventType) {\r\n\t\tconsole.log('onDragEnter: ', e);\r\n\t}\r\n\tfunction onDragOver(e: EventType) {\r\n\t\tconsole.log('onDragOver: ', e);\r\n\t}\r\n\tfunction onDragLeave(e: EventType) {\r\n\t\tconsole.log('onDragLeave: ', e);\r\n\t}\r\n\tfunction onDrop(e: EventType) {\r\n\t\tconsole.log('onDrop: ', e);\r\n\t}\r\n</script>\r\n\r\n<DragDrop\r\n\tbind:items\r\n\ton:onDragStart={(e) => onDragStart(e.detail)}\r\n\ton:onDrag={(e) => onDrag(e.detail)}\r\n\ton:onDragEnd={(e) => onDragEnd(e.detail)}\r\n\ton:onDragEnter={(e) => onDragEnter(e.detail)}\r\n\ton:onDragOver={(e) => onDragOver(e.detail)}\r\n\ton:onDragLeave={(e) => onDragLeave(e.detail)}\r\n\ton:onDrop={(e) => onDrop(e.detail)}\r\n/>\r\n\r\n```\r\n\r\n## :tada: Props\r\n- `items`: images list (required)\r\n- (optional)\r\n  - `onDragStart`: The user starts dragging an element or text selection.\r\n  - `onDrag`: An element or text selection is being dragged (every 350ms).\r\n  - `onDragEnd`: A drag operation is being ended (by releasing a mouse button or hitting the escape key).\r\n  - `onDragEnter`: A dragged element or text selection enters a valid drop target.\r\n  - `onDragOver`: An element or text selection is being dragged over a valid drop target (every 350ms).\r\n  - `onDragLeave`: A dragged element or text selection leaves a valid drop target.\r\n  - `onDrop`: An element is dropped on a valid drop target.\r\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3624, 67],
		[3631, 2],
		[3638, 3],
		[3645, 1],
		[3652, 2],
		[3659, 2],
		[3666, 4],
		[3673, 2],
		[3680, 2],
		[3694, 1],
		[3701, 1],
		[3722, 3],
		[3743, 1],
		[3750, 1],
		[3757, 2],
		[3764, 1],
		[3771, 3],
		[3778, 1],
		[3785, 1],
		[3792, 1],
		[3799, 1],
		[3806, 2],
		[3813, 3],
		[3820, 1],
		[3834, 6],
		[3848, 1],
		[3862, 2],
		[3869, 1],
		[3883, 2],
		[3897, 1],
		[3904, 1],
		[3925, 1],
		[3932, 2],
		[3946, 1],
		[3974, 1],
		[3995, 1],
		[4016, 3],
		[4023, 2],
		[4037, 3],
		[4044, 8],
		[4051, 2],
		[4058, 1],
		[4072, 2],
		[4086, 3],
		[4093, 2],
		[4100, 3],
		[4107, 3],
		[4114, 4],
		[4121, 5],
		[4128, 3]
	],
	"esm": true,
	"cjs": false
}
