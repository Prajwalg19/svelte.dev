{
	"name": "svelte-retag",
	"description": "Wrap Svelte components as custom elements with light DOM support.",
	"repo_url": "https://github.com/patricknelson/svelte-retag",
	"authors": ["patricknelson"],
	"homepage": "https://github.com/patricknelson/svelte-retag#readme",
	"downloads": 98,
	"updated": "2024-06-25T01:40:34.502Z",
	"tags": ["tooling"],
	"github_stars": 42,
	"typescript": true,
	"version": "1.7.0",
	"svelte_range": "^3.19.0 || ^4.0.0",
	"kit_range": "^1.30.4",
	"last_rune_check_version": "1.7.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-retag",
				"version": "1.7.0",
				"size": 72592
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "<img src=\"logo/svelte-retag.svg\" width=\"348\">\n\n# svelte-retag\n\n![Unit Tests](https://github.com/patricknelson/svelte-retag/actions/workflows/unit-tests.yml/badge.svg)\n\nA web component wrapper for Svelte 3 and 4. Embeds your Svelte app or components inside custom elements using the light\nDOM _or_ shadow DOM. Automatically forwards all slots and attributes to your Svelte app.\n\n**Demo:** https://svelte-retag.vercel.app/\n\n## Core Features\n\n* üåü **Light DOM:** Allows you to render your Svelte components as custom elements in the light DOM as usual.\n* üé∞ **Slots & Nesting:** Supports default and named slots in the _light DOM_ (with nesting).\n* üß≠ **Context:** Use `setContext()` and `getContext()` and just compose your components as custom elements as you\n\tnormally would ([see live tab demo](https://svelte-retag.vercel.app/)). Supports nesting.\n* ‚ö° **Vite HMR:** Unlike Svelte, these custom elements are also compatible with Vite's HMR. It avoids the\n\tinfamous `Failed to execute 'define' on 'CustomElementRegistry'` errors.\n* üèÉ‚Äç‚ôÇÔ∏è **IIFE/UMD:** Supports building to `iife` and `umd` for eager rendering to the light DOM, as soon as the\n\tparser encounters the custom element. Reduces CLS (Cumulative Layout Shift), making it interactive more quickly\n\t_without_ waiting for `defer`'d scripts (such as modules).\n* ‚öô **Composability:** `svelte-retag` gives you the flexibility to use your component as you normally would within\n\tSvelte _and_ as a custom element outside of Svelte (supporting both `<ExampleComponent />` and `<example-component>`).\n\tFor details on how to use with PHP, Python, Ruby, etc., see [Backend Integration](#backend-integration) below.\n* üíº **Portability:** Enables the freedom to utilize your Svelte components anywhere custom elements are supported,\n\tregardless of the stack (great for upgrading legacy applications).\n\n## Why?\n\nSvelte already allows you to compile your components to custom elements. However, it's missing a few extra features:\n\n* Svelte 3: You have to use shadow DOM (no light DOM compatibility at all)\n* Svelte 4: You cannot use slots in the light DOM (https://github.com/sveltejs/svelte/issues/8963), which also means no\n\tnesting of your web components\n* No context support (https://github.com/sveltejs/svelte/issues/8987)\n* Vite HMR doesn't work with custom elements (https://github.com/sveltejs/svelte/issues/8681\n\tand https://github.com/sveltejs/svelte-hmr/issues/26)\n\n## How do I use it?\n\n### Installation & Quick Start\n\n```bash\nnpm install svelte-retag\n```\n\nCheck out the [Hello World demo](https://github.com/patricknelson/svelte-retag/tree/main/demo/hello-world) to see it\nin action yourself and for instructions on how to get started from scratch.\n\n### <a id=\"backend-integration\" />Backend Integration\n\nIf you're running a non-JavaScript backend such as PHP, Python, Ruby, etc. and would still like to use Vite (but cannot\nrely solely on Vite for local development),\nsee [Vite's Backend Integration documentation](https://vitejs.dev/guide/backend-integration.html).\nThis will guide you on how to run both your specific backend _and_ Vite's development server simultaneously.\n\n#### Svelte vs. SvelteKit\n\nNote that if you already have an existing backend, it is recommended that you just install `svelte` and not\n`@sveltejs/kit` since the extra metaframework features of SvelteKit (such as routing) may not be necessary. SvelteKit is\nnow installed by default in the official documentation, so the extra complexity may be confusing when you are already\nrunning a backend and just using `svelte-retag` to add web components into an existing site.\n\n### Demo Code\n\nAdd the following to your main entrypoint. If you are using Vite, this would likely be `src/main.js`.\n\n```javascript\nimport svelteRetag from 'svelte-retag';\nimport HelloWorld from './HelloWorld.svelte';\n\nsvelteRetag({\n\tcomponent: HelloWorld,\n\ttagname: 'hello-world',\n\n\t// Optional:\n\tattributes: true, // Forward all attributes to your component, or set to explicit list of attributes, e.g. ['greetperson'] or leave empty\n\tshadow: false, // Use the light DOM\n\thref: '/your/stylesheet.css', // Only necessary if shadow is true\n});\n```\n\nAnd in the `HelloWorld.svelte` Svelte component:\n\n```svelte\n<script>\n\texport let greetPerson = 'World';\n</script>\n\n<h1>Hello {greetPerson}!</h1>\n```\n\nNow anywhere you use the `<hello-world>` tag, you'll get a Svelte component. Note that you must set your tag\nname\nto [anything containing a dash](https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_custom_elements).\n\nTo align with Svelte 4, **attributes** are automatically converted to lowercase (following\nthe [Lit-style naming convention](https://lit.dev/docs/components/properties/#observed-attributes)). So, `greetPerson`\non your component would be automatically made available as `greetperson` on your custom element.\n\n```html\n\n<hello-world greetperson=\"Cris\"></hello-world>\n```\n\nFor more info on getting started, take a look at\nthe [Hello World demo](https://github.com/patricknelson/svelte-retag/tree/main/demo/hello-world).\n\n### Options üõ†\n\n| Option                        |   Default    | Description|\n|-------------------------------|:------------:||\n| `component`                   | _(required)_ | The constructor for your Svelte component (from `import`|\n| `tagname`                     | _(required)_ | The custom element tag name to use ([must contain a dash](https://developer.mozilla.org/en-US/docs/Web/API/Web_components/Using_custom_elements))                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       |\n| `attributes`                  |     `[]`     | `Array` (legacy): Explicit list of attributes to reactively forward to your component. Attributes must be the lowercase version of your Svelte component props ([similar to Lit](https://lit.dev/docs/components/properties/#observed-attributes)). <br><br> `Boolean` (recommended): If set to `true`, will automatically forward all attributes to your component props. If `false`, will not forward anything. <br><br> **Note:** In v2, this option will be removed and all attributes will be forwarded by default (for consistency with Svelte 4's custom elements, see https://github.com/patricknelson/svelte-retag/issues/36). |\n| `shadow`                      |   `false`    | Optional. Indicates if this component should use shadow DOM. <br/><br/> **Note:** Only basic support for shadow DOM is currently provided. See https://github.com/patricknelson/svelte-retag/issues/6.                                                                                                                                                                                                                                                                                                                                                                                                                                  |\n| `ignoreCommonAttribWarnings`  |   `false`    | Optional. Suppresses warnings in development mode about common attributes (such as `id`, `class`, `style` and `data-*`) if they don't already exist on the component. Set to an array to customize the list of ignored attributes.\n| `href`                        |     `''`     | Optional. URL to your stylesheet. Allows you to ensure your styles are included in the shadow DOM. This option is only useful when `shadow` is set to `true`.                                                                                                                                                                                                                                                                                                                                                                                                                                                                           |\n\n**Note:** For portability, `svelte-retag`'s API is fully backward compatible\nwith [`svelte-tag@^1.0.0`](https://github.com/crisward/svelte-tag).\n\n\n<details>\n<summary>For experimental options, click here.</summary>\n\n### Experimental Options üë®‚Äçüî¨\n\n‚ö† **Warning: These features are not production ready and are purely experimental.** ‚ö†\n\n| Option       | Default | Description|\n|--------------|:-------:||\n| `hydratable` | `false` | Optional. Compatible with Light DOM rendering only. <br><br> If enabled, allows for SSR/SSG of custom elements managed by `svelte-retag` by including extra markup so that they can be initialized client-side from pre-rendered HTML (a.k.a. \"hydrated\").  See [hydration demo here](https://svelte-retag.vercel.app/hydratable.html). <br><br> **Do not** enable this for regular use on the front-end. Enable this _**only**_ during SSR/SSG to allow for proper initialization and **only** if you plan on re-rendering a second time (e.g. first in SSG/SSR _and then_ finally in-browser). <br><br> **Why does this exist?** <br><br> The initial use case for this is to address rendering bugs in [Percy](https://percy.io) which renders the components 2 times (first in a local headless _Chrome browser_, then a second time in the cloud). |\n\n</details>\n\n## Change Log\n\n### v1\n\nChanges since forking from [`svelte-tag`](https://github.com/crisward/svelte-tag) (upstream):\n\n- Migrate to Vitest for unit testing (see https://github.com/crisward/svelte-tag/pull/14)\n- Update logo\n- Fix nested slot support (https://github.com/patricknelson/svelte-retag/pull/5)\n- Better support for slots during early execution of IIFE compiled packages, i.e. use `MutationObserver` to watch\n\tfor light DOM slots during initial parsing (see https://github.com/patricknelson/svelte-retag/issues/7)\n- Support Lit-style lowercase props (see https://github.com/patricknelson/svelte-retag/pull/9)\n- Svelte 4 support (tested)\n- Support context (see https://github.com/patricknelson/svelte-retag/issues/10, PR\n\tat https://github.com/patricknelson/svelte-retag/pull/18)\n- Add demos to vercel site (see https://github.com/patricknelson/svelte-retag/issues/11)\n- Add step-by-step instructions and provided a simple MVP\n\texample (https://github.com/patricknelson/svelte-retag/pull/24)\n- Automatically forward all attributes to component (i.e. `attributes: true`) (https://github.com/patricknelson/svelte-retag/issues/34)\n- Add better TypeScript support (https://github.com/patricknelson/svelte-retag/pull/33)\n- Add ability to suppress warnings for common attributes (such as `id`, `class`, `style` and `data-*`) if they don't\n  already exist on the component (https://github.com/patricknelson/svelte-retag/pull/54)\n\n### v2\n\nSee the **[milestones page](https://github.com/patricknelson/svelte-retag/milestones)** for changes planned in upcoming\nversions. Please be aware that until the version is officially released, the features slated for a particular version\nare subject to change!\n\n## Support & Contribution\n\n**Features:** The API for this package is intentionally minimal and features that are outside of the scope of the core\nfeatures listed above are not likely to be considered. However, for stability (and due to time constraints), new\nfeatures\nwill still be considered if they are small or will have little or no impact on _existing_ functionality.\n\nTo report bugs or improvements, please [open an issue](https://github.com/patricknelson/svelte-retag/issues) and explain\nin as much detail as possible what the bug is and how to reproduce it. Please make sure that you only submit an\nissue if you have verified that it requires a change to `svelte-retag` itself.\n\n**PR's:** If you'd like to contribute, please feel free to open a PR, **however**: If possible, please attach it to an\nexisting\nissue to ensure that discussion regarding your pull request isn't lost (in case it cannot be merged for whatever\nreason).\n\n## Attribution\n\n* Logo - Rich Harris, MIT <http://opensource.org/licenses/mit-license.php>, via Wikimedia Commons\n* [`svelte-tag`](https://github.com/crisward/svelte-tag) - Chris Ward ([@crisward](https://github.com/crisward)). This\n\tpackage was forked and modified from https://github.com/crisward/svelte-tag (thus the \"re\" in `svelte-retag`).\n\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 218],
		[3603, 291],
		[3610, 195],
		[3617, 428],
		[3624, 560],
		[3631, 48],
		[3638, 144],
		[3645, 46],
		[3652, 43],
		[3659, 94],
		[3666, 126],
		[3673, 87],
		[3680, 168],
		[3687, 58],
		[3694, 36],
		[3701, 93],
		[3708, 27],
		[3715, 24],
		[3722, 31],
		[3729, 14],
		[3736, 19],
		[3743, 15],
		[3750, 22],
		[3757, 16],
		[3764, 23],
		[3771, 170],
		[3778, 52],
		[3785, 31],
		[3792, 25],
		[3799, 25],
		[3806, 69],
		[3813, 36],
		[3820, 158],
		[3827, 461],
		[3834, 491],
		[3841, 296],
		[3848, 281],
		[3855, 315],
		[3862, 302],
		[3869, 319],
		[3876, 345],
		[3883, 253],
		[3890, 370],
		[3897, 336],
		[3904, 313],
		[3911, 134],
		[3918, 228],
		[3925, 324],
		[3932, 203],
		[3939, 246],
		[3946, 442],
		[3953, 168],
		[3960, 130],
		[3967, 223],
		[3974, 193],
		[3981, 126],
		[3988, 96],
		[3995, 219],
		[4002, 232],
		[4009, 14],
		[4016, 156],
		[4023, 197],
		[4030, 187],
		[4037, 137],
		[4044, 200],
		[4051, 87],
		[4058, 76],
		[4065, 74],
		[4072, 58],
		[4079, 29],
		[4086, 57],
		[4093, 132],
		[4100, 109],
		[4107, 255],
		[4114, 98],
		[4121, 81],
		[4128, 80],
		[4135, 41]
	],
	"esm": true,
	"cjs": false
}
