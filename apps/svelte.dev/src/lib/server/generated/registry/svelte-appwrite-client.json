{
	"name": "svelte-appwrite-client",
	"description": "Integrate Appwrite database and storage into Svelte apps.",
	"repo_url": "https://github.com/lewis-wow/svelte-appwrite",
	"authors": ["ujik"],
	"homepage": "https://github.com/lewis-wow/svelte-appwrite#readme",
	"downloads": 6,
	"updated": "2023-01-02T14:14:30.861Z",
	"tags": ["server", "integration"],
	"github_stars": 1,
	"typescript": true,
	"version": "0.2.3",
	"svelte_range": "^3.54.0",
	"last_rune_check_version": "0.2.3",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-appwrite-client",
				"version": "0.2.3",
				"size": 21745
			},
			{
				"name": "appwrite",
				"version": "10.2.0",
				"size": 1008826
			},
			{
				"name": "cross-fetch",
				"version": "3.1.5",
				"size": 73827
			},
			{
				"name": "node-fetch",
				"version": "2.6.7",
				"size": 152240
			},
			{
				"name": "whatwg-url",
				"version": "5.0.0"
			},
			{
				"name": "tr46",
				"version": "0.0.3"
			},
			{
				"name": "webidl-conversions",
				"version": "3.0.1"
			},
			{
				"name": "isomorphic-form-data",
				"version": "2.0.0",
				"size": 2859
			},
			{
				"name": "form-data",
				"version": "2.5.3",
				"size": 30454
			},
			{
				"name": "asynckit",
				"version": "0.4.0"
			},
			{
				"name": "mime-types",
				"version": "2.1.35",
				"size": 18272
			},
			{
				"name": "mime-db",
				"version": "1.52.0",
				"size": 205539
			},
			{
				"name": "safe-buffer",
				"version": "5.2.1",
				"size": 32101
			},
			{
				"name": "combined-stream",
				"version": "1.0.8",
				"size": 11514
			},
			{
				"name": "delayed-stream",
				"version": "1.0.0"
			},
			{
				"name": "es-set-tostringtag",
				"version": "2.1.0",
				"size": 14544
			},
			{
				"name": "es-errors",
				"version": "1.3.0",
				"size": 12324
			},
			{
				"name": "get-intrinsic",
				"version": "1.3.0",
				"size": 46542
			},
			{
				"name": "call-bind-apply-helpers",
				"version": "1.0.2",
				"size": 15952
			},
			{
				"name": "function-bind",
				"version": "1.1.2",
				"size": 31427
			},
			{
				"name": "es-define-property",
				"version": "1.0.1",
				"size": 10217
			},
			{
				"name": "es-object-atoms",
				"version": "1.1.1",
				"size": 11442
			},
			{
				"name": "get-proto",
				"version": "1.0.1",
				"size": 10840
			},
			{
				"name": "dunder-proto",
				"version": "1.0.1",
				"size": 13003
			},
			{
				"name": "gopd",
				"version": "1.2.0",
				"size": 9869
			},
			{
				"name": "has-symbols",
				"version": "1.1.0",
				"size": 23409
			},
			{
				"name": "hasown",
				"version": "2.0.2",
				"size": 8765
			},
			{
				"name": "math-intrinsics",
				"version": "1.1.0",
				"size": 17323
			},
			{
				"name": "has-tostringtag",
				"version": "1.0.2",
				"size": 17603
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[2, 3],
			[3, 4],
			[4, 5],
			[4, 6],
			[1, 7],
			[7, 8],
			[8, 9],
			[8, 10],
			[10, 11],
			[8, 12],
			[8, 13],
			[13, 14],
			[8, 15],
			[15, 16],
			[15, 17],
			[17, 18],
			[18, 16],
			[18, 19],
			[17, 20],
			[17, 16],
			[17, 21],
			[21, 16],
			[17, 19],
			[17, 22],
			[22, 23],
			[23, 18],
			[23, 16],
			[23, 24],
			[22, 21],
			[17, 24],
			[17, 25],
			[17, 26],
			[26, 19],
			[17, 27],
			[15, 28],
			[28, 25],
			[15, 26]
		],
		"circular": []
	},
	"readme": "# Svelte + Appwrite\n\n## Database subscribers\n\n```svelte\n<script>\n  import { Collection } from '$lib/database'\n  import { Query } from 'appwrite'\n\n  const collection = new Collection('[database-id]', '[collection-id]')\n  const [subscriber, loading] = collection.createSubscriber([Query.limit(5) /*, ...queries */])\n  // listen changes (update, delete) in database and automatically rerender on change\n  // current data = [{ name: 'John', lastName: 'Doe' }, ...]\n\n  const insertSubscriber = collection.createObserver()\n  // listen changes (create) in database and automatically rerender on change\n\n  const [paginator, paginatorInitalLoading] = collection.createPaginate(10, [/* ...queries */])\n  // paginate the collection of documents with limit and automatically rerender on change\n  // paginator.next() makes the next request for items, paginator store automatically rerender on next load\n\n  const [scrollData, scrollDispatch] = collection.createInfinityScrollDispatcher(10, [/* ...queries */], { /* intersection observer options */ })\n  // load next data after scroll to anchor (scrollDispatch) element\n</script>\n\n<div>\n  {#if $loading}\n    <p>Loading data from database...</p>\n  {:else}\n    {#each [...$subscriber, ...$insertSubscriber] as item}\n      <p>{item.name}</p>\n    {/each}\n  {/if}\n</div>\n\n<!-- scroll dispatcher example -->\n<div>\n  {#each $scrollData as item}\n    <p>{item.name}</p>\n  {/each}\n  <div use:scrollDispatch on:fetch={(e) => console.log(e) /* on every fetch from scroll dispatcher do some action */} />\n</div>\n```\n\n## Files subscribers\n\n```svelte\n<script>\n  import { Bucket } from '$lib/storage'\n  import { Query } from 'appwrite'\n\n  const bucket = new Bucket('[bucket-id]')\n  const [files, loading] = bucket.createSubscriber([Query.limit(5) /*, ...queries */])\n  // listen changes (update, delete) in files and automatically rerender on change\n\n  const insertSubscriber = bucket.createObserver()\n  // listen changes (create) in files and automatically rerender on change\n\n  const [upload, dispatch] = storage.createUploadDispatcher(/* many files ? true : false, default = false */)\n\n  const [content, loading] = storage.getFileContent('6391f7c70ede82115575')\n  // get file content and automatically rerender on file update\n</script>\n\n<div>\n  <input type=\"file\" use:upload />\n  <button on:click={() => dispatch().then(uploadedFile => console.log(uploadedFile))}>Upload</button> \n</div>\n```\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 4],
		[3596, 11],
		[3603, 24],
		[3610, 44],
		[3617, 24],
		[3624, 25],
		[3631, 11],
		[3638, 1],
		[3645, 34],
		[3652, 16],
		[3659, 20],
		[3666, 35],
		[3673, 2],
		[3680, 9],
		[3687, 3],
		[3701, 3],
		[3708, 6],
		[3715, 7],
		[3722, 2],
		[3729, 1],
		[3736, 16],
		[3743, 11],
		[3750, 3],
		[3757, 4],
		[3764, 6],
		[3771, 1],
		[3778, 3],
		[3785, 1],
		[3792, 1],
		[3806, 8],
		[3813, 62],
		[3820, 17],
		[3827, 39],
		[3834, 39],
		[3841, 61],
		[3848, 17],
		[3855, 2],
		[3862, 1],
		[3876, 1],
		[3883, 2],
		[3890, 24],
		[3897, 1],
		[3911, 4],
		[3918, 48],
		[3925, 9],
		[3932, 7],
		[3939, 17],
		[3946, 15],
		[3953, 11],
		[3960, 12],
		[3967, 2],
		[3974, 12],
		[3988, 1],
		[3995, 4],
		[4002, 2],
		[4023, 1],
		[4030, 1],
		[4037, 24],
		[4044, 10],
		[4051, 3],
		[4058, 1],
		[4065, 4],
		[4079, 1],
		[4086, 2],
		[4093, 1],
		[4100, 37],
		[4107, 9],
		[4114, 6],
		[4121, 26],
		[4128, 3]
	]
}
