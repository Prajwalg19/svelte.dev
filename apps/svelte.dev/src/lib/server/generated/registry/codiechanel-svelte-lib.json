{
	"name": "@codiechanel/svelte-lib",
	"description": "Generate shareable Svelte components with this template.",
	"repo_url": "https://github.com/codiechanel/solid-library",
	"authors": ["codiechanel"],
	"homepage": "https://github.com/codiechanel/solid-library#readme",
	"downloads": 4,
	"updated": "2021-11-15T19:02:04.483Z",
	"tags": ["tooling"],
	"github_stars": 0,
	"typescript": false,
	"version": "0.0.1",
	"svelte_range": "^3.5.0",
	"last_rune_check_version": "0.0.1",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@codiechanel/svelte-lib",
				"version": "0.0.1",
				"size": 19504
			}
		],
		"dependencies": [],
		"circular": []
	},
	"legacy_svelte": true,
	"readme": "*Psst — looking for a more complete solution? Check out [SvelteKit](https://kit.svelte.dev) and its [package command](https://kit.svelte.dev/docs#packaging) which gives you more built-in features like TypeScript transpilation, type definition generation and a built-in playground to test your library.*\r\n\r\n*Looking for an app template instead? Go here --> [sveltejs/template](https://github.com/sveltejs/template)*\r\n\r\n---\r\n\r\n# component-template\r\n\r\nA base for building shareable Svelte components. Clone it with [degit](https://github.com/Rich-Harris/degit):\r\n\r\n```bash\r\nnpx degit sveltejs/component-template my-new-component\r\ncd my-new-component\r\nnpm install # or yarn\r\n```\r\n\r\nYour component's source code lives in `src/Component.svelte`.\r\n\r\nYou can create a package that exports multiple components by adding them to the `src` directory and editing `src/index.js` to reexport them as named exports.\r\n\r\nTODO\r\n\r\n* [ ] some firm opinions about the best way to test components\r\n* [ ] update `degit` so that it automates some of the setup work\r\n\r\n\r\n## Setting up\r\n\r\n* Run `npm init` (or `yarn init`)\r\n* Replace this README with your own\r\n\r\n\r\n## Consuming components\r\n\r\nYour package.json has a `\"svelte\"` field pointing to `src/index.js`, which allows Svelte apps to import the source code directly, if they are using a bundler plugin like [rollup-plugin-svelte](https://github.com/sveltejs/rollup-plugin-svelte) or [svelte-loader](https://github.com/sveltejs/svelte-loader) (where [`resolve.mainFields`](https://webpack.js.org/configuration/resolve/#resolve-mainfields) in your webpack config includes `\"svelte\"`). **This is recommended.**\r\n\r\nFor everyone else, `npm run build` will bundle your component's source code into a plain JavaScript module (`dist/index.mjs`) and a UMD script (`dist/index.js`). This will happen automatically when you publish your component to npm, courtesy of the `prepublishOnly` hook in package.json.\r\n",
	"downloads_history": [
		[3589, 2],
		[3596, 2],
		[3603, 2],
		[3610, 3],
		[3631, 1],
		[3638, 1],
		[3645, 3],
		[3659, 3],
		[3666, 3],
		[3673, 1],
		[3687, 1],
		[3708, 1],
		[3715, 1],
		[3736, 2],
		[3757, 1],
		[3764, 2],
		[3771, 2],
		[3778, 1],
		[3785, 1],
		[3799, 1],
		[3806, 2],
		[3813, 1],
		[3834, 1],
		[3841, 2],
		[3855, 5],
		[3862, 3],
		[3876, 2],
		[3890, 1],
		[3904, 2],
		[3911, 1],
		[3932, 1],
		[3939, 1],
		[3953, 1],
		[3960, 1],
		[3988, 1],
		[3995, 1],
		[4002, 1],
		[4009, 1],
		[4016, 3],
		[4030, 3],
		[4037, 2],
		[4044, 7],
		[4051, 2],
		[4058, 2],
		[4065, 1],
		[4072, 1],
		[4086, 3],
		[4093, 11],
		[4100, 1],
		[4107, 2],
		[4114, 4],
		[4121, 6],
		[4128, 2]
	]
}
