{
	"name": "svelte-redux-adapter",
	"description": "Integrate Redux store with Svelte applications.",
	"repo_url": "https://github.com/ColaFanta/svelte-redux-adapter",
	"authors": ["colafantawlk"],
	"homepage": "https://github.com/ColaFanta/svelte-redux-adapter",
	"downloads": 6,
	"updated": "2023-08-28T09:46:28.645Z",
	"tags": ["miscellaneous"],
	"github_stars": 0,
	"typescript": true,
	"version": "1.0.4",
	"svelte_range": "^4.2.0",
	"kit_range": "^1.23.0",
	"last_rune_check_version": "1.0.4",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-redux-adapter",
				"version": "1.0.4",
				"size": 12240
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# Svelte Redux Adapter\r\n\r\nA simple wrapper on `Redux` and makes it possible to use `Redux` store on svelte. \r\n\r\nUnder the hook, it adapts `Redux` store's `subscribe` method to svelte's [store contract](https://svelte.dev/docs#component-format-script-4-prefix-stores-with-$-to-access-their-values-store-contract), without any extra `Readable`, `Derived` overhead.\r\n\r\n[![npm version](https://badge.fury.io/js/svelte-redux-adapter.svg)](https://badge.fury.io/js/svelte-redux-adapter.svg)\r\n\r\n[Demo Counter App](https://stackblitz.com/github/ColaFanta/svelte-redux-adapter?file=src/routes/Counter.svelte)\r\n\r\n\r\n## Install\r\n\r\nInstall svelte-redux-adapter package\r\n\r\n```bash\r\nnpm install svelte-redux-store\r\n```\r\n\r\nInstall redux package\r\n\r\n```bash\r\nnpm install @reduxjs/toolkit\r\n```\r\n\r\n# API\r\n\r\n- [Provider](##`Provider`)\r\n- [useSelector](##`useSelector()`)\r\n- [useStore, useDispatch](##`useStore()`,`useDispatch()`)\r\n- [store.value](##`store.value`)\r\n\r\n\r\n## `Provider`\r\nA svelte component that injects store instance to context.\r\n\r\n### Example\r\n  - Define store\r\n    ```js\r\n        // src/counter-store.ts\r\n    import {configureStore, createSlice} from '@reduxjs/toolkit'\r\n    const counter = createSlice({\r\n      name: 'counter',\r\n      initialState: {\r\n        count: 0\r\n      },\r\n      initialState: { count: 0 },\r\n      reducers: {\r\n        increment: state => {\r\n          state.count++\r\n        },\r\n        decrement: state => {\r\n          state.count--\r\n        },\r\n        reset: _ => ({\r\n          count: 0,\r\n        }),\r\n      },\r\n    })\r\n    const reduxStore = configureStore({\r\n      reducer: {\r\n        counter: counter.reducer,\r\n      },\r\n    }) \r\n    ```\r\n  - provide store to context\r\n    ```html\r\n      <script lang=\"ts\">\r\n      import Provider from '$lib/Provider.svelte'\r\n      import { reduxStore } from './counter-store'\r\n      </script>\r\n\r\n      <div class=\"app\">\r\n        <main>\r\n          <Provider store={reduxStore}>\r\n            <slot />\r\n          </Provider>\r\n        </main>\r\n      </div>\r\n    ```\r\n\r\n## `useSelector()`\r\nCreates a store similar to `Derived` from part of your store using selector function. The result of selector is memoized and compared by `===`\r\n\r\n## `useStore()`, `useDispatch()`\r\nHooks to grab `store`, `dispatch` from nearest `Provider`\r\n\r\n### Example\r\n  ```jsx\r\n  <script lang=\"ts\">\r\n    import { spring } from 'svelte/motion'\r\n    import { useSelector, useStore } from 'svelte-redux-adapter'\r\n    import { type RootState, actions } from './counter-store'\r\n\r\n    const store = useStore<RootState>()\r\n\r\n    /** Derive your state using either selector */\r\n    const count = useSelector((rootState: RootState) => rootState.counter.count)\r\n    /** Or using reactive statement */\r\n    $: count3x = $store.counter.count * 3\r\n\r\n    const displayed_count = spring()\r\n    $: displayed_count.set($count)\r\n    $: offset = modulo($displayed_count, 1)\r\n\r\n    const displayed_count_3x = spring()\r\n    $: displayed_count_3x.set(count3x)\r\n    $: offset_3x = modulo($displayed_count_3x, 1)\r\n\r\n    function modulo(n: number, m: number) {\r\n      // handle negative numbers\r\n      return ((n % m) + m) % m\r\n    }\r\n  </script>\r\n\r\n  <div class=\"counter\">\r\n    <button\r\n      on:click={() => store.dispatch(actions.decrement())}\r\n      aria-label=\"Decrease the counter by one\"\r\n      data-testid=\"decrement_btn\">\r\n      <svg aria-hidden=\"true\" viewBox=\"0 0 1 1\">\r\n        <path d=\"M0,0.5 L1,0.5\" />\r\n      </svg>\r\n    </button>\r\n\r\n    <div class=\"counter-viewport\">\r\n      <div class=\"counter-digits\" style=\"transform: translate(0, {100 * offset}%)\">\r\n        <strong class=\"hidden\" aria-hidden=\"true\">{Math.floor($displayed_count + 1)}</strong>\r\n        <strong data-testid=\"display_count\">{Math.floor($displayed_count)}</strong>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"counter-viewport\">\r\n      <div class=\"counter-digits\" style=\"transform: translate(0, {100 * offset_3x}%)\">\r\n        <strong class=\"hidden\" aria-hidden=\"true\">{Math.floor($displayed_count_3x + 1)}</strong>\r\n        <strong data-testid=\"display_count_3x\">{Math.floor($displayed_count_3x)}</strong>\r\n      </div>\r\n    </div>\r\n\r\n    <button\r\n      on:click={() => store.dispatch(actions.increment())}\r\n      aria-label=\"Increase the counter by one\"\r\n      data-testid=\"increment_btn\">\r\n      <svg aria-hidden=\"true\" viewBox=\"0 0 1 1\">\r\n        <path d=\"M0,0.5 L1,0.5 M0.5,0 L0.5,1\" />\r\n      </svg>\r\n    </button>\r\n  </div>\r\n\r\n  ```\r\n\r\n## `store.value`\r\nThose adapted `stores`, either from `redux` or `useSelector`, have an extra getter `.value`. It helps you get memoized value from store instantly which is faster and cleaner than using built-in `store/get`.\r\n\r\n  ```js\r\n  const count = useSelector((rootState: RootState) => rootState.counter.count)\r\n\r\n  console.log(count.value === get(count)) // print: true\r\n  ```\r\n\r\n## Contributing ✨\r\n\r\nInterested in contributing to this repo? Check out our and submit a PR for a new feature/bug fix.\r\n\r\nA big shoutout to all our contributors! You could be here too! ✨\r\n\r\n<a href=\"https://github.com/ColaFanta/svelte-redux-adapter/graphs/contributors\">\r\n  <img src=\"https://contrib.rocks/image?repo=ColaFanta/svelte-redux-adapter\" />\r\n</a>\r\n\r\n## Inspire by\r\n\r\n[svelte-redux-store](https://github.com/vanzinvestor/svelte-redux-store)\r\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 1],
		[3596, 4],
		[3603, 5],
		[3610, 4],
		[3624, 7],
		[3645, 4],
		[3652, 2],
		[3666, 6],
		[3673, 1],
		[3701, 1],
		[3722, 1],
		[3750, 1],
		[3757, 1],
		[3771, 5],
		[3778, 2],
		[3792, 1],
		[3799, 1],
		[3806, 1],
		[3820, 3],
		[3841, 20],
		[3848, 3],
		[3855, 1],
		[3862, 2],
		[3876, 1],
		[3883, 1],
		[3890, 4],
		[3897, 1],
		[3911, 1],
		[3918, 1],
		[3925, 1],
		[3932, 2],
		[3946, 6],
		[3953, 1],
		[3967, 1],
		[3974, 4],
		[3995, 1],
		[4002, 1],
		[4009, 1],
		[4023, 1],
		[4037, 10],
		[4044, 9],
		[4051, 2],
		[4058, 1],
		[4065, 1],
		[4072, 1],
		[4079, 5],
		[4086, 1],
		[4100, 13],
		[4107, 3],
		[4114, 6],
		[4121, 8],
		[4128, 2]
	]
}
