{
	"name": "svelte-a11y-dialog",
	"description": "Create Svelte wrapper for a11y-dialog.",
	"repo_url": "https://github.com/AgnosticUI/svelte-a11y-dialog",
	"authors": ["rlevin"],
	"homepage": "https://github.com/AgnosticUI/svelte-a11y-dialog",
	"downloads": 379,
	"updated": "2022-03-18T15:55:40.801Z",
	"tags": ["ui"],
	"github_stars": 7,
	"typescript": true,
	"version": "0.2.0",
	"svelte_range": "^3.44.0",
	"kit_range": "next",
	"last_rune_check_version": "0.2.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-a11y-dialog",
				"version": "0.2.0",
				"size": 11417
			},
			{
				"name": "a11y-dialog",
				"version": "7.5.3",
				"size": 40268
			},
			{
				"name": "focusable-selectors",
				"version": "0.4.0",
				"size": 4618
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2]
		],
		"circular": []
	},
	"readme": "# Svelte a11y-dialog\n\n**Experimental!**\n\nThis is a Svelte wrapper component for [`a11y-dialog@7.3.0`](https://github.com/KittyGiraudel/a11y-dialog)\n\n- [Install](#install)\n- [Usage](#usage)\n  - [Multiple dialogs](#multiple-dialogs)\n- [API](#api)\n- [Events](#events)\n- [Slots](#slots)\n- [Server-side Rendering](#server-side-rendering)\n\n## Install\n\n```bash\nnpm install svelte-a11y-dialog\n```\n\n## Usage\n\nAfter installing the npm package, import the `SvelteA11yDialog` component\nand optionally setup a dialog instance binding:\n\n```js\n  import { SvelteA11yDialog } from \"svelte-a11y-dialog\";\n  let dialogInstance;\n  const assignDialogInstance = (instance) => {\n    dialogInstance = instance;\n  }\n```\n\nThen use as follows:\n\n```html\n<button\n  type=\"button\"\n  data-a11y-dialog-show=\"a11y-dialog\"\n>Open dialog</button>\n<SvelteA11yDialog \n  id=\"a11y-dialog\"\n  dialogRoot=\"#dialog-root\"\n  closeButtonLabel=\"My close button label\"\n  closeButtonPosition=\"last\"\n  title=\"A11yDialog Test\"\n  titleId=\"uniqueTitleId\"\n  role=\"dialog\"\n  on:instance={assignDialogInstance}\n>\n  <svelte:fragment slot=\"closeButtonContent\">\n    <span>Close</span>\n  </svelte:fragment> \n  <div>\n    <p>This is some content</p>\n  </div>\n</SvelteA11yDialog>\n```\n\nIn your main `index.html`, add a container where your dialog will be rendered into — `dialog-root` in this example:\n\n```html\n<!DOCTYPE html>\n<html>\n  <body>\n    <div id=\"app\"></div>\n    <div id=\"dialog-root\"></div>\n  </body>\n</html>\n```\n\n## API\n\n> The `a11y-dialog` documentation is [here](https://a11y-dialog.netlify.app/)\n\n### `id`\n\n- **Property**: `id`\n- **Type**: `String`\n- **Required**: `true`\n- **Description**: The unique HTML `id` attribute added to the dialog element, internally used by a11y-dialog to manipulate the dialog.\n\n### `dialogRoot`\n\n- **Property**: `dialogRoot`\n- **Type**: `String` — CSS Selector string.\n- **Required**: `true`\n- **Description**: The container for the dialog to be rendered into.\n\n### `classNames`\n\n- **Property**: `classNames`\n- **Type**: `Object`\n- **Required**: `false`\n- **Default**: `{}`\n- **Description**: Object of classes for each HTML element of the dialog element. Keys are: `base`, `overlay`, `document`, `title`, `closeButton`. See [a11y-dialog docs](https://a11y-dialog.netlify.app/) for reference.\n\n### `title`\n\n- **Property**: `title`\n- **Type**: `String`\n- **Required**: `true`\n- **Description**: The title of the dialog. svelte-a11y-dialog will place this in a paragraph tag and apply the `classes.title` to it.\n\n### `titleId`\n\n- **Property**: `titleId`\n- **Type**: `String`\n- **Required**: `false`\n- **Default**: Defaults to `id + '-title'`.\n- **Description**: The HTML `id` attribute of the dialog’s title element, used by assistive technologies to provide context and meaning to the dialog window.\n\n### `closeButtonLabel`\n\n- **Property**: `closeButtonLabel`\n- **Type**: `String`\n- **Required**: `false`\n- **Default**: `'Close this dialog window'`\n- **Description**: The HTML `aria-label` attribute of the close button, used by assistive technologies to provide extra meaning to the usual cross-mark.\n\n### `role`\n\n- **Property**: `role`\n- **Type**: `String`\n- **Required**: `false`\n- **Default**: `dialog`\n- **Description**: The `role` attribute of the dialog element, either `dialog` (default) or `alertdialog` to make it a modal (preventing closing on click outside of <kbd>ESC</kbd> key).\n\n## Events\n\n### `on:instance`\n\n- **Returns**: An `a11y-dialog` instance when a11y-dialog is instantiated via\na Svelte `dispatch` event. Note that as is idiomatic in dispatched Svelte events, you need to access the instance via `event.detail` object (see below).\n- **Description**: This event emits the `a11y-dialog` instance once the component has been instantiated. Here's an example of how to set up in your parent component (pay special note of the `ev.detail.instance` to gain access to the passed a11y-dialog instance!):\n\n```svelte\n<script>\n  const assignDialogInstance = (ev) => {\n    dialogInstance = ev.detail.instance;\n  };\n\n  const openDialog = () => {\n    if (dialogInstance) {\n      dialogInstance.show();\n    }\n  };\n</script>\n\n<SvelteA11yDialog on:instance={assignDialogInstance} ...etc\n```\n\n## Slots\n\n### `title`\n\n- **Name**: `title`\n- **Description**: The title of the dialog, mandatory in the document to provide context to assistive technology. Could be [hidden with CSS](https://hugogiraudel.com/2016/10/13/css-hide-and-seek/) (while remaining accessible).\n\n### `closeButtonContent`\n\n- **Name**: `closeButtonLabel`\n- **Default**: `\\u00D7` (×)\n- **Description**: The node that is the inner HTML of the close button.\n\n### `closeButtonPosition`\n\n- **Name**: `closeButtonPosition`\n- **Default**: `first`\n- **Description**: One of `first`, `last`, or `none`\n\n## Server-side Rendering\n\nThis has only been tested client-side.\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 56],
		[3596, 33],
		[3603, 32],
		[3610, 72],
		[3617, 62],
		[3624, 62],
		[3631, 61],
		[3638, 172],
		[3645, 25],
		[3652, 70],
		[3659, 138],
		[3666, 378],
		[3673, 436],
		[3680, 508],
		[3687, 560],
		[3694, 482],
		[3701, 488],
		[3708, 488],
		[3715, 527],
		[3722, 531],
		[3729, 523],
		[3736, 527],
		[3743, 505],
		[3750, 471],
		[3757, 409],
		[3764, 453],
		[3771, 432],
		[3778, 497],
		[3785, 398],
		[3792, 375],
		[3799, 398],
		[3806, 387],
		[3813, 375],
		[3820, 446],
		[3827, 424],
		[3834, 436],
		[3841, 389],
		[3848, 412],
		[3855, 473],
		[3862, 434],
		[3869, 437],
		[3876, 383],
		[3883, 337],
		[3890, 305],
		[3897, 311],
		[3904, 352],
		[3911, 351],
		[3918, 430],
		[3925, 356],
		[3932, 360],
		[3939, 349],
		[3946, 310],
		[3953, 237],
		[3960, 274],
		[3967, 267],
		[3974, 287],
		[3981, 281],
		[3988, 272],
		[3995, 218],
		[4002, 162],
		[4009, 143],
		[4016, 159],
		[4023, 294],
		[4030, 349],
		[4037, 265],
		[4044, 310],
		[4051, 338],
		[4058, 380],
		[4065, 349],
		[4072, 252],
		[4079, 296],
		[4086, 252],
		[4093, 337],
		[4100, 388],
		[4107, 319],
		[4114, 379],
		[4121, 405],
		[4128, 441]
	],
	"esm": true,
	"cjs": false
}
