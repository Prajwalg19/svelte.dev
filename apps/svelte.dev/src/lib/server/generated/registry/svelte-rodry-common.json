{
	"name": "svelte-rodry-common",
	"description": "Provide Svelte components for common use cases.",
	"repo_url": "",
	"authors": ["rodryquintero"],
	"downloads": 6,
	"updated": "2021-06-11T18:42:26.862Z",
	"tags": ["miscellaneous"],
	"typescript": false,
	"version": "1.1.3",
	"svelte_range": "^3.34.0",
	"last_rune_check_version": "1.1.3",
	"github_stars": 0,
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-rodry-common",
				"version": "1.1.3",
				"size": 2284477
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# svelte-rodry-common\n\nMany Svelte components that I commonly use. Some are built by me and others are modified version of existing components to be used with Svelte.\n\n![Svelte Logo](https://svelte.dev/svelte-logo-horizontal.svg)\n\n## Pre-requisites\n\nThese components are designed to be used with the following packages\n\n- [Tailwind CSS](https://tailwindcss.com/)\n- [Fontawesome Free](https://fontawesome.com/v5.9.0/how-to-use/on-the-web/referencing-icons/basic-use)\n\nMake sure your project has these installed.\n\n## Components\n\n### Modal\n\nVery simple modal window using Tailwind css classes.\n\n#### Properties\n\n| Property | Type       | Description                                                                                                           |\n| -------- | ---------- | --------------------------------------------------------------------------------------------------------------------- |\n| show     | _Boolean_  | Shows or hides the Modal                                                                                              |\n| cssClass | _String_   | Custom CSS classes to add to the Modal window                                                                         |\n| onClose  | _Function_ | Runs when the built in close button is pressed. Use if you want to control the open/close state from your application |\n\n### Slots\n\nThe Modal accepts 3 slots\n\n| Slot   | Description                                                        |\n| ------ | ------------------------------------------------------------------ |\n| title  | Title of the modal window                                          |\n| body   | Main content of the modal                                          |\n| footer | Footer of the modal window. Use to put custom buttons to the modal |\n\n### Example\n\nSimple Modal script\n\n```javascript\n<script>\n  import { Modal } from \"svelte-rodry-common\";\n  import pkg from \"../package.json\";\n\n  let showModal = false;\n\n  const toggleModal = () => (showModal = !showModal);\n</script>\n\n<Modal cssClass=\"w-8/12\" show={showModal} onClose={toggleModal}>\n  <div slot=\"title\">This is a test modal</div>\n  <div slot=\"body\">\n  Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.\n  </div>\n  <div slot=\"footer\" class=\"grid justify-items-end\">\n      <button on:click={toggleModal}>Close</button>\n  </div>\n</Modal>\n```\n\n### Tabs\n\nRecompiled version of `svelte-tabs` with the latest version of Svelte. This fixes an error related to the older Svelte version used by the package.\n\n```javascript\nimport { Tabs, Tab, TabList, TabPanel } from \"svelte-rodry-common\";\n\n<Tabs>\n  <TabList>\n    <Tab>One</Tab>\n    <Tab>Two</Tab>\n    <Tab>Three</Tab>\n  </TabList>\n\n  <TabPanel>\n    <div class=\"p-2\">\n      <h2>Panel One</h2>\n    </div>\n  </TabPanel>\n\n  <TabPanel>\n    <div class=\"p-2\">\n      <h2>Panel Two</h2>\n    </div>\n  </TabPanel>\n\n  <TabPanel>\n    <div class=\"p-2\">\n      <h2>Panel Three</h2>\n    </div>\n  </TabPanel>\n</Tabs>;\n```\n\n### Tabulator\n\nSveltified version of `tabulator-tables`.\n\n#### Properties\n\n| Property       | Type       | Description                                      |\n| -------------- | ---------- | ------------------------------------------------ |\n| columns        | _array_    | Array with table columns definition.             |\n| data           | _array_    | Array with table data                            |\n| height         | _integer_  | Height of the table                              |\n| layout         | _integer_  | Height of the table                              |\n| rowClick       | _function_ | Function that runs when clicking on a row        |\n| rowDblClick    | _function_ | Function that runs when double-clicking on a row |\n| loading        | _boolean_  | Flag that shows or hides the \"loading\" icon      |\n| rowFormatter   | _function_ | Callback that formats each row                   |\n| cssClass       | _string_   | Custom CSS class                                 |\n| index          | _function_ | Field that serves as the index value of each row |\n| exportFileName | _string_   | Name of the file with exported data              |\n| showHeader     | _boolean_  | Shows or hides the Header                        |\n\n**Example**\n\n```javascript\nimport { Tabulator } from \"svelte-rodry-common\";\n\nconst columns = [\n  {\n    title: \"TestID\",\n    field: \"testid\",\n  },\n  {\n    title: \"Test Name\",\n    field: \"test_name\",\n    headerFilter: \"input\",\n  },\n  {\n    title: \"Sample Type\",\n    field: \"sample_type\",\n  },\n];\n\nconst data = [\n  { testid: 1001, test_name: \"Glucose\", sample_type: \"Plasma\" },\n  { testid: 1002, test_name: \"Creatine\", sample_type: \"Serum\" },\n  { testid: 1003, test_name: \"HDL\", sample_type: \"Serum\" },\n  { testid: 1004, test_name: \"LDL\", sample_type: \"Serum\" },\n  { testid: 1001, test_name: \"Glucose\", sample_type: \"Plasma\" },\n  { testid: 1002, test_name: \"Creatine\", sample_type: \"Serum\" },\n];\n\n<Tabulator {columns} {data} height=\"300\" showHeader={false} />\n```\n\n### Treeview\n\nBased on the Treeview examples shown in several REPLs. It uses _Fontawesome_ icons\n\n```javascript\nimport { Treeview } from \"svelte-rodry-common\";\n\nconst treeviewItems = [\n  {\n    title: \"Main\",\n    url: \"#/main\",\n    children: [\n      { title: \"Order Entry\", url: \"#/order-entry\" },\n      {\n        title: \"Queries\",\n        url: \"#/main/queries\",\n        children: [\n          { title: \"Order Search\", url: \"#/main/queries/order-search\" },\n          { title: \"Patient Search\", url: \"#/main/queries/patient-search\" },\n        ],\n      },\n    ],\n  },\n  {\n    title: \"Administration\",\n    url: \"#/administration\",\n    children: [\n      { title: \"Test\", url: \"#/administration/tests\" },\n      { title: \"Users\", url: \"#/administration/users\" },\n      { title: \"QC\", url: \"#/administration/qc\" },\n      { title: \"ICA\", url: \"#/administration/ica\" },\n    ],\n  },\n  { title: \"Monitoring\", url: \"#/monitoring\" },\n];\n\n<Treeview items={treeviewItems} />;\n```\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3596, 10],
		[3603, 9],
		[3610, 10],
		[3617, 1],
		[3624, 1],
		[3631, 1],
		[3638, 1],
		[3659, 1],
		[3666, 10],
		[3673, 9],
		[3680, 1],
		[3701, 1],
		[3708, 10],
		[3715, 1],
		[3729, 10],
		[3750, 8],
		[3757, 2],
		[3764, 5],
		[3771, 6],
		[3778, 10],
		[3785, 1],
		[3792, 4],
		[3799, 1],
		[3806, 3],
		[3834, 2],
		[3841, 1],
		[3848, 1],
		[3855, 46],
		[3862, 2],
		[3883, 1],
		[3890, 18],
		[3904, 2],
		[3932, 1],
		[3939, 3],
		[3953, 1],
		[3960, 3],
		[3967, 1],
		[3981, 2],
		[4002, 9],
		[4023, 1],
		[4030, 10],
		[4037, 12],
		[4044, 5],
		[4051, 1],
		[4065, 1],
		[4072, 2],
		[4093, 22],
		[4100, 10],
		[4107, 4],
		[4114, 6],
		[4121, 13],
		[4128, 5],
		[4135, 14]
	]
}
