{
	"name": "svelte-client-router",
	"description": "Provides client-side routing for Svelte applications.",
	"repo_url": "https://github.com/arthurgermano/svelte-client-router",
	"authors": ["arthurgermano"],
	"homepage": "https://arthurgermano.github.io/svelte-client-router/#/svelte-client-router/v2/presentation",
	"downloads": 16,
	"updated": "2024-04-08T20:54:07.076Z",
	"tags": ["router"],
	"github_stars": 17,
	"typescript": false,
	"version": "2.1.1",
	"svelte_range": "^4.2.12",
	"last_rune_check_version": "2.1.1",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-client-router",
				"version": "2.1.1",
				"size": 100076
			},
			{
				"name": "spa-storage",
				"version": "2.0.2",
				"size": 29146
			},
			{
				"name": "crypto-js",
				"version": "4.2.0",
				"size": 486947
			},
			{
				"name": "localforage",
				"version": "1.10.0",
				"size": 467670
			},
			{
				"name": "lie",
				"version": "3.1.1"
			},
			{
				"name": "immediate",
				"version": "3.0.6"
			},
			{
				"name": "lodash.clonedeep",
				"version": "4.5.0"
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[1, 3],
			[3, 4],
			[4, 5],
			[1, 6]
		],
		"circular": []
	},
	"readme": "# Svelte Client Router (SCR)\n\n## Svelte Client Router makes SPA routes easy!\n\nSvelte Client Router is everything you need and think when routing SPA's. This is THE SVELTE ROUTER for SPA!\n\nDesigned to help make you in control of the routing of your Single Page Applications (SPA)!\n\n## Index\n\n- [Svelte Client Router (SCR)](#svelte-client-router-scr)\n  - [Svelte Client Router makes SPA routes easy!](#svelte-client-router-makes-spa-routes-easy)\n  - [Index](#index)\n  - [Features](#features)\n  - [Install](#install)\n  - [Usage](#usage)\n    - [SCR - Documentation and Test It!](#scr---documentation-and-test-it)\n    - [SCR - Example](#scr---example)\n    - [SCR - Configuration Store](#scr---configuration-store)\n    - [SCR - Route Object Definition](#scr---route-object-definition)\n    - [SCR - Router Svelte Component](#scr---router-svelte-component)\n    - [SCR - Navigation](#scr---navigation)\n    - [SCR - Router Link Component](#scr---router-link-component)\n    - [SCR - Router Store](#scr---router-store)\n\n## Features\n\n- Lazy Load Components\n- Lazy Load Loading Components\n- Routes Based in Svelte Stores\n- Before Enter Global Functions\n- Ignore Global Before Enter Function Per Route\n- Before Enter Per Route Functions\n- Execute Before Enter Router Functions before Global Before Enter Functions\n- After Function (Before Enter Function Sequence Array)\n- Route Title \n- Global Route Error Function\n- Route Error Functions\n- Loading Component on Route Changing\n\n## Install\n\nTo install Svelte Router on your svelte app:\n\nwith npm\n\n```bash\nnpm i svelte-client-router\n```\n\n## Usage\n\nEnsure your local server is configured in SPA mode. \nIn a default Svelte installation you need to edit your package.json and add _-s_ to `sirv public`.\n\n```javascript\n\"start\": \"sirv public -s\"\n```\n\n### SCR - Documentation and Test It!\n<a href=\"https://arthurgermano.github.io/svelte-client-router/#/svelte-client-router/v2/presentation\" target=\"_blank\">Click here to see Svelte Client Router - In Action!</a>\n\n\n### SCR - Example\n \n<a href=\"https://arthurgermano.github.io/svelte-client-router/#/svelte-client-router/v2/configurationOptions\" target=\"_blank\">Configuration Options</a><br />\n<a href=\"https://arthurgermano.github.io/svelte-client-router/#/svelte-client-router/v2/configurationGlobalOnError\" target=\"_blank\">Global On Error</a><br />\n<a href=\"https://arthurgermano.github.io/svelte-client-router/#/svelte-client-router/v2/routeObjectProperties\" target=\"_blank\">Route Object Options</a><br />\n<a href=\"https://arthurgermano.github.io/svelte-client-router/#/svelte-client-router/v2/routeComponentProperties\" target=\"_blank\">SCR Component Properties</a><br />\n<a href=\"https://arthurgermano.github.io/svelte-client-router/#/svelte-client-router/v2/routeComponentComponents\" target=\"_blank\">SCR Component Components</a><br />\n\n```javascript\n<script>\n  import SCR_Loading from \"./components/SCR_Loading.svelte\";\n  import { SCR_Router, configStore } from \"./index.js\";\n\n  // Setting configurations of the SCR Router\n  // https://arthurgermano.github.io/svelte-client-router/#/svelte-client-router/v2/configurationOptions\n  configStore.setNotFoundRoute(\n    \"/svelte-client-router/myCustomNotFoundRoute\"\n  );\n\n  configStore.setConsoleLogStores(false);\n  configStore.setNavigationHistoryLimit(100);\n  configStore.setHashMode(true);\n  configStore.setUseScroll(true);\n  configStore.setScrollProps({\n    target: \"scr-container\",\n    top: 0,\n    left: 0,\n    behavior: \"smooth\",\n    timeout: 10,\n  });\n\n  // Setting global error function \n  // https://arthurgermano.github.io/svelte-client-router/#/svelte-client-router/v2/configurationGlobalBeforeEnterOption\n  configStore.setOnError((error) => {\n    console.log(\"GLOBAL ERROR CONFIG\", error);\n  });\n\n  // Setting a single before enter function - you can set an array as well.\n  // https://arthurgermano.github.io/svelte-client-router/#/svelte-client-router/v2/configurationGlobalOnError\n  configStore.setBeforeEnter(({ resolve }) => {\n    console.log(\"GLOBAL Before Enter\", error);\n    resolve(true);\n  });\n\n  // Setting the route object definition\n  // https://arthurgermano.github.io/svelte-client-router/#/svelte-client-router/v2/routeObjectProperties\n  const routes = [\n  {\n    name: \"root\",\n    path: \"\",\n    beforeEnter: ({ resolve }) => {\n      resolve({ path: \"/svelte-client-router/\" });\n    },\n  },\n  {\n    name: \"root2\",\n    path: \"/\",\n    beforeEnter: ({ resolve }) => {\n      resolve({ path: \"/svelte-client-router/\" });\n    },\n  },\n  {\n    name: \"rootRoute\",\n    path: \"/svelte-client-router/\",\n    lazyLoadComponent: () => import(\"../../pages/SCR_Home.svelte\"),\n    title: \"SCR - Home\",\n    beforeEnter: [setVersion0],\n  },\n  {\n    name: \"v2_Presentation\",\n    path: \"/svelte-client-router/v2/presentation\",\n    lazyLoadComponent: () => import(\"../../pages/v2/SCR_Presentation.svelte\"),\n    title: \"SCR - Presentation - Version 2\",\n    beforeEnter: [setVersion2],\n  },\n  {\n    name: \"v2_Installation\",\n    path: \"/svelte-client-router/v2/installation\",\n    lazyLoadComponent: () => import(\"../../pages/v2/SCR_Installation.svelte\"),\n    title: \"SCR - Installation - Version 2\",\n    beforeEnter: [setVersion2],\n  },\n  {\n    name: \"v2_Getting_Started\",\n    path: \"/svelte-client-router/v2/gettingStarted\",\n    lazyLoadComponent: () => import(\"../../pages/v2/SCR_GettingStarted.svelte\"),\n    title: \"SCR - Getting Started - Version 2\",\n    beforeEnter: [setVersion2],\n  },\n  {\n    name: \"v2_Configuration_Options\",\n    path: \"/svelte-client-router/v2/configurationOptions\",\n    lazyLoadComponent: () =>\n      import(\"../../pages/v2/SCR_ConfigurationOptions.svelte\"),\n    title: \"SCR - Configuration Options - Version 2\",\n    beforeEnter: [setVersion2],\n  },\n  {\n    name: \"v2_Configuration_Global_Before_Enter_Option\",\n    path: \"/svelte-client-router/v2/configurationGlobalBeforeEnterOption\",\n    lazyLoadComponent: () =>\n      import(\"../../pages/v2/SCR_ConfigurationBeforeEnter.svelte\"),\n    title: \"SCR - Configuration Global Before Enter Option - Version 2\",\n    beforeEnter: [setVersion2],\n  },\n  {\n    name: \"v2_Configuration_Global_On_Error\",\n    path: \"/svelte-client-router/v2/configurationGlobalOnError\",\n    lazyLoadComponent: () =>\n      import(\"../../pages/v2/SCR_ConfigurationOnError.svelte\"),\n    title: \"SCR - Configuration Global On Error - Version 2\",\n    beforeEnter: [setVersion2],\n  },\n  {\n    name: \"v2_Route_Object_Properties\",\n    path: \"/svelte-client-router/v2/routeObjectProperties\",\n    lazyLoadComponent: () =>\n      import(\"../../pages/v2/SCR_RouteObjectProperties.svelte\"),\n    title: \"SCR - Route Object Properties - Version 2\",\n    beforeEnter: [setVersion2],\n    ignoreScroll: true,\n  },\n  {\n    name: \"v2_Route_Object_Before_Enter\",\n    path: \"/svelte-client-router/v2/routeObjectBeforeEnter\",\n    lazyLoadComponent: () =>\n      import(\"../../pages/v2/SCR_RouteObjectBeforeEnter.svelte\"),\n    title: \"SCR - Route Object Before Enter - Version 2\",\n    beforeEnter: [setVersion2],\n  },\n  {\n    name: \"v2_Route_Object_After_Enter\",\n    path: \"/svelte-client-router/v2/routeObjectAfterEnter\",\n    lazyLoadComponent: () =>\n      import(\"../../pages/v2/SCR_RouteObjectAfterEnter.svelte\"),\n    title: \"SCR - Route Object After Enter - Version 2\",\n    beforeEnter: [setVersion2],\n  },\n  {\n    name: \"v2_Route_Object_On_Error\",\n    path: \"/svelte-client-router/v2/routeObjectOnError\",\n    lazyLoadComponent: () =>\n      import(\"../../pages/v2/SCR_RouteObjectOnError.svelte\"),\n    title: \"SCR - Route Object On Error - Version 2\",\n    beforeEnter: [setVersion2],\n  },\n  {\n    name: \"v2_Route_Component_Properties\",\n    path: \"/svelte-client-router/v2/routeComponentProperties\",\n    lazyLoadComponent: () =>\n      import(\"../../pages/v2/SCR_RouteComponentProperties.svelte\"),\n    title: \"SCR - Route Component Properties - Version 2\",\n    beforeEnter: [setVersion2],\n  },\n  {\n    name: \"v2_Route_Component_Components\",\n    path: \"/svelte-client-router/v2/routeComponentComponents\",\n    lazyLoadComponent: () =>\n      import(\"../../pages/v2/SCR_RouteComponentComponents.svelte\"),\n    title: \"SCR - Route Component Components - Version 2\",\n    beforeEnter: [setVersion2],\n  },\n  {\n    name: \"v2_Navigation_Routing\",\n    path: \"/svelte-client-router/v2/navigationRouting\",\n    lazyLoadComponent: () => import(\"../../pages/v2/SCR_NavigationRouting.svelte\"),\n    title: \"SCR - Navigation Routing - Version 2\",\n    beforeEnter: [setVersion2],\n  },\n  {\n    name: \"v2_Router_Link\",\n    path: \"/svelte-client-router/v2/routerLink\",\n    lazyLoadComponent: () => import(\"../../pages/v2/SCR_RouterLink.svelte\"),\n    title: \"SCR - Router Link - Version 2\",\n    beforeEnter: [setVersion2],\n  },\n  {\n    name: \"v2_Routes_Store\",\n    path: \"/svelte-client-router/v2/routesStore\",\n    lazyLoadComponent: () => import(\"../../pages/v2/SCR_RoutesStore.svelte\"),\n    title: \"SCR - Routes Store - Version 2\",\n    beforeEnter: [setVersion2],\n  },\n  {\n    name: \"v2_Test_Regex_Path\",\n    path: \"/svelte-client-router/v2/:testParam/testRegexPath\",\n    lazyLoadComponent: () => import(\"../../pages/v2/SCR_TestRegexPath.svelte\"),\n    title: \"SCR - Test Regex Path - Version 2\",\n    beforeEnter: [setVersion2],\n  },\n  {\n    name: \"v2_Test_Regex_Path_2\",\n    path: \"/svelte-client-router/v2/:firstParam/testRegexPath2/:secondParam\",\n    lazyLoadComponent: () => import(\"../../pages/v2/SCR_TestRegexPath2.svelte\"),\n    title: \"SCR - Test Regex Path 2 - Version 2\",\n    beforeEnter: [setVersion2],\n  },\n  {\n    name: \"v2_Test_Loading_Component_Before_Enter\",\n    path: \"/svelte-client-router/v2/testLoadingComponentWithBeforeEnter/:timeout\",\n    lazyLoadComponent: () => import(\"../../pages/v2/SCR_TestLoadingComponentWithBeforeEnter.svelte\"),\n    title: \"SCR - Test Regex Path 2 - Version 2\",\n    beforeEnter: [setVersion2, ({resolve, routeTo}) => {\n      let timeout = 20;\n      if (routeTo && routeTo.pathParams && routeTo.pathParams.timeout) {\n        routeTo.pathParams.timeout = parseInt(routeTo.pathParams.timeout);\n        if (routeTo.pathParams.timeout > 0) {\n          timeout = routeTo.pathParams.timeout;\n        }\n      }\n\n      setTimeout(() => {\n        resolve(true);\n      }, timeout);\n    }],\n  },\n  {\n    name: \"v2_Test_Any_Route_Wildcard\",\n    path: \"/svelte-client-router/v2/anyRouteWildcard/*/:somePathParam\",\n    lazyLoadComponent: () =>\n      import(\"../../pages/v2/SCR_TestAnyRouteWildcard.svelte\"),\n    title: \"SCR - Test - Any Route Wildcard - Version 2\",\n  },\n];\n</script>\n\n<!-- Using SCR_Router -->\n<!-- https://arthurgermano.github.io/svelte-client-router/#/svelte-client-router/v2/routeComponentProperties -->\n<!-- https://arthurgermano.github.io/svelte-client-router/#/svelte-client-router/v2/routeComponentComponents -->\n<SCR_Router\n  {routes}\n  defaultLoadingComponent={SCR_Loading}\n  defaultLoadingParams={{ subLoadingText: \"SubLoading Text Via Param\" }}\n/>\n\n```\n\n### SCR - Configuration Store\n\nConfiguration Store manages the behavior of the <abbr title=\"Svelte Client Router\">SCR</abbr>.\nLet's see the options we have here:\n<br /><a href=\"https://arthurgermano.github.io/svelte-client-router/#/svelte-client-router/v2/configurationOptions\" target=\"_blank\">Configuration Options</a><br />\n<a href=\"https://arthurgermano.github.io/svelte-client-router/#/svelte-client-router/v2/configurationGlobalBeforeEnterOption\" target=\"_blank\">Global Before Enter Functions</a><br />\n<a href=\"https://arthurgermano.github.io/svelte-client-router/#/svelte-client-router/v2/configurationGlobalOnError\" target=\"_blank\">Global On Error</a><br />\n\n```javascript\n{\n  // ## Hash Mode checks route using #/ before the location path\n  // ## for example http://localhost:5000/pathAAA#/pathBBB\n  // ## it will consider only pathBBB and ignore pathAAA as path!\n  // ## Boolean\n  hashMode: false, // ## Default is false\n\n  // ## Navigation History Limit is the amount of route history is added \n  // ## in the route navigation history list \n  // ## 0 or -1 equals to \"no limit\"\n  // ## Integer\n  navigationHistoryLimit: 200, // ## Default is 200\n\n  // ## Not Found Route Path\n  // ## is the path that should redirect when not found a path in the application\n  // ## String - must include \"/\"\n  notFoundRoute: \"/notFound\", // ## Default is \"/notFound\"\n\n  // ## Console Log Error Messages logs in the console \n  // ## any error messages of the SCR for debugging purposes\n  // ## Boolean\n  consoleLogErrorMessages: true, // ## Default is true\n\n  // ## Console Log Stores logs in the console \n  // ## any changes in the Router Store for debugging purposes\n  // ## Boolean\n  consoleLogStores: true, // ## Default is true\n\n  // ## Consider Trailing Slash On Matching Route\n  // ## add an slash in the end of the route path to search in the route definitions\n  // ## Boolean\n  considerTrailingSlashOnMatchingRoute: true // ## Default is true\n\n  // ## Max Redirect Before Enter\n  // ## the maximum value to before enter execute when redirecting\n  // ## Integer\n  maxRedirectBeforeEnter: 30, // ## Default is 30\n\n  // ## Use Scroll - enable or disables scrolling on entering the route\n  // ## Boolean\n  useScroll: true // ## Default is true\n\n  // ## Scroll Props\n  // ## The scrolling props on entering the route if enabled\n  // ## Default Values: \n  // ## scrollProps: {\n  // ##   target: false,  \n  // ##   top: 0,\n  // ##   left: 0,\n  // ##   behavior: \"smooth\",\n  // ##   timeout: 10, // timeout must be greater than 10 milliseconds\n  // ## },\n  // ## Object\n  scrollProps: {\n    target: false,\n    top: 100,\n    left: 100,\n    behavior: \"smooth\",\n    timeout: 1000,\n  },\n\n  // ## Before Enter defines a function or array of Functions\n  // ## that must execute before each route\n  // ## Function or Array - of Functions\n  beforeEnter: [],\n\n  // ## On Error defines a function when an error occurs\n  // ## when routing\n  // ## Function\n  onError: (error) => console.log(error),\n}\n\n// ## EXAMPLE \nimport { configStore } from \"svelte-client-router\";\n\nconfigStore.setHashMode(false);\nconfigStore.setNavigationHistoryLimit(100);\nconfigStore.setNotFoundRoute(\"/myCustomNotFoundRoute\");\nconfigStore.setConsoleLogErrorMessages(true);\nconfigStore.setConsoleLogStores(true);\nconfigStore.setMaxRedirectBeforeEnter(30);\nconfigStore.setUsesRouteLayout(true);\nconfigStore.setConsiderTrailingSlashOnMatchingRoute(true);\n\n// ## Callback receives 2 params \n// ## 1) Error \n// ## 2) Parameters defined for the route, current route, from route, etc..\nconfigStore.setOnError((error) => {\n  // ## Error Object\n  console.log(\"GLOBAL ERROR CONFIG\", error);\n});\n\n// ## Receives a Function or an Array of Functions\n// ## Callback receives 2 params\n// ## 1) resolve function \n// ## Should resolve with: \n// ## - true - when everything went OK\n// ## - false - when just ignore routing and stop\n// ## - { redirect: \"/some_route\" }\n// ## - { path: \"/some_route\" }\n// ## - { name: \"route_name\" }\n// ##\n// ## Route coming from\n// ## Route going to\n// ## reject function - throws exception\n// ## 2) payload object - to pass info between before enter functions - do not override this variable!\nconfigStore.setBeforeEnter([\n  ({resolve, routeFrom, routeTo, reject}, payload) => {\n    payload.test = \"have some variable passing\";\n    console.log(\"Global Before Enter Route - 1\");\n    resolve(true);\n  },\n  ({resolve, routeFrom, routeTo, reject}, payload) => {\n    console.log(\"Global Before Enter Route - 2\");\n    console.log(payload.test) // will print - have some variable passing\n    resolve(true);\n  },\n]);\n\n// ## You can set the entire object with the following\nconfigStore.setConfig({\n  hashMode: false,\n  navigationHistoryLimit: 200,\n  notFoundRoute: \"/notFound\",\n  consoleLogErrorMessages: true,\n  consoleLogStores: false,\n  considerTrailingSlashOnMatchingRoute: true,\n  maxRedirectBeforeEnter: 30,\n  useScroll: false,\n  scrollProps: {\n    target: false,\n    top: 0,\n    left: 0,\n    behavior: \"smooth\",\n    timeout: 10,\n  },\n  onError: (error) => {\n    console.log(\"GLOBAL ERROR CONFIG\", error);\n  },\n  beforeEnter: [\n    (resolve, routeFrom, routeTo, routeObjParams, payload) => {\n      payload.GBER1 = \"My Custom Param to Pass\";\n      console.log(\"Global Before Enter Route - 1\");\n      resolve(true);\n    },\n    (resolve, routeFrom, routeTo, routeObjParams, payload) => {\n      if (payload.GBER1) {\n        payload.GBER2 = \"Yes, I will be set too!\";\n      }\n      console.log(\"Global Before Enter Route - 2\");\n      resolve(true);\n    }\n  ]\n})\n```\n\n### SCR - Route Object Definition\n\nRoute Object is the definition of every route we have in the SPA application and is below our <abbr title=\"Svelte Client Router\">SCR</abbr> Route Component.\n\nLet's see the object format:\n<br /><a href=\"https://arthurgermano.github.io/svelte-client-router/#/svelte-client-router/v2/routeObjectProperties\" target=\"_blank\">Route Object Options</a><br />\n<a href=\"https://arthurgermano.github.io/svelte-client-router/#/svelte-client-router/v2/routeObjectBeforeEnter\" target=\"_blank\">Route Object Before Enter Functions</a><br />\n<a href=\"https://arthurgermano.github.io/svelte-client-router/#/svelte-client-router/v2/routeObjectAfterEnter\" target=\"_blank\">Route Object After Before Enter Function</a><br />\n<a href=\"https://arthurgermano.github.io/svelte-client-router/#/svelte-client-router/v2/routeObjectOnError\" target=\"_blank\">Route Object  On Error</a><br />\n\n\n```javascript\nimport { SCR_Router } from \"svelte-client-router\";\n\nimport SCR_C1 from \"./testComponents/SCR_C1.svelte\";\nimport SCR_Loading from \"./testComponents/SCR_Loading.svelte\";\n\n{\n  // ## Route Name\n  // ## The name identifying this route\n  // ## String - Obrigatory\n  name: \"routeName1\",\n\n  // ## Route Path\n  // ## The path identifying this route\n  // ## String - Obrigatory\n  // ## Can declare regex like /test1/:paramA/test2/:paramB\n  // ## Can declare any route wildcard like /test1/:paramA/*/:paramB\n  // ## This property value is Case Sensitive.\n  // ## The regex must have the format \":string\"\n  path: \"/test1\",\n\n  // ## Component - the component that is going to be used \n  // ## for this route\n  // ## Function - Imported component for this route\n  component: SCR_C1,\n\n  // ## Lazy Load Component - the component that must be loaded to be used \n  // ## for this route\n  // ## Function - Function to load the component for this route\n  lazyLoadComponent: () => import(\"./testComponents/SCR_C1.svelte\"),\n\n  // ## Lazy Load Loading Component - the loading component that must be loaded to be used \n  // ## for this route\n  // ## Function - Function to load the loading component for this route\n  lazyLoadLoadingComponent: () => import(\"./testComponents/SCR_Loading.svelte\"),\n\n  // ## Loading Component - the loading component that is going to be used \n  // ## for this route\n  // ## Function - Imported loading component for this route\n  loadingComponent: SRC_Loading,\n\n  // ## Ignore Layout - if should ignore layout component\n  // ## when you do not want to use global or local layout component\n  // ## Boolean\n  ignoreLayout: false,\n\n  // ## Ignore Scroll - if this route should ignore scrolling\n  // ## Boolean\n  ignoreScroll: true,\n\n  // ## Scroll Props\n  // ## The scrolling props on entering the specific route if enabled\n  // ## Default Values: configuration store\n  // ## Object\n  scrollProps: {\n    target: false,\n    top: 0,\n    left: 0,\n    behavior: \"smooth\",\n    timeout: 10, // timeout must be greater than 10 milliseconds\n  },\n\n  // ## Title - it defines the route title\n  // ## String\n  title: \"First Route Title\",\n\n  // ## Params - all the params the should be available\n  // for this route on any Before Enter Execution or \n  // After Before Enter Execution\n  // ## Object\n  params: {\n    myCustomParam: \"OK THEN SHALL WE!\",\n  },\n\n  // ## Force Reload - when in opened route try to push the same route\n  // by using pushRoute function\n  // When enabled it will reload the current route as if it was not opened\n  // ## Boolean\n  forceReload: false,\n\n  // ## Ignore Global Before Function - \n  // ## if should ignore defined global before function \n  // ## Boolean \n  ignoreGlobalBeforeFunction: false,\n\n  // ## Execute Route Before Enter Function Before Global Before Function \n  // ## if should execute route before function sequence before \n  // ## global before enter execution\n  // ## Boolean \n  executeRouteBEFBeforeGlobalBEF: false,\n\n  // ## Loading Props - all props that must be available to\n  // loading component when it is triggered\n  loadingParams: { loadingText: \"Carregando...\" },\n\n  afterBeforeEnter: (\n    {\n      toRoute,\n      fromRoute,\n      payload\n    }\n  ) => { \n    console.log(\"AFTER ENTER\", toRoute, fromRoute, payload);  \n  },\n\n  // ## Before Enter - a function or array of Functions\n  // ## defining all functions that must be executed for this specific route\n  // ## Function or Array (Functions)\n  beforeEnter: [\n    ({resolve, routeFrom, routeTo, reject}, payload) => {\n      payload.passingToNextBeforeEnter: \"yes, I will be there!\",\n      payload.passingToComponents: \"yes, I will be there either!\",\n      \n      setTimeout(() => resolve(true), 2000);\n      console.log(\"beforeEnter Executed\");\n      resolve(true);\n    },\n    ({resolve, routeFrom, routeTo, reject}, payload) => {\n      console.log(payload);\n      setTimeout(() => resolve(true), 1000);\n      console.log(\"beforeEnter Executed2\");\n      resolve({ redirect: \"/test2\" });\n    },\n  ],\n\n  // ## On Error - a function to execute when somenthing goes wrong on loading\n  // ## this specific route\n  // ## Error Object\n  // ## Function\n  onError: (error) => {\n    console.log(\"ERROR DEFINED ROUTER C1\", error);\n  },\n},\n\n<SCR_Router bind:routes />\n\n```\n\n### SCR - Router Svelte Component\n\nRoute Svelte Component will control the selection of the route, execute all the logic and return accordingly you \nspecified in the router object. \n\nLet's see this component properties and possibilities:\n<br /><a href=\"https://arthurgermano.github.io/svelte-client-router/#/svelte-client-router/v2/routeComponentProperties\" target=\"_blank\">Route Component Properties</a><br />\n<a href=\"https://arthurgermano.github.io/svelte-client-router/#/svelte-client-router/v2/routeComponentComponents\" target=\"_blank\">Route Component Components</a><br />\n\n```javascript\nimport { SCR_Router } from \"svelte-client-router\";\n\n// ## Your route definitions as exampled above\nconst routes = [\n  ...\n]\n\n// ## THE SVELTE CLIENT ROUTER COMPONENT!\n// ## Properties\n// ## the route object definition\n// ## Array of routes\nexport let routes;\n\n// ## The Default Loading Component - SCR has a Loading Component by Default - \n// ## If you not specify nothing will appear between routes - unless defined per route\n// ## It is used when it is executing Before Enter Route or Global Before Enter\n// ## Function\nexport let defaultLoadingComponent = SCR_Loading;\n\n// ## defaultLoadingParams - loading params to be available on loading component\n// ## Object - default is an empty object\nexport let defaultLoadingParams = {};\n\n<SCR_Router \n  bind:routes \n  defaultLoadingComponent \n  defaultLoadingParams\n/>\n\n```\n\n### SCR - Navigation\n\n<abbr title=\"Svelte Client Router\">SCR</abbr> navigation can be very simple. You can import the navigation store or\njust the methods to navigate.\n\nLet's see them:\n<br /><a href=\"https://arthurgermano.github.io/svelte-client-router/#/svelte-client-router/v2/navigationRouting\" target=\"_blank\">Navigate Routing</a><br />\n\n```javascript\n// < -- You Svelte Component Definition-- >\n<script>\n    import { pushRoute, backRoute } from \"svelte-client-router\";\n</script>\n\n<main>\n  My Svelte Component\n  <button on:click={() => { pushRoute(\"/routeNameOne\"); }}>\n    Go To Route Path: /routeNameOne\n  </button>\n  <br>\n  <button on:click={() => { pushRoute({ name: 'routeNameOne'}); }}>\n    Go To Route Named: routeNameOne\n  </button>\n  <br>\n  <button on:click={() => { pushRoute({ path: '/routeNameOne'}); }}>\n    Go To Route Path: /routeNameOne\n  </button>\n  <br>\n  <button on:click={() => { backRoute(); }}>\n    Back to Previous Route\n  </button>\n</main>\n\n```\n\nThe assinature of the methods\n\n```javascript\n\n// ## Push Route Function \n// ## -----------------------------------------------------------------------------------\n// ## -- First Property of Param is where to send accepts the following:\n// ## String /pathToRoute\n// ## Object { path: \"/pathToRoute\" }\n// ## Object { name: \"myRouteName\" }\n// ## -----------------------------------------------------------------------------------\n// ## -- Second Property of Param custom params to pass to route they will be considered\n// ## and made available on before functions after enter route function and component\n// ## Object { someCustomParams: { isAvailable: \"Hell ya\" }}\n// ## -----------------------------------------------------------------------------------\n// ## -- Third Property of Param a custom onError to execute if something goes wrong.\n// ## it will override, ONLY WHEN SET, the route on error defined in the routes object\n// ## -----------------------------------------------------------------------------------\n// ## Function\npushRoute({ \n  name: \"someRouteName\", \n  params: { myParam: \"OK\" }, \n  onError: (error) => console.log(\"Some customization of an error function\")\n});\n\n// ## Back Route Function - returns last route definition\n// ## Function\nbackRoute()\n\n```\n\n### SCR - Router Link Component\n\n<abbr title=\"Svelte Client Router\">SCR</abbr> RouterLink Component is a component to make easy clickable go to route.\n\nLet's see it:\n<br /><a href=\"https://arthurgermano.github.io/svelte-client-router/#/svelte-client-router/v2/routerLink\" target=\"_blank\">Router Link Properties</a><br />\n\n```javascript\n// < -- You Svelte Component Definition-- >\n<script>\n  import { SCR_RouterLink } from \"svelte-client-router\";\n</script>\n\n<main>\n  <SCR_RouterLink \n    params={{\n      name: \"myRouteNameThree\", \n      params: { pushCustomParam: \"someCustomParams\" }, \n      onError: () => console.log(\"Execute this instead error defined on router object! - Only if something goes wrong\") \n    }}\n  elementProps={{ style:\"background-color: green\" }}\n  \n  >\n    <button>Click to Go to Defined Route Named: myRouteNameThree!</button>\n  </SCR_RouterLink>\n</main>\n\n```\n\n### SCR - Router Store\n\n<abbr title=\"Svelte Client Router\">SCR</abbr> Router Store is the store where all the route definitions\nare updated and controlled. You can check real time what is happening.\n\nLet's see it:\n<br /><a href=\"https://arthurgermano.github.io/svelte-client-router/#/svelte-client-router/v2/routesStore\" target=\"_blank\">Router Store Properties</a><br />\n\n```javascript\n// < -- You Svelte Component Definition-- >\n<script>\n  import { routesStore } from \"svelte-client-router\";\n</script>\n\n{\n  // ## Routes\n  // ## The Array object defined on initialization of the application\n  // ## Array\n  routes: [],\n\n  // ## Current Route\n  // ## The object with current route information\n  // ## Updated before \"after before enter function\" execution\n  // ## Object\n  currentRoute: {\n    routeId: undefined,\n    name: undefined,\n    path: undefined,\n    pathname: undefined,\n    fullPath: undefined,\n    queryParams: {},\n    pathParams: {},\n    params: {},\n    host: undefined,\n    protocol: undefined,\n    port: undefined,\n    origin: undefined,\n    hash: undefined,\n    routeObj: {},\n    redirected: undefined,\n  },\n\n  // ## From Route\n  // ## The object with from route information\n  // ## Updated before \"after before enter function\" execution\n  // ## Object\n  fromRoute: {\n    routeId: undefined,\n    name: undefined,\n    path: undefined,\n    pathname: undefined,\n    fullPath: undefined,\n    queryParams: {},\n    pathParams: {},\n    params: {},\n    host: undefined,\n    protocol: undefined,\n    port: undefined,\n    origin: undefined,\n    hash: undefined,\n    routeObj: {},\n    redirected: undefined,\n  },\n\n  // ## Navigation History\n  // ## An array with all the route history objects - the limit is \n  // ## defined in the configuration store\n  // ## Updated before \"after before enter function\" execution\n  // ## Array\n  navigationHistory: [],\n}\n\n// ## Methods available on the STORE OBJECTS\n// ## -----------------------------------------------------------------------------------\n// ## setRoutes,\n// ## getRoutes,\n// ## setCurrentRoute,\n// ## getCurrentRoute,\n// ## setFromRoute,\n// ## getFromRoute,\n// ## setNavigationHistory,\n// ## getNavigationHistory,\n// ## pushNavigationHistory,\n// ## getNotFoundRoute,\n\n```\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 5],
		[3596, 42],
		[3603, 42],
		[3610, 45],
		[3617, 7],
		[3624, 18],
		[3631, 4],
		[3638, 29],
		[3645, 47],
		[3652, 15],
		[3659, 7],
		[3666, 46],
		[3673, 4],
		[3680, 8],
		[3687, 10],
		[3694, 2],
		[3701, 8],
		[3708, 5],
		[3715, 4],
		[3722, 9],
		[3729, 44],
		[3736, 58],
		[3743, 11],
		[3750, 67],
		[3757, 16],
		[3764, 47],
		[3771, 31],
		[3778, 6],
		[3785, 2],
		[3792, 5],
		[3799, 4],
		[3806, 6],
		[3813, 1],
		[3820, 2],
		[3827, 1],
		[3834, 13],
		[3841, 48],
		[3848, 5],
		[3855, 157],
		[3862, 5],
		[3869, 5],
		[3876, 5],
		[3883, 6],
		[3890, 46],
		[3897, 44],
		[3904, 2],
		[3911, 5],
		[3918, 4],
		[3925, 6],
		[3932, 4],
		[3939, 5],
		[3946, 5],
		[3953, 6],
		[3960, 10],
		[3967, 2],
		[3974, 15],
		[3981, 3],
		[3988, 47],
		[3995, 7],
		[4002, 5],
		[4009, 8],
		[4016, 46],
		[4023, 3],
		[4030, 6],
		[4037, 145],
		[4044, 199],
		[4051, 101],
		[4058, 151],
		[4065, 35],
		[4072, 4],
		[4079, 26],
		[4086, 4],
		[4093, 4],
		[4100, 128],
		[4107, 10],
		[4114, 16],
		[4121, 44],
		[4128, 18]
	]
}
