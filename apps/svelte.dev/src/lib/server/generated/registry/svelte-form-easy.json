{
	"name": "svelte-form-easy",
	"description": "Build forms with validation in Svelte apps.",
	"repo_url": "https://github.com/vanzinvestor/svelte-form-easy",
	"authors": ["vanzinvestor"],
	"homepage": "https://github.com/vanzinvestor/svelte-form-easy",
	"downloads": 4,
	"updated": "2022-11-08T11:25:56.673Z",
	"tags": ["miscellaneous"],
	"github_stars": 0,
	"typescript": true,
	"version": "2.0.2",
	"svelte_range": "^3.52.0",
	"last_rune_check_version": "2.0.2",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-form-easy",
				"version": "2.0.2",
				"size": 41843
			},
			{
				"name": "svelte",
				"version": "3.59.2",
				"size": 10624206
			},
			{
				"name": "yup",
				"version": "0.32.11",
				"size": 319578
			},
			{
				"name": "lodash",
				"version": "4.17.21",
				"size": 1412415
			},
			{
				"name": "toposort",
				"version": "2.0.2",
				"size": 16683
			},
			{
				"name": "lodash-es",
				"version": "4.17.21",
				"size": 636080
			},
			{
				"name": "nanoclone",
				"version": "0.2.1",
				"size": 6122
			},
			{
				"name": "@types/lodash",
				"version": "4.17.16",
				"size": 867997
			},
			{
				"name": "property-expr",
				"version": "2.0.6",
				"size": 10306
			},
			{
				"name": "@babel/runtime",
				"version": "7.27.1",
				"size": 246647
			}
		],
		"dependencies": [
			[0, 1],
			[0, 2],
			[2, 3],
			[2, 4],
			[2, 5],
			[2, 6],
			[2, 7],
			[2, 8],
			[2, 9]
		],
		"circular": []
	},
	"readme": "# Svelte Form Easy\r\n\r\n[![npm version](https://badge.fury.io/js/svelte-form-easy.svg)](https://badge.fury.io/js/svelte-form-easy)\r\n\r\nSvelte realtime form validator with [yup](https://www.npmjs.com/package/yup) validation\r\n\r\n[Demo](https://stackblitz.com/edit/vitejs-vite-vesyu1?file=src/components/v2.0.0/Signup.svelte)\r\n\r\n## Install\r\n\r\nInstall `svelte-form-easy` package\r\n\r\n```bash\r\nnpm i svelte-form-easy\r\n```\r\n\r\nInstall `yup` package\r\n\r\n```bash\r\nnpm i yup\r\n```\r\n\r\n## Use\r\n\r\n### Step 1 Create interface\r\n\r\n```ts\r\n// src/interfaces/ISignupForm.ts\r\ninterface ISignupForm {\r\n  username: string;\r\n  email: string;\r\n  password: string;\r\n  confirmPassword: string;\r\n  termsAndConditions: boolean;\r\n}\r\n```\r\n\r\n### Step 2 Create schema validation\r\n\r\n```ts\r\n// src/schemas/signupSchema.ts\r\nimport * as Yup from 'yup';\r\nimport type { AnySchema } from 'yup';\r\nimport type { ISignupForm } from './../interfaces/ISignupForm';\r\n\r\nexport const signupSchema = Yup.object<\r\n  Record<keyof ISignupForm, AnySchema>\r\n>().shape({\r\n  username: Yup.string()\r\n    .min(3, 'Username must be at least 3 characters')\r\n    .required('Username is required')\r\n    .matches(/^\\S*$/, 'Whitespace is not allowed'),\r\n  email: Yup.string().email('Email is invalid').required('Email is required'),\r\n  password: Yup.string()\r\n    .min(8, 'Password must be at least 8 characters')\r\n    .required('Password is required')\r\n    .matches(/^\\S*$/, 'Whitespace is not allowed'),\r\n  confirmPassword: Yup.string()\r\n    .required('Confirm password is required')\r\n    .test('passwords-match', 'Password does not match', function (value) {\r\n      return this.parent.password === value;\r\n    }),\r\n  termsAndConditions: Yup.boolean().oneOf(\r\n    [true],\r\n    'Terms and conditions is required'\r\n  ),\r\n});\r\n```\r\n\r\n### Step 3 Use in components (App.svelte)\r\n\r\n#### _VERSION 2.0.0 OR LATEST_\r\n\r\n```svelte\r\n<script lang=\"ts\">\r\n  import * as Yup from 'yup';\r\n  import type { AnySchema } from 'yup';\r\n  import type { ISignupForm } from './interfaces/ISignupForm';\r\n  import { signupSchema } from './schemas/signupSchema';\r\n  import type { FormSubmit } from 'svelte-form-easy';// Import this\r\n  import { Form, Field, ErrorMessage, Button } from 'svelte-form-easy'; // Import this\r\n\r\n   // Create initial values\r\n  const initialValues: ISignupForm = {\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    termsAndConditions: false,\r\n  };\r\n\r\n  const handleSubmit = ({\r\n    valid,\r\n    form,\r\n    reset,\r\n    forceTouched,\r\n  }: FormSubmit<ISignupForm>) => {\r\n    if (valid.isValid) {\r\n      console.log(form);\r\n      reset();\r\n    } else {\r\n      forceTouched();\r\n    }\r\n  };\r\n</script>\r\n\r\n<main>\r\n  <h1>Svelte Form Easy</h1>\r\n  <Form\r\n    class=\"form-signup\"\r\n    {handleSubmit}\r\n    {initialValues}\r\n    validationSchema={signupSchema}\r\n  >\r\n    <div class=\"input-field\">\r\n      <label for=\"username\">Username</label>\r\n       <!-- reference name--->\r\n      <Field\r\n        type=\"text\"\r\n        name=\"username\"\r\n        id=\"username\"\r\n        autocomplete=\"off\"\r\n        placeholder=\"Enter Username\"\r\n      />\r\n      <ErrorMessage name=\"username\" />\r\n    </div>\r\n    <div class=\"input-field\">\r\n      <label for=\"email\">Email</label>\r\n       <!-- reference name--->\r\n      <Field\r\n        type=\"text\"\r\n        name=\"email\"\r\n        id=\"email\"\r\n        autocomplete=\"off\"\r\n        placeholder=\"Enter Email\"\r\n      />\r\n      <ErrorMessage name=\"email\" />\r\n    </div>\r\n    <div class=\"input-field\">\r\n      <label for=\"password\">Password</label>\r\n       <!-- reference name--->\r\n      <Field\r\n        type=\"password\"\r\n        name=\"password\"\r\n        id=\"password\"\r\n        autocomplete=\"off\"\r\n        placeholder=\"Enter Password\"\r\n      />\r\n      <ErrorMessage name=\"password\" />\r\n    </div>\r\n    <div class=\"input-field\">\r\n      <label for=\"confirmPassword\">Confirm Password</label>\r\n       <!-- reference name--->\r\n      <Field\r\n        type=\"password\"\r\n        name=\"confirmPassword\"\r\n        id=\"confirmPassword\"\r\n        placeholder=\"Confirm Password\"\r\n        autocomplete=\"off\"\r\n      />\r\n      <ErrorMessage name=\"confirmPassword\" />\r\n    </div>\r\n    <div class=\"input-terms\">\r\n      <!-- reference name--->\r\n      <Field\r\n        type=\"checkbox\"\r\n        name=\"termsAndConditions\"\r\n        id=\"termsAndConditions\"\r\n        className=\"terms\"\r\n      />\r\n      <label for=\"termsAndConditions\">\r\n        <p>\r\n          By creating an account you agree to our <a\r\n            href=\"/terms-and-conditions\">Terms & Conditions</a\r\n          >.\r\n        </p>\r\n      </label>\r\n      <ErrorMessage  name=\"termsAndConditions\" className=\"terms-invalid-feedback\" />\r\n    </div>\r\n    <div class=\"input-field\">\r\n      <Button type=\"submit\">Signup</Button>\r\n    </div>\r\n  </Form>\r\n</main>\r\n\r\n<style type=\"scss\">\r\n /*Use as same version 1.0.0*/\r\n</style>\r\n```\r\n\r\n#### _VERSION 1.0.0 OR LATEST_\r\n\r\n```svelte\r\n<script lang=\"ts\">\r\n  import * as Yup from 'yup';\r\n  import type { AnySchema } from 'yup';\r\n  import type { ISignupForm } from './interfaces/ISignupForm';\r\n  import { signupSchema } from './schemas/signupSchema';\r\n  import { useForm } from 'svelte-form-easy'; // Import this\r\n\r\n   // Create initial values\r\n  const initialValues: ISignupForm = {\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    termsAndConditions: false,\r\n  };\r\n\r\n  const {\r\n    form,\r\n    touched,\r\n    useValidForm,\r\n    useValidTouch,\r\n    handleChange,\r\n    handleTouch,\r\n    handleReset,\r\n    handleForceTouched,\r\n  } = useForm<ISignupForm>({\r\n    initialValues: initialValues,\r\n    validationSchema: signupSchema,\r\n  });\r\n\r\n  $: valid = useValidForm($form);\r\n  $: dirty = useValidTouch($touched);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (valid.isValid) {\r\n      console.log($form);\r\n      handleReset();\r\n    } else {\r\n      handleForceTouched();\r\n    }\r\n  };\r\n</script>\r\n\r\n<main>\r\n  <h1>Svelte Form Easy</h1>\r\n  <form on:submit={handleSubmit}>\r\n    <div class=\"input-field\">\r\n      <label for=\"username\">Username</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"username\" <!-- reference name--->\r\n        id=\"username\"\r\n        on:focus={handleTouch}\r\n        on:change={handleChange}\r\n        bind:value={$form.username}\r\n        class={valid.errors?.username && $touched.username\r\n          ? 'is-invalid'\r\n          : $touched.username\r\n          ? 'is-valid'\r\n          : ''}\r\n        autocomplete=\"off\"\r\n        placeholder=\"Enter Username\"\r\n      />\r\n      {#if valid.errors?.username && $touched.username}\r\n        <span class=\"invalid-feedback\">{valid.errors?.username}</span>\r\n      {/if}\r\n    </div>\r\n    <div class=\"input-field\">\r\n      <label for=\"email\">Email</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"email\" <!-- reference name--->\r\n        id=\"email\"\r\n        on:focus={handleTouch}\r\n        on:change={handleChange}\r\n        bind:value={$form.email}\r\n        class={valid.errors?.email && $touched.email\r\n          ? 'is-invalid'\r\n          : $touched.email\r\n          ? 'is-valid'\r\n          : ''}\r\n        autocomplete=\"off\"\r\n        placeholder=\"Enter Email\"\r\n      />\r\n      {#if valid.errors?.email && $touched.email}\r\n        <span class=\"invalid-feedback\">{valid.errors?.email}</span>\r\n      {/if}\r\n    </div>\r\n    <div class=\"input-field\">\r\n      <label for=\"password\">Password</label>\r\n      <input\r\n        type=\"password\"\r\n        name=\"password\" <!-- reference name--->\r\n        id=\"password\"\r\n        on:focus={handleTouch}\r\n        on:change={handleChange}\r\n        bind:value={$form.password}\r\n        class={valid.errors?.password && $touched.password\r\n          ? 'is-invalid'\r\n          : $touched.password\r\n          ? 'is-valid'\r\n          : ''}\r\n        autocomplete=\"off\"\r\n        placeholder=\"Enter Password\"\r\n      />\r\n      {#if valid.errors?.password && $touched.password}\r\n        <span class=\"invalid-feedback\">{valid.errors?.password}</span>\r\n      {/if}\r\n    </div>\r\n    <div class=\"input-field\">\r\n      <label for=\"confirmPassword\">Confirm Password</label>\r\n      <input\r\n        type=\"password\"\r\n        id=\"confirmPassword\"\r\n        name=\"confirmPassword\" <!-- reference name--->\r\n        on:focus={handleTouch}\r\n        on:change={handleChange}\r\n        bind:value={$form.confirmPassword}\r\n        class={valid.errors?.confirmPassword && $touched.confirmPassword\r\n          ? 'is-invalid'\r\n          : $touched.confirmPassword\r\n          ? 'is-valid'\r\n          : ''}\r\n        placeholder=\"Confirm Password\"\r\n        autocomplete=\"off\"\r\n      />\r\n      {#if valid.errors?.confirmPassword && $touched.confirmPassword}\r\n        <span class=\"invalid-feedback\">{valid.errors?.confirmPassword}</span>\r\n      {/if}\r\n    </div>\r\n    <div class=\"input-terms\">\r\n      <input\r\n        type=\"checkbox\"\r\n        name=\"termsAndConditions\" <!-- reference name--->\r\n        id=\"termsAndConditions\"\r\n        on:focus={handleTouch}\r\n        on:change={handleChange}\r\n        bind:checked={$form.termsAndConditions}\r\n        class=\"terms\"\r\n      />\r\n      <label for=\"termsAndConditions\">\r\n        <p>\r\n          By creating an account you agree to our <a\r\n            href=\"/terms-and-conditions\">Terms & Conditions</a\r\n          >.\r\n        </p>\r\n      </label>\r\n      {#if valid.errors?.termsAndConditions && $touched.termsAndConditions}\r\n        <span class=\"terms-invalid-feedback\"\r\n          >{valid.errors?.termsAndConditions}</span\r\n        >\r\n      {/if}\r\n    </div>\r\n    <div class=\"input-field\">\r\n      <button type=\"submit\" disabled={!valid.isValid && dirty}>Signup</button>\r\n    </div>\r\n  </form>\r\n</main>\r\n\r\n<style type=\"scss\">\r\n  $color: #ff3e00;\r\n  main {\r\n    text-align: center;\r\n    padding: 1em;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  h1 {\r\n    color: $color;\r\n    text-transform: uppercase;\r\n    font-size: 2.5em;\r\n    font-weight: 100;\r\n  }\r\n\r\n  form {\r\n    margin: 0 auto;\r\n    max-width: 380px;\r\n    width: 100%;\r\n    padding: 1rem 0;\r\n  }\r\n  .input-field {\r\n    width: 100%;\r\n    text-align: left;\r\n    position: relative;\r\n  }\r\n\r\n  .input-field label {\r\n    color: #555;\r\n  }\r\n\r\n  input {\r\n    &:not(.terms) {\r\n      min-width: 250px;\r\n    }\r\n\r\n    width: 100%;\r\n    outline: none;\r\n    border: none;\r\n    line-height: 1;\r\n    padding: 12px 20px;\r\n    margin: 14px 0;\r\n    display: inline-block;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n\r\n    &:focus {\r\n      outline: none;\r\n      border: 1px solid #aaa;\r\n    }\r\n\r\n    &.is-valid,\r\n    &:focus.is-valid {\r\n      border: 2px solid #4caf50;\r\n    }\r\n\r\n    &.is-invalid,\r\n    &:focus.is-invalid {\r\n      border: 2px solid #dc3545;\r\n    }\r\n  }\r\n\r\n  .invalid-feedback,\r\n  .terms-invalid-feedback {\r\n    position: absolute;\r\n    bottom: -2px;\r\n    left: 0;\r\n    padding-left: 5px;\r\n    font-size: 0.875em;\r\n    color: #dc3545;\r\n  }\r\n\r\n  .terms-invalid-feedback {\r\n    bottom: -10px;\r\n  }\r\n\r\n  .input-terms {\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin: 8px 0;\r\n    position: relative;\r\n  }\r\n\r\n  input.terms {\r\n    width: 20px;\r\n  }\r\n\r\n  .input-terms label {\r\n    width: 250px;\r\n  }\r\n\r\n  button {\r\n    width: 100%;\r\n    background-color: #4caf50;\r\n    color: white;\r\n    font-size: 18px;\r\n    padding: 14px 20px;\r\n    margin: 12px 0;\r\n    border: none;\r\n    border-radius: 4px;\r\n    cursor: pointer;\r\n\r\n    &:disabled {\r\n      cursor: unset;\r\n      background-color: #c8c8c8;\r\n\r\n      &:hover {\r\n        cursor: unset;\r\n        background-color: #c8c8c8;\r\n      }\r\n    }\r\n\r\n    &:hover {\r\n      background-color: #45a049;\r\n    }\r\n  }\r\n</style>\r\n```\r\n\r\n## Example App\r\n\r\n[Sigup App](https://github.com/vanzinvestor/example-svelte-form-easy-signup-app)\r\n\r\n## Inspire by\r\n\r\n[svelte-forms-lib](https://www.npmjs.com/package/svelte-forms-lib) [svelte-yup](https://www.npmjs.com/package/svelte-yup)\r\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3596, 1],
		[3603, 5],
		[3610, 4],
		[3617, 1],
		[3624, 1],
		[3631, 2],
		[3645, 5],
		[3652, 1],
		[3666, 6],
		[3680, 1],
		[3708, 1],
		[3722, 1],
		[3729, 1],
		[3736, 1],
		[3757, 2],
		[3771, 5],
		[3778, 2],
		[3792, 1],
		[3799, 1],
		[3806, 2],
		[3827, 1],
		[3841, 21],
		[3848, 1],
		[3855, 1],
		[3862, 1],
		[3883, 2],
		[3890, 4],
		[3904, 5],
		[3918, 2],
		[3932, 1],
		[3953, 1],
		[3960, 2],
		[3981, 1],
		[3995, 3],
		[4016, 1],
		[4030, 4],
		[4037, 7],
		[4044, 6],
		[4051, 2],
		[4065, 1],
		[4100, 13],
		[4114, 4],
		[4121, 9],
		[4128, 3]
	]
}
