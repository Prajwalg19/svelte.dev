{
	"name": "@svizzle/ui",
	"description": "Provides set of UI components for Svelte.",
	"repo_url": "https://github.com/nestauk/svizzle",
	"authors": ["nestauk-dev", "mindrones"],
	"homepage": "https://github.com/nestauk/svizzle",
	"downloads": 13,
	"updated": "2023-11-23T20:36:01.455Z",
	"tags": ["ui"],
	"github_stars": 19,
	"typescript": false,
	"version": "0.13.0",
	"svelte_range": "^3.59.2",
	"last_rune_check_version": "0.13.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@svizzle/ui",
				"version": "0.13.0",
				"size": 167159
			},
			{
				"name": "@macfja/svelte-persistent-store",
				"version": "2.4.2",
				"size": 80842
			},
			{
				"name": "@macfja/serializer",
				"version": "1.1.4",
				"size": 26769
			},
			{
				"name": "browser-cookies",
				"version": "1.2.0"
			},
			{
				"name": "idb-keyval",
				"version": "6.2.1",
				"size": 53805
			},
			{
				"name": "sjcl-codec-hex",
				"version": "1.0.0"
			},
			{
				"name": "sjcl-bit-array",
				"version": "1.0.0"
			},
			{
				"name": "sjcl-es",
				"version": "2.0.0",
				"size": 2265130
			},
			{
				"name": "@svizzle/dom",
				"version": "0.7.3",
				"size": 10888
			},
			{
				"name": "@svizzle/utils",
				"version": "0.21.0",
				"size": 269532
			},
			{
				"name": "escape-string-regexp",
				"version": "5.0.0",
				"size": 3659
			},
			{
				"name": "just-compare",
				"version": "2.3.0",
				"size": 9255
			},
			{
				"name": "lamb",
				"version": "0.61.1",
				"size": 1101065
			},
			{
				"name": "bowser",
				"version": "2.11.0",
				"size": 216913
			},
			{
				"name": "d3-color",
				"version": "3.1.0",
				"size": 61152
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[1, 3],
			[1, 4],
			[1, 5],
			[5, 6],
			[1, 7],
			[0, 8],
			[8, 9],
			[9, 10],
			[9, 11],
			[9, 12],
			[8, 12],
			[0, 9],
			[0, 13],
			[0, 14]
		],
		"circular": []
	},
	"readme": "# UI\n\nA set of UI components for Svelte.\n\n## Icons\n\nWe can pass a Svelte component to the [`Icon`](./src/icons/Icon.svelte) component in order to render the desired icon, like this:\n\n```svelte\n<script>\n\timport {default as Icon} from '@svizzle/ui/src/icons/Icon.svelte';\n\timport {default as Download} from '@svizzle/ui/src/icons/feather/Download.svelte';\n</script>\n\n<Icon\n\tglyph={Download}\n\tsize=30\n\tstrokeWidth=1.5\n/>\n```\n\n`Icon` props:\n- `glyph`\n\t- description: the svelte component of the icon to be rendered (of course you can provide your own)\n\t- type: `svelte component`\n\t- default: `null`\n- `size`:\n\t- description: icon size\n\t- type: `number`\n\t- default: `24`\n- style:\n\t- `fill`:\n\t\t- description: the color to be used to fill closed shapes\n\t\t- type: `string`\n\t\t- default: `'none'`\n\t- `stroke`:\n\t\t- description: lines color\n\t\t- type: `string`\n\t\t- default: `'currentColor'`\n\t- `strokeWidth`:\n\t\t- description: lines thickness\n\t\t- type: `number`\n\t\t- default: `2`\n\nAs a commodity, icons from https://github.com/feathericons/feather/tree/master/icons are automatically turned into Svelte components and provided in `./src/icons/feather` for ease of use.\n\nNote that the `makeFeatherIcons` npm script assumes the `feather` directory in the root of the Svizzle repository because Lerna is set up to hoist packages in the root `node_modules` dir.\n\n## LayoutHMF\n\nA component with a `header` (H), a `main` (M) and a `footer` (F).\n\nIt has no props, but you can pass up to 3 slots with the correspondent names:\n\n```\n<LayoutHMF>\n\t<h2 slot='header'>{headerText}</h2>\n\t<MyComponent\n\t\tprop={myProp}\n\t\tslot='main'\n\t/>\n\t<p slot='footer'>{footerText}</p>\n</LayoutHMF>\n```\n\n## HyperLink\n\nProps:\n- `download`: `string`, defaults to `null`; serves as a file name as opposed to the file name provided in `href`; use for files that the browser would otherwise display, in order to get a download dialog instead.\n\tFor example:\n\t\t- if the `href` is a `zip` or `csv` file, it's not needed;\n\t\t- if the `href` is `data/foo.png` (which could be displayed), by providing `download='bar'` we download a file named `bar.png`.\n\tOrder of precedence of the filename extension offered in save-file dialog:\n\t\t1. extension in the `download` attribute\n\t\t2. mime type of the response (for example when we try to download a picture but we get a 404)\n\t\t3. extension in the `href` attribute.\n- `href`: `string`, defaults to `null`\n- `hreflang`: `string`, defaults to `null`\n- `iconSize`: `number`, defaults to `14`\n- `isBold`: `boolean`, defaults to `false`\n- `isUnderlined`: `boolean`, defaults to `false`\n- `rel`: `string`, defaults to `'noopener'`\n- `showIcon`: `boolean`, defaults to `true`\n- `target`: `string`, defaults to `null`\n- `text`: `string`, defaults to '' (if `href` isn't provided it turns into `<HyperLink.svelte>: PLEASE PROVIDE A `href` PROP'`)\n- `theme`: `object`, it gets merged to the default object, that is:\n\t```\n\t{\n\t\ticonStroke: 'rgb(16, 174, 249)',\n\t\ticonStrokeWidth: 2,\n\t\ttextColor: 'black',\n\t}\n\t```\n- `type`: `string`, defaults to `null` (see https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types)\n\n## LinkButton\n\nProps:\n- `download`: `string`, defaults to `null`; see `HyperLink` above.\n- `glyph`: a Svelte component for an optional icon\n- `href`: `string`, defaults to `null`\n- `hreflang`: `string`, defaults to `null`\n- `iconSize`: `number`, defaults to `14`\n- `rel`: `string`, defaults to `'noopener'`\n- `target`: `string`, defaults to `null`\n- `text`: `string`, defaults to 'Please provide `text`'\n- `theme`: `object`, it gets merged to the default object, that is:\n\t```\n\t{\n\t\tbackgroundColor: 'black',\n\t\tboxShadowColor: 'lightgrey',\n\t\tboxShadowVec: '2px 8px 9px -4px',\n\t\ticonFill: defaultFill,\n\t\ticonStroke: defaultStroke,\n\t\ticonStrokeWidth: defaultStrokeWidth,\n\t\ttextColor: 'white',\n\t}\n\t```\n- `type`: `string`, defaults to `null` (see https://developer.mozilla.org/en-US/docs/Web/HTML/Link_types)\n\n\n## LoadingView\n\nAn empty view with a rotating icon at its center, with the same props of `Icon` so that you can control the displayed icon.\n\nProps:\n- `fill`: string, defaults to `null`\n- `glyph`: Svelte component, defaults to `Loader` (Feather's `loader`)\n- `size`: number, defaults to `50`\n- `stroke`: string, defaults to `null`\n- `strokeWidth`: number, defaults to `0.75`\n\n## MessageView\n\nAn empty view with a text at its center.\n\nProps:\n- `backgroundColor` (string, default: 'white')\n- `color` (string, default: 'black')\n- `fontSize` (string, default: '14px')\n- `text` (string, default: 'Please provide a message')\n\n## MultiBanner\n\nA component to display multiple banners in a sequence, to be used typically during page loading.\n\n[See it in action](https://access-research-development-spatial-data.beis.gov.uk/).\n\nProps:\n- `_screen`: `ScreenSensor` store, defaults to `null`\n- `components`: Array of Svelte components, dewfaults to empty array\n- `currentIndex`: number, defaults to 0\n\n## NoScript\n\nDisplays a message when Javascript is disabled.\n\nTo test this, disable Javascript in your browser and check Svizzle's documentation website.\n\n## ResponsiveButton\n\nA button with 2 slots:\n- `always`: always renders\n- `optional`: renders if there's enough room for it or if disabled via `isOptionalHidden`\n\nThe component measures the container size and if the `optional` slot is not disabled it automatically hides it when there's not enough room for it.\n\nProps:\n- `doesOverflow` (`bool`): if so, doesn't render the `optional` slot\n- `isActive` (`bool`): if so, renders using `theme.colorBackgroundActive` and `theme.colorTextActive`\n- `isOptionalHidden` (`bool`): if so, doesn't render the `optional` slot\n- `title` (`string`): the HTML `title` attribute for the button\n- `theme`:\n\t- `borderBottom`, `borderLeft`, `borderRight`, `borderTop`: borders, useful when we have a row/column of these buttons and want to apply borders in such a way to avoid borders duplication\n\t- `colorBackground`, `colorBackgroundActive`: default and active `background-color`\n\t- `colorText`, `colorTextActive`: default and active `color`\n\t- `colorText`, `colorTextActive`: default and active `color`\n\t- `outlineColor`, `outlineStyle`, `outlineWidth`: values for the correspondent `outline-*` CSS properties\n\n## ResponsiveFlex\n\nHandles content layout so that its children are aligned:\n\n* horizontally on `medium` and larger displays (according to `ScreenSensor`)\n* vertically centered on `small` and smaller displays\n\n## Switch\n\nA simple toggle between 2 values.\n\n## Sensor components\n\nThese are components that we instantiate to measure some feature of the device/browser.\n\n### ScreenSensor\n\nMeasures screen features reactively, see [here](src/sensors/screen).\n\n\n### ScrollbarStyler (Blink & WebKit browsers)\n\nThis Svelte component provides a solution to style scrollbars on Blink and WebKit based browsers to allow for easy customization of the scrollbars to better match the design of the webpage.\n\nIt uses the `::-webkit-scrollbar` pseudo-element to target the scrollbar and a `:global` selector to ensure that the styling is applied globally.\n\nIt can be enabled using the `isEnabled` prop.\n\nUsing the `theme` prop you can set:\n- the color of the track and the thumb\n- the track border color\n- the track width\n- the thumb radius\n\n## Usage\n\nInclude this component with the desired `theme` in a specific page or, in the main layout to style scrollbars of the entire web app.\n\n## Breakpoints\n\n```\nimport {breakpoints} from '@svizzle/ui/src/defaults';\n```\n\nA set of breakpoints for responsiveness, expressed in amount of chars fitting the screen width for responsive layouts (`[45, 90, 135, 180]`), see [here](https://github.com/nestauk/eurito_indicators_ui/issues/7#issuecomment-790848997).\n\nThe bands among breakpoints can be thought as T-shirt sizes:\n```\n       45      90      135     180\nxSmall | small | medium | large | xLarge\n```\n\n![breakpoints and bands](./doc/breakpoints.png)\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 24],
		[3603, 116],
		[3610, 153],
		[3617, 11],
		[3624, 14],
		[3638, 3],
		[3645, 10],
		[3652, 8],
		[3659, 20],
		[3666, 43],
		[3673, 3],
		[3687, 2],
		[3694, 18],
		[3701, 11],
		[3708, 12],
		[3715, 1],
		[3722, 5],
		[3729, 2],
		[3736, 1],
		[3743, 2],
		[3750, 2],
		[3757, 3],
		[3764, 2],
		[3771, 15],
		[3778, 1],
		[3785, 9],
		[3799, 2],
		[3806, 6],
		[3813, 5],
		[3820, 1],
		[3834, 13],
		[3841, 41],
		[3848, 1],
		[3855, 28],
		[3862, 44],
		[3869, 9],
		[3876, 3],
		[3883, 3],
		[3890, 1],
		[3897, 4],
		[3904, 346],
		[3911, 3],
		[3918, 4],
		[3925, 1],
		[3932, 3],
		[3939, 2],
		[3946, 3],
		[3953, 3],
		[3960, 3],
		[3981, 1],
		[3988, 2],
		[3995, 1],
		[4002, 4],
		[4009, 1],
		[4016, 5],
		[4023, 16],
		[4030, 4],
		[4037, 31],
		[4044, 18],
		[4051, 7],
		[4058, 3],
		[4072, 3],
		[4079, 1],
		[4093, 18],
		[4100, 35],
		[4107, 5],
		[4114, 13],
		[4121, 28],
		[4128, 5],
		[4135, 9]
	],
	"esm": true,
	"cjs": false
}
