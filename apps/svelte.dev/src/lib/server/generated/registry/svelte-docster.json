{
	"name": "svelte-docster",
	"description": "Generate metadata from JSDoc comments in Svelte files.",
	"repo_url": "https://github.com/TheComputerM/svelte-docster",
	"authors": ["thecomputerm"],
	"homepage": "https://github.com/TheComputerM/svelte-docster#readme",
	"downloads": 7,
	"updated": "2021-06-07T19:05:45.916Z",
	"tags": ["tooling"],
	"github_stars": 9,
	"typescript": false,
	"version": "2.0.1",
	"svelte_range": "^3.38.2",
	"last_rune_check_version": "2.0.1",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-docster",
				"version": "2.0.1",
				"size": 61200
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "<h1 align=\"center\">Welcome to svelte-docster üëã</h1>\n<p>\n  <img alt=\"Version\" src=\"https://img.shields.io/npm/v/svelte-docster\" />\n  <a href=\"https://github.com/TheComputerM/svelte-docster#readme\" target=\"_blank\">\n    <img alt=\"Documentation\" src=\"https://img.shields.io/badge/documentation-yes-brightgreen.svg\" />\n  </a>\n  <a href=\"https://github.com/TheComputerM/svelte-docster/graphs/commit-activity\" target=\"_blank\">\n    <img alt=\"Maintenance\" src=\"https://img.shields.io/badge/Maintained%3F-yes-green.svg\" />\n  </a>\n  <a href=\"https://github.com/TheComputerM/svelte-docster/blob/master/LICENSE\" target=\"_blank\">\n    <img alt=\"License: MIT\" src=\"https://img.shields.io/github/license/TheComputerM/svelte-docster\" />\n  </a>\n  <a href=\"https://twitter.com/TheComputerM\" target=\"_blank\">\n    <img alt=\"Twitter: TheComputerM\" src=\"https://img.shields.io/twitter/follow/TheComputerM.svg?style=social\" />\n  </a>\n</p>\n\n> Generate metadata about your Svelte files from jsdoc.\n\n### üè† [Homepage](https://github.com/TheComputerM/svelte-docster#readme)\n\n## Install\n\nThis project was created to have something in between sveltedoc-parser and sveld. This project can be used to give simple data on what your svelte file exports.\n\n```sh\nnpm i -D svelte-docster\n```\n\n## Usage\n\n```js\nconst docster = require('svelte-docster');\n//or\nimport docster from 'svelte-docster';\n\ndocster({\n  // provide either the full path to the svelte file\n  file: 'full/path/to/file.svelte',\n\n  // or provide string content and the filename,\n  content: '<script> ... </script> Svelte file',\n  filename: 'App.svelte',\n});\n```\n\n## Output\n\n```ts\n{\n  props: {\n    propName: {\n      value: string,\n      valueType: 'Literal' | 'Identifier' | 'FunctionDeclaration' | null,\n      localName: string,\n      kind: 'let' | 'const' | 'function',\n      required: boolean,\n      description: string,\n      tags: [\n        {\n          tag: string,\n          type: string,\n          name: string,\n          description: string,\n        },\n        ...\n      ]\n    },\n    ...\n  }\n\n  slots: {\n    slotName: {\n      type: string,\n      description: string,\n      content: string,\n      attributes: {\n        attributeName: {\n          value: string,\n          valueType: string,\n        },\n        ...\n      }\n    },\n    ...\n  },\n\n  events: {\n    eventName: {\n      eventDetail: string,\n      description: string,\n      by?: \"Element\" | \"InlineComponent\",\n      trigger?: string,\n    },\n    ...\n  }\n\n  typedef: {\n    typeName: {\n      value: string,\n      description: string\n    },\n    ...\n  }\n\n  restProps: string,\n\n  styles: {\n    styleName: {\n      description: string,\n      default: string,\n      type: string\n    },\n    ...\n  },\n\n  all: [array of all the JSDoc comments in the svelte file.],\n\n  // from context='module'\n  module: {\n    exportedVariable: {\n      value: string,\n      valueType: 'Literal' | 'Identifier' | 'FunctionDeclaration' | null,\n      localName: string,\n      kind: 'let' | 'const' | 'function',\n      required: boolean,\n      description: string,\n      tags: [\n        {\n          tag: string,\n          type: string,\n          name: string,\n          description: string,\n        },\n        ...\n      ]\n    },\n    ...\n  }\n}\n```\n\n## TOC\n\n- [Props](#props)\n- [Events](#events)\n- [Slots](#slots)\n- [Styles](#styles)\n- [restProps](#restprops)\n- [Typedef](#typedef)\n\n### Props\n\n```js\n/**\n * This is the prop description.\n * @type {string}\n */\nexport let propName = 'value';\n```\n\n**Output**\n\n```json\n{\n  \"propName\": {\n    \"propName\": {\n      \"value\": \"'value'\",\n      \"valueType\": \"Literal\",\n      \"localName\": \"propName\",\n      \"kind\": \"let\",\n      \"required\": false,\n      \"description\": \"This is the prop description.\",\n      \"tags\": [\n        {\n          \"tag\": \"type\",\n          \"type\": \"string\",\n          \"name\": \"\",\n          \"description\": \"\"\n        }\n      ]\n    }\n  }\n}\n```\n\n### Events\n\n```js\n/**\n * @event {{cool: boolean}} button A very cool event.\n */\n\n<button on:click></button>\n```\n\n**Output**\n\n```json\n{\n  \"button\": {\n    \"eventDetail\": \"{cool: boolean}\",\n    \"description\": \"A very cool event.\"\n  },\n  \"click\": {\n    \"eventDetail\": \"window\",\n    \"description\": null,\n    \"by\": \"Element\",\n    \"trigger\": \"button\"\n  }\n}\n```\n\n### Slots\n\n```js\n/**\n * @slot {{prop1:string;}} default\n * @slot {{i:number;}} repeated\n */\n\n<slot basic=\"prop\" />\n{#each Array(10) as _, i}\n  <slot name=\"repeated\" {i} />\n{/each}\n```\n\n**Output**\n\n```json\n{\n  \"default\": {\n    \"type\": \"{prop1:string;}\",\n    \"description\": \"\",\n    \"attributes\": {\n      \"basic\": {\n        \"value\": \"prop\",\n        \"valueType\": \"Text\"\n      }\n    },\n    \"content\": \"<slot basic=\\\"prop\\\" />\"\n  },\n  \"repeated\": {\n    \"type\": \"{i:number;}\",\n    \"description\": \"\",\n    \"attributes\": {\n      \"name\": {\n        \"value\": \"repeated\",\n        \"valueType\": \"Text\"\n      },\n      \"i\": {\n        \"value\": \"i\",\n        \"valueType\": \"AttributeShorthand\"\n      }\n    },\n    \"content\": \"<slot name=\\\"repeated\\\" {i} />\"\n  }\n}\n```\n\n### Styles\n\n```js\n/**\n * @style {20px} --some-var Description of CSS variable\n * @style --another-var No default\n */\n```\n\n**Output**\n\n```json\n{\n  \"--some-var\": {\n    \"description\": \"Description of CSS variable\",\n    \"default\": \"20px\"\n  },\n  \"--another-var\": {\n    \"description\": \"No default\",\n    \"default\": \"\"\n  }\n}\n```\n\n### restProps\n\n```js\n/**\n * @restProps {button | h1}\n */\n```\n\n**Output**\n\n```json\n{\n  \"restProps\": \"button | h1\"\n}\n```\n\n### Typedef\n\n```js\n/**\n * @typedef {string | boolean} RandomType cats > dogs\n * @typedef {{key1: {key2?: boolean}}} Nested some description\n */\n```\n\n**Output**\n\n```json\n{\n  \"RandomType\": {\n    \"value\": \"string | boolean\",\n    \"description\": \"cats > dogs\"\n  },\n  \"Nested\": {\n    \"value\": \"{key1: {key2?: boolean}}\",\n    \"description\": \"some description\"\n  }\n}\n```\n\n## Run tests\n\n```sh\nnpm t\n```\n\n## Author\n\nüë§ **TheComputerM**\n\n- Twitter: [@TheComputerM](https://twitter.com/TheComputerM)\n- Github: [@TheComputerM](https://github.com/TheComputerM)\n\n## ü§ù Contributing\n\nContributions, issues and feature requests are welcome!<br />Feel free to check [issues page](https://github.com/TheComputerM/svelte-docster/issues). You can also take a look at the [contributing guide](https://github.com/TheComputerM/svelte-docster/blob/master/CONTRIBUTING.md).\n\n## Show your support\n\nGive a ‚≠êÔ∏è if this project helped you!\n\n## üìù License\n\nCopyright ¬© 2021 [TheComputerM](https://github.com/TheComputerM).<br />\nThis project is [MIT](https://github.com/TheComputerM/svelte-docster/blob/master/LICENSE) licensed.\n\n---\n\n_This README was generated with ‚ù§Ô∏è by [readme-md-generator](https://github.com/kefranabg/readme-md-generator)_\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3589, 7],
		[3596, 1],
		[3603, 8],
		[3610, 10],
		[3617, 1],
		[3631, 1],
		[3638, 1],
		[3645, 5],
		[3652, 5],
		[3659, 2],
		[3666, 10],
		[3673, 2],
		[3680, 1],
		[3701, 1],
		[3708, 2],
		[3722, 5],
		[3729, 14],
		[3750, 8],
		[3757, 9],
		[3764, 5],
		[3771, 4],
		[3778, 2],
		[3785, 2],
		[3792, 4],
		[3799, 9],
		[3806, 3],
		[3834, 1],
		[3841, 1],
		[3848, 1],
		[3855, 41],
		[3876, 1],
		[3883, 10],
		[3890, 18],
		[3897, 1],
		[3904, 10],
		[3911, 3],
		[3932, 2],
		[3939, 1],
		[3946, 2],
		[3953, 5],
		[3960, 4],
		[3967, 1],
		[3974, 3],
		[3981, 3],
		[3988, 3],
		[3995, 4],
		[4016, 5],
		[4023, 7],
		[4030, 8],
		[4037, 12],
		[4044, 8],
		[4051, 11],
		[4058, 1],
		[4065, 2],
		[4093, 11],
		[4100, 12],
		[4107, 3],
		[4114, 7],
		[4121, 8],
		[4128, 3]
	]
}
