{
	"name": "@ryanatkn/gro",
	"description": "Extends SvelteKit with task runner and toolkit.",
	"repo_url": "https://github.com/ryanatkn/gro",
	"authors": ["ryanatkn"],
	"homepage": "https://gro.ryanatkn.com/",
	"downloads": 272,
	"updated": "2025-05-04T19:31:01.350Z",
	"tags": ["tooling"],
	"github_stars": 19,
	"typescript": true,
	"version": "0.156.0",
	"svelte_range": "^5",
	"kit_range": "^2.20.8",
	"last_rune_check_version": "0.156.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@ryanatkn/gro",
				"version": "0.156.0",
				"size": 827826
			},
			{
				"name": "@ryanatkn/belt",
				"version": "0.30.2",
				"size": 203146
			},
			{
				"name": "chokidar",
				"version": "4.0.3",
				"size": 148759
			},
			{
				"name": "readdirp",
				"version": "4.1.2",
				"size": 36127
			},
			{
				"name": "dotenv",
				"version": "16.5.0",
				"size": 75565
			},
			{
				"name": "esm-env",
				"version": "1.2.2",
				"size": 3784
			},
			{
				"name": "mri",
				"version": "1.2.0",
				"size": 13261
			},
			{
				"name": "oxc-parser",
				"version": "0.67.0",
				"size": 349771
			},
			{
				"name": "@oxc-project/types",
				"version": "0.67.0",
				"size": 44579
			},
			{
				"name": "prettier",
				"version": "3.5.3",
				"size": 7876465
			},
			{
				"name": "prettier-plugin-svelte",
				"version": "3.3.3",
				"size": 1503936
			},
			{
				"name": "ts-blank-space",
				"version": "0.6.1",
				"size": 48919
			},
			{
				"name": "typescript",
				"version": "5.8.3",
				"size": 22867703
			},
			{
				"name": "ts-morph",
				"version": "25.0.1",
				"size": 1427243
			},
			{
				"name": "@ts-morph/common",
				"version": "0.26.1",
				"size": 11609929
			},
			{
				"name": "minimatch",
				"version": "9.0.5",
				"size": 435003
			},
			{
				"name": "brace-expansion",
				"version": "2.0.1",
				"size": 11486
			},
			{
				"name": "balanced-match",
				"version": "1.0.2",
				"size": 6939
			},
			{
				"name": "path-browserify",
				"version": "1.0.1",
				"size": 54293
			},
			{
				"name": "fast-glob",
				"version": "3.3.3",
				"size": 98396
			},
			{
				"name": "@nodelib/fs.stat",
				"version": "2.0.5",
				"size": 11845
			},
			{
				"name": "@nodelib/fs.walk",
				"version": "1.2.8",
				"size": 26377
			},
			{
				"name": "fastq",
				"version": "1.19.1",
				"size": 45922
			},
			{
				"name": "reusify",
				"version": "1.1.0",
				"size": 11696
			},
			{
				"name": "@nodelib/fs.scandir",
				"version": "2.1.5",
				"size": 22155
			},
			{
				"name": "run-parallel",
				"version": "1.2.0",
				"size": 6563
			},
			{
				"name": "queue-microtask",
				"version": "1.2.3",
				"size": 8367
			},
			{
				"name": "glob-parent",
				"version": "5.1.2",
				"size": 12134
			},
			{
				"name": "is-glob",
				"version": "4.0.3",
				"size": 13609
			},
			{
				"name": "is-extglob",
				"version": "2.1.1"
			},
			{
				"name": "merge2",
				"version": "1.4.1",
				"size": 8897
			},
			{
				"name": "micromatch",
				"version": "4.0.8",
				"size": 56599
			},
			{
				"name": "braces",
				"version": "3.0.3",
				"size": 44635
			},
			{
				"name": "fill-range",
				"version": "7.1.1",
				"size": 16743
			},
			{
				"name": "to-regex-range",
				"version": "5.0.1",
				"size": 22939
			},
			{
				"name": "is-number",
				"version": "7.0.0",
				"size": 9615
			},
			{
				"name": "picomatch",
				"version": "2.3.1",
				"size": 89952
			},
			{
				"name": "code-block-writer",
				"version": "13.0.3",
				"size": 115202
			},
			{
				"name": "tslib",
				"version": "2.8.1",
				"size": 90359
			},
			{
				"name": "zod",
				"version": "3.24.3",
				"size": 697771
			}
		],
		"dependencies": [
			[0, 1],
			[0, 2],
			[2, 3],
			[0, 4],
			[0, 5],
			[0, 6],
			[0, 7],
			[7, 8],
			[0, 9],
			[0, 10],
			[0, 11],
			[11, 12],
			[0, 13],
			[13, 14],
			[14, 15],
			[15, 16],
			[16, 17],
			[14, 18],
			[14, 19],
			[19, 20],
			[19, 21],
			[21, 22],
			[22, 23],
			[21, 24],
			[24, 25],
			[25, 26],
			[24, 20],
			[19, 27],
			[27, 28],
			[28, 29],
			[19, 30],
			[19, 31],
			[31, 32],
			[32, 33],
			[33, 34],
			[34, 35],
			[31, 36],
			[13, 37],
			[0, 38],
			[0, 39]
		],
		"circular": []
	},
	"readme": "# gro <img src=\"static/logo.svg\" alt=\"a pixelated green oak acorn with a glint of sun\" width=\"32\" height=\"32\">\n\n[<img src=\"static/logo.svg\" alt=\"a pixelated green oak acorn with a glint of sun\" align=\"right\" width=\"192\" height=\"192\">](https://gro.ryanatkn.com/)\n\n> task runner and toolkit extending SvelteKit 🌰 generate, run, optimize\n\n[`npm i -D @ryanatkn/gro`](https://www.npmjs.com/package/@ryanatkn/gro)\n\n[Windows won't be supported](https://github.com/ryanatkn/gro/issues/319), I chose Bash instead.\n\nNeed help or want to share thoughts? See the\n[issues](https://github.com/ryanatkn/gro/issues) and\n[discussions](https://github.com/ryanatkn/gro/discussions).\n\n## about\n\nGro is a task runner and toolkit\nextending [SvelteKit](https://github.com/sveltejs/kit),\n[Vite](https://github.com/vitejs/vite),\nand [esbuild](https://github.com/evanw/esbuild)\nfor making web frontends, servers, and libraries with TypeScript.\nIt includes:\n\n- [task runner](/src/docs/task.md) that uses the filesystem convention `*.task.ts`\n  - lots of [common builtin tasks](/src/docs/tasks.md) that users can easily override and compose\n- tools and patterns for\n  [developing](/src/docs/dev.md),\n  [building](/src/docs/build.md),\n  [testing](/src/docs/test.md),\n  [deploying](/src/docs/deploy.md),\n  and [publishing](/src/docs/publish.md)\n  [SvelteKit](https://github.com/sveltejs/kit) apps, library packages, and Node servers\n  - integrated [TypeScript](https://github.com/microsoft/typescript),\n    [Svelte](https://github.com/sveltejs/svelte),\n    and [SvelteKit](https://github.com/sveltejs/kit)\n  - defers to SvelteKit and Vite for the frontend and\n    [`@sveltejs/package`](https://kit.svelte.dev/docs/packaging) for the library\n  - exposes all of its internals in `$lib`\n  - uses [Changesets](https://github.com/changesets/changesets) for versioning and changelogs\n  - provides a [Node loader](/src/lib/loader.ts) with a [register hook](/src/lib/register.ts)\n    - supports importing TypeScript, JSON, and SSR'd Svelte files in tests and tasks\n    - supports [SvelteKit module imports](https://kit.svelte.dev/docs/modules) for\n      `$lib`, `$env`, and `$app` in tasks, tests, Node servers,\n      and other code outside of the SvelteKit frontend,\n      so you can use SvelteKit patterns everywhere\n      (these are best-effort shims, not perfect)\n    - supports running TypeScript files directly without a task via `gro run a.ts`\n      or `node --import @ryanatkn/gro/register.js a.ts`\n  - [configurable plugins](/src/docs/plugin.md) to support SvelteKit,\n    [auto-restarting Node servers](/src/lib/gro_plugin_server.ts),\n    and other external build processes\n    - see the [Gro config docs](/src/docs/config.md) and\n      [the default config](https://github.com/ryanatkn/gro/blob/main/src/lib/gro.config.default.ts)\n    - see [`fuz_template`](https://github.com/fuz-dev/fuz_template)\n      for a simple starter project example, and\n      [`@feltjs/felt`](https://github.com/feltjs/felt) for a more complex example with custom tasks\n- [testing](/src/docs/test.md) with [`uvu`](https://github.com/lukeed/uvu)\n- codegen by convention with [`gen`](/src/docs/gen.md)\n- linting with [ESLint](https://github.com/eslint/eslint)\n  (I also maintain [`@feltjs/eslint-config`](https://github.com/feltjs/eslint-config))\n- formatting with [Prettier](https://github.com/prettier/prettier)\n\n## docs\n\n- developing web frontends, servers, and libraries\n  - [config](/src/docs/config.md)\n  - [dev](/src/docs/dev.md)\n  - [build](/src/docs/build.md) for production\n  - [deploy](/src/docs/deploy.md) to a branch, like for GitHub pages\n  - [publish](/src/docs/publish.md) to npm\n- [`Task`](/src/docs/task.md) runner\n  - builtin [tasks](/src/docs/tasks.md) list\n- [testing](/src/docs/test.md) with [`uvu`](https://github.com/lukeed/uvu)\n- [`gen`](/src/docs/gen.md) code generation\n- [`public` package](/src/docs/package_json.md#public-packages) features (nonstandard)\n- full [docs index](/src/docs#readme)\n\n## install\n\n> depends on node >=20.12\n\nTypical usage installs [@ryanatkn/gro](https://www.npmjs.com/package/@ryanatkn/gro)\nas a dev dependency:\n\n```bash\nnpm i -D @ryanatkn/gro\nnpx gro # note the package is namespaced, don't install `gro`\n```\n\nIt's handy to install globally too:\n\n```bash\nnpm i -g @ryanatkn/gro\ngro\n```\n\n## usage\n\nGro has a task runner that discovers and runs TypeScript modules with the `.task.` subextension.\nRunning `gro` with no args prints the tasks\nit finds in the current directory along with its builtin tasks:\n\n```bash\ngro # prints available tasks - defers to any local gro installation\n```\n\n```\nRun a task: gro [name]\nView help:  gro [name] --help\n\n19 tasks in gro:\n\nbuild      build the project\nchangeset  call changeset with gro patterns\ncheck      check that everything is ready to commit\nclean      remove temporary dev and build files, and optionally prune git branches\ncommit     commit and push to a new branch\ndeploy     deploy to a branch\ndev        start SvelteKit and other dev plugins\nformat     format source files\ngen        run code generation scripts\nlint       run eslint\npublish    bump version, publish to the configured registry, and git push\nreinstall  refreshes package-lock.json with the latest and cleanest deps\nrelease    publish and deploy\nresolve    diagnostic that logs resolved filesystem info for the given input paths\nrun        execute a file with the loader, like `node` but works for TypeScript\nsync       run `gro gen`, update `package.json`, and optionally install packages to sync up\ntest       run tests with uvu\ntypecheck  run tsc on the project without emitting any files\nupgrade    upgrade deps\n```\n\nTo run tasks, Gro matches your CLI input against its filesystem conventions.\nIt tries to do the right thing, where right is helpful but not surprising,\nwith some magic but not too much:\n\n```bash\ngro # displays all available tasks matching `src/lib/**/*.task.ts` and Gro's builtins\ngro a # tries to run `src/lib/a.task.ts`, then `./a.task.ts`, then Gro's builtin if one exists\ngro a --help # displays docs for the \"a\" task and its args, works for every task\ngro some/dir # lists all tasks inside `src/lib/some/dir`\ngro some/file # runs `src/lib/some/file.task.ts`\ngro some/file.task.ts # same as above\n```\n\nGro can also run non-task TypeScript files directly\nwith [the `gro run` task](/src/lib/run.task.ts) or [register hook](/src/lib/register.ts):\n\n```bash\ngro run foo.ts\nnode --import @ryanatkn/gro/register.js foo.ts\n```\n\nOr programmatically:\n\n```js\n// myfile.js\nimport {register} from 'node:module';\nregister('@ryanatkn/gro/loader.js', import.meta.url);\nawait import('./foo.ts');\n```\n\nGro has a number of builtin tasks that you can run with the CLI.\nTo learn more [see the task docs](/src/docs/task.md)\nand [the generated task index](/src/docs/tasks.md).\n\n```bash\ngro dev # start developing in watch mode\ngro dev -- vite --port 3003 # forward args by separating sections with --\n```\n\n```bash\ngro build # build everything for production\n```\n\n[Testing](/src/docs/test.md) with [`uvu`](https://github.com/lukeed/uvu),\nincluding shims for [SvelteKit modules](https://kit.svelte.dev/docs/modules):\n\n```bash\ngro test # run all tests for `*.test.ts` files with `uvu`\ngro test filepattern1 some.test another.test\ngro test -- uvu --forwarded_args 'to uvu'\n```\n\nCheck all the things:\n\n```bash\ngro check # does all of the following:\ngro typecheck # typecheck JS/TypeScript and Svelte\ngro test # run tests\ngro gen --check # ensure generated files are current\ngro format --check # ensure everything is formatted\ngro lint # eslint\n```\n\nFor a usage example see [the `check.yml` CI config](.github/workflows/check.yml).\n\nFormatting with [`prettier`](https://github.com/prettier/prettier):\n\n```bash\ngro format # format all of the source files using Prettier\ngro format --check # check that all source files are formatted\n```\n\nCodegen with [`gen`](/src/docs/gen.md):\n\n```bash\ngro gen # run codegen for all `*.gen.*` files\ngro gen --check # error if any generated files are new or different\n```\n\nTo deploy: (also see [`src/docs/deploy.md`](/src/docs/deploy.md))\n\n```bash\ngro deploy # build and push to the `deploy` branch\n```\n\nTo publish: (also see [`src/docs/publish.md`](/src/docs/publish.md))\n\n```bash\ngro publish # flush changeset to changelog, bump version, publish to npm, and git push\n```\n\nMore:\n\n```bash\ngro clean # delete all build artifacts from the filesystem\ngro clean --sveltekit --nodemodules --git # also deletes dirs and prunes git branches\ngro upgrade excluded-dep-1 excluded-dep-2 # npm updates to the latest everything\ngro --version # print the Gro version\n```\n\nFor more see [the tasks index](/src/docs/tasks.md),\n[the task feature docs](/src/docs/task.md), and [the docs index](/src/docs/README.md).\n\n## develop\n\n```bash\nnpm i\nnpm run bootstrap # build and link `gro` without itself - needed only once\ngro build # same as `npm run bootstrap` when the `gro` CLI is available\ngro test # make sure everything looks good - same as `npm test`\ngro test some.test another.test\n\n# use your development version of `gro` locally in another project:\ngro build # updates the `gro` CLI, same as `npm run bootstrap`\ncd ../otherproject\nnpm link ../gro # from `otherproject/`\ngro build # from `../gro` on changes\n```\n\n## credits 🐢<sub>🐢</sub><sub><sub>🐢</sub></sub>\n\nGro builds on\n[TypeScript](https://github.com/microsoft/TypeScript) ∙\n[Svelte](https://github.com/sveltejs/svelte) ∙\n[SvelteKit](https://github.com/sveltejs/kit) ∙\n[Vite](https://github.com/vitejs/vite) ∙\n[esbuild](https://github.com/evanw/esbuild) ∙\n[uvu](https://github.com/lukeed/uvu) ∙\n[mri](https://github.com/lukeed/mri) ∙\n[chokidar](https://github.com/paulmillr/chokidar) ∙\n[zod](https://github.com/colinhacks/zod) ∙\n[@ryanatkn/belt](https://github.com/ryanatkn/belt) ∙\n[ESLint](https://github.com/eslint/eslint) ∙\n[Prettier](https://github.com/prettier/prettier) ∙\n[svelte-check](https://github.com/sveltejs/language-tools/tree/master/packages/svelte-check) &\n[more](package.json)\n\n## license [🐦](https://wikipedia.org/wiki/Free_and_open-source_software)\n\n[MIT](LICENSE)\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3694, 238],
		[3701, 479],
		[3708, 401],
		[3715, 63],
		[3722, 27],
		[3729, 187],
		[3736, 170],
		[3743, 168],
		[3750, 460],
		[3757, 294],
		[3764, 69],
		[3771, 201],
		[3778, 25],
		[3785, 36],
		[3792, 166],
		[3799, 54],
		[3806, 101],
		[3813, 518],
		[3820, 438],
		[3827, 822],
		[3834, 2188],
		[3841, 579],
		[3848, 1076],
		[3855, 363],
		[3862, 154],
		[3869, 271],
		[3876, 268],
		[3883, 192],
		[3890, 383],
		[3897, 323],
		[3904, 365],
		[3911, 374],
		[3918, 632],
		[3925, 1476],
		[3932, 1495],
		[3939, 1057],
		[3946, 577],
		[3953, 1026],
		[3960, 233],
		[3967, 94],
		[3974, 338],
		[3981, 184],
		[3988, 221],
		[3995, 134],
		[4002, 157],
		[4009, 43],
		[4016, 79],
		[4023, 145],
		[4030, 28],
		[4037, 212],
		[4044, 80],
		[4051, 26],
		[4058, 51],
		[4065, 211],
		[4072, 274],
		[4079, 149],
		[4086, 62],
		[4093, 163],
		[4100, 44],
		[4107, 473],
		[4114, 272],
		[4121, 182],
		[4128, 113]
	]
}
