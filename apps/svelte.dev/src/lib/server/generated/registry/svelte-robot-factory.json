{
	"name": "svelte-robot-factory",
	"description": "Integrate robot state machines with Svelte applications.",
	"repo_url": "https://github.com/kayodebristol/svelte-robot-factory",
	"authors": ["kayodebristol"],
	"homepage": "https://github.com/kayodebristol/svelte-robot-factory#readme",
	"downloads": 44,
	"updated": "2023-03-20T11:23:05.209Z",
	"tags": ["integration", "miscellaneous"],
	"github_stars": 15,
	"typescript": true,
	"version": "2.0.5",
	"svelte_range": "~3.x",
	"last_rune_check_version": "2.0.5",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-robot-factory",
				"version": "2.0.5",
				"size": 11852
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "---\nlayout: page.njk\ntitle: svelte-robot-factory\ntags: integrations\npermalink: integrations/svelte-robot-factory.html\n---\n\n[![Node.js Package](https://github.com/kayodebristol/svelte-robot-factory/actions/workflows/npm-publish.yml/badge.svg?branch=2.0.0)](https://github.com/kayodebristol/svelte-robot-factory/actions/workflows/npm-publish.yml)\n\n# svelte-robot-factory\n\nTable of Contents\n\n- [svelte-robot-factory](#svelte-robot-factory)\n  - [Installation](#installation)\n  - [API](#api)\n  - [Example](#example)\n  - [Sveltekit](#sveltekit)\n- [This workflow will run tests using node and then publish a package to GitHub Packages when a release is created](#this-workflow-will-run-tests-using-node-and-then-publish-a-package-to-github-packages-when-a-release-is-created)\n- [For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages](#for-more-information-see-httpsdocsgithubcomenactionspublishing-packagespublishing-nodejs-packages)\n  - [License](#license)\n\nThe svelte-robot-factory returns a svelte writable store which implements a robot machine service.\n\n## Installation\n\nnpm:\n\n```bash\nnpm install svelte-robot-factory robot3 --save\n```\n\nyarn:\n\n```bash\nyarn add svelte-robot-factory robot3\n```\n\n## API\n\n```javascript\nuseMachine(machine, event);\n```\n\nArguments:\n\n- [machine](https://thisrobot.life/api/interpret.html#machine): Robot state machine\n- [event](https://thisrobot.life/api/interpret.html#event): Object which will be passed to the [context function](https://thisrobot.life/api/createMachine.html#context)\n\nReturns:\n\n- [Writable svelte store](https://svelte.dev/docs#writable) which implements a robot [service](https://thisrobot.life/api/interpret.html#service) on subscribe\n\n```javascript\nfunction useMachine(machine, event)\n    const {subscribe, set} = writable(\n        interpret(machine, service => set(service), event)\n    )\n    return {subscribe}\n}\n```\n\nExplaination:\nThis code exports a function named useMachine that takes in two arguments: machine and event. It uses the Machine and interpret functions imported from the robot3 library, and the writable function imported from the svelte/store library.\nWhen useMachine is called, it creates a Svelte store by calling the writable function, passing in the result of invoking interpret on the machine and event arguments. interpret creates an instance of a state machine and provides a callback function that updates the Svelte store with the new state returned by the instance.\nThe function returns an object with a subscribe method that allows components to subscribe to changes in the store. Whenever a component subscribes to the store, it will be notified with the current state and any future state changes.\n\n## Example\n\n[View in REPL](https://svelte.dev/repl/a9904c210b474bd2ab71d9b7c26c4c38?version=3.12.1)\n\n```js\n<!--\n  example integration with https://thisrobot.life\n\tsupports send, context, and machine (to include machine.current & machine.state)\n-->\n\n<script>\n  import service from './store.js';\n  import Child from './Child.svelte'\n  const send = $service.send;\n  $: current = $service.machine.current\n</script>\n\n<div>Current state value: {current}</div>\n<Child/>\n\n<button on:click={() => send('toggle')}>\n  Toggle\n</button>\n```\n\n```js\n/// Child.svelte\n<script>\n  import service from './store.js';\n  $: foo = $service.context.foo;\n</script>\n\n<div>Context value of foo property: {foo}</div>\n```\n\n```js\n/// store\nimport { createMachine, state, transition, invoke, reduce } from 'robot3';\nimport { useMachine } from 'svelte-robot-factory';\nconst context = event => ({\n  foo: event.foo\n});\nconst event = {\n  foo: 'initial'\n};\nconst machine = createMachine({\n  inactive: state(\n    transition('toggle', 'active',\n      reduce((ctx, ev)=>({ ...ctx, foo: 'bar'}))\n    )\n  ),\n  active: state(\n    transition('toggle', 'inactive',\n      reduce((ctx, ev)=>({ ...ctx, foo: 'foo'}))\n    )\n  )\n}, context);\n\nconst service = useMachine(machine, event);\nexport default service;\n```\n## Sveltekit\n\nDue to a [known issue with vite handling of commonjs modules](https://github.com/sveltejs/kit/issues/928), when used with sveltekit, add prebundleSvelteLibraries: true, to your svelte.config.js.\n\nFor example, [svelte.config.js]\n\n```javascript\nimport adapter from '@sveltejs/adapter-auto';\n\n/** @type {import('@sveltejs/kit').Config} */\nconst config = {\n\texperimental: {\n\t\tprebundleSvelteLibraries: true\n\t},\n\tkit: {\n\t\tadapter: adapter()\n\t}\n};\n\nexport default config;\n```\n# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created\n# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages\nname: Node.js Package\n\non:\n  release:\n    types: [created]\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    strategy:\n      matrix:\n        node-version: [16.x]\n    steps:\n      - uses: actions/checkout@v3\n      - uses: actions/setup-node@v3\n      - name: Use Node.js ${{ matrix.node-version }}\n        with:\n          node-version: ${{ matrix.node-version }}\n      - run: npm ci\n      - run: npm run build\n      - run: npm test\n\n\n  publish-npm:\n    needs: build\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - uses: actions/setup-node@v3\n      - name: Use Node.js ${{ matrix.node-version }}\n        with:\n          node-version: ${{ matrix.node-version }}\n          registry-url: https://registry.npmjs.org/\n      - run: npm ci\n      - run: npm publish\n        env:\n          NODE_AUTH_TOKEN: ${{secrets.npm_token}}\n\nOr, reference the [sveltekit-toggle](https://github.com/kayodebristol/svelte-robot-factory/tree/master/example/sveltekit-toggle) example.\n## License\n\n**[MIT](https://opensource.org/licenses/MIT)**\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 514],
		[3603, 585],
		[3610, 327],
		[3617, 391],
		[3624, 738],
		[3631, 649],
		[3638, 377],
		[3645, 15],
		[3652, 576],
		[3659, 636],
		[3666, 525],
		[3673, 570],
		[3680, 599],
		[3687, 507],
		[3694, 692],
		[3701, 199],
		[3708, 489],
		[3715, 568],
		[3722, 499],
		[3729, 274],
		[3736, 364],
		[3743, 585],
		[3750, 692],
		[3757, 773],
		[3764, 213],
		[3771, 391],
		[3778, 1069],
		[3785, 809],
		[3792, 724],
		[3799, 374],
		[3806, 483],
		[3813, 244],
		[3820, 190],
		[3827, 187],
		[3834, 16],
		[3841, 297],
		[3848, 365],
		[3855, 412],
		[3862, 303],
		[3869, 369],
		[3876, 7],
		[3883, 195],
		[3890, 168],
		[3897, 192],
		[3904, 148],
		[3911, 251],
		[3918, 46],
		[3925, 46],
		[3932, 72],
		[3939, 135],
		[3946, 23],
		[3953, 5],
		[3960, 5],
		[3974, 3],
		[3981, 17],
		[3988, 4],
		[3995, 7],
		[4002, 19],
		[4009, 2],
		[4016, 5],
		[4023, 7],
		[4030, 3],
		[4037, 25],
		[4044, 28],
		[4051, 48],
		[4058, 11],
		[4065, 53],
		[4072, 8],
		[4079, 7],
		[4086, 15],
		[4093, 13],
		[4100, 55],
		[4107, 39],
		[4114, 44],
		[4121, 28],
		[4128, 8],
		[4135, 7]
	]
}
