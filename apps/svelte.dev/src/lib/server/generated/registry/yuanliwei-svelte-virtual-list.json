{
	"name": "@yuanliwei/svelte-virtual-list",
	"description": "Implement virtual scrolling lists in Svelte applications.",
	"repo_url": "https://github.com/yuanliwei/svelte-virtual-list",
	"authors": ["yuanliwei"],
	"homepage": "https://github.com/yuanliwei/svelte-virtual-list",
	"downloads": 10,
	"updated": "2023-11-22T09:36:48.016Z",
	"tags": ["ui"],
	"github_stars": 0,
	"typescript": false,
	"version": "1.1.0",
	"svelte_range": "*",
	"last_rune_check_version": "1.1.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@yuanliwei/svelte-virtual-list",
				"version": "1.1.0",
				"size": 21891
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# Svelte VirtualScrollList\n\n\n\n[Demo](https://svelte.dev/repl/79a238b9b69e4143b2bc048207bb98bc?version=4.2.5)\n\n## API\n```js\n\nexport let data = []\nexport let size = 0\nexport let scrollTop = 0\n\n/**\n * @param {number} scrollTop\n * @param {boolean} [animation]\n */\nexport async function scrollToWithListScrollTop(scrollTop, animation)\n\n/**\n * @param {number} offset\n * @param {boolean} animation\n */\nexport async function scrollListOffset(offset, animation)\n\n/**\n * @param {number} percent 0-1\n * @param {boolean} [animation]\n */\nexport async function scrollToPercent(percent, animation)\n\n/**\n * @param {number} index\n * @param {boolean} [animation]\n */\nexport async function scrollToPosition(index, animation)\n\nexport async function reset()\n```\n\n## usage\n```html\n<script>\n  import VirtualScrollList from \"@yuanliwei/svelte-virtual-list\";\n  import { getName } from \"./data.js\";\n\n  let datas = Array.from({ length: 1000000 }).map((_, i) => ({\n    id: i + 1,\n    text: getName(i),\n  }));\n\n  let showList1 = true;\n  let showList2 = true;\n  let scrollTop1 = 0;\n  let scrollTop2 = 0;\n  /** @type{VirtualScrollList} */\n  let list1 = null;\n  /** @type{VirtualScrollList} */\n  let list2 = null;\n\n  let list1Position = 0;\n  let list2Position = 0;\n\n  $: list1?.scrollToPosition(list1Position);\n  $: list2?.scrollToPosition(list2Position);\n</script>\n\n<main>\n  <section>\n    <p>虚拟列表，100万条数据</p>\n    <div class=\"content\">\n      {#if showList1}\n        <VirtualScrollList\n          data={datas}\n          bind:scrollTop={scrollTop1}\n          sticky={10} \n          let:item\n          let:index\n          bind:this={list1}\n        >\n          <div class=\"item\">{index} : {item.text}</div>\n        </VirtualScrollList>\n      {/if}\n    </div>\n\n    <button on:click={() => { showList1 = !showList1; }} > toggle </button>\n    <button on:click={() => { list1.scrollToPercent(0.7, true); }} > scrollToPercent(0.7, true) </button>\n    <button on:click={() => { list1.scrollToPosition(34, true); }} > scrollToPosition(34, true) </button>\n    <button on:click={() => { list1.scrollListOffset(390, true); }} > scrollListOffset(390, true) </button>\n    <input type=\"number\" placeholder=\"seek to\" bind:value={list1Position} />\n  </section>\n  <section>\n    <p>虚拟列表+虚拟数据，1万亿条数据</p>\n    <div class=\"content\">\n      {#if showList2}\n        <VirtualScrollList\n          size={100000000000}\n          bind:scrollTop={scrollTop2}\n          let:index\n          bind:this={list2}\n        >\n          <div class=\"item\">{index} : {getName(index)}</div>\n        </VirtualScrollList>\n      {/if}\n    </div>\n\n    <button on:click={() => { showList2 = !showList2; }} > toggle </button>\n    <button on:click={() => { list2.scrollToPercent(0.7, true); }} > scrollToPercent(0.7, true) </button>\n    <button on:click={() => { list2.scrollToPosition(34, true); }} > scrollToPosition(34, true) </button>\n    <button on:click={() => { list2.scrollListOffset(390, true); }} > scrollListOffset(390, true) </button>\n    <button on:click={() => { list2.reset(); }} > reset() </button>\n    <input type=\"number\" placeholder=\"move to\" bind:value={list2Position} />\n  </section>\n</main>\n\n<style>\n  main {\n    display: flex;\n  }\n  section {\n    padding: 1em;\n  }\n  .content {\n    background-color: aliceblue;\n    height: 400px;\n    margin-top: 1em;\n    box-sizing: border-box;\n  }\n  .item {\n    line-height: 3em;\n    padding-left: 1em;\n    box-sizing: border-box;\n    border-bottom: blue 1px solid;\n    overflow: hidden;\n    width: 100%;\n  }\n</style>\n\n```",
	"legacy_svelte": true,
	"downloads_history": [
		[3603, 1103],
		[3610, 513],
		[3617, 21],
		[3624, 6],
		[3631, 7],
		[3638, 6],
		[3645, 26],
		[3652, 36],
		[3659, 12],
		[3666, 42],
		[3673, 22],
		[3680, 4],
		[3687, 5],
		[3694, 6],
		[3708, 2],
		[3715, 16],
		[3722, 10],
		[3729, 6],
		[3736, 1],
		[3743, 10],
		[3750, 10],
		[3757, 10],
		[3764, 11],
		[3771, 25],
		[3778, 29],
		[3785, 1],
		[3792, 7],
		[3799, 14],
		[3806, 4],
		[3813, 10],
		[3820, 7],
		[3827, 4],
		[3834, 93],
		[3841, 15],
		[3848, 5],
		[3855, 8],
		[3862, 17],
		[3869, 5],
		[3876, 2],
		[3883, 13],
		[3890, 6],
		[3897, 10],
		[3904, 8],
		[3911, 1],
		[3918, 2],
		[3932, 2],
		[3939, 2],
		[3953, 4],
		[3960, 1],
		[3967, 1],
		[3981, 2],
		[4016, 4],
		[4023, 2],
		[4037, 24],
		[4044, 16],
		[4051, 17],
		[4058, 1],
		[4072, 4],
		[4093, 16],
		[4100, 45],
		[4107, 4],
		[4114, 10],
		[4121, 11],
		[4128, 25],
		[4135, 8]
	]
}
