{
	"name": "hyper-svelte-component",
	"description": "Manages Hyperdrives using dat-sdk in Svelte components.",
	"repo_url": "https://github.com/DougAnderson444/hyper-svelte-component",
	"authors": ["douganderson444"],
	"homepage": "https://github.com/DougAnderson444/hyper-svelte-component#readme",
	"downloads": 4,
	"updated": "2020-09-14T22:06:11.382Z",
	"tags": ["miscellaneous"],
	"github_stars": 1,
	"typescript": false,
	"version": "1.1.0",
	"svelte_range": "^3.0.0",
	"last_rune_check_version": "1.1.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "hyper-svelte-component",
				"version": "1.1.0",
				"size": 21376
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# Hyper-Svelte-Component\n\nA [Svelte](https://svelte.dev) <[Component](https://github.com/sveltejs/component-template) /> for managing [Hyperdrives](https://github.com/hypercore-protocol/hyperdrive) using the [dat-sdk](https://github.com/datproject/sdk).\n\nYou can also bind Hypercores to the component.\n\n## Why\n\nWhen using the dat SDK you've got to [close](https://github.com/datproject/sdk#await-close) it when you're done with the SDK, and keeping track of the close is a bit of a pain. So I bundled the creation of the hyperdrive and the close function into a [Svelte](https://svelte.dev) component. Whenever the component is `destroyed` or the `window.unloads` the `await close()` function for the SDK's Hyperdrive will be closed. So you don't have to worry about it.\n\n## Usage \n\nAll you do is pass in an instance of the `SDK` and bind the componet's output what you want `Hyperdrive` to be called (if you wan to rename it, or have multiple SDK instances, to simulate many peers on one device).\n\n```js\nimport HyperComponent from \"hyper-svelte-component\";\n\n<HyperComponent {SDK} bind:Hyperdrive={makeDrives} bind:Hypercore={makeCores} />\n<HyperComponent {SDK} bind:Hyperdrive={makeDriveCopies} />\n\nconst original = makeDrives(\"original-drive-name\")\nawait original.ready()\n// ... more Hyperdrive moves afterward\n\n// To simulate two peers in the same browser, you'll need another SDK instance\nconst copy = makeDriveCopies(original.key)\n\n```\n\n---\n\n## See also\n\n[Svelte](https://svelte.dev)\n\n[dat-sdk](https://github.com/datproject/sdk)\n\n[Hyperdrives](https://github.com/hypercore-protocol/hyperdrive)",
	"legacy_svelte": true,
	"downloads_history": [
		[3596, 9],
		[3603, 6],
		[3610, 2],
		[3617, 1],
		[3638, 9],
		[3645, 4],
		[3652, 1],
		[3666, 5],
		[3694, 1],
		[3701, 1],
		[3715, 1],
		[3729, 2],
		[3736, 1],
		[3743, 1],
		[3750, 2],
		[3764, 9],
		[3771, 8],
		[3778, 1],
		[3792, 2],
		[3799, 1],
		[3806, 1],
		[3820, 1],
		[3841, 2],
		[3855, 1],
		[3862, 15],
		[3869, 1],
		[3883, 1],
		[3890, 4],
		[3911, 2],
		[3918, 1],
		[3932, 2],
		[3946, 1],
		[3967, 1],
		[3995, 2],
		[4016, 1],
		[4030, 6],
		[4037, 3],
		[4044, 10],
		[4051, 1],
		[4058, 1],
		[4065, 2],
		[4093, 11],
		[4100, 11],
		[4107, 1],
		[4114, 4],
		[4121, 7],
		[4128, 1]
	]
}
