{
	"name": "svelte-mini-router",
	"description": "Create minimal, declarative SPA router for Svelte 5.",
	"repo_url": "https://github.com/rodrigocfd/svelte-mini-router",
	"authors": ["rodrigocfd"],
	"homepage": "https://github.com/rodrigocfd/svelte-mini-router",
	"downloads": 15,
	"updated": "2024-12-25T13:46:23.073Z",
	"tags": ["router"],
	"github_stars": 19,
	"typescript": true,
	"version": "1.0.4",
	"svelte_range": "^5.16.0",
	"kit_range": "^2.15.0",
	"last_rune_check_version": "1.0.4",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-mini-router",
				"version": "1.0.4",
				"size": 19134
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# Svelte Mini Router\n\nA declarative, minimal SPA router for Svelte 5, without SvelteKit. \n\nFeatures:\n\n* declarative – works with any directory structure\n* small API (see below)\n    * 2 components – `Router` and `Link`\n    * 3 functions – `navigate`, `getPathParams` and `getQueryParams`\n* works without SvelteKit – perfect for SPAs created with [Vite](https://vite.dev/guide/#scaffolding-your-first-vite-project)\n* scalable – routes are lazy-loaded\n* built-in TypeScript support\n\n## Usage\n\nInstall the package:\n\n```bash\nnpm i svelte-mini-router\n```\n\nFolder structure has no rules, you can organize the way you want. For example:\n\n```\nsrc/\n├─ pages/\n│  ├─ home/\n│  │  └─ MyHome.svelte\n│  └─ page1/\n│     └─ Page1.svelte\n├─ App.svelte\n├─ Error404.svelte\n├─ main.ts\n└─ routerConf.ts\n```\n\nDeclare your router:\n\n```ts\nimport {type RouterConf} from 'svelte-mini-router';\n\nexport const routerConf: RouterConf = {\n    routes: [\n        // this is your home page\n        {path: '/', render: () => import('./pages/home/MyHome.svelte')},\n\n        // another page\n        {path: '/page1', render: () => import('./pages/page1/Page1.svelte')},\n\n        // nested routes are up to you\n        {path: '/foo/bar/stuff', render: () => import('./pages/page1/Page1.svelte')},\n\n        // you can use path parameters anywhere\n        {path: '/foo/{name}/and/{age}', render: () => import('./pages/page1/Page1.svelte')},\n    ],\n\n    // if you use a base URL, set it here; optional\n    baseUrl: '/my-web-application',\n\n    // error 404 route; optional\n    // if not defined, a simple \"404 - Not found\" text will be displayed\n    render404: () => import('./Error404.svelte'),\n};\n```\n\nFinally add the `Router` component to your `App.svelte`:\n\n```svelte\n<script lang=\"ts\">\n    import {Router} from 'svelte-mini-router';\n    import {routerConf} from './routerConf';\n</script>\n\n<Router {routerConf} />\n```\n\n### Navigating\n\nRendering an `<a href=\"\">` element to a route with the `Link` component:\n\n```svelte\n<script lang=\"ts\">\n    import {Link} from 'svelte-mini-router';\n</script>\n\n<!-- without query parameters -->\n<Link path=\"/page1\">\n    Go to Page 1\n</Link>\n\n<!-- with query parameters -->\n<!-- means \"/page1?name=Joe&age=43\" -->\n<Link path=\"/page1\" params={{name: 'Joe', age: 43}}>\n    Go to Page 1\n</Link>\n```\n\nProgrammatically navigating to a route with `navigate` function:\n\n```ts\nimport {navigate} from 'svelte-mini-router';\n\n// without query parameters\nnavigate('/page1');\n\n// with query parameters\n// means \"/page1?name=Joe&age=43\"\nnavigate('/page1', {name: 'Joe', age: 43});\n```\n\n### Parameters\n\nCurrent URL path parameters can be retrieved as an object with `getPathParams` function:\n\n```ts\nimport {getPathParams} from 'svelte-mini-router';\n\n// from \"/foo/{name}/and/{age}\"\n// then \"/foo/Joe/and/43\"\nconst pathParams = getPathParams();\n// will be {name: 'Joe', age: '43'}\n```\n\nAnd query parameters with `getQueryParams` function:\n\n```ts\nimport {getQueryParams} from 'svelte-mini-router';\n\n// from \"/page1?name=Joe&age=43\"\nconst queryParams = getQueryParams();\n// will be {name: 'Joe', age: '43'}\n```\n\n## License\n\nLicensed under [MIT license](https://opensource.org/licenses/MIT), see [LICENSE.md](LICENSE.md) for details.\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3995, 118],
		[4002, 12],
		[4009, 174],
		[4016, 22],
		[4023, 21],
		[4030, 6],
		[4037, 16],
		[4044, 14],
		[4051, 2],
		[4058, 2],
		[4065, 8],
		[4072, 3],
		[4079, 3],
		[4086, 3],
		[4093, 3],
		[4100, 11],
		[4107, 10],
		[4114, 15],
		[4121, 10],
		[4128, 7]
	]
}
