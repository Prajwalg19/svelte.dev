{
	"name": "@event-calendar/core",
	"description": "Create full-sized drag & drop event calendars.",
	"repo_url": "https://github.com/vkurko/calendar",
	"authors": ["vkurko"],
	"homepage": "https://vkurko.github.io/calendar/",
	"downloads": 5669,
	"updated": "2025-04-25T10:05:10.014Z",
	"tags": ["ui"],
	"github_stars": 1678,
	"typescript": false,
	"version": "4.0.3",
	"svelte_range": "^5.28.2",
	"last_rune_check_version": "4.0.3",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@event-calendar/core",
				"version": "4.0.3",
				"size": 480228
			},
			{
				"name": "svelte",
				"version": "5.28.2",
				"size": 2426223
			},
			{
				"name": "@ampproject/remapping",
				"version": "2.3.0",
				"size": 78946
			},
			{
				"name": "@jridgewell/gen-mapping",
				"version": "0.3.8",
				"size": 81596
			},
			{
				"name": "@jridgewell/set-array",
				"version": "1.2.1",
				"size": 17945
			},
			{
				"name": "@jridgewell/sourcemap-codec",
				"version": "1.5.0",
				"size": 112815
			},
			{
				"name": "@jridgewell/trace-mapping",
				"version": "0.3.25",
				"size": 169330
			},
			{
				"name": "@jridgewell/resolve-uri",
				"version": "3.1.2",
				"size": 53153
			},
			{
				"name": "@types/estree",
				"version": "1.0.7",
				"size": 26147
			},
			{
				"name": "acorn",
				"version": "8.14.1",
				"size": 547473
			},
			{
				"name": "@sveltejs/acorn-typescript",
				"version": "1.0.5",
				"size": 197476
			},
			{
				"name": "aria-query",
				"version": "5.3.2",
				"size": 176114
			},
			{
				"name": "axobject-query",
				"version": "4.1.0",
				"size": 110878
			},
			{
				"name": "clsx",
				"version": "2.1.1",
				"size": 8555
			},
			{
				"name": "esm-env",
				"version": "1.2.2",
				"size": 3784
			},
			{
				"name": "esrap",
				"version": "1.4.6",
				"size": 50818
			},
			{
				"name": "is-reference",
				"version": "3.0.3",
				"size": 3953
			},
			{
				"name": "locate-character",
				"version": "3.0.0",
				"size": 5325
			},
			{
				"name": "magic-string",
				"version": "0.30.17",
				"size": 467464
			},
			{
				"name": "zimmerframe",
				"version": "1.1.2",
				"size": 12266
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[2, 3],
			[3, 4],
			[3, 5],
			[3, 6],
			[6, 7],
			[6, 5],
			[2, 6],
			[1, 5],
			[1, 8],
			[1, 9],
			[1, 10],
			[1, 11],
			[1, 12],
			[1, 13],
			[1, 14],
			[1, 15],
			[15, 5],
			[1, 16],
			[16, 8],
			[1, 17],
			[1, 18],
			[18, 5],
			[1, 19]
		],
		"circular": []
	},
	"readme": "# EventCalendar [![](https://data.jsdelivr.com/v1/package/npm/@event-calendar/build/badge)](https://www.jsdelivr.com/package/npm/@event-calendar/build) [![npm](https://img.shields.io/npm/dm/@event-calendar/core?color=red&label=npm&style=flat-square)](https://www.npmjs.com/package/@event-calendar/core)\n\nSee [demo](https://vkurko.github.io/calendar/) and [changelog](CHANGELOG.md).\n\nFull-sized drag & drop JavaScript event calendar with resource & timeline views:\n\n* Lightweight (33kb [br](https://en.wikipedia.org/wiki/Brotli) compressed)\n* 100% human-coded\n* Zero-dependency (standalone bundle)\n* Used on over 70,000 websites with [Bookly](https://wordpress.org/plugins/bookly-responsive-appointment-booking-tool/)\n\nInspired by [FullCalendar](https://fullcalendar.io/), it implements similar options.\n\n## Table of contents\n- [Usage](#usage)\n  - [JavaScript module](#javascript-module)\n  - [Svelte 5 component](#svelte-5-component)\n  - [Standalone bundle](#standalone-bundle)\n  - [Modifying options after initialization](#modifying-options-after-initialization)\n- [Options](#options)\n  <table>\n  <tr><td>\n\n  - [allDayContent](#alldaycontent)\n  - [allDaySlot](#alldayslot)\n  - [buttonText](#buttontext)\n  - [customButtons](#custombuttons)\n  - [date](#date)\n  - [dateClick](#dateclick)\n  - [datesAboveResources](#datesaboveresources)\n  - [datesSet](#datesset)\n  - [dayCellFormat](#daycellformat)\n  - [dayHeaderAriaLabelFormat](#dayheaderarialabelformat)\n  - [dayHeaderFormat](#dayheaderformat)\n  - [dayMaxEvents](#daymaxevents)\n  - [dayPopoverFormat](#daypopoverformat)\n  - [displayEventEnd](#displayeventend)\n  - [dragConstraint](#dragconstraint)\n  - [dragScroll](#dragscroll)\n  - [duration](#duration)\n  - [editable](#editable)\n  - [events](#events)\n  - [eventAllUpdated](#eventallupdated)\n  - [eventBackgroundColor](#eventbackgroundcolor)\n  - [eventClassNames](#eventclassnames)\n  - [eventClick](#eventclick)\n  - [eventColor](#eventcolor)\n  - [eventContent](#eventcontent)\n  - [eventDidMount](#eventdidmount)\n  - [eventDragMinDistance](#eventdragmindistance)\n  - [eventDragStart](#eventdragstart)\n  - [eventDragStop](#eventdragstop)\n  - [eventDrop](#eventdrop)\n  </td><td>\n\n  - [eventDurationEditable](#eventdurationeditable)\n  - [eventLongPressDelay](#eventlongpressdelay)\n  - [eventMouseEnter](#eventmouseenter)\n  - [eventMouseLeave](#eventmouseleave)\n  - [eventResizableFromStart](#eventresizablefromstart)\n  - [eventResize](#eventresize)\n  - [eventResizeStart](#eventresizestart)\n  - [eventResizeStop](#eventresizestop)\n  - [eventSources](#eventsources)\n  - [eventStartEditable](#eventstarteditable)\n  - [eventTextColor](#eventtextcolor)\n  - [eventTimeFormat](#eventtimeformat)\n  - [filterEventsWithResources](#filtereventswithresources)\n  - [filterResourcesWithEvents](#filterresourceswithevents)\n  - [firstDay](#firstday)\n  - [flexibleSlotTimeLimits](#flexibleslottimelimits)\n  - [headerToolbar](#headertoolbar)\n  - [height](#height)\n  - [hiddenDays](#hiddendays)\n  - [highlightedDates](#highlighteddates)\n  - [lazyFetching](#lazyfetching)\n  - [listDayFormat](#listdayformat)\n  - [listDaySideFormat](#listdaysideformat)\n  - [loading](#loading)\n  - [locale](#locale)\n  - [longPressDelay](#longpressdelay)\n  - [moreLinkContent](#morelinkcontent)\n  - [noEventsClick](#noeventsclick)\n  - [noEventsContent](#noeventscontent)\n  - [nowIndicator](#nowindicator)\n  </td><td>\n\n  - [pointer](#pointer)\n  - [resizeConstraint](#resizeconstraint)\n  - [resources](#resources)\n  - [resourceLabelContent](#resourcelabelcontent)\n  - [resourceLabelDidMount](#resourcelabeldidmount)\n  - [scrollTime](#scrolltime)\n  - [select](#select)\n  - [selectable](#selectable)\n  - [selectBackgroundColor](#selectbackgroundcolor)\n  - [selectConstraint](#selectconstraint)\n  - [selectLongPressDelay](#selectlongpressdelay)\n  - [selectMinDistance](#selectmindistance)\n  - [slotDuration](#slotduration)\n  - [slotEventOverlap](#sloteventoverlap)\n  - [slotHeight](#slotheight)\n  - [slotLabelFormat](#slotlabelformat)\n  - [slotLabelInterval](#slotlabelinterval)\n  - [slotMaxTime](#slotmaxtime)\n  - [slotMinTime](#slotmintime)\n  - [slotWidth](#slotwidth)\n  - [theme](#theme)\n  - [titleFormat](#titleformat)\n  - [unselect](#unselect)\n  - [unselectAuto](#unselectauto)\n  - [unselectCancel](#unselectcancel)\n  - [validRange](#validrange)\n  - [view](#view)\n  - [viewDidMount](#viewdidmount)\n  - [views](#views)\n  - [weekNumberContent](#weeknumbercontent)\n  - [weekNumbers](#weeknumbers)\n  </td></tr>\n  </table>\n- [Methods](#methods)\n  <table>\n  <tr><td>\n\n  - [getOption](#getoption-name-)\n  - [setOption](#setoption-name-value-)\n  </td><td>\n\n  - [addEvent](#addevent-event-)\n  - [getEventById](#geteventbyid-id-)\n  - [getEvents](#getevents)\n  - [removeEventById](#removeeventbyid-id-)\n  - [updateEvent](#updateevent-event-)\n  - [refetchEvents](#refetchevents)\n  </td><td>\n\n  - [dateFromPoint](#datefrompoint-x-y-)\n  - [getView](#getview)\n  - [next](#next)\n  - [prev](#prev)\n  - [unselect](#unselect-1)\n  </td></tr>\n  </table>\n- [Content](#content)\n- [Event object](#event-object)\n  - [Parsing event from a plain object](#parsing-event-from-a-plain-object)\n- [Duration object](#duration-object)\n  - [Parsing duration from input values](#parsing-duration-from-input-values)\n- [Resource object](#resource-object)\n  - [Parsing resource from a plain object](#parsing-resource-from-a-plain-object)\n- [View object](#view-object)\n- [Theming](#theming)\n- [Browser support](#browser-support)\n\n## Usage\n### JavaScript module\nThe first step is to install the EventCalendar `core` package:\n```bash\nnpm install --save-dev @event-calendar/core\n```\nThis package provides functions for creating and destroying the calendar, as well as plugins for various views. You must use at least one plugin that provides a view. The following plugins are currently available:\n\n* `DayGrid`\n* `List`\n* `ResourceTimeline`\n* `ResourceTimeGrid`\n* `TimeGrid`\n* `Interaction` (doesn't provide a view)\n\nThen, in your JavaScript module:\n```js\nimport {createCalendar, destroyCalendar, TimeGrid} from '@event-calendar/core';\n// Import CSS if your build tool supports it\nimport '@event-calendar/core/index.css';\n\nlet ec = createCalendar(\n    // HTML element the calendar will be mounted to\n    document.getElementById('ec'),\n    // Array of plugins\n    [TimeGrid],\n    // Options object\n    {\n        view: 'timeGridWeek',\n        events: [\n            // your list of events\n        ]\n    }\n);\n\n// If you later need to destroy the calendar then use\ndestroyCalendar(ec);\n```\n\n### Svelte 5 component\nThe first step is to install the EventCalendar `core` package:\n```bash\nnpm install --save-dev @event-calendar/core\n```\nThis package provides the `Calendar` component, as well as plugins for various views. You must use at least one plugin that provides a view. The following plugins are currently available:\n\n* `DayGrid`\n* `List`\n* `ResourceTimeline`\n* `ResourceTimeGrid`\n* `TimeGrid`\n* `Interaction` (doesn't provide a view)\n\nThen in your Svelte 5 component, use the calendar like this:\n```html\n<script>\n    import {Calendar, TimeGrid} from '@event-calendar/core';\n\n    let options = $state({\n        view: 'timeGridWeek',\n        events: [\n            // your list of events\n        ]\n    });\n</script>\n\n<Calendar plugins={[TimeGrid]} {options} />\n```\nThe calendar is destroyed gracefully when the component containing it is destroyed.\n\n### Standalone bundle\nThis bundle contains a version of the calendar that includes all plugins and is prepared for use in the browser via the `<script>` tag.\n\nThe first step is to include the following lines of code in the `<head>` section of your page:\n```html\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/@event-calendar/build@4.0.3/dist/event-calendar.min.css\">\n<script src=\"https://cdn.jsdelivr.net/npm/@event-calendar/build@4.0.3/dist/event-calendar.min.js\"></script>\n```\n\n<details>\n  <summary>Note</summary>\n\n> Please note that the file paths contain an indication of a specific version of the library. You can remove this indication, then the latest version will be loaded:\n> ```html\n> <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/@event-calendar/build/dist/event-calendar.min.css\">\n> <script src=\"https://cdn.jsdelivr.net/npm/@event-calendar/build/dist/event-calendar.min.js\"></script>\n> ```\n> But it is recommended to always specify the version and explicitly update it if necessary, in order to avoid unpredictable problems when a new version of the library is released.\n\n</details>\n\nThen initialize the calendar like this:\n```js\nlet ec = EventCalendar.create(document.getElementById('ec'), {\n    view: 'timeGridWeek',\n    events: [\n        // your list of events\n    ]\n});\n\n// If you later need to destroy the calendar then use\nEventCalendar.destroy(ec);\n```\n\n### Modifying options after initialization\nYou can modify the calendar options after initialization using the [setOption](#setoption-name-value-) method.\n```js\nec.setOption('slotDuration', '01:00');\n```\nIn Svelte, you can simply update the original `options` object.\n```html\n<script>\n    import {Calendar, TimeGrid} from '@event-calendar/core';\n\n    let options = $state({\n        view: 'timeGridWeek'\n    });\n\n    function updateOptions() {\n        options.slotDuration = '01:00';\n    }\n</script>\n\n<button onclick={updateOptions}>Change slot duration</button>\n<Calendar plugins={[TimeGrid]} {options} />\n```\n\n## Options\n\n### allDayContent\n- Type `Content` or `function`\n- Default `'all-day'`\n\nDefines the content that is displayed as a title of the `all-day` slot.\n\nThis value can be either a [Content](#content) or a function that returns content:\n\n```js\nfunction (arg) {\n    // return Content\n}\n```\n`arg` is an object with the following properties:\n<table>\n<tr>\n<td>\n\n`text`\n</td>\n<td>\n\nThe default text\n</td>\n</tr>\n</table>\n\n### allDaySlot\n- Type `boolean`\n- Default `true`\n\nDetermines whether the `all-day` slot is displayed at the top of the calendar.\n\nWhen hidden with `false`, all-day events will not be displayed in `timeGrid`/`resourceTimeGrid` views.\n\n### buttonText\n- Type `object` or `function`\n- Default `{close: 'Close', dayGridMonth: 'month', listDay: 'list', listMonth: 'list', listWeek: 'list', listYear: 'list', resourceTimeGridDay: 'resources', resourceTimeGridWeek: 'resources', resourceTimelineDay: 'timeline', resourceTimelineMonth: 'timeline', resourceTimelineWeek: 'timeline', timeGridDay: 'day', timeGridWeek: 'week', today: 'today'}`\n> Views override the default value as follows:\n> - dayGridMonth `text => ({...text, next: 'Next month', prev: 'Previous month'})`\n> - listDay `text => ({...text, next: 'Next day', prev: 'Previous day'})`\n> - listMonth `text => ({...text, next: 'Next month', prev: 'Previous month'})`\n> - listWeek `text => ({...text, next: 'Next week', prev: 'Previous week'})`\n> - listYear `text => ({...text, next: 'Next year', prev: 'Previous year'})`\n> - resourceTimeGridDay `text => ({...text, next: 'Next day', prev: 'Previous day'})`\n> - resourceTimeGridWeek `text => ({...text, next: 'Next week', prev: 'Previous week'})`\n> - resourceTimelineDay `text => ({...text, next: 'Next day', prev: 'Previous day'})`\n> - resourceTimelineMonth `text => ({...text, next: 'Next month', prev: 'Previous month'})`\n> - resourceTimelineWeek `text => ({...text, next: 'Next week', prev: 'Previous week'})`\n> - timeGridDay `text => ({...text, next: 'Next day', prev: 'Previous day'})`\n> - timeGridWeek `text => ({...text, next: 'Next week', prev: 'Previous week'})`\n\nText that is displayed in buttons of the header toolbar.\n\nThis value can be either a plain object with all necessary properties, or a callback function that receives default button text object and should return a new one:\n\n```js\nfunction (text) {\n  // return new button text object\n}\n```\n<table>\n<tr>\n<td>\n\n`text`\n</td>\n<td>An object with default button text</td>\n</tr>\n</table>\n\n### customButtons\n- Type `object`\n- Default `{}`\n\nDefines custom buttons that can be used in the [headerToolbar](#headertoolbar).\n\nFirst, specify the custom buttons as key-value pairs. Then reference them from the `headerToolbar` option.\n\n<details>\n  <summary>Example</summary>\n\n```js\nlet options = {\n    customButtons: {\n        myCustomButton: {\n            text: 'custom!',\n            click: function() {\n                alert('clicked the custom button!');\n            }\n        }\n    },\n    headerToolbar: {\n        start: 'title myCustomButton',\n        center: '',\n        end: 'today prev,next'\n    }\n};\n```\n</details>\n\nEach `customButton` entry accepts the following properties:\n<table>\n<tr>\n<td>\n\n`text`\n</td>\n<td>\n\nThe text to be display on the button itself. See [Content](#content)\n</td>\n</tr>\n<tr>\n<td>\n\n`click`\n</td>\n<td>A callback function that is called when the button is clicked. Accepts one argument <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent\">mouseEvent</a></td>\n</tr>\n<tr>\n<td>\n\n`active`\n</td>\n<td>\n\nIf `true`, the button will appear pressed/active\n</td>\n</tr>\n</table>\n\n### date\n- Type `Date` or `string`\n- Default `new Date()`\n\nDate that is currently displayed on the calendar.\n\nThis value can be either a JavaScript Date object, or an ISO8601 date string like `'2022-12-31'`.\n\n### dateClick\n- Type `function`\n- Default `undefined`\n- Requires `Interaction` plugin\n\nCallback function that is triggered when the user clicks on a date or a time.\n\n```js\nfunction (info) {}\n```\n`info` is an object with the following properties:\n<table>\n<tr>\n<td>\n\n`date`\n</td>\n<td>JavaScript Date object for the clicked date and time</td>\n</tr>\n<tr>\n<td>\n\n`dateStr`\n</td>\n<td>ISO8601 string representation of the date</td>\n</tr>\n<tr>\n<td>\n\n`allDay`\n</td>\n<td>\n\n`true` or `false`. Determines if the click has occurred in the `all-day` slot. Month and list views are also considered as all-day slots</td>\n</tr>\n<tr>\n<td>\n\n`dayEl`\n</td>\n<td>HTML element that represents the whole-day that was clicked on</td>\n</tr>\n<tr>\n<td>\n\n`jsEvent`\n</td>\n<td>JavaScript native event object with low-level information such as click coordinates</td>\n</tr>\n<tr>\n<td>\n\n`view`\n</td>\n<td>\n\nThe current [View](#view-object) object\n</td>\n</tr>\n<tr>\n<td>\n\n`resource`\n</td>\n<td>\n\nIf the current view is a resource view, the [Resource](#resource-object) object that owns this date\n</td>\n</tr>\n</table>\n\n### datesAboveResources\n- Type `boolean`\n- Default `false`\n\nDetermines whether the resource view should render the date headings above the resource headings.\n\n### datesSet\n- Type `function`\n- Default `undefined`\n\nCallback function that is triggered when the date range of the calendar was originally set or changed by clicking the previous/next buttons, changing the view, manipulating the current date via the API, etc.\n\n```js\nfunction (info) {}\n```\n`info` is an object with the following properties:\n<table>\n<tr>\n<td>\n\n`start`\n</td>\n<td>JavaScript Date object for the beginning of the range the calendar needs events for</td>\n</tr>\n<tr>\n<td>\n\n`end`\n</td>\n<td>JavaScript Date object for the end of the range the calendar needs events for. Note: This value is exclusive</td>\n</tr>\n<tr>\n<td>\n\n`startStr`\n</td>\n<td>ISO8601 string representation of the start date</td>\n</tr>\n<tr>\n<td>\n\n`endStr`\n</td>\n<td>ISO8601 string representation of the end date</td>\n</tr>\n<tr>\n<td>\n\n`view`\n</td>\n<td>\n\nThe current [View](#view-object) object\n</td>\n</tr>\n</table>\n\n### dayCellFormat\n- Type `object` or `function`\n- Default `{day: 'numeric'}`\n\nDefines the text that is displayed inside the day cell in the `dayGrid` view.\n\nThis value can be either an object with options for the native JavaScript [Intl.DateTimeFormat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat) object, or a callback function that returns a [Content](#content) with the formatted string:\n\n```js\nfunction (date) {\n  // return Content with the formatted date string\n}\n```\n<table>\n<tr>\n<td>\n\n`date`\n</td>\n<td>JavaScript Date object that needs to be formatted</td>\n</tr>\n</table>\n\n### dayHeaderAriaLabelFormat\n- Type `object` or `function`\n- Default `{dateStyle: 'long'}`\n> Views override the default value as follows:\n> - dayGridMonth `{weekday: 'long'}`\n\nDefines the text that is used inside the `aria-label` attribute in calendar column headings.\n\nThis value can be either an object with options for the native JavaScript [Intl.DateTimeFormat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat) object, or a callback function that returns formatted string:\n\n```js\nfunction (date) {\n    // return formatted date string\n}\n```\n<table>\n<tr>\n<td>\n\n`date`\n</td>\n<td>JavaScript Date object that needs to be formatted</td>\n</tr>\n</table>\n\n### dayHeaderFormat\n- Type `object` or `function`\n- Default `{weekday: 'short', month: 'numeric', day: 'numeric'}`\n> Views override the default value as follows:\n> - dayGridMonth `{weekday: 'short'}`\n> - resourceTimelineMonth `{weekday: 'short', day: 'numeric'}`\n> - timeGridDay `{weekday: 'long'}`\n\nDefines the text that is displayed on the calendar’s column headings.\n\nThis value can be either an object with options for the native JavaScript [Intl.DateTimeFormat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat) object, or a callback function that returns a [Content](#content) with the formatted string:\n\n```js\nfunction (date) {\n    // return Content with the formatted date string\n}\n```\n<table>\n<tr>\n<td>\n\n`date`\n</td>\n<td>JavaScript Date object that needs to be formatted</td>\n</tr>\n</table>\n\n### dayMaxEvents\n- Type `boolean`\n- Default `false`\n\nDetermines the maximum number of stacked event levels for a given day in the `dayGrid` view.\n\nIf there are too many events, a link like `+2 more` is displayed.\n\nCurrently, only the value `true` is supported, which limits the number of events to the height of the day cell.\n\n### dayPopoverFormat\n- Type `object` or `function`\n- Default `{month: 'long', day: 'numeric', year: 'numeric'}`\n\nDefines the date format of title of the popover created by the [dayMaxEvents](#daymaxevents) option.\n\nThis value can be either an object with options for the native JavaScript [Intl.DateTimeFormat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat) object, or a callback function that returns a [Content](#content) with the formatted string:\n\n```js\nfunction (date) {\n    // return Content with the formatted date string\n}\n```\n### displayEventEnd\n- Type `boolean`\n- Default `true`\n> Views override the default value as follows:\n> - dayGridMonth `false`\n> - resourceTimelineDay `false`\n> - resourceTimelineMonth `false`\n> - resourceTimelineWeek `false`\n\nDetermines whether to display an event’s end time.\n\n### dragConstraint\n- Type `function`\n- Default `undefined`\n- Requires `Interaction` plugin\n\nCallback function that limits the date/time range into which events are allowed to be dragged.\n\nThe function is triggered during dragging for each cursor movement and takes the same parameters as [eventDrop](#eventdrop). The function should return `true` if dragging to the new position is allowed, and `false` otherwise.\n\n### dragScroll\n- Type `boolean`\n- Default `true`\n- Requires `Interaction` plugin\n\nDetermines whether the calendar should automatically scroll during the event drag-and-drop when the mouse crosses the edge.\n\n### duration\n- Type `string`, `integer` or `object`\n- Default `{weeks: 1}`\n> Views override the default value as follows:\n> - dayGridMonth `{months: 1}`\n> - listDay `{days: 1}`\n> - listMonth `{months: 1}`\n> - listYear `{years: 1}`\n> - resourceTimeGridDay `{days: 1}`\n> - resourceTimelineDay `{days: 1}`\n> - resourceTimelineMonth `{months: 1}`\n> - timeGridDay `{days: 1}`\n\nSets the duration of a view.\n\nThis should be a value that can be parsed into a [Duration](#duration-object) object.\n\n### editable\n- Type `boolean`\n- Default `false`\n- Requires `Interaction` plugin\n\nDetermines whether the events on the calendar can be dragged and resized (both at the same time).\n\nIf you don't need both, use the more specific [eventStartEditable](#eventstarteditable) and [eventDurationEditable](#eventdurationeditable) instead.\n\n### events\n- Type `array`\n- Default `[]`\n\nArray of plain objects that will be parsed into [Event](#event-object) objects and displayed on the calendar.\n\nThis option is not used if the `eventSources` option is provided.\n\n### eventAllUpdated\n- Type `function`\n- Default `undefined`\n\nCallback function that is triggered when all events have finished updating.\n\nThis is an experimental feature and its behavior may change in the future. The function is called at the end of the cycle of rendering all events. The rendering occurs when new events are added, already displayed events are modified, or events are deleted.\n\n```js\nfunction (info) { }\n```\n`info` is an object with the following properties:\n<table>\n<tr>\n<td>\n\n`view`\n</td>\n<td>\n\nThe current [View](#view-object) object\n</td>\n</tr>\n</table>\n\n### eventBackgroundColor\n- Type `string`\n- Default `undefined`\n\nSets the default background color for events on the calendar.\n\nYou can use any of the CSS color formats such `'#f00'`, `'#ff0000'`, `'rgb(255,0,0)'`, or `'red'`.\n\n### eventClassNames\n- Type `string`, `array` or `function`\n- Default `undefined`\n\nSets additional CSS classes for events.\n\nThis value can be either a string containing class names `'class-1 class-2 ...'`, an array of strings `['class-1', 'class-2', ...]` or a function that returns any of the above formats:\n\n```js\nfunction (info) {\n    // return string or array\n}\n```\n`info` is an object with the following properties:\n<table>\n<tr>\n<td>\n\n`event`\n</td>\n<td>\n\nThe associated [Event](#event-object) object\n</td>\n</tr>\n<tr>\n<td>\n\n`view`\n</td>\n<td>\n\nThe current [View](#view-object) object\n</td>\n</tr>\n</table>\n\n### eventClick\n- Type `function`\n- Default `undefined`\n\nCallback function that is triggered when the user clicks an event.\n\n```js\nfunction (info) { }\n```\n`info` is an object with the following properties:\n<table>\n<tr>\n<td>\n\n`el`\n</td>\n<td>The HTML element for the event</td>\n</tr>\n<tr>\n<td>\n\n`event`\n</td>\n<td>\n\nThe associated [Event](#event-object) object\n</td>\n</tr>\n<tr>\n<td>\n\n`jsEvent`\n</td>\n<td>JavaScript native event object with low-level information such as click coordinates</td>\n</tr>\n<tr>\n<td>\n\n`view`\n</td>\n<td>\n\nThe current [View](#view-object) object\n</td>\n</tr>\n</table>\n\n### eventColor\n- Type `string`\n- Default `undefined`\n\nThis is currently an alias for the `eventBackgroundColor`.\n\n### eventContent\n- Type `Content` or `function`\n- Default `undefined`\n\nDefines the content that is rendered inside an event’s element.\n\nThis value can be either a [Content](#content) or a function that returns content or `undefined`:\n\n```js\nfunction (info) {\n    // return Content or undefined\n}\n```\n`info` is an object with the following properties:\n<table>\n<tr>\n<td>\n\n`event`\n</td>\n<td>\n\nThe associated [Event](#event-object) object\n</td>\n</tr>\n<tr>\n<td>\n\n`timeText`\n</td>\n<td>Formatted time of the event</td>\n</tr>\n<tr>\n<td>\n\n`view`\n</td>\n<td>\n\nThe current [View](#view-object) object\n</td>\n</tr>\n</table>\n\nIn case the function returns `undefined`, the event will be rendered in the default way.\n\n### eventDidMount\n- Type `function`\n- Default `undefined`\n\nCallback function that is triggered right after the element has been added to the DOM. If the event data changes, this is not called again.\n\n```js\nfunction (info) { }\n```\n`info` is an object with the following properties:\n<table>\n<tr>\n<td>\n\n`el`\n</td>\n<td>The HTML element for the event</td>\n</tr>\n<tr>\n<td>\n\n`event`\n</td>\n<td>\n\nThe associated [Event](#event-object) object\n</td>\n</tr>\n<tr>\n<td>\n\n`timeText`\n</td>\n<td>Formatted time of the event</td>\n</tr>\n<tr>\n<td>\n\n`view`\n</td>\n<td>\n\nThe current [View](#view-object) object\n</td>\n</tr>\n</table>\n\n### eventDragMinDistance\n- Type `integer`\n- Default `5`\n- Requires `Interaction` plugin\n\nDefines how many pixels the user’s mouse must move before the event dragging begins.\n\n### eventDragStart\n- Type `function`\n- Default `undefined`\n- Requires `Interaction` plugin\n\nCallback function that is triggered when the event dragging begins.\n\n```js\nfunction (info) { }\n```\n`info` is an object with the following properties:\n<table>\n<tr>\n<td>\n\n`event`\n</td>\n<td>\n\nThe associated [Event](#event-object) object\n</td>\n</tr>\n<tr>\n<td>\n\n`jsEvent`\n</td>\n<td>JavaScript native event object with low-level information such as click coordinates</td>\n</tr>\n<tr>\n<td>\n\n`view`\n</td>\n<td>\n\nThe current [View](#view-object) object\n</td>\n</tr>\n</table>\n\n### eventDragStop\n- Type `function`\n- Default `undefined`\n- Requires `Interaction` plugin\n\nCallback function that is triggered when the event dragging stops.\n\nIt is triggered before the event’s information has been modified (if moved to a new date/time) and before the [eventDrop](#eventdrop) callback is triggered.\n\n```js\nfunction (info) { }\n```\n`info` is an object with the following properties:\n<table>\n<tr>\n<td>\n\n`event`\n</td>\n<td>\n\nThe associated [Event](#event-object) object\n</td>\n</tr>\n<tr>\n<td>\n\n`jsEvent`\n</td>\n<td>JavaScript native event object with low-level information such as click coordinates</td>\n</tr>\n<tr>\n<td>\n\n`view`\n</td>\n<td>\n\nThe current [View](#view-object) object\n</td>\n</tr>\n</table>\n\n### eventDrop\n- Type `function`\n- Default `undefined`\n- Requires `Interaction` plugin\n\nCallback function that is triggered when dragging stops, and the event has moved to a different day/time.\n\nIt is triggered after the event’s information has been modified and after the [eventDragStop](#eventdragstop) callback has been triggered.\n\n```js\nfunction (info) { }\n```\n`info` is an object with the following properties:\n<table>\n<tr>\n<td>\n\n`event`\n</td>\n<td>\n\nThe associated [Event](#event-object) object\n</td>\n</tr>\n<tr>\n<td>\n\n`oldEvent`\n</td>\n<td>\n\nAn [Event](#event-object) object that holds information about the event before the drop\n</td>\n</tr>\n<tr>\n<td>\n\n`oldResource`\n</td>\n<td>\n\nIf the resource has changed, this is the [Resource](#resource-object) object the event came from. If the resource has not changed, this will be undefined\n</td>\n</tr>\n<tr>\n<td>\n\n`newResource`\n</td>\n<td>\n\nIf the resource has changed, this is the [Resource](#resource-object) object the event went to. If the resource has not changed, this will be undefined\n</td>\n</tr>\n<tr>\n<td>\n\n`delta`\n</td>\n<td>\n\nA [Duration](#duration-object) object that represents the amount of time the event was moved by\n</td>\n</tr>\n<tr>\n<td>\n\n`revert`\n</td>\n<td>\n\nA function that, if called, reverts the event’s start/end date to the values before the drag\n</td>\n</tr>\n<tr>\n<td>\n\n`jsEvent`\n</td>\n<td>JavaScript native event object with low-level information such as click coordinates</td>\n</tr>\n<tr>\n<td>\n\n`view`\n</td>\n<td>\n\nThe current [View](#view-object) object\n</td>\n</tr>\n</table>\n\n### eventDurationEditable\n- Type `boolean`\n- Default `true`\n- Requires `Interaction` plugin\n\nDetermines whether calendar events can be resized.\n\n### eventLongPressDelay\n- Type `integer`\n- Default `undefined`\n- Requires `Interaction` plugin\n\nFor touch devices, the amount of time (in milliseconds) the user must hold down a tap before the event becomes draggable/resizable.\n\nIf not specified, it falls back to [longPressDelay](#longpressdelay).\n\n### eventMouseEnter\n- Type `function`\n- Default `undefined`\n\nCallback function that is triggered when the user hovers over an event with the cursor (mouse pointer).\n\n```js\nfunction (info) { }\n```\n`info` is an object with the following properties:\n<table>\n<tr>\n<td>\n\n`el`\n</td>\n<td>The HTML element for the event</td>\n</tr>\n<tr>\n<td>\n\n`event`\n</td>\n<td>\n\nThe associated [Event](#event-object) object\n</td>\n</tr>\n<tr>\n<td>\n\n`jsEvent`\n</td>\n<td>JavaScript native event object with low-level information such as click coordinates</td>\n</tr>\n<tr>\n<td>\n\n`view`\n</td>\n<td>\n\nThe current [View](#view-object) object\n</td>\n</tr>\n</table>\n\n### eventMouseLeave\n- Type `function`\n- Default `undefined`\n\nCallback function that is triggered when the cursor (mouse pointer) is moved out of an event.\n\n```js\nfunction (info) { }\n```\n`info` is an object with the following properties:\n<table>\n<tr>\n<td>\n\n`el`\n</td>\n<td>The HTML element for the event</td>\n</tr>\n<tr>\n<td>\n\n`event`\n</td>\n<td>\n\nThe associated [Event](#event-object) object\n</td>\n</tr>\n<tr>\n<td>\n\n`jsEvent`\n</td>\n<td>JavaScript native event object with low-level information such as click coordinates</td>\n</tr>\n<tr>\n<td>\n\n`view`\n</td>\n<td>\n\nThe current [View](#view-object) object\n</td>\n</tr>\n</table>\n\n### eventResizableFromStart\n- Type `boolean`\n- Default `false`\n- Requires `Interaction` plugin\n\nDetermines whether the event can be resized from its starting edge.\n\n### eventResize\n- Type `function`\n- Default `undefined`\n- Requires `Interaction` plugin\n\nCallback function that is triggered when resizing stops, and the duration of the event has changed.\n\nIt is triggered after the event’s information has been modified and after the [eventResizeStop](#eventresizestop) callback has been triggered.\n\n```js\nfunction (info) { }\n```\n`info` is an object with the following properties:\n<table>\n<tr>\n<td>\n\n`event`\n</td>\n<td>\n\nThe associated [Event](#event-object) object\n</td>\n</tr>\n<tr>\n<td>\n\n`oldEvent`\n</td>\n<td>\n\nAn [Event](#event-object) object that holds information about the event before the resize\n</td>\n</tr>\n<tr>\n<td>\n\n`startDelta`\n</td>\n<td>\n\nA [Duration](#duration-object) object that represents the amount of time the event’s start date was moved by\n</td>\n</tr>\n<tr>\n<td>\n\n`endDelta`\n</td>\n<td>\n\nA [Duration](#duration-object) object that represents the amount of time the event’s end date was moved by\n</td>\n</tr>\n<tr>\n<td>\n\n`revert`\n</td>\n<td>\n\nA function that, if called, reverts the event’s end date to the values before the resize\n</td>\n</tr>\n<tr>\n<td>\n\n`jsEvent`\n</td>\n<td>JavaScript native event object with low-level information such as click coordinates</td>\n</tr>\n<tr>\n<td>\n\n`view`\n</td>\n<td>\n\nThe current [View](#view-object) object\n</td>\n</tr>\n</table>\n\n### eventResizeStart\n- Type `function`\n- Default `undefined`\n- Requires `Interaction` plugin\n\nCallback function that is triggered when the event resizing begins.\n\n```js\nfunction (info) { }\n```\n`info` is an object with the following properties:\n<table>\n<tr>\n<td>\n\n`event`\n</td>\n<td>\n\nThe associated [Event](#event-object) object\n</td>\n</tr>\n<tr>\n<td>\n\n`jsEvent`\n</td>\n<td>JavaScript native event object with low-level information such as click coordinates</td>\n</tr>\n<tr>\n<td>\n\n`view`\n</td>\n<td>\n\nThe current [View](#view-object) object\n</td>\n</tr>\n</table>\n\n### eventResizeStop\n- Type `function`\n- Default `undefined`\n- Requires `Interaction` plugin\n\nCallback function that is triggered when the event resizing stops.\n\nIt is triggered before the event’s information has been modified (if duration is changed) and before the [eventResize](#eventresize) callback is triggered.\n\n```js\nfunction (info) { }\n```\n`info` is an object with the following properties:\n<table>\n<tr>\n<td>\n\n`event`\n</td>\n<td>\n\nThe associated [Event](#event-object) object\n</td>\n</tr>\n<tr>\n<td>\n\n`jsEvent`\n</td>\n<td>JavaScript native event object with low-level information such as click coordinates</td>\n</tr>\n<tr>\n<td>\n\n`view`\n</td>\n<td>\n\nThe current [View](#view-object) object\n</td>\n</tr>\n</table>\n\n### eventSources\n- Type `EventSource[]`\n- Default `[]`\n\nArray of `EventSource` objects that will provide EventCalendar with data about events.\n\nThis option is used instead of the `events` option.\n\n`EventSource` should be an object with one of the following sets of properties:\n\n#### 1. Fetch events from a URL\n<table>\n<tr>\n<td>\n\n`url`\n</td>\n<td>\n\nA URL that the calendar will fetch [Event](#event-object) objects from. HTTP requests with the following parameters will be sent to this URL whenever the calendar needs new event data:\n<table>\n<tr>\n<td>\n\n`start`\n</td>\n<td>\nStart date of the range the calendar needs events for\n</td>\n</tr>\n<tr>\n<td>\n\n`end`\n</td>\n<td>\nEnd date of the range the calendar needs events for\n</td>\n</tr>\n</table>\n</td>\n</tr>\n<tr>\n<td>\n\n`method`\n</td>\n<td>\n\nHTTP request method. Default `'GET'`\n</td>\n</tr>\n<tr>\n<td>\n\n`extraParams`\n</td>\n<td>\n\nOther GET/POST data you want to send to the server. Can be a plain object or a function that returns an object. Default `{}`\n</td>\n</tr>\n</table>\n\n#### 2. Execute custom function\n<table>\n<tr>\n<td>\n\n`events`\n</td>\n<td>\n\nA custom function that is executed whenever EventCalendar needs new event data.\n\n```js\nfunction(fetchInfo, successCallback, failureCallback) { }\n```\n`fetchInfo` is an object with the following properties:\n<table>\n<tr>\n<td>\n\n`start`\n</td>\n<td>JavaScript Date object for the beginning of the range the calendar needs events for</td>\n</tr>\n<tr>\n<td>\n\n`end`\n</td>\n<td>JavaScript Date object for the end of the range the calendar needs events for. Note: This value is exclusive</td>\n</tr>\n<tr>\n<td>\n\n`startStr`\n</td>\n<td>ISO8601 string representation of the start date</td>\n</tr>\n<tr>\n<td>\n\n`endStr`\n</td>\n<td>ISO8601 string representation of the end date</td>\n</tr>\n</table>\n\nThe `successCallback` function must be called by the custom function with an array of parsable [Event](#event-object) objects.\n\nIf there is any failure (e.g., if an AJAX request fails), then call the `failureCallback` instead. It accepts an argument with information about the failure.\n\nInstead of calling `successCallback` and `failureCallback`, you may return the resulting array of events or return a [Promise](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise) (or [thenable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/resolve)) object instead.\n</td>\n</tr>\n</table>\n\n### eventStartEditable\n- Type `boolean`\n- Default `true`\n- Requires `Interaction` plugin\n\nDetermines whether the events on the calendar can be dragged.\n\n### eventTimeFormat\n- Type `object` or `function`\n- Default `{hour: 'numeric', minute: '2-digit'}`\n\nDefines the time-text that is displayed on each event.\n\nThis value can be either an object with options for the native JavaScript [Intl.DateTimeFormat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat) object, or a callback function that returns a [Content](#content) with the formatted string:\n\n```js\nfunction (start, end) {\n    // return Content with the formatted time string\n}\n```\n<table>\n<tr>\n<td>\n\n`start`\n</td>\n<td>JavaScript Date object containing the beginning of the time span to be formatted</td>\n</tr>\n<tr>\n<td>\n\n`end`\n</td>\n<td>JavaScript Date object containing the end of the time span to be formatted</td>\n</tr>\n</table>\n\n### eventTextColor\n- Type `string`\n- Default `undefined`\n\nSets the default text color for events on the calendar.\n\nYou can use any of the CSS color formats such `'#f00'`, `'#ff0000'`, `'rgb(255,0,0)'`, or `'red'`.\n\n### filterEventsWithResources\n- Type `boolean`\n- Default `false`\n\nDetermines whether events that do not belong to the current array of [resources](#resources) should be hidden in `dayGrid`/`timeGrid`/`list` views.\n\n### filterResourcesWithEvents\n- Type `boolean`\n- Default `false`\n\nDetermines whether resources with no events for the current range should be hidden in the resource view.\n\n### firstDay\n- Type `integer`\n- Default `0`\n\nThe day that each week begins at, where Sunday is `0`, Monday is `1`, etc. Saturday is `6`.\n\n### flexibleSlotTimeLimits\n- Type `boolean` or `object`\n- Default `false`\n\nDetermines whether [slotMinTime](#slotmintime) and [slotMaxTime](#slotmaxtime) should automatically expand when an event goes out of bounds.\n\nIf set to `true`, then the decision on whether to expand the limits will be made based on the analysis of currently displayed events, but excluding background events.\n\nIf you want background events not to be ignored, then instead of `true` you can pass an object with the following properties:\n\n<table>\n<tr>\n<td>\n\n`eventFilter`\n</td>\n<td>\n\nA function to determine whether a given event should be taken into account or not.\n\n```js\nfunction(event) {\n    // return true or false\n}\n```\n<table>\n<tr>\n<td>\n\n`event`\n</td>\n<td>\n\n[Event](#event-object) object to be analyzed.\n\nThe function must return `true` to have this event counted, or `false` to ignore it\n</td>\n</tr>\n</table>\n\n</td>\n</tr>\n</table>\n\n### headerToolbar\n- Type `object`\n- Default `{start: 'title', center: '', end: 'today prev,next'}`\n\nDefines the buttons and title at the top of the calendar.\n\nAn object can be supplied with properties `start`,`center`,`end`. These properties contain strings with comma/space separated values. Values separated by a comma will be displayed adjacently. Values separated by a space will be displayed with a small gap in between. Strings can contain any of the following values:\n<table>\n<tr>\n<td>\n\n`title`\n</td>\n<td>A text containing the current month/week/day</td>\n</tr>\n<tr>\n<td>\n\n`prev`\n</td>\n<td>A button for moving the calendar back one month/week/day</td>\n</tr>\n<tr>\n<td>\n\n`next`\n</td>\n<td>A button for moving the calendar forward one month/week/day</td>\n</tr>\n<tr>\n<td>\n\n`today`\n</td>\n<td>A button for moving the calendar to the current month/week/day</td>\n</tr>\n<tr>\n<td>\n\n_a view name like_ `dayGridMonth`\n</td>\n<td>A button that will switch the calendar to a specific view</td>\n</tr>\n</table>\n\n### height\n- Type `string`\n- Default `undefined`\n\nDefines the height of the entire calendar.\n\nThis should be a valid CSS value like `'100%'` or `'600px'`.\n\n### hiddenDays\n- Type `array`\n- Default `[]`\n\nExclude certain days-of-the-week from being displayed, where Sunday is `0`, Monday is `1`, etc. Saturday is `6`.\n\n### highlightedDates\n- Type `array`\n- Default `[]`\n\nArray of dates that need to be highlighted in the calendar.\n\nEach date can be either an ISO8601 date string like `'2022-12-31'`, or a JavaScript Date object.\n\n### lazyFetching\n- Type `boolean`\n- Default `true`\n\nDetermines when event fetching should occur.\n\nWhen set to `true` (the default), the calendar will only fetch events when it absolutely needs to, minimizing HTTP requests. For example, say your calendar starts out in month view, in February. EventCalendar will fetch events for the entire month of February and store them in its internal storage. Then, say the user switches to week view and begins browsing the weeks in February. The calendar will avoid fetching events because it already has this information stored.\n\nWhen set to `false`, the calendar will fetch events any time the view is switched, or any time the current date changes (for example, as a result of the user clicking prev/next).\n\n### listDayFormat\n- Type `object` or `function`\n- Default `{weekday: 'long'}`\n\nDefines the text on the left side of the day headings in list view.\n\nThis value can be either an object with options for the native JavaScript [Intl.DateTimeFormat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat) object, or a callback function that returns a [Content](#content) with the formatted string:\n\n```js\nfunction (date) {\n  // return Content with the formatted date string\n}\n```\n<table>\n<tr>\n<td>\n\n`date`\n</td>\n<td>JavaScript Date object that needs to be formatted</td>\n</tr>\n</table>\n\n### listDaySideFormat\n- Type `object` or `function`\n- Default `{year: 'numeric', month: 'long', day: 'numeric'}`\n\nDefines the text on the right side of the day headings in list view.\n\nThis value can be either an object with options for the native JavaScript [Intl.DateTimeFormat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat) object, or a callback function that returns a [Content](#content) with the formatted string:\n\n```js\nfunction (date) {\n  // return Content with the formatted date string\n}\n```\n<table>\n<tr>\n<td>\n\n`date`\n</td>\n<td>JavaScript Date object that needs to be formatted</td>\n</tr>\n</table>\n\n### loading\n- Type `function`\n- Default `undefined`\n\nCallback function that is triggered when event fetching starts/stops.\n\n```js\nfunction (isLoading) { }\n```\n<table>\n<tr>\n<td>\n\n`isLoading`\n</td>\n<td>\n\n`true` when the calendar begins fetching events, `false` when it’s done.\n</td>\n</tr>\n</table>\n\n### locale\n- Type `string`\n- Default `undefined`\n\nDefines the `locales` parameter for the native JavaScript [Intl.DateTimeFormat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat#locales) object that EventCalendar uses to format date and time strings in options such as [dayHeaderFormat](#dayheaderformat), [eventTimeFormat](#eventtimeformat), etc.\n\n### longPressDelay\n- Type `integer`\n- Default `1000`\n\nFor touch devices, the amount of time (in milliseconds) the user must hold down a tap before the event becomes draggable/resizable or the date becomes selectable.\n\nFor a more granular configuration, see [eventLongPressDelay](#eventlongpressdelay) and [selectLongPressDelay](#selectlongpressdelay).\n\n### moreLinkContent\n- Type `Content` or `function`\n- Default `undefined`\n\nDefines the text that is displayed instead of the default `+2 more` created by the [dayMaxEvents](#daymaxevents) option.\n\nThis value can be either a [Content](#content) or a function that returns content:\n\n```js\nfunction (arg) {\n  // return Content\n}\n```\n`arg` is an object with the following properties:\n<table>\n<tr>\n<td>\n\n`num`\n</td>\n<td>The number of hidden events</td>\n</tr>\n<tr>\n<td>\n\n`text`\n</td>\n<td>\n\nThe default text like `+2 more`\n</td>\n</tr>\n</table>\n\n### noEventsClick\n- Type `function`\n- Default `undefined`\n\nCallback function that is triggered when the user clicks _No events_ area in list view.\n\n```js\nfunction (info) { }\n```\n`info` is an object with the following properties:\n<table>\n<tr>\n<td>\n\n`jsEvent`\n</td>\n<td>JavaScript native event object with low-level information such as click coordinates</td>\n</tr>\n<tr>\n<td>\n\n`view`\n</td>\n<td>\n\nThe current [View](#view-object) object\n</td>\n</tr>\n</table>\n\n### noEventsContent\n- Type `Content` or `function`\n- Default `'No events'`\n\nDefines the text that is displayed in list view when there are no events to display.\n\nThis value can be either a [Content](#content) or a function that returns content:\n\n```js\nfunction () {\n  // return Content\n}\n```\n\n### nowIndicator\n- Type `boolean`\n- Default `false`\n\nEnables a marker indicating the current time in `timeGrid`/`resourceTimeGrid` views.\n\n### pointer\n- Type `boolean`\n- Default `false`\n- Requires `Interaction` plugin\n\nEnables mouse cursor pointer in `timeGrid`/`resourceTimeGrid` and other views.\n\n### resizeConstraint\n- Type `function`\n- Default `undefined`\n- Requires `Interaction` plugin\n\nCallback function that limits the date/time range within which the event is allowed to resize.\n\nThe function is triggered during resizing for each cursor movement and takes the same parameters as [eventResize](#eventresize). The function should return `true` if the new size is allowed, and `false` otherwise.\n\n### resources\n- Type `array`\n- Default `[]`\n\nArray of plain objects that will be parsed into [Resource](#resource-object) objects for displaying in the resource view.\n\n### resourceLabelContent\n- Type `string`, `object`or `function`\n- Default `undefined`\n\nDefines the content that is rendered inside an element with a resource title.\n\nThis value can be either a [Content](#content) or a function that returns content:\n\n```js\nfunction (info) {\n    // return Content\n}\n```\n`info` is an object with the following properties:\n<table>\n<tr>\n<td>\n\n`resource`\n</td>\n<td>\n\nThe associated [Resource](#resource-object) object\n</td>\n</tr>\n<tr>\n<td>\n\n`date`\n</td>\n<td>If it is a column that is within a specific date, this will be a Date object</td>\n</tr>\n</table>\n\n### resourceLabelDidMount\n- Type `function`\n- Default `undefined`\n\nCallback function that is triggered right after the element has been added to the DOM. If the resource data changes, this is not called again.\n\n```js\nfunction (info) { }\n```\n`info` is an object with the following properties:\n<table>\n<tr>\n<td>\n\n`el`\n</td>\n<td>The HTML element for the label</td>\n</tr>\n<tr>\n<td>\n\n`resource`\n</td>\n<td>\n\nThe associated [Resource](#resource-object) object\n</td>\n</tr>\n<tr>\n<td>\n\n`date`\n</td>\n<td>If it is a column that is within a specific date, this will be a Date object</td>\n</tr>\n</table>\n\n### scrollTime\n- Type `string`, `integer` or `object`\n- Default `'06:00:00'`\n\nDetermines how far forward the scroll pane is initially scrolled.\n\nThis should be a value that can be parsed into a [Duration](#duration-object) object.\n\n### select\n- Type `function`\n- Default `undefined`\n- Requires `Interaction` plugin\n\nCallback function that is triggered when a date/time selection is made.\n\n```js\nfunction (info) { }\n```\n`info` is an object with the following properties:\n<table>\n<tr>\n<td>\n\n`start`\n</td>\n<td>JavaScript Date object indicating the start of the selection</td>\n</tr>\n<tr>\n<td>\n\n`end`\n</td>\n<td>JavaScript Date object indicating the end of the selection</td>\n</tr>\n<tr>\n<td>\n\n`startStr`\n</td>\n<td>ISO8601 string representation of the start date</td>\n</tr>\n<tr>\n<td>\n\n`endStr`\n</td>\n<td>ISO8601 string representation of the end date</td>\n</tr>\n<tr>\n<td>\n\n`allDay`\n</td>\n<td>\n\n`true` or `false`. Determines if the selection has occurred in the `all-day` slot</td>\n</tr>\n<tr>\n<td>\n\n`jsEvent`\n</td>\n<td>JavaScript native event object with low-level information such as click coordinates</td>\n</tr>\n<tr>\n<td>\n\n`view`\n</td>\n<td>\n\nThe current [View](#view-object) object\n</td>\n</tr>\n<tr>\n<td>\n\n`resource`\n</td>\n<td>\n\nIf the current view is a resource view, the [Resource](#resource-object) object that was selected\n</td>\n</tr>\n</table>\n\n### selectable\n- Type `boolean`\n- Default `false`\n- Requires `Interaction` plugin\n\nDetermines whether the user is allowed to highlight multiple days or time slots by clicking and moving the pointer.\n\n### selectConstraint\n- Type `function`\n- Default `undefined`\n- Requires `Interaction` plugin\n\nCallback function that limits the date/time range that can be selected.\n\nThe function is triggered during selection for each cursor movement and takes the same parameters as [select](#select). The function should return `true` if the selected range is allowed, and `false` otherwise.\n\n### selectBackgroundColor\n- Type `string`\n- Default `undefined`\n- Requires `Interaction` plugin\n\nSets the background color for the event indicating the current selection. See [selectable](#selectable).\n\nYou can use any of the CSS color formats such `'#f00'`, `'#ff0000'`, `'rgb(255,0,0)'`, or `'red'`.\n\n### selectLongPressDelay\n- Type `integer`\n- Default `undefined`\n- Requires `Interaction` plugin\n\nFor touch devices, the amount of time (in milliseconds) the user must hold down a tap before the date becomes selectable.\n\nIf not specified, it falls back to [longPressDelay](#longpressdelay).\n\n### selectMinDistance\n- Type `integer`\n- Default `5`\n- Requires `Interaction` plugin\n\nDefines how many pixels the user’s mouse must move before the selection begins.\n\n### slotDuration\n- Type `string`, `integer` or `object`\n- Default `'00:30:00'`\n> Views override the default value as follows:\n> - resourceTimelineMonth `{days: 1}`\n\nDefines the frequency for displaying time slots.\n\nThis should be a value that can be parsed into a [Duration](#duration-object) object.\n\n### slotEventOverlap\n- Type `boolean`\n- Default `true`\n\nDetermines whether events in the `timeGrid`/`resourceTimeGrid` views should visually overlap when they intersect in time.\n\nIf set to `false`, then intersecting events will be placed next to each other.\n\n### slotHeight\n- Type `integer`\n- Default `24`\n\nDefines the time slot height in pixels in the `timeGrid`/`resourceTimeGrid` views. When changing the setting, you must additionally override the following CSS styles:\n\n```css\n.ec-time-grid .ec-time, .ec-time-grid .ec-line {\n  height: 24px;  /* override this value */\n}\n```\n\n### slotLabelFormat\n- Type `object` or `function`\n- Default `{hour: 'numeric', minute: '2-digit'}`\n\nDefines the text that will be displayed within a time slot.\n\nThis value can be either an object with options for the native JavaScript [Intl.DateTimeFormat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat) object, or a callback function that returns a [Content](#content) with the formatted string:\n\n```js\nfunction (time) {\n  // return Content with the formatted time string\n}\n```\n<table>\n<tr>\n<td>\n\n`time`\n</td>\n<td>JavaScript Date object that needs to be formatted</td>\n</tr>\n</table>\n\n### slotLabelInterval\n- Type `string`, `integer` or `object`\n- Default `undefined`\n\nThe interval at which slot labels should be displayed in `timeGrid` views.\n\nThis should be a value that can be parsed into a [Duration](#duration-object) object.\n\nIf not specified, then if `slotDuration` is less than 1 hour, the interval is considered to be twice as long, i.e. the labels are displayed every other time.\n\nIf the interval is set to zero, then labels are displayed for all slots, including the very first one, which is not normally displayed.\n\n### slotMaxTime\n- Type `string`, `integer` or `object`\n- Default `'24:00:00'`\n\nDefines the last time slot that will be displayed for each day.\n\nThis should be a value that can be parsed into a [Duration](#duration-object) object.\n\n### slotMinTime\n- Type `string`, `integer` or `object`\n- Default `'00:00:00'`\n\nDefines the first time slot that will be displayed for each day.\n\nThis should be a value that can be parsed into a [Duration](#duration-object) object.\n\n### slotWidth\n- Type `integer`\n- Default `72`\n\nDefines the time slot width in pixels in `resourceTimeline` views. When changing the setting, you must additionally override the following CSS styles:\n\n```css\n.ec-timeline .ec-time, .ec-timeline .ec-line {\n  width: 72px;  /* override this value */\n}\n```\n\n### theme\n- Type `object` or `function`\n- Default `{allDay: 'ec-all-day', active: 'ec-active', bgEvent: 'ec-bg-event', bgEvents: 'ec-bg-events', body: 'ec-body', button: 'ec-button', buttonGroup: 'ec-button-group', calendar: 'ec', compact: 'ec-compact', container: 'ec-container', content: 'ec-content', day: 'ec-day', dayHead: 'ec-day-head', dayFoot: 'ec-day-foot', days: 'ec-days', daySide: 'ec-day-side', draggable: 'ec-draggable', dragging: 'ec-dragging', event: 'ec-event', eventBody: 'ec-event-body', eventTag: 'ec-event-tag', eventTime: 'ec-event-time', eventTitle: 'ec-event-title', events: 'ec-events', expander: 'ec-expander', extra: 'ec-extra', ghost: 'ec-ghost', handle: 'ec-handle', header: 'ec-header', hiddenScroll: 'ec-hidden-scroll', highlight: 'ec-highlight', icon: 'ec-icon', line: 'ec-line', lines: 'ec-lines', main: 'ec-main', noEvents: 'ec-no-events', nowIndicator: 'ec-now-indicator', otherMonth: 'ec-other-month', pointer: 'ec-pointer', popup: 'ec-popup', preview: 'ec-preview', resizer: 'ec-resizer', resizingX: 'ec-resizing-x', resizingY: 'ec-resizing-y', resource: 'ec-resource', selecting: 'ec-selecting', sidebar: 'ec-sidebar', sidebarTitle: 'ec-sidebar-title', today: 'ec-today', time: 'ec-time', times: 'ec-times', title: 'ec-title', toolbar: 'ec-toolbar', view: 'ec-timeline ec-resource-week-view', weekdays: ['ec-sun', 'ec-mon', 'ec-tue', 'ec-wed', 'ec-thu', 'ec-fri', 'ec-sat'], withScroll: 'ec-with-scroll', uniform: 'ec-uniform'}`\n> Views override the default value as follows:\n> - dayGridMonth `theme => ({...theme, view: 'ec-day-grid ec-month-view'})`\n> - listDay `theme => ({...theme, view: 'ec-list ec-day-view'})`\n> - listMonth `theme => ({...theme, view: 'ec-list ec-month-view'})`\n> - listWeek `theme => ({...theme, view: 'ec-list ec-week-view'})`\n> - listYear `theme => ({...theme, view: 'ec-list ec-year-view'})`\n> - resourceTimeGridDay `theme => ({...theme, view: 'ec-time-grid ec-resource-day-view'})`\n> - resourceTimeGridWeek `theme => ({...theme, view: 'ec-time-grid ec-resource-week-view'})`\n> - resourceTimelineDay `theme => ({...theme, view: 'ec-timeline ec-resource-day-view'})`\n> - resourceTimelineMonth `theme => ({...theme, view: 'ec-timeline ec-resource-month-view'})`\n> - resourceTimelineWeek `theme => ({...theme, view: 'ec-timeline ec-resource-week-view'})`\n> - timeGridDay `theme => ({...theme, view: 'ec-time-grid ec-day-view'})`\n> - timeGridWeek `theme => ({...theme, view: 'ec-time-grid ec-week-view'})`\n\nDefines the CSS classes that EventCalendar uses to generate HTML markup.\n\nThis value can be either a plain object with all necessary properties, or a callback function that receives default theme object and should return a new one:\n\n```js\nfunction (theme) {\n  // return actual theme object\n}\n```\n<table>\n<tr>\n<td>\n\n`theme`\n</td>\n<td>An object with default CSS classes</td>\n</tr>\n</table>\n\n### titleFormat\n- Type `object` or `function`\n- Default `{year: 'numeric', month: 'short', day: 'numeric'}`\n> Views override the default value as follows:\n> - dayGridMonth `{year: 'numeric', month: 'long'}`\n> - timeGridDay `{year: 'numeric', month: 'long', day: 'numeric'}`\n\nDefines the text that is displayed in the header toolbar’s title.\n\nThis value can be either an object with options for the native JavaScript [Intl.DateTimeFormat](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat) object, or a callback function that returns a [Content](#content) with the formatted string:\n\n```js\nfunction (start, end) {\n  // return Content with the formatted date string\n}\n```\n<table>\n<tr>\n<td>\n\n`start`\n</td>\n<td>JavaScript Date object containing the beginning of the time span to be formatted</td>\n</tr>\n<tr>\n<td>\n\n`end`\n</td>\n<td>JavaScript Date object containing the end of the time span to be formatted</td>\n</tr>\n</table>\n\n### unselect\n- Type `function`\n- Default `undefined`\n- Requires `Interaction` plugin\n\nCallback function that is triggered when the current selection is cleared.\n\nA selection can be cleared for a number of reasons:\n\n- The user clicks away from the current selection (this does not happen when [unselectAuto](#unselectauto) is `false`).\n- The user makes a new selection. The unselect callback will be fired before the new selection occurs.\n- The user navigates forward or backward in the current view, or switches to a new view.\n- The [unselect](#unselect-1) method is called via the API.\n\n```js\nfunction (info) { }\n```\n`info` is an object with the following properties:\n<table>\n<tr>\n<td>\n\n`jsEvent`\n</td>\n<td>\n\nJavaScript native event object with low-level information such as click coordinates.\n\nIf unselect has been triggered via the [unselect](#unselect-1) method, jsEvent will be `undefined`</td>\n</tr>\n<tr>\n<td>\n\n`view`\n</td>\n<td>\n\nThe current [View](#view-object) object\n</td>\n</tr>\n</table>\n\n### unselectAuto\n- Type `boolean`\n- Default `true`\n- Requires `Interaction` plugin\n\nDetermines whether clicking elsewhere on the page will clear the current selection. See [selectable](#selectable).\n\n### unselectCancel\n- Type `string`\n- Default `''`\n- Requires `Interaction` plugin\n\nA CSS selector that specifies elements that will ignore the [unselectAuto](#unselectauto) option.\n\nClicking on elements that match this CSS selector will prevent the current selection from being cleared (because of the [unselectAuto](#unselectauto) option).\n\n### validRange\n- Type `object`\n- Default `undefined`\n\nIf set, the calendar will allow navigation only within the specified date range. Navigation buttons will be grayed out to prevent the user from navigating to an invalid range.\n\nThe range should be an object with the following properties:\n<table>\n<tr>\n<td>\n\n`start`\n</td>\n<td>\n\n`string` or `Date` This should be either an ISO8601 date string like `'2025-12-31'`, or a JavaScript Date object holding the range start date\n</td>\n</tr>\n<tr>\n<td>\n\n`end`\n</td>\n<td>\n\n`string` or `Date` This should be either an ISO8601 date string like `'2025-12-31'`, or a JavaScript Date object holding the range end date\n</td>\n</tr>\n</table>\n\nIt is not necessary to specify both properties. The range may have only `start` and no `end`, or vice versa.\n\n### view\n- Type `string`\n- Default `'resourceTimeGridWeek'`\n\nThe view that is displayed in the calendar. Can be `'dayGridMonth'`, `'listDay'`, `'listWeek'`, `'listMonth'`, `'listYear'`, `'resourceTimeGridDay'`, `'resourceTimeGridWeek'`, `'resourceTimelineDay'`, `'resourceTimelineWeek'`, `'resourceTimelineMonth'`, `'timeGridDay'` or `'timeGridWeek'`.\n\n### viewDidMount\n- Type `function`\n- Default `undefined`\n\nCallback function that is triggered right after the view has been added to the DOM.\n\n```js\nfunction (info) { }\n```\n`info` is an object with the following properties:\n<table>\n<tr>\n<td>\n\n`view`\n</td>\n<td>\n\nThe mounted [View](#view-object) object\n</td>\n</tr>\n</table>\n\n### views\n- Type `object`\n- Default `{}`\n\nYou can specify options that apply only to specific views. To do so provide separate options objects within the `views` option, keyed by the name of the view.\n\n### weekNumberContent\n- Type `Content` or `function`\n- Default `undefined`\n\nDefines the text that is displayed in place of the default week number (such as `W01`).\n\nThis value can be either a [Content](#content) or a function that returns content:\n\n```js\nfunction (arg) {\n  // return Content\n}\n```\n`arg` is an object with the following properties:\n<table>\n<tr>\n<td>\n\n`date`\n</td>\n<td>JavaScript Date object containing the day within which the week number will be displayed</td>\n</tr>\n<tr>\n<td>\n\n`week`\n</td>\n<td>Calculated week number</td>\n</tr>\n</table>\n\n### weekNumbers\n- Type `boolean`\n- Default `false`\n\nDetermines whether week numbers should be displayed in the `dayGrid` view.\n\nThe numbering of weeks depends on the value of [firstDay](#firstday). When `firstDay` is `0`, the [Western](https://en.wikipedia.org/wiki/Week#Other_week_numbering_systems) system is used. Any other value uses the [ISO](https://en.wikipedia.org/wiki/Week#The_ISO_week_date_system) system.\n\n## Methods\nMethods allow you to manipulate EventCalendar after initialization. They are accessible from the calendar instance.\n\nIn Svelte, methods are available from a component instance:\n```html\n<script>\n    import {Calendar, TimeGrid} from '@event-calendar/core';\n\n    let ec = $state();\n    let options = $state({\n        view: 'timeGridWeek',\n        eventSources: [{events: function() {\n            console.log('fetching...');\n            return [];\n        }}]\n    });\n\n    function invokeMethod() {\n        ec.refetchEvents();\n    }\n</script>\n\n<button onclick={invokeMethod}>Refetch events</button>\n<Calendar bind:this={ec} plugins={[TimeGrid]} {options} />\n```\n\n### getOption( name )\n- Parameters\n  - `name` `string` The option name\n- Return value `mixed` or `undefined`\n\nThis method allows you to get the current value of any calendar option.\n\n```js\n// E.g. Get current date\nlet date = ec.getOption('date');\n```\n\n### setOption( name, value )\n- Parameters\n  - `name` `string` The option name\n  - `value` `mixed` The new option value\n- Return value `EventCalendar` The calendar instance for chaining\n\nThis method allows you to set new value to any calendar option.\n\n```js\n// E.g. Change the current date\nec.setOption('date', new Date());\n```\n\n### addEvent( event )\n- Parameters\n  - `event` `object` A plain object that will be parsed into an [Event](#event-object) object\n- Return value [Event](#event-object) object or `null`\n\nAdds a new event to the calendar.\n\n### getEventById( id )\n- Parameters\n  - `id` `string|integer` The ID of the event\n- Return value [Event](#event-object) object or `null`\n\nReturns a single event with the matching `id`.\n\n### getEvents()\n- Return value `Event[]` Array of [Event](#event-object) objects\n\nReturns an array of events that the calendar has in memory.\n\n### removeEventById( id )\n- Parameters\n  - `id` `string|integer` The ID of the event\n- Return value `EventCalendar` The calendar instance for chaining\n\nRemoves a single event with the matching `id`.\n\n### updateEvent( event )\n- Parameters\n  - `event` `object` A plain object or [Event](#event-object) object\n- Return value `EventCalendar` The calendar instance for chaining\n\nUpdates a single event with the matching `event`.`id`.\n\n### refetchEvents()\n- Return value `EventCalendar` The calendar instance for chaining\n\nRefetches events from all sources.\n\n### dateFromPoint( x, y )\n- Return value `object` or `null`\n\nReturns an `info` object with data as if the [dateClick](#dateclick) event had fired for that point.\n\n`info` object contains the following properties:\n<table>\n<tr>\n<td>\n\n`date`\n</td>\n<td>JavaScript Date object for the date and time</td>\n</tr>\n<tr>\n<td>\n\n`allDay`\n</td>\n<td>\n\n`true` or `false`. Determines if the point is in the `all-day` slot. Month and list views are also considered as all-day slots</td>\n</tr>\n<tr>\n<td>\n\n`dayEl`\n</td>\n<td>HTML element that represents the whole-day that contains the point</td>\n</tr>\n<tr>\n<td>\n\n`resource`\n</td>\n<td>\n\nIf the current view is a resource view, the [Resource](#resource-object) object that owns this date\n</td>\n</tr>\n</table>\n\nUsing this method, you can, for example, find out on which day a click occurred inside a multi-day event. To do this, inside [eventClick](#eventclick), pass the `jsEvent.clientX` and `jsEvent.clientY` coordinates to `dateFromPoint` and get the desired date.\n\n### getView()\n- Return value `View`\n\nReturns the [View](#view-object) object for the current view.\n\n### next()\n- Return value `EventCalendar` The calendar instance for chaining\n\nMoves the current calendar date forward by 1 day/week/month (depending on the current view).\n\n### prev()\n- Return value `EventCalendar` The calendar instance for chaining\n\nMoves the current calendar date backward by 1 day/week/month (depending on the current view).\n\n### unselect()\n- Return value `EventCalendar` The calendar instance for chaining\n\nClears the current selection. See [selectable](#selectable).\n\n## Content\nThe content value can be presented in the following forms:\n\n* a string containing text `'some text'`\n* an object containing the HTML string `{html: '<p>some HTML</p>'}`\n* an object containing an array of DOM nodes `{domNodes: [node1, node2, ...]}`\n\n## Event object\nThis is a JavaScript object that EventCalendar uses to store information about a calendar event.\n\nHere are all properties that exist in Event object:\n<table>\n<tr>\n<td>\n\n`id`\n</td>\n<td>A unique string identifier of the event</td>\n</tr>\n<tr>\n<td>\n\n`resourceIds`\n</td>\n<td>An array of resource IDs that the event is associated with</td>\n</tr>\n<tr>\n<td>\n\n`allDay`\n</td>\n<td>\n\n`true` or `false`. Determines if the event is shown in the `all-day` slot</td>\n</tr>\n<tr>\n<td>\n\n`start`\n</td>\n<td>JavaScript Date object holding the event’s start time</td>\n</tr>\n<tr>\n<td>\n\n`end`\n</td>\n<td>JavaScript Date object holding the event’s end time</td>\n</tr>\n<tr>\n<td>\n\n`title`\n</td>\n<td>\n\n`Content` The text appearing on the event. See [Content](#content)</td>\n</tr>\n<tr>\n<td>\n\n`editable`\n</td>\n<td>\n\n`true`, `false` or `undefined`. The value overriding the [editable](#editable) setting for this specific event\n</td>\n</tr>\n<tr>\n<td>\n\n`startEditable`\n</td>\n<td>\n\n`true`, `false` or `undefined`. The value overriding the [eventStartEditable](#eventstarteditable) setting for this specific event\n</td>\n</tr>\n<tr>\n<td>\n\n`durationEditable`\n</td>\n<td>\n\n`true`, `false` or `undefined`. The value overriding the [eventDurationEditable](#eventdurationeditable) setting for this specific event\n</td>\n</tr>\n<tr>\n<td>\n\n`display`\n</td>\n<td>\n\nThe rendering type of the event. Can be `'auto'` or `'background'`\n\nIn addition, in your callback functions, you may get the `'ghost'`, `'preview'` and `'pointer'` for this property, which are internal values and are used, for example, to display events during drag-and-drop operations\n</td>\n</tr>\n<tr>\n<td>\n\n`backgroundColor`\n</td>\n<td>\n\nThe [eventBackgroundColor](#eventbackgroundcolor) override for this specific event\n</td>\n</tr>\n<tr>\n<td>\n\n`textColor`\n</td>\n<td>\n\nThe [eventTextColor](#eventtextcolor) override for this specific event\n</td>\n</tr>\n<tr>\n<td>\n\n`classNames`\n</td>\n<td>\n\nAn array of additional CSS classes for this specific event\n</td>\n</tr>\n<tr>\n<td>\n\n`styles`\n</td>\n<td>\n\nAn array of additional inline styling declarations for this specific event\n</td>\n</tr>\n<tr>\n<td>\n\n`extendedProps`\n</td>\n<td>\n\nA plain object holding miscellaneous properties specified during parsing in the explicitly given `extendedProps` field\n</td>\n</tr>\n</table>\n\n### Parsing event from a plain object\nWhen EventCalendar receives an array of plain event’s objects either from the `events` option or as a result of an HTTP request to a URL of an event source, it parses the input objects into proper Event objects.\n\nHere are all admissible fields for the event’s input object:\n<table>\n<tr>\n<td>\n\n`id`\n</td>\n<td>\n\n`string` or `integer` A unique identifier of the event. Default `auto-generated value`\n</td>\n</tr>\n<tr>\n<td>\n\n`allDay`\n</td>\n<td>\n\n`boolean` Determines if the event is shown in the all-day slot. Defaults to `true` if `start` and `end` are both passed without a time part, `false` otherwise\n</td>\n</tr>\n<tr>\n<td>\n\n`start`\n</td>\n<td>\n\n`string` or `Date` This should be either an ISO8601 datetime string like `'2022-12-31 09:00:00'`, or a JavaScript Date object holding the event’s start time\n</td>\n</tr>\n<tr>\n<td>\n\n`end`\n</td>\n<td>\n\n`string` or `Date` This should be either an ISO8601 datetime string like `'2022-12-31 13:00:00'`, or a JavaScript Date object holding the event’s end time\n</td>\n</tr>\n<tr>\n<td>\n\n`title`\n</td>\n<td>\n\n`Content` The text that will appear on the event. See [Content](#content). Default `''`\n</td>\n</tr>\n<tr>\n<td>\n\n`editable`\n</td>\n<td>\n\n`boolean` Overri",
	"legacy_svelte": false,
	"downloads_history": [
		[3589, 1560],
		[3596, 1782],
		[3603, 1565],
		[3610, 1467],
		[3617, 1468],
		[3624, 1756],
		[3631, 1733],
		[3638, 1998],
		[3645, 1007],
		[3652, 1579],
		[3659, 2355],
		[3666, 2107],
		[3673, 2138],
		[3680, 2520],
		[3687, 1854],
		[3694, 2209],
		[3701, 2512],
		[3708, 2068],
		[3715, 1963],
		[3722, 2339],
		[3729, 3626],
		[3736, 2761],
		[3743, 2719],
		[3750, 2595],
		[3757, 2768],
		[3764, 2629],
		[3771, 3582],
		[3778, 2910],
		[3785, 2979],
		[3792, 3380],
		[3799, 2691],
		[3806, 2624],
		[3813, 2635],
		[3820, 2497],
		[3827, 2536],
		[3834, 2285],
		[3841, 2932],
		[3848, 4861],
		[3855, 3414],
		[3862, 3545],
		[3869, 3325],
		[3876, 3266],
		[3883, 5599],
		[3890, 4253],
		[3897, 4420],
		[3904, 5025],
		[3911, 4360],
		[3918, 4878],
		[3925, 4315],
		[3932, 5325],
		[3939, 3803],
		[3946, 3864],
		[3953, 3357],
		[3960, 4001],
		[3967, 3462],
		[3974, 3847],
		[3981, 3572],
		[3988, 3773],
		[3995, 5223],
		[4002, 3882],
		[4009, 2232],
		[4016, 2441],
		[4023, 5704],
		[4030, 3230],
		[4037, 3367],
		[4044, 4239],
		[4051, 5801],
		[4058, 7495],
		[4065, 4214],
		[4072, 4897],
		[4079, 4965],
		[4086, 4886],
		[4093, 5080],
		[4100, 6079],
		[4107, 5886],
		[4114, 5669],
		[4121, 5513],
		[4128, 10186]
	]
}
