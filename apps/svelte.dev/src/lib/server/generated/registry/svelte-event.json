{
	"name": "svelte-event",
	"description": "Add modifiers to event handlers and manage event listeners in Svelte.",
	"repo_url": "https://github.com/Not-Jayden/svelte-event",
	"authors": ["notjayden"],
	"homepage": "https://github.com/Not-Jayden/svelte-event#readme",
	"downloads": 8,
	"updated": "2023-12-09T17:22:43.401Z",
	"tags": ["miscellaneous"],
	"github_stars": 7,
	"typescript": true,
	"version": "0.0.13",
	"svelte_range": "5.0.0-next.1",
	"last_rune_check_version": "0.0.13",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-event",
				"version": "0.0.13",
				"size": 40425
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# ⚡️ svelte-event\n\nsvelte-event provides a set of wrapper functions for adding modifiers to event handlers and a versatile `event` action for comprehensive event listener management in Svelte.\n\nThis package is primarily intended to address [the upcoming changes to events in Svelte 5](https://svelte-5-preview.vercel.app/docs/event-handlers), though is entirely compatible with Svelte 3 and 4 as well.\n\n> 🚧 NOTE: This plugin is still in early development, use at your own risk.\n\n## 🚀 Installation\n\n```bash\n# Using npm\nnpm install svelte-event\n\n# Using yarn\nyarn add svelte-event\n\n# Using pnpm\npnpm add svelte-event\n\n# Using bun\nbun add svelte-event\n```\n\n## 💡 Usage\n\n### Modifier Wrapper Functions\n`svelte-event` provides several wrapper functions for modifying event behavior:\n\n- `preventDefault`\n- `stopPropagation`\n- `stopImmediatePropagation`\n- `self`\n- `trusted`\n- `once`\n\nNote: `passive` requires use of the `event` action, as it requires access to the event listener options which is not possible using wrapper functions.\n\n#### Using Wrapper Functions\nApply modifiers directly to event handlers:\n\n```javascript\n<script>\n  import { once, preventDefault } from 'svelte-event';\n\n  function handleClick(event) {\n    // Click event logic\n  }\n</script>\n\n<div onclick={once(preventDefault(handleClick))} />\n```\n\n#### Combining Modifiers with `withModifiers`\nUse `withModifiers` to apply multiple modifiers using a configuration object:\n\n```javascript\n<script>\n  import { withModifiers } from 'svelte-event';\n\n  function handleClick(event) {\n    // Click event logic\n  }\n\n  const modifiedHandler = withModifiers(handleClick, {\n    preventDefault: true,\n    stopPropagation: true\n  });\n</script>\n\n<div onclick={modifiedHandler} />\n```\n\n#### Key Modifier\nThe `key` modifier allows you to specify a key that must be pressed for the event handler to execute:\n\n```javascript\n<script>\n  import { key } from 'svelte-event/key';\n\n  function handleKeydown(event) {\n    // Keydown event logic\n  }\n</script>\n\n<div onkeydown={key(handleKeydown, 'Enter')} />\n```\n\nYou can also specify the set of modifier keys (`altKey`, `ctrlKey`, `metaKey`, `shiftKey`) that must be pressed for the event handler to execute:\n\n```javascript\n<script>\n  import { key } from 'svelte-event/key';\n\n  function handleKeydown(event) {\n    // Keydown event logic\n  }\n</script>\n\n<div onkeydown={key(handleKeydown, 'Enter', { ctrlKey: true, exact: true })} />\n```\n\nIf the `exact` modifier is set to `true`, then the event handler will only execute if the specified key is pressed and no other modifier keys are pressed.\n\n\n#### Mouse Modifiers\nThe package also provides `left`, `right`, and `middle` modifiers for mouse events, which only execute the event handler if the left, right, or middle mouse button is pressed, respectively:\n\n```javascript\n<script>\n  import { left, right, middle } from 'svelte-event/mouse';\n\n  function handleClick(event) {\n    // Click event logic\n  }\n</script>\n\n<div onclick={left(handleClick)} />\n```\nYou can also specify the set of modifier keys (`altKey`, `ctrlKey`, `metaKey`, `shiftKey`) that must be pressed for the event handler to execute, as well as the `exact` modifier in the same way as the `key` modifier.\n\n\n#### Compose Function\nThe `compose` function allows you to combine multiple wrapper functions into a single function:\n\n```javascript\nimport { compose } from 'svelte-event';\n\nconst handler = compose(\n  handler1,\n  handler2,\n);\n\n// Use the composed handler in your Svelte component\n<div onclick={handler} />\n```\n\n### Event Action\nThe `event` action in `svelte-event` allows you to attach event listeners to DOM elements, enabling detailed control through various modifiers.\n\n#### Basic Example\n```svelte\n<script>\n  import { event } from 'svelte-event';\n\n  function handleClick() {\n    // Click event logic\n  }\n</script>\n\n<div use:event={{ click: handleClick }} />\n```\n\n#### Advanced Configuration\nYou can provide detailed configuration for event listeners, including multiple handlers, various modifiers, and specific event phases.\n\n- **Multiple Handlers:**\n  Attach several handlers to the same event:\n  ```svelte\n  <div use:event={{ click: { handlers: [handleClick1, handleClick2] } }} />\n  ```\n\n- **Event Modifiers:**\n  Customize event behavior with modifiers such as `preventDefault`, `stopPropagation`, `passive`, and more:\n  ```svelte\n  <div use:event={{ click: { handler: handleClick, modifiers: { preventDefault: true } } }} />\n  ```\n\n- **Performance Optimization with `passive`:**\n  Improve scrolling performance for touch and wheel events:\n  ```svelte\n  <div use:event={{ wheel: { modifiers: { passive: true } } }} />\n  ```\n\n- **Capture Phase with `capture`:**\n  Execute event handler during the capture phase:\n  ```svelte\n  <div use:event={{ click: { modifiers: { capture: true } } }} />\n  ```\n\n## 📜 License\n`svelte-event` is open source, licensed under the MIT License. For more information, see the [LICENSE](LICENSE) file.",
	"legacy_svelte": false,
	"downloads_history": [
		[3610, 599],
		[3617, 220],
		[3624, 215],
		[3631, 40],
		[3638, 1],
		[3645, 23],
		[3652, 23],
		[3666, 36],
		[3673, 25],
		[3687, 5],
		[3694, 17],
		[3701, 2],
		[3715, 5],
		[3722, 17],
		[3729, 3],
		[3736, 5],
		[3743, 4],
		[3750, 1],
		[3757, 4],
		[3771, 9],
		[3778, 8],
		[3792, 2],
		[3799, 1],
		[3806, 1],
		[3820, 4],
		[3827, 1],
		[3834, 71],
		[3848, 3],
		[3855, 2],
		[3862, 4],
		[3869, 1],
		[3876, 11],
		[3890, 16],
		[3904, 2],
		[3918, 2],
		[3925, 2],
		[3932, 2],
		[3939, 1],
		[3946, 1],
		[3953, 1],
		[3960, 1],
		[3967, 3],
		[3974, 6],
		[3981, 1],
		[3988, 1],
		[4016, 16],
		[4023, 1],
		[4037, 20],
		[4044, 11],
		[4051, 8],
		[4065, 1],
		[4079, 1],
		[4093, 1],
		[4100, 44],
		[4107, 3],
		[4114, 8],
		[4121, 21],
		[4128, 7]
	],
	"esm": true,
	"cjs": false
}
