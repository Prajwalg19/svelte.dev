{
	"name": "prismic-svelte",
	"description": "Helpers for integrating Prismic CMS with Svelte projects.",
	"repo_url": "",
	"authors": ["samlfair"],
	"downloads": 9,
	"updated": "2021-08-23T16:52:40.307Z",
	"tags": ["content"],
	"typescript": false,
	"version": "1.0.13",
	"svelte_range": "^3.34.0",
	"kit_range": "next",
	"last_rune_check_version": "1.0.13",
	"github_stars": 0,
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "prismic-svelte",
				"version": "1.0.13",
				"size": 8754
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# `prismic-svelte`\n\n**WARNING: This project is in early development. See issues and planning on [the GitHub repo](https://github.com/samlfair/prismic-svelte).**\n\nA set of helpers for developing Prismic projects with Svelte.\n\n## To do\n\n- [ ] Add HTML Serializer to config (and asHTML)\n- [ ] Add Slices to config\n- [x] Create a SliceZone component\n- [x] Make SliceZone component work\n- [x] Handle the API options\n- [ ] Add TypeScript and re-enable `config.kit.emitTypes`\n- [ ] Configure previews with client v6\n\nDo we want to add an Image component?\n\n## Installation\n\nTo add `prismic-svelte`, first install:\n\n```bash\nnpm i prismic-svelte@alpha\n```\n\nAt the root of your project, create a file called `prismic.config.js`. Paste in the following code, and update the values:\n\n```js\nconst prismicConfig = {\n  // Fill in your repo name\n  repoName: 'sam-onboarding-nuxt-blog',\n\n  // Define a route for each Custom Type\n  routes: [\n    {\n      type: 'page',\n      path: '/:uid',\n    },\n    {\n      type: 'post',\n      path: '/blog/:uid',\n    },\n  ],\n\n  // Add an access token (only if your repo is private)\n  accessToken: null,\n\n  // Add any API options\n  options: {},\n}\n\nexport default prismicConfig\n```\n\nIn `svelte.config.js`, import the plugin and add it to Svelte's preprocessor. Update the repo name.\n\n```js\nimport { usePrismic } from 'prismic-svelte'\nimport { repoName } from './prismic.config.js'\n\n/** @type {import('@sveltejs/kit').Config} */\nconst config = {\n  kit: {\n    // hydrate the <div id=\"svelte\"> element in src/app.html\n    target: '#svelte',\n  },\n  preprocess: [usePrismic({ repoName })],\n}\n```\n\nFill in the config options. Only `repoName` is required.\n\n`repoName`: The name of your [repository](https://prismic.io/docs/core-concepts/what-is-a-repo) in Prismic (required).\n\n`routes`: A collection of routes for Prismic's [Route Resolver](https://prismic.io/docs/core-concepts/link-resolver-route-resolver).\n\n`accessToken`: An access token for the Prismic API; required only when your repo is private.\n\n`options`: Options for your Prismic API queries.\n\nTo configure previews, create the file `/src/routes/preview.js` and paste in the following code:\n\n```js\nimport { createPreview } from 'prismic-svelte'\nimport prismicConfig from './../../prismic.config.js'\n\nexport async function get({ query, headers }) {\n  return await createPreview(query, headers, prismicConfig.repoName)\n}\n```\n\n## Usage\n\nThe plugin injects a `SliceZone` component and `prismic` object into components in the `src` folder as needed.\n\nThe `prismic` object includes a `client` method, which you can use to query the Prismic API. The `client` is already initialized with the `repoName` and options that you specified in `svelte.config.js`. You can also pass the `fetch` variable (available globally in Svelte, and provided as an argument in SvelteKit's load function) and the `session` variable. Passing the `session` variable is necessary for previews to work.\n\nIn a standard Svelte component:\n\n```html\n<!-- Standard .svelte component -->\n\n<script>\n  $: clientData = null\n\n  const getData = async () => {\n    clientData = await prismic.client(fetch).getAll()\n  }\n\n  getData()\n</script>\n```\n\nIn a SvelteKit project:\n\n```html\n<!-- In a SvelteKit project -->\n\n<script context=\"module\">\n  export async function load({ fetch, session }) {\n    const allDocs = await prismic.client(fetch, session).getAll()\n    return { props: { allDocs } }\n  }\n</script>\n\n<script>\n  export let allDocs\n</script>\n```\n\nThe SliceZone accepts a `slices` prop and a `body` prop. Slices is an object of Slice components. `body` is an array of Slice contents.\n\n```svelte\n<SliceZone slices={slices} body={doc.data.body} />\n```\n\nThe plugin exports the following properties and methods:\n\n- `asText()`\n- `asHTML()`\n- `asLink()`\n- `documentAsLink()`\n- `asDate()`\n- `setClientOptions()`\n- `initClient()`\n- `usePrismic()`\n\nSee prismic.io/docs for information on how to use these methods.\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3596, 15],
		[3603, 15],
		[3617, 5],
		[3624, 1],
		[3652, 1],
		[3666, 16],
		[3673, 1],
		[3687, 1],
		[3701, 2],
		[3708, 14],
		[3729, 1],
		[3743, 1],
		[3750, 15],
		[3771, 14],
		[3778, 2],
		[3785, 1],
		[3792, 1],
		[3799, 2],
		[3806, 5],
		[3827, 1],
		[3834, 2],
		[3841, 2],
		[3848, 2],
		[3855, 70],
		[3876, 2],
		[3883, 2],
		[3890, 18],
		[3897, 1],
		[3904, 4],
		[3911, 14],
		[3918, 1],
		[3925, 1],
		[3939, 1],
		[3946, 2],
		[3953, 2],
		[3960, 1],
		[3967, 1],
		[3974, 1],
		[3988, 14],
		[4023, 1],
		[4030, 14],
		[4037, 18],
		[4044, 5],
		[4051, 1],
		[4065, 2],
		[4072, 1],
		[4093, 9],
		[4100, 22],
		[4107, 8],
		[4114, 9],
		[4121, 33],
		[4128, 6]
	],
	"esm": true,
	"cjs": false
}
