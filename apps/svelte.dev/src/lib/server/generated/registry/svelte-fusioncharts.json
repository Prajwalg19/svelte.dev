{
	"name": "svelte-fusioncharts",
	"description": "Creates charts with FusionCharts JavaScript charting library.",
	"repo_url": "https://github.com/priyanjitdey94/svelte-fusioncharts",
	"authors": ["meherhowji"],
	"homepage": "https://github.com/priyanjitdey94/svelte-fusioncharts#readme",
	"downloads": 80,
	"updated": "2024-06-23T09:47:07.097Z",
	"tags": ["ui"],
	"github_stars": 129,
	"typescript": false,
	"version": "1.1.0",
	"svelte_range": "^4.0.0",
	"last_rune_check_version": "1.1.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-fusioncharts",
				"version": "1.1.0",
				"size": 40556
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# Svelte-FusionCharts\n\nA simple and lightweight official Svelte component for FusionCharts JavaScript charting library. `svelte-fusioncharts` enables you to add JavaScript charts in your Svelte application or project without any hassle.\n\n## [Demo](https://fusioncharts.github.io/svelte-fusioncharts/)\n\n- Github Repo: [https://github.com/fusioncharts/svelte-fusioncharts](https://github.com/fusioncharts/svelte-fusioncharts)\n- Support: [https://www.fusioncharts.com/contact-support](https://www.fusioncharts.com/contact-support)\n- FusionCharts\n  - Official Website: [https://www.fusioncharts.com/](https://www.fusioncharts.com/)\n  - Official NPM Package: [https://www.npmjs.com/package/fusioncharts](https://www.npmjs.com/package/fusioncharts)\n- Issues: [https://github.com/fusioncharts/svelte-fusioncharts/issues](https://github.com/fusioncharts/svelte-fusioncharts/issues)\n\n---\n\n## Table of Contents\n\n- [Getting Started](#getting-started)\n  - [Requirements](#requirements)\n  - [Installation](#installation)\n  - [Usage](#usage)\n  - [Working with chart API](#working-with-apis)\n  - [Working with events](#working-with-events)\n- [Quick Start](#quick-start)\n- [Going Beyond Charts](#going-beyond-charts)\n- [Usage and Integration of FusionTime](#usage-and-integration-of-fusiontime)\n- [For Contributors](#for-contributors)\n- [Licensing](#licensing)\n\n## Getting Started\n\n### Requirements\n\n- **Node.js**, **NPM/Yarn** installed globally in your OS.\n- **FusionCharts** and **Svelte** installed in your project, as detailed below:\n\n### Installation\n\nThere are multiple ways to install `svelte-fusioncharts` component.\n\n**Install from NPM**\n\n```\nnpm install --save svelte-fusioncharts\n```\n\nSee [npm documentation](https://docs.npmjs.com/) to know more about npm usage.\n\n### Usage\n\nImport `svelte-fusioncharts` and FusionCharts in your app:\n\n```\n<script>\n  import FusionCharts from 'fusioncharts/core';\n  import Column2d from 'fusioncharts/viz/column2d';\n  import SvelteFC, { fcRoot } from 'svelte-fusioncharts';\n\n  fcRoot(FusionCharts, Column2d);\n</script>\n```\n\nNote: This way of import will not work in IE11 and below.\n\n## Quick Start\n\nHere is a basic sample that shows how to create a chart using `svelte-fusioncharts`:\n\n```javascript\n<script>\n  import FusionCharts from 'fusioncharts';\n  import Charts from 'fusioncharts/fusioncharts.charts';\n  import FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n  import SvelteFC, { fcRoot } from 'svelte-fusioncharts';\n\n  // Always set FusionCharts as the first parameter\n  fcRoot(FusionCharts, Charts, FusionTheme);\n\n  const dataSource = {\n    chart: {\n      caption: 'Countries With Most Oil Reserves [2017-18]',\n      subCaption: 'In MMbbl = One Million barrels',\n      xAxisName: 'Country',\n      yAxisName: 'Reserves (MMbbl)',\n      numberSuffix: 'K',\n      theme: 'fusion'\n    },\n    data: [\n      { label: 'Venezuela', value: '290' },\n      { label: 'Saudi', value: '260' },\n      { label: 'Canada', value: '180' },\n      { label: 'Iran', value: '140' },\n      { label: 'Russia', value: '115' },\n      { label: 'UAE', value: '100' },\n      { label: 'US', value: '30' },\n      { label: 'China', value: '30' }\n    ]\n  };\n\n  const chartConfigs = {\n    type: 'column2d',\n    width: 600,\n    height: 400,\n    dataFormat: 'json',\n    dataSource: dataSource\n  };\n</script>\n\n<SvelteFC {...chartConfigs} />\n```\n\n## Render FusionMaps\n\nTo render a map, import the FusionMaps module along with the map definition.\n\n```javascript\n<script>\n  import FusionCharts from 'fusioncharts';\n  import Maps from 'fusioncharts/fusioncharts.maps';\n  import World from 'fusioncharts/maps/fusioncharts.world';\n  import FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n  import SvelteFC, { fcRoot } from 'svelte-fusioncharts';\n\n  // Always set FusionCharts as the first parameter\n  fcRoot(FusionCharts, Maps, World, FusionTheme);\n\n  const dataSource = {\n    chart: {\n      caption: 'Average Annual Population Growth',\n      subcaption: ' 1955-2015',\n      numbersuffix: '%',\n      includevalueinlabels: '1',\n      labelsepchar: ': ',\n      entityFillHoverColor: '#FFF9C4',\n      theme: 'fusion'\n    },\n    colorrange: {\n      minvalue: '0',\n      code: '#FFE0B2',\n      gradient: '1',\n      color: [\n        { minvalue: '0.5', maxvalue: '1.0', color: '#FFD74D' },\n        { minvalue: '1.0', maxvalue: '2.0', color: '#FB8C00' },\n        { minvalue: '2.0', maxvalue: '3.0', color: '#E65100' }\n      ]\n    },\n    data: [\n      { id: 'NA', value: '.82', showLabel: '1' },\n      { id: 'SA', value: '2.04', showLabel: '1' },\n      { id: 'AS', value: '1.78', showLabel: '1' },\n      { id: 'EU', value: '.40', showLabel: '1' },\n      { id: 'AF', value: '2.58', showLabel: '1' },\n      { id: 'AU', value: '1.30', showLabel: '1' }\n    ]\n  };\n\n  const chartConfigs = {\n    type: 'world',\n    width: 600,\n    height: 400,\n    dataFormat: 'json',\n    dataSource: dataSource\n  };\n</script>\n\n<SvelteFC {...chartConfigs} />\n```\n\n## Working with Events\n\nTo attach event callbacks to a FusionCharts component, follow the sample below.\n\n```javascript\n<script>\n  import FusionCharts from 'fusioncharts';\n  import Charts from 'fusioncharts/fusioncharts.charts';\n  import FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n  import SvelteFC, { fcRoot } from 'svelte-fusioncharts';\n\n  // Always set FusionCharts as the first parameter\n  fcRoot(FusionCharts, Charts, FusionTheme);\n\n  const dataSource = {\n      chart: {\n        caption: 'Countries With Most Oil Reserves [2017-18]',\n        subCaption: 'In MMbbl = One Million barrels',\n        xAxisName: 'Country',\n        yAxisName: 'Reserves (MMbbl)',\n        numberSuffix: 'K',\n        theme: 'fusion'\n      },\n      data: [\n        { label: 'Venezuela', value: '290' },\n        { label: 'Saudi', value: '260' },\n        { label: 'Canada', value: '180' },\n        { label: 'Iran', value: '140' },\n        { label: 'Russia', value: '115' },\n        { label: 'UAE', value: '100' },\n        { label: 'US', value: '30' },\n        { label: 'China', value: '30' }\n      ]\n    },\n    dataplotClickHandler = event => {\n      // code for dataplotClick event handler\n    },\n    renderCompleteHandler = event => {\n      // code for renderComplete event handler\n    };\n\n  const chartConfigs = {\n    type: 'column2d',\n    width: 600,\n    height: 400,\n    dataFormat: 'json',\n    dataSource: dataSource\n  };\n</script>\n\n<SvelteFC\n  {...chartConfigs}\n  on:dataplotClick={dataplotClickHandler}\n  on:renderComplete={renderCompleteHandler}\n/>\n```\n\n## Working with APIs\n\nTo call APIs we will need the chart object. To get the chart object for an SvelteFC component, bind a variable with the <code>chart</code> property of SvelteFC component.\n\n```javascript\n<script>\n  import FusionCharts from 'fusioncharts';\n  import Charts from 'fusioncharts/fusioncharts.charts';\n\n  import FusionTheme from 'fusioncharts/themes/fusioncharts.theme.fusion';\n  import SvelteFC, { fcRoot } from 'svelte-fusioncharts';\n\n  fcRoot(FusionCharts, Charts, FusionTheme);\n\n  let chartObj,\n    dataSource = {\n      \"chart\": {\n        \"caption\": \"Market Share of Web Servers\",\n        \"plottooltext\": \"<b>$percentValue</b> of web servers run on $label servers\",\n        \"showLegend\": \"1\",\n        \"showPercentValues\": \"1\",\n        \"legendPosition\": \"bottom\",\n        \"useDataPlotColorForLabels\": \"1\",\n        \"enablemultislicing\": \"0\",\n        \"showlegend\": \"0\",\n        \"theme\": \"fusion\",\n      },\n      \"data\": [{\n        \"label\": \"Apache\",\n        \"value\": \"32647479\"\n      }, {\n        \"label\": \"Microsoft\",\n        \"value\": \"22100932\"\n      }, {\n        \"label\": \"Zeus\",\n        \"value\": \"14376\"\n      }, {\n        \"label\": \"Other\",\n        \"value\": \"18674221\"\n      }]\n    },\n    chartConfig = {\n      type: 'pie2d',\n      width: '600',\n      height: '400',\n      renderAt: 'chart-container',\n      dataSource\n    };\n\n  const sliceDataPlot = (index, sliceOut = true) => {\n    chartObj.slicePlotItem(index, sliceOut)\n  };\n</script>\n\n<div id=\"chart-container\" >\n  <SvelteFC {...chartConfig} bind:chart={chartObj} />\n</div>\n\n<button on:click={() => {\n  sliceDataPlot(1);\n}}>\n  Slice out\n</button>\n<button on:click={() => {\n  sliceDataPlot(1, false);\n}} >\n  Slice in\n</button>\n```\n\nlinks to help you get started:\n\n- [Live samples with code](https://fusioncharts.github.io/svelte-fusioncharts/)\n- [Documentation](https://www.fusioncharts.com/dev/getting-started/svelte/your-first-chart-using-svelte)\n- [Use Chart API events & methods in Svelte](https://www.fusioncharts.com/dev/getting-started/svelte/configure-your-chart-using-svelte)\n- [Chart gallery](https://www.fusioncharts.com/explore/chart-gallery)\n- [FusionCharts API](https://www.fusioncharts.com/dev/api/fusioncharts)\n\n## Usage and integration of FusionTime\n\nFrom `fusioncharts@3.13.3-sr.1`, You can visualize timeseries data.\n\nLearn more about FusionTime [here](https://www.fusioncharts.com/fusiontime).\n\n### Consider the example below for integration of FusionTime\n\n```javascript\n<script>\n  import FusionCharts from 'fusioncharts';\n  import Timeseries from 'fusioncharts/fusioncharts.timeseries';\n  import SvelteFC, { fcRoot } from 'svelte-fusioncharts';\n\n  fcRoot(FusionCharts, Timeseries);\n\n  let promise,\n    jsonify = res => res.json(),\n    dataFetch = fetch(\n      'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/data/line-chart-with-time-axis-data.json'\n    ).then(jsonify),\n    schemaFetch = fetch(\n      'https://s3.eu-central-1.amazonaws.com/fusion.store/ft/schema/line-chart-with-time-axis-schema.json'\n    ).then(jsonify);\n\n  promise = Promise.all([dataFetch, schemaFetch]);\n\n  const getChartConfig = ([data, schema]) => {\n    const fusionDataStore = new FusionCharts.DataStore(),\n      fusionTable = fusionDataStore.createDataTable(data, schema);\n\n    return {\n      type: 'timeseries',\n      width: '100%',\n      height: 450,\n      renderAt: 'chart-container',\n      dataSource: {\n        data: fusionTable,\n        caption: {\n          text: 'Sales Analysis'\n        },\n        subcaption: {\n          text: 'Grocery'\n        },\n        yAxis: [\n          {\n            plot: {\n              value: 'Grocery Sales Value',\n              type: 'line'\n            },\n            format: {\n              prefix: '$'\n            },\n            title: 'Sale Value'\n          }\n        ]\n      }\n    };\n  };\n</script>\n\n<div id=\"chart-container\" >\n  {#await promise}\n    <p>Fetching data and schema...</p>\n  {:then value}\n    <SvelteFC\n      {...getChartConfig(value)}\n    />\n  {:catch error}\n    <p>Something went wrong: {error.message}</p>\n  {/await}\n</div>\n```\n\nUseful links for FusionTime\n\n- [How FusionTime works](https://www.fusioncharts.com/dev/fusiontime/getting-started/how-fusion-time-works)\n- [Create your first chart](https://www.fusioncharts.com/dev/fusiontime/getting-started/create-your-first-chart-in-fusiontime)\n\n## Going Beyond Charts\n\n- Explore 20+ pre-built business specific dashboards for different industries like energy and manufacturing to business functions like sales, marketing and operations [here](https://www.fusioncharts.com/explore/dashboards).\n- See [Data Stories](https://www.fusioncharts.com/explore/data-stories) built using FusionCharts’ interactive JavaScript visualizations and learn how to communicate real-world narratives through underlying data to tell compelling stories.\n\n## For Contributors\n\n- Clone the repository and install dependencies\n\n```\ngit clone https://github.com/fusioncharts/svelte-fusioncharts.git\ncd svelte-fusioncharts\nnpm i\nnpm run dev\n```\n\n- Run `npm run build` to create a production build.\n\n## Licensing\n\nThe FusionCharts Svelte component is open-source and distributed under the terms of the MIT/X11 License. However, you will need to download and include FusionCharts library in your page separately, which has a [separate license](https://www.fusioncharts.com/buy).\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 224],
		[3596, 377],
		[3603, 240],
		[3610, 255],
		[3617, 244],
		[3624, 243],
		[3631, 241],
		[3638, 238],
		[3645, 140],
		[3652, 217],
		[3659, 190],
		[3666, 268],
		[3673, 229],
		[3680, 261],
		[3687, 190],
		[3694, 229],
		[3701, 191],
		[3708, 138],
		[3715, 151],
		[3722, 143],
		[3729, 182],
		[3736, 295],
		[3743, 169],
		[3750, 152],
		[3757, 85],
		[3764, 186],
		[3771, 139],
		[3778, 151],
		[3785, 185],
		[3792, 164],
		[3799, 163],
		[3806, 131],
		[3813, 117],
		[3820, 172],
		[3827, 66],
		[3834, 79],
		[3841, 179],
		[3848, 163],
		[3855, 223],
		[3862, 407],
		[3869, 189],
		[3876, 181],
		[3883, 203],
		[3890, 265],
		[3897, 238],
		[3904, 144],
		[3911, 125],
		[3918, 90],
		[3925, 159],
		[3932, 167],
		[3939, 225],
		[3946, 146],
		[3953, 75],
		[3960, 62],
		[3967, 97],
		[3974, 97],
		[3981, 92],
		[3988, 99],
		[3995, 108],
		[4002, 149],
		[4009, 18],
		[4016, 35],
		[4023, 31],
		[4030, 53],
		[4037, 153],
		[4044, 99],
		[4051, 89],
		[4058, 75],
		[4065, 91],
		[4072, 132],
		[4079, 51],
		[4086, 92],
		[4093, 195],
		[4100, 121],
		[4107, 300],
		[4114, 80],
		[4121, 71],
		[4128, 105]
	]
}
