{
	"name": "svelte-tuicss",
	"description": "Use Tuicss UI framework components in Svelte.",
	"repo_url": "https://github.com/nick-somebody/svelte-tuicss",
	"authors": ["nick-somebody"],
	"homepage": "https://nick-somebody.github.io/svelte-tuicss",
	"downloads": 15,
	"updated": "2024-11-16T05:41:01.486Z",
	"tags": ["ui"],
	"github_stars": 1,
	"typescript": true,
	"version": "0.0.5",
	"svelte_range": "^4.0.0",
	"kit_range": "^2.0.0",
	"last_rune_check_version": "0.0.5",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-tuicss",
				"version": "0.0.5",
				"size": 67746
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# svelte-tuicss\n\nThis is currently experimental.\n\nAlternative to [react-tuicss](https://github.com/nick-somebody/react-tuicss)\n\nThis library is a component library built on [TuiCss](https://github.com/vinibiavatti1/TuiCss).\n\nI built this as a way to learn svelte.\n\n## Installing\n\n```sh\nnpm i svelte-tuicss\n```\n\nThen add code like this to your `.svelte` file\n\n```svelte\nimport { TuiPanel, TuiScreen, TuiTabs } from \"svelte-tuicss\";\n```\nI will eventually write better docs, but you can get plenty of examples from the [docs site](https://nick-somebody.github.io/react-tuicss/) and the [docs code](../docs-kit/).\n\n## Developing\n\nTo develop normally, you probably want to use the docs site as a test bed for what you're doing.\n\nTo test that your stuff compiles, there are multiple commands for doing that, including...\n\n```sh\nnpm run check\nnpm run check:watch\nnpm run build\n```\n\nRun the format and lint commands before committing/pushing to prevent unneeded CI fails.\n\n```sh\nnpm run format\nnpm run lint\n```\n\nTests can be run with\n\n```sh\n# for normal test running\nnpm run test\n\n# for coverage\nnpm run coverage\n```\n\nTests can be debugged in `vscode` by hitting `F5` on the test file you wish to debug.\n\n> [!NOTE]\n> The workspace file at the root folder of this repo should be opened in vscode as it has the configuration for this.\n\n\n## Releasing\n\n- Get changes into `main`\n- Pull latest code to local\n- Create a branch on your local\n- Run `npm run tag-release` (this will analyse commits, generate a changelog entry, bump npm and create a corresponding git tag).\n  - advise configuring git to follow tags on push, eg. `git config --global push.followTags true`\n  - You need to push the branch commits and tag to the remote\n- Get this release PR merged to `main`\n- [Create a new release](https://github.com/nick-somebody/svelte-tuicss/releases/new) against the tag you just created.\n- When the release is published, [the workflow](../.github/workflows/publish.yml) will handle the rest\n\n## Changelog\n\nSee [here](CHANGELOG.md)",
	"legacy_svelte": true,
	"downloads_history": [
		[3701, 111],
		[3708, 32],
		[3715, 5],
		[3722, 5],
		[3729, 3],
		[3736, 1],
		[3750, 1],
		[3757, 4],
		[3764, 1],
		[3778, 7],
		[3785, 1],
		[3792, 1],
		[3806, 4],
		[3827, 63],
		[3834, 18],
		[3841, 5],
		[3848, 3],
		[3855, 5],
		[3862, 2],
		[3869, 6],
		[3883, 1],
		[3890, 4],
		[3897, 3],
		[3904, 1],
		[3911, 3],
		[3918, 1],
		[3925, 1],
		[3932, 11],
		[3939, 86],
		[3946, 197],
		[3953, 126],
		[3960, 58],
		[3967, 84],
		[3974, 11],
		[3988, 6],
		[3995, 4],
		[4002, 10],
		[4016, 3],
		[4023, 14],
		[4030, 126],
		[4037, 93],
		[4044, 7],
		[4051, 3],
		[4065, 3],
		[4072, 3],
		[4079, 62],
		[4086, 43],
		[4093, 5],
		[4100, 4],
		[4107, 25],
		[4114, 15],
		[4121, 8],
		[4128, 92],
		[4135, 29]
	]
}
