{
	"name": "svelte-generic-crud-table",
	"description": "Render object arrays with options and inline edit in Svelte.",
	"repo_url": "https://github.com/ivosdc/svelte-generic-crud-table",
	"authors": ["nologin"],
	"homepage": "https://github.com/ivosdc/svelte-generic-crud-table#readme",
	"downloads": 22,
	"updated": "2023-12-26T18:52:30.309Z",
	"tags": ["ui"],
	"github_stars": 67,
	"typescript": false,
	"version": "1.6.3",
	"svelte_range": "^3.38.2",
	"last_rune_check_version": "1.6.3",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-generic-crud-table",
				"version": "1.6.3",
				"size": 250233
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# svelte-generic-crud-table\n- Web-component: `<crud-table></crud-table>`\n- or Svelte-component: `import SvelteGenericCrudTable from 'svelte-generic-crud-table'`\n\nA self-containing sortable table component with inline edit option.\n\nAllows CRUD-operations for Object-Arrays.\n\n[Try out live example:](https://ivosdc.github.io/svelte-generic-crud-table/ \"GeneralCrudTable Example\")\n\n[![Published on webcomponents.org](https://img.shields.io/badge/webcomponents.org-published-blue.svg)](https://www.webcomponents.org/element/svelte-generic-crud-table)\n\n\n## Install\n\n```\nnpm install svelte-generic-crud-table --save-dev\n```\n\n\n# Usage - table_config\nUse the svelte-generic-crud-table in your component to show and, if you like, edit, update and delete it's content.\nJust include the table as seen in the example below.\n\n## name\nThis is used as `id` for the component.\n\n## options\n- 'CREATE' - activates the add-icon to fire the create-event.\n- 'EDIT' - activates the edit-icon to set the table-row in edit-mode.\n- 'DELETE' - activates the delete-icon to fire the delete-event.\n- 'DETAILS' - activates the details-icon or showa the alternative details_text if configured to fire the details-event.\n\n\nThe events contain the element from the `crud-table` with the table-id and eventually made changes to the element. Additionally the original element with all it's `hidden fields -> column_setting:show true/false`.\n\nAs webcomponent use `event.target`.\nAs Svelte-Component use `event.detail` to fetch the data.\n\nHave a look inside `event.target.body` / `event.detail.body` to see original element.\n\n\n## column setting\nAll fields are optional.\n\nSettings regarding a column behaviour can be specified in the table_config.\nOnly wanted keys of your source array have to be mapped by columns_settings *name*. All other attributes are optional.\n```html\n    const table_config = {\n        name: 'Awesome',\n        options: ['CREATE', 'EDIT', 'DELETE', 'DETAILS'],\n        columns_setting: [\n            {name: 'id', show: false, edit: true, width: '0px'},\n            {name: 'job', displayName: 'Top-Jobs', show: true, edit: true, width: '150px', description: 'The job'},\n            {name: 'name', displayName: 'Account-ID', show: true, edit: true, width: '150px', tooltip: true},\n            {name: 'private', show: true, edit: false, width: '200px', description: 'your things', tooltip: true},\n            {name: 'html', show: true, edit: true, width: '500px', type: 'html', description: 'You can use HTML', tooltip: true}\n        ],\n        details_text: 'detail'   // replace the standard icon with an text-link\n    }\n```\n- <b>*name*</b>: the key from your data-array. This is used as column name.\n- *displayName*: An alternative column header if *name* is not matching the needs.\n- *show*: true/false; Should this column displayed? (optional, default: false)\n- *edit*: true/false; Set this field editable or not. (optional, default: false)\n- *width*: px/em; set the field width.  (optional, default: 100px)\n- *description*: A tooltip for the columns name. E.g. to see the full name or other description.  (optional, default: unset)\n- *tooltip*: true/false; When the text does not fit into the field you can show the full text as tooltip.  (optional, default: false) \n- *type*: There are two types:  (optional, default: text)\n    - *text*: Default.\n    - *html*: The value/text will be interpreted as HTML.\n\n## details_text\nYou can replace the icon for \"DETAILS\" by a text. Perhaps you like to specify the acvtion behind the button more concrete.\n\n\n\n[See example:](https://ivosdc.github.io/svelte-generic-crud-table/ \"GeneralCrudTable Example\")\n\n### `<crud-table></crud-table>`\n```html\n<custom-element-demo>\n<template>\n<head>\n    <meta charset='utf-8'>\n    <meta name='viewport' content='width=device-width,initial-scale=1'>\n    <title>Generic Crud Table</title>\n    <link rel='icon' type='image/png' href='favicon.png'>\n    <script defer src='https://ivosdc.github.io/svelte-generic-crud-table/build/crud-table.js'></script>\n</head>\n\n<body>\n<hr>\n<crud-table></crud-table>\n<hr>\n</body>\n<script src='https://ivosdc.github.io/svelte-generic-crud-table/test-data.js'></script>\n<script src='https://ivosdc.github.io/svelte-generic-crud-table/crud-table-config-html.js'></script>\n</template>\n</custom-element-demo>\n```\n\n```html\n<crud-table></crud-table>\n```\n\n###  Svelte-Component - implementation example:\n```html\n<script>\n    import SvelteGenericCrudTable from \"svelte-generic-crud-table\";\n    import {onMount} from 'svelte';\n    import {goto} from \"@sapper/app\";\n\n    let myData = [];\n\n    onMount(reload);\n\n    function reload() {\n        get().then( (result) => {\n                myData = result;\n        });\n    }\n\n    function handleCreate(event) {\n        post({name: \"new entry\"}).then(() => {\n                    reload();\n                });\n    }\n\n\n    function handleDelete(event) {\n        delete(event.detail.body.id).then(() => {\n                    reload();\n                });\n    }\n\n    function handleUpdate(event) {\n        update(event.detail.body.id, event.detail.body)\n                .then(() => {\n                    reload();\n                });\n    }\n\n    function handleDetail(event) {\n        goto('/project/' + event.detail.body.id);\n    }\n\n    \n    const table_config = {\n        name: 'Awesome',\n        options: ['CREATE', 'EDIT', 'DELETE', 'DETAILS'],\n        columns_setting: [\n            {name: 'id', show: false, edit: true, width: '200px'},\n            {name: 'job', show: true, edit: true, width: '100px', description: 'Your Job'},\n            {name: 'name', show: true, edit: true, width: '200px', tooltip: true},\n            {name: 'private', show: true, edit: false, width: '200px', description: 'Your things'},\n            {name: 'html', show: true, edit: true, size: '200px', type: 'html', tooltip: true}\n        ],\n        details_text: 'detail'   // replace the standard icon with an text-link\n    }\n\n</script>\n\n<main>\n    <SvelteGenericCrudTable on:delete={handleDelete}\n                            on:update={handleUpdate}\n                            on:create={handleCreate}\n                            on:details={handleDetail}\n                            table_config={table_config}\n                            table_data={myData}/>\n</main>\n\n```\n\nI recommend for Svelte-Users the direct import of the component source `\"svelte-generic-crud-table/src/SvelteGenericCrudTable.svelte\"`.\n```html\n// import SvelteGenericCrudTable from \"svelte-generic-crud-table\";\nimport SvelteGenericCrudTable from \"svelte-generic-crud-table/src/SvelteGenericCrudTable.svelte\";\n```",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 24],
		[3596, 68],
		[3603, 61],
		[3610, 39],
		[3617, 40],
		[3624, 62],
		[3631, 28],
		[3638, 396],
		[3645, 278],
		[3652, 60],
		[3659, 67],
		[3666, 67],
		[3673, 91],
		[3680, 23],
		[3687, 21],
		[3694, 43],
		[3701, 28],
		[3708, 29],
		[3715, 61],
		[3722, 35],
		[3729, 41],
		[3736, 26],
		[3743, 48],
		[3750, 25],
		[3757, 43],
		[3764, 63],
		[3771, 57],
		[3778, 54],
		[3785, 21],
		[3792, 33],
		[3799, 28],
		[3806, 69],
		[3813, 79],
		[3820, 42],
		[3827, 40],
		[3834, 85],
		[3841, 24],
		[3848, 53],
		[3855, 51],
		[3862, 51],
		[3869, 75],
		[3876, 18],
		[3883, 53],
		[3890, 49],
		[3897, 24],
		[3904, 20],
		[3911, 26],
		[3918, 42],
		[3925, 26],
		[3932, 10],
		[3939, 8],
		[3946, 8],
		[3953, 26],
		[3960, 10],
		[3967, 20],
		[3974, 12],
		[3981, 23],
		[3988, 22],
		[3995, 24],
		[4002, 29],
		[4009, 21],
		[4016, 16],
		[4023, 26],
		[4030, 14],
		[4037, 24],
		[4044, 26],
		[4051, 14],
		[4058, 15],
		[4065, 6],
		[4072, 8],
		[4079, 12],
		[4086, 13],
		[4093, 6],
		[4100, 37],
		[4107, 83],
		[4114, 22],
		[4121, 21],
		[4128, 47]
	],
	"esm": true,
	"cjs": false
}
