{
	"name": "svelte-better-store",
	"description": "Provides state management similar to Svelte's store.",
	"repo_url": "https://github.com/ragokan/svelte-better-store",
	"authors": ["rago"],
	"homepage": "https://github.com/ragokan/svelte-better-store#readme",
	"downloads": 13,
	"updated": "2021-12-28T18:45:31.538Z",
	"tags": ["miscellaneous"],
	"typescript": true,
	"version": "1.1.4",
	"svelte_range": "^3.44.2",
	"last_rune_check_version": "1.1.4",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-better-store",
				"version": "1.1.4",
				"size": 12054
			},
			{
				"name": "svelte",
				"version": "3.59.2",
				"size": 10624206
			}
		],
		"dependencies": [[0, 1]],
		"circular": []
	},
	"readme": "# svelte-better-store\n\n## A state management library that implemented for Svelte that is very similar to **@svelte/store**\n\n[![npm](https://img.shields.io/npm/v/svelte-better-store?color=F53B02)](https://www.npmjs.com/package/svelte-better-store)\n[![GitHub Repo stars](https://img.shields.io/github/stars/ragokan/svelte-better-store?label=github%20stars)](https://github.com/ragokan/svelte-better-store)\n\n### Why svelte-better-store?\n\n- It is very similar to **@svelte/store**\n- It has better and simpler usage for objects, especially a better **update** method\n- It has the **get** function (@svelte/store also has it, but **svelte-better-store** doesn't subscribe to read the store)\n\n### Migration from @svelte/store\n\n- For non-object values, just add change the name to better$1, for example\n  writable -> betterWritable\n- For object values, [read betterStore](#betterStore)\n\n### Contents\n\n- [betterStore](#betterStore)\n- [betterWritable](#betterWritable)\n\n&nbsp;\n\n### betterStore\n\n#### Best when you have an Object, else [check betterWritable](#betterWritable)\n\n#### It has a great **update** method which replaces {...store, age: 25} with {age: 25} only!\n\n```ts\n// create\nconst personStore = betterStore({ name: \"better\", age: 23 });\n\n// set\npersonStore.set({ name: \"better\", age: 24 });\n\n// get\nconsole.log(person.get()); // { name: \"better\", age: 24 }\n\n// update\nperson.update((p) => ({ age: p.age + 1 })); // { name: \"better\", age: 25 }\n\n// subscribe\npersonStore.subscribe((newStore) => console.log(newStore));\n```\n\n#### **update** has more than one usage. To **remove** a key of object with update, just set it undefined.\n\n```ts\nperson.update((p) => ({ age: p.age + 1 })); // { name: \"better\", age: 26 }\n\nperson.update({ age: 27 }); // { name: \"better\", age: 27 }\n\nperson.update(\"age\", (age) => age + 1); // { name: \"better\", age: 28 }\n\nperson.update({ age: undefined }); // { name: \"better\" } - but you better use set to remove\n```\n\n&nbsp;\n\n### betterWritable\n\n#### **writable** with more features!\n\n```ts\n// create\nconst counter = betterWritable(0);\n\n// get\nconsole.log(counter.get()); // 0\n\n// set\ncounter.set(1); // 1\n\n// update\ncounter.update((c) => c + 1); // 2\n\n// subscribe\ncounter.subscribe((value) => console.log(value));\n```\n\n#### Produce - Mutate **store**\n\nIf you are using **betterStore** or you have a list in **betterWritable**, you can use **produce** to mutate them. Usage is fairly simple;\n\n```ts\nconst appStore = betterStore({ count: 0, items: [] });\n\nappStore.update(\n  produce((store) => {\n    store.count++; // it is valid\n    store.items.add(5); // it is also valid\n  })\n);\n\n// or you can focus on a sub item directly (it also must be object or array)\nappStore.update(\n  \"items\",\n  produce((items) => items.add(5))\n);\n```\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3589, 3],
		[3596, 17],
		[3603, 15],
		[3610, 16],
		[3617, 1],
		[3624, 6],
		[3631, 2],
		[3638, 3],
		[3645, 21],
		[3652, 10],
		[3659, 51],
		[3666, 52],
		[3673, 44],
		[3680, 18],
		[3694, 5],
		[3701, 1],
		[3708, 5],
		[3715, 2],
		[3722, 4],
		[3729, 17],
		[3750, 19],
		[3757, 3],
		[3764, 1],
		[3771, 18],
		[3778, 1],
		[3785, 1],
		[3792, 2],
		[3799, 2],
		[3806, 4],
		[3813, 4],
		[3827, 4],
		[3834, 2],
		[3848, 1],
		[3855, 77],
		[3862, 1],
		[3876, 1],
		[3883, 2],
		[3890, 30],
		[3897, 5],
		[3904, 19],
		[3925, 3],
		[3932, 43],
		[3939, 30],
		[3946, 12],
		[3953, 3],
		[3960, 18],
		[3967, 10],
		[3974, 25],
		[3981, 16],
		[3988, 7],
		[3995, 7],
		[4016, 1],
		[4030, 15],
		[4037, 30],
		[4044, 7],
		[4051, 1],
		[4065, 1],
		[4072, 1],
		[4079, 2],
		[4093, 12],
		[4100, 17],
		[4107, 12],
		[4114, 13],
		[4121, 12],
		[4128, 7]
	]
}
