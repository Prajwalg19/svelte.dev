{
	"name": "@popperjs/svelte",
	"description": "Integrate Popper.js for positioning UI elements in Svelte.",
	"repo_url": "",
	"authors": ["atomiks", "fezvrasta"],
	"downloads": 208,
	"updated": "2020-04-19T15:43:49.306Z",
	"tags": ["ui"],
	"typescript": false,
	"version": "0.1.1",
	"svelte_range": "^3.18.1",
	"last_rune_check_version": "0.1.1",
	"github_stars": 0,
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@popperjs/svelte",
				"version": "0.1.1",
				"size": 205335
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# @popperjs/svelte\n\nUse Popper in your Svelte projects.\n\n### Installation\n\n```\nyarn add @popperjs/svelte\n# or\nnpm i @popperjs/svelte\n```\n\n### Usage\n\n```svelte\n<script>\n  import Popper from \"@popperjs/svelte\";\n\n  // super-simple CSS Object to string serializer\n  const css = obj =>\n    Object.entries(obj || {})\n      .map(x => x.join(\":\"))\n      .join(\";\");\n\n  // DOM references to the interested elements\n  let referenceElement;\n  let popperElement;\n  let arrowElement;\n\n  // Popper options, reactive to update when arrowElement is set\n  $: popperOptions = {\n    modifiers: [\n      { name: \"offset\", options: { offset: [0, 5] } },\n      { name: \"arrow\", options: { element: arrowElement } }\n    ]\n  };\n\n  // bound variables where Popper will store styles and attributes\n  let styles = {};\n  let attributes = {};\n\n  console.log(styles);\n</script>\n\n<style>\n  /* for some example styles, see `dev/App.svelte` */\n</style>\n\n<Popper\n  reference={referenceElement}\n  popper={popperElement}\n  options={popperOptions}\n  bind:styles\n  bind:attributes>\n  <button bind:this={referenceElement}>Reference Element</button>\n  <div\n    bind:this={popperElement}\n    class=\"tooltip\"\n    style={css(styles.popper)}\n    {...attributes.popper}>\n    Popper Element\n    <div bind:this={arrowElement} class=\"arrow\" style={css(styles.arrow)} />\n  </div>\n</Popper>\n```\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 181],
		[3596, 137],
		[3603, 248],
		[3610, 149],
		[3617, 49],
		[3624, 112],
		[3631, 200],
		[3638, 92],
		[3645, 50],
		[3652, 45],
		[3659, 30],
		[3666, 29],
		[3673, 56],
		[3680, 157],
		[3687, 321],
		[3694, 206],
		[3701, 187],
		[3708, 183],
		[3715, 197],
		[3722, 178],
		[3729, 168],
		[3736, 191],
		[3743, 164],
		[3750, 220],
		[3757, 112],
		[3764, 197],
		[3771, 169],
		[3778, 171],
		[3785, 179],
		[3792, 157],
		[3799, 144],
		[3806, 134],
		[3813, 164],
		[3820, 143],
		[3827, 264],
		[3834, 171],
		[3841, 164],
		[3848, 153],
		[3855, 104],
		[3862, 182],
		[3869, 226],
		[3876, 151],
		[3883, 98],
		[3890, 86],
		[3897, 162],
		[3904, 83],
		[3911, 207],
		[3918, 195],
		[3925, 92],
		[3932, 95],
		[3939, 474],
		[3946, 508],
		[3953, 202],
		[3960, 184],
		[3967, 2547],
		[3974, 1699],
		[3981, 2140],
		[3988, 112],
		[3995, 102],
		[4002, 65],
		[4009, 46],
		[4016, 84],
		[4023, 123],
		[4030, 146],
		[4037, 89],
		[4044, 104],
		[4051, 133],
		[4058, 119],
		[4065, 79],
		[4072, 147],
		[4079, 132],
		[4086, 68],
		[4093, 203],
		[4100, 176],
		[4107, 168],
		[4114, 208],
		[4121, 285],
		[4128, 160]
	]
}
