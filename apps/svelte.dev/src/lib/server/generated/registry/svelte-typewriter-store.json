{
	"name": "svelte-typewriter-store",
	"description": "Create typewriter effects in Svelte with a readable store.",
	"repo_url": "https://github.com/paoloricciuti/svelte-typewriter-store",
	"authors": ["pablopang"],
	"homepage": "https://github.com/paoloricciuti/svelte-typewriter-store#readme",
	"downloads": 69,
	"updated": "2022-11-30T15:22:10.276Z",
	"tags": ["miscellaneous"],
	"github_stars": 11,
	"typescript": true,
	"version": "0.0.6",
	"svelte_range": "^3.44.0",
	"kit_range": "next",
	"last_rune_check_version": "0.0.6",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-typewriter-store",
				"version": "0.0.6",
				"size": 6535
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# svelte-typewriter-store\n\nThe simplest way to get a rotating typewriter effect in svelte.\n\n[![MIT License](https://img.shields.io/badge/License-MIT-green.svg)](https://choosealicense.com/licenses/mit/)\n\n![npm bundle size](https://img.shields.io/bundlephobia/minzip/svelte-typewriter-store)\n\n![npm](https://img.shields.io/npm/v/svelte-typewriter-store)\n\n![npm](https://img.shields.io/npm/dt/svelte-typewriter-store)\n\n![GitHub last commit](https://img.shields.io/github/last-commit/paoloricciuti/svelte-typewriter-store)\n\n## Contributing\n\nContributions are always welcome!\n\nFor the moment there's no code of conduct neither a contributing guideline but if you found a problem or have an idea feel free to [open an issue](https://github.com/paoloricciuti/svelte-typewriter-store/issues/new)\n\nIf you want the fastest way to open a PR try out Codeflow\n\n[![Open in Codeflow](https://developer.stackblitz.com/img/open_in_codeflow.svg)](https://pr.new/paoloricciuti/svelte-typewriter-store/)\n\n## Authors\n\n- [@paoloricciuti](https://www.github.com/paoloricciuti)\n\n## Installation\n\nInstall svelte-typewriter-store with npm\n\n```bash\n  npm install svelte-typewriter-store@latest -D\n```\n\n## Usage/Examples\n\nSimply import the typewriter function from the package and create a readable store like this\n\n```svelte\n<script>\n\timport { typewriter } from \"svelte-typewriter-store\";\n    //the list of words you want to cycle through\n\tconst words = [\"one\", \"two\", \"three\"];\n    //the typing speed\n\tconst speed = 100;\n    //how much you want to wait between words\n\tconst wordWait = 1500;\n\tlet wordStore = typewriter(words, speed, wordWait);\n    //you can add a listener on the letter:add, letter:remove or on \n    //the completed word you can later remove them with store.off\n    wordStore.on(\"letter:add\", (addedLetter)=>{\n        console.log(`Just added the letter ${addedLetter}`);\n    });\n    wordStore.on(\"letter:remove\", (removedLetter)=>{\n        console.log(`Just removed the letter ${removedLetter}`);\n    });\n    wordStore.on(\"word\", (word)=>{\n        console.log(`Just finished typing the word ${word}`);\n    });\n</script>\n\n<button on:click={async ()=>{\n    //you can add new words with \n\tconst [word] = await fetch(\"https://random-word-api.herokuapp.com/word\")\n\t\t.then(res => res.json());\n\twordStore.add(word)\n}}>\n\tAdd word\n</button>\n\n<button on:click={async ()=>{\n    //you can remove a word\n\twordStore.remove(0);\n}}>\n\tRemove first word\n</button>\n\n<button on:click={async ()=>{\n    //you can filter a word\n\twordStore.filter((word)=> word.length > 5);\n}}>\n\tFilter length > 5\n</button>\n\n<h1>\n    <!-- Simply print the store to get the effect -->\n\tThe current word is: {$wordStore}\n</h1>\n```",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 4],
		[3603, 11],
		[3610, 10],
		[3617, 1],
		[3624, 12],
		[3631, 24],
		[3638, 16],
		[3645, 6],
		[3652, 13],
		[3659, 1],
		[3666, 16],
		[3673, 9],
		[3680, 2],
		[3687, 3],
		[3694, 6],
		[3701, 7],
		[3708, 1],
		[3715, 13],
		[3722, 2],
		[3729, 4],
		[3743, 1],
		[3750, 2],
		[3757, 2],
		[3771, 18],
		[3778, 16],
		[3792, 3],
		[3799, 5],
		[3806, 12],
		[3813, 1],
		[3820, 4],
		[3827, 7],
		[3834, 1],
		[3841, 37],
		[3848, 1],
		[3855, 51],
		[3862, 5],
		[3869, 19],
		[3876, 5],
		[3883, 6],
		[3890, 22],
		[3897, 11],
		[3904, 12],
		[3911, 7],
		[3918, 7],
		[3925, 14],
		[3932, 13],
		[3939, 9],
		[3946, 9],
		[3953, 71],
		[3960, 14],
		[3967, 7],
		[3974, 9],
		[3981, 19],
		[3988, 12],
		[3995, 13],
		[4002, 6],
		[4009, 3],
		[4016, 23],
		[4023, 18],
		[4030, 30],
		[4037, 20],
		[4044, 18],
		[4051, 12],
		[4058, 20],
		[4065, 26],
		[4072, 25],
		[4079, 3],
		[4086, 14],
		[4093, 22],
		[4100, 24],
		[4107, 22],
		[4114, 69],
		[4121, 55],
		[4128, 13],
		[4135, 19]
	],
	"esm": true,
	"cjs": false
}
