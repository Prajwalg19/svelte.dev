{
	"name": "@loscrackitos/svelte-typed-js",
	"description": "Types text with Typed.js in Svelte components.",
	"repo_url": "https://github.com/Los-Crackitos/svelte-typed-js",
	"authors": ["thyrael", "jerome1337"],
	"homepage": "https://github.com/Los-Crackitos/svelte-typed-js#readme",
	"downloads": 8,
	"updated": "2020-09-11T18:56:12.776Z",
	"tags": ["ui"],
	"github_stars": 6,
	"typescript": false,
	"version": "0.1.3",
	"svelte_range": "^3.25.0",
	"last_rune_check_version": "0.1.3",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@loscrackitos/svelte-typed-js",
				"version": "0.1.3",
				"size": 112754
			},
			{
				"name": "typed.js",
				"version": "2.1.0",
				"size": 154083
			}
		],
		"dependencies": [[0, 1]],
		"circular": []
	},
	"readme": "# svelte-typed-js\n\n[![npm](https://img.shields.io/npm/v/@loscrackitos/svelte-typed-js.svg)](https://www.npmjs.com/package/@loscrackitos/svelte-typed-js)\n[![npm](https://img.shields.io/npm/dm/@loscrackitos/svelte-typed-js.svg)](https://www.npmjs.com/package/@loscrackitos/svelte-typed-js)\n\nSvelte Typed.js component\n\nTyped.js is a library that types. Enter in any string, and watch it type at the speed you've set, backspace what it's typed, and begin a new sentence for however many strings you've set.\n\nCheckout the official project [here](https://github.com/mattboldt/typed.js/).\n\n## Table of contents\n\n- [Installation](#installation)\n- [Usage](#usage)\n- [Example](#examples)\n\n# Installation\n\n```\nnpm i -D @loscrackitos/svelte-typed-js\n```\n\n## Default import\n\nImport the component:\n\n```javascript\nimport TypedJs from '@loscrackitos/svelte-typed-js';\n```\n\n# Usage\n\nImport the `TypedJs` component inside your Svelte template and set the sentences that needs to be typed inside the `strings` props.\n\nSimplest usage:\n\n```html\n<TypedJs strings=\"['Hello John', 'Hello Martin']\">\n  <h1 class=\"typing\"></h1>\n</TypedJs>\n```\n\n`typing` class also allows you to just animate certain parts of a string:\n\n```html\n<TypedJs strings=\"['John', 'Martin']\">\n  <h1>ðŸ‘‹ <span class=\"typing\"></span></h1>\n</TypedJs>\n```\n\n## Props\n\n| Property             | Type    | Description                                                          | Usage                              |\n| -------------------- | ------- | -------------------------------------------------------------------- | ---------------------------------- |\n| strings              | Array   | strings to be typed                                                  | `strings=\"{['Text 1', 'Text 2']}\"` |\n| stringsElement       | String  | ID of element containing string children                             | `stringsElement=\"myId\"`            |\n| typeSpeed            | Number  | type speed in milliseconds                                           | `typeSpeed={50}`                   |\n| startDelay           | Number  | time before typing starts in milliseconds                            | `startDelay={1000}`                |\n| backSpeed            | Number  | backspacing speed in milliseconds                                    | `backSpeed={10}`                   |\n| smartBackspace       | Boolean | only backspace what doesn't match the previous string                | `smartBackspace={true}`            |\n| shuffle              | Boolean | shuffle the strings                                                  | `shuffle={true}`                   |\n| backDelay            | Number  | time before backspacing in milliseconds                              | `backDelay={100}`                  |\n| fadeOut              | Boolean | Fade out instead of backspace                                        | `fadeOut={true}`                   |\n| fadeOutClass         | String  | css class for fade animation                                         | `fadeOutClass=\"fadeOutClass\"`      |\n| fadeOutDelay         | Number  | fade out delay in milliseconds                                       | `fadeOutDelay={500}`               |\n| loop                 | Boolean | loop strings                                                         | `loop={true}`                      |\n| loopCount            | Number  | amount of loops                                                      | `loopCount={3}`                    |\n| showCursor           | Boolean | show cursor                                                          | `showCursor={true}`                |\n| cursorChar           | String  | character for cursor                                                 | `cursorChar=\"_\"`                   |\n| autoInsertCss        | Boolean | insert CSS for cursor and fadeOut into HTML                          | `autoInsertCss={true}`             |\n| attr                 | String  | attribute for typing Ex: input placeholder, value, or just HTML text | `attr=\"placeholder\"`               |\n| bindInputFocusEvents | Boolean | bind to focus and blur if el is text input                           | `bindInputFocusEvents={true}`      |\n| contentType          | String  | 'html' or 'null' for plaintext                                       | `contentType=\"html\"`               |\n\n## Events\n\nAvailable events:\n\n| Event                  | Description                                 | Usage                               |\n| ---------------------- | ------------------------------------------- | ----------------------------------- |\n| onComplete             | All typing is complete                      | `on:complete={handler}`             |\n| preStringTyped         | Before each string is typed                 | `on:preStringTyped={handler}`       |\n| onStringTyped          | After each string is typed                  | `on:stringTyped={handler}`          |\n| onLastStringBackspaced | During looping, after last string is typed  | `on:lastStringBackspaced={handler}` |\n| onTypingPaused         | Typing has been stopped                     | `on:typingPaused={handler}`         |\n| onTypingResumed        | Typing has been started after being stopped | `on:typingResumed={handler}`        |\n| onReset                | After reset                                 | `on:reset={handler}`                |\n| onStop                 | After stop                                  | `on:stop={handler}`                 |\n| onStart                | After start                                 | `on:start={handler}`                |\n| onDestroy              | After destroy                               | `on:destroy={handler}`              |\n\n## Features\n\nFind every features documentation on the main library [page](https://github.com/mattboldt/typed.js/).\n\n# Examples\n\nHere are several examples:\n\n```html\n<!-- infinite loop -->\n<TypedJs\n  strings=\"{['awesome', 'brilliant']}\"\n  loop=\"{true}\"\n  on:complete=\"{handle}\"\n>\n  <p>We are a <span class=\"typing\"></span> company!</p>\n</TypedJs>\n\n<!-- type with some pause -->\n<TypedJs\n  strings=\"{['This is text ^1000 which gets paused for 1 second', 'wow, interesting']}\"\n>\n  <p class=\"typing\"></p>\n</TypedJs>\n\n<!-- render html from strings -->\n<TypedJs\n  strings=\"{['<p>Paragraph</p>', '<span>Span</span>']}\"\n  contentType=\"html\"\n>\n  <p class=\"typing\"></p>\n</TypedJs>\n```\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 10],
		[3596, 22],
		[3603, 14],
		[3610, 31],
		[3617, 35],
		[3624, 14],
		[3631, 2],
		[3638, 20],
		[3645, 30],
		[3652, 13],
		[3659, 17],
		[3666, 9],
		[3673, 10],
		[3680, 14],
		[3687, 11],
		[3694, 4],
		[3701, 2],
		[3708, 13],
		[3715, 36],
		[3722, 20],
		[3729, 12],
		[3736, 9],
		[3743, 10],
		[3750, 13],
		[3757, 8],
		[3764, 9],
		[3771, 8],
		[3778, 1],
		[3785, 10],
		[3792, 18],
		[3799, 6],
		[3806, 3],
		[3813, 21],
		[3820, 8],
		[3827, 2],
		[3834, 24],
		[3841, 4],
		[3848, 3],
		[3855, 1],
		[3862, 34],
		[3869, 9],
		[3876, 1],
		[3883, 7],
		[3890, 32],
		[3897, 3],
		[3904, 12],
		[3911, 1],
		[3918, 9],
		[3925, 2],
		[3932, 7],
		[3939, 3],
		[3946, 5],
		[3960, 1],
		[3967, 1],
		[3988, 1],
		[3995, 1],
		[4002, 1],
		[4009, 1],
		[4016, 4],
		[4023, 11],
		[4030, 11],
		[4037, 11],
		[4044, 9],
		[4051, 5],
		[4058, 2],
		[4065, 1],
		[4072, 2],
		[4086, 3],
		[4093, 22],
		[4107, 4],
		[4114, 8],
		[4121, 9],
		[4128, 5]
	]
}
