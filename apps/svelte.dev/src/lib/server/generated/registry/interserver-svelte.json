{
	"name": "interserver-svelte",
	"description": "Implement IntersectionObserver functionality in Svelte apps.",
	"repo_url": "https://github.com/mefechoel/interserver-svelte",
	"authors": ["mefechoel"],
	"homepage": "https://github.com/mefechoel/interserver-svelte#readme",
	"downloads": 7,
	"updated": "2020-05-14T12:56:50.255Z",
	"tags": ["miscellaneous"],
	"github_stars": 1,
	"typescript": true,
	"version": "0.1.2",
	"svelte_range": "3.x",
	"last_rune_check_version": "0.1.2",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "interserver-svelte",
				"version": "0.1.2",
				"size": 15183
			},
			{
				"name": "interserver",
				"version": "0.1.2",
				"size": 14191
			}
		],
		"dependencies": [[0, 1]],
		"circular": []
	},
	"readme": "[npm]: https://img.shields.io/npm/v/interserver-svelte.svg?style=flat-square\n[npm-url]: https://npmjs.com/package/interserver-svelte\n\n# Interserver Svelte\n\n[![npm package][npm]][npm-url]\n![npm bundle size](https://img.shields.io/bundlephobia/min/interserver-svelte?style=flat-square)\n![NPM](https://img.shields.io/npm/l/interserver-svelte?style=flat-square)\n![GitHub last commit](https://img.shields.io/github/last-commit/mefechoel/interserver-svelte?style=flat-square)\n\n> IntersectionObserver simplified\n\nCheckout the main [`interserver`](https://www.npmjs.com/package/interserver) package.\n\n## Features\n\n- Tiny (~1kb minified)\n- TypeScript ready\n\n## Installation\n\nWith `yarn`:\n\n```bash\nyarn add interserver-svelte\n```\n\nWith `npm`:\n\n```bash\nnpm install --save interserver-svelte\n```\n\n## Usage\n\nThe `createInterserver` function takes the same options as the `interserver` function (`top`, `right`, `bottom`, `left` and `once`).\n\n```html\n<script>\n  import createInterserver from 'interserver-svelte';\n\n  let container;\n\n  const intersecting = createInterserver(() => container);\n\n  $: if ($intersecting) {\n    console.log(\"Now you see me!\");\n  } else {\n    console.log(\"Oh, the darkness...\");\n  }\n</script>\n\n<div bind:this={container}>\n  ...\n</div>\n```\n\n## Example\n\nYou can build a `LazyImage` component, that only requests an image, when it is approaching the viewport:\n\n```html\n<!-- LazyImage.svelte -->\n<script>\n  import createInterserver from 'interserver-svelte';\n\n  export let alt = '';\n  export let src = '';\n  export let srscet = null;\n\n  let container;\n\n  const intersecting = createInterserver(() => container, {\n    once: true,\n    top: 50,\n    right: 50,\n    bottom: 50,\n    left: 50,\n  });\n\n  $: src = $intersecting ? src : null;\n  $: srcset = $intersecting ? srcset : null;\n</script>\n\n<img {...$$props} {src} {srcset} {alt} bind:this={container} />\n```\n\n## License\n\nMIT\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3589, 5],
		[3596, 6],
		[3603, 1],
		[3610, 3],
		[3617, 4],
		[3624, 1],
		[3638, 1],
		[3645, 2],
		[3666, 4],
		[3694, 2],
		[3701, 1],
		[3722, 1],
		[3736, 2],
		[3743, 1],
		[3750, 1],
		[3771, 3],
		[3778, 1],
		[3792, 2],
		[3806, 1],
		[3820, 1],
		[3841, 2],
		[3848, 1],
		[3855, 1],
		[3862, 6],
		[3869, 3],
		[3876, 3],
		[3883, 2],
		[3890, 1],
		[3897, 2],
		[3904, 1],
		[3911, 3],
		[3918, 4],
		[3925, 1],
		[3939, 1],
		[3946, 1],
		[3960, 1],
		[3967, 2],
		[3981, 1],
		[3988, 1],
		[3995, 1],
		[4016, 2],
		[4023, 2],
		[4030, 1],
		[4037, 3],
		[4044, 8],
		[4058, 1],
		[4065, 5],
		[4072, 3],
		[4093, 10],
		[4100, 5],
		[4107, 2],
		[4114, 7],
		[4121, 4],
		[4128, 4]
	]
}
