{
	"name": "svelte-theme",
	"description": "Provides theming capabilities for Svelte apps, supporting light/dark themes.",
	"repo_url": "",
	"authors": ["dooboolab"],
	"downloads": 12,
	"updated": "2021-11-12T07:51:45.122Z",
	"tags": ["miscellaneous"],
	"typescript": true,
	"version": "1.4.3",
	"svelte_range": "^3.44.0",
	"last_rune_check_version": "1.4.3",
	"github_stars": 0,
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-theme",
				"version": "1.4.3",
				"size": 100610
			},
			{
				"name": "css-vars-ponyfill",
				"version": "2.4.9",
				"size": 643755
			},
			{
				"name": "balanced-match",
				"version": "1.0.2",
				"size": 6939
			},
			{
				"name": "get-css-data",
				"version": "2.1.1",
				"size": 237043
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[1, 3]
		],
		"circular": []
	},
	"readme": "# Svelte Theme\n\n> The `theme` module easily provides ability to make `light` and `dark` theme.\n\n[![Npm Version](http://img.shields.io/npm/v/svelte-theme.svg?style=flat-square)](https://npmjs.org/package/svelte-theme)\n[![Downloads](http://img.shields.io/npm/dm/svelte-theme.svg?style=flat-square)](https://npmjs.org/package/svelte-theme)\n[![CI](https://github.com/wecount-dev/svelte-theme/actions/workflows/ci.yml/badge.svg)](https://github.com/wecount-dev/svelte-theme/actions/workflows/ci.yml)\n[![publish-package](https://github.com/wecount-dev/svelte-theme/actions/workflows/release.yml/badge.svg)](https://github.com/wecount-dev/svelte-theme/actions/workflows/release.yml)\n\n## Installation\n\n```sh\nyarn add svelte-theme\n```\n\n## Usage\n\n#### 1. Wrap your `App` with `ThemeProvider`.\n\n```ts\nimport {ThemeProvider} from 'svelte-theme';\n```\n\n#### 2. Retrieve the theme with Svelte Context API\n\n```ts\nconst {theme} = getContext<ThemeStore>('svelte-theme');\n```\n\n> Note that `generic` type `ThemeStore` help you see theme props with autocomplete when using `typescript`.\n\n## Usage in css style\n\nThe `theme` props will be converted to `kebab-case` in global css variables. For `mainDark` prop, it will be converted to `--main-dark` css variable. Thereofre inside `style` tag, you can you it like below.\n\n```js\n<style>\n  p {\n    color: var(--main-dark);\n  }\n</style>\n```\n\nIf you want to add opacity to theme color, you should use `color-rgb` instead of `color`.\n\n```js\n<style>\n  p {\n    color: rgba(var(--main-dark), 0.2);\n  }\n</style>\n```\n\nNote that `rgb value` is calculated based on hex string, such as `#000` or `#0DB293`.\n\n## Customizing theme\n\n#### 1. Define colors for `light` and `dark` theme.\n\n```ts\nexport const colors = {\n  primary: '#0DB293',\n  primaryLight: '#75D0B8',\n  secondary: '#00D9D5',\n  success: '#33FF2F',\n  danger: '#FF002E',\n  warning: '#F2DF0F',\n  info: '#3A74E7',\n  brand: '#28DB98',\n  dusk: '#414D6B',\n  red: '#FF728D',\n  orange: '#F6A623',\n  yellow: '#EED100',\n  green: '#24CD97',\n  blue: '#679EFF',\n  purple: '#B669F9',\n  light: '#EDEDED',\n};\n\nexport type CommonColors = typeof colors;\n\nexport const light = {\n  ...colors,\n  paper: '#F2F5F6',\n  disabled: '#C4C4C4',\n  background: '#FFF',\n  placeholder: '#6D6D6D',\n  text: '#000',\n  textLight: '#1B1B1B',\n  textContrast: '#FFF',\n  main: colors.primary,\n  mainDark: colors.primaryLight,\n  card: '#FFF',\n  link: '#8E9095',\n  border: '#D3D4D5',\n};\n\nexport type Theme = typeof light;\n\nexport const dark: Theme = {\n  ...colors,\n  paper: '#2A2A2A',\n  disabled: '#515151',\n  background: '#000',\n  placeholder: '#6D6D6D',\n  text: '#FFF',\n  textLight: '#D3D3D3',\n  textContrast: '#FFF',\n  main: colors.primaryLight,\n  mainDark: colors.primary,\n  card: '#1C1C1C',\n  link: '#B5B7BC',\n  border: '#343536',\n};\n```\n\n#### 2. Wrap your component with `ThemeProvider` with given customTheme.\n\n```tsx\n<ThemeProvider customTheme={{light, dark}}>\n  <App />\n</ThemeProvider>\n```\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3596, 1],
		[3603, 31],
		[3610, 33],
		[3617, 1],
		[3624, 6],
		[3631, 1],
		[3645, 36],
		[3652, 1],
		[3659, 2],
		[3666, 34],
		[3680, 1],
		[3687, 1],
		[3694, 31],
		[3708, 31],
		[3715, 1],
		[3722, 1],
		[3729, 32],
		[3743, 1],
		[3750, 11],
		[3757, 3],
		[3771, 33],
		[3778, 1],
		[3785, 1],
		[3792, 2],
		[3799, 12],
		[3806, 3],
		[3827, 2],
		[3834, 1],
		[3841, 2],
		[3848, 3],
		[3855, 158],
		[3869, 1],
		[3876, 3],
		[3883, 3],
		[3890, 42],
		[3897, 1],
		[3904, 4],
		[3918, 2],
		[3932, 1],
		[3939, 9],
		[3946, 3],
		[3953, 2],
		[3960, 2],
		[3974, 3],
		[3981, 1],
		[4009, 1],
		[4023, 2],
		[4030, 32],
		[4037, 36],
		[4044, 5],
		[4051, 12],
		[4058, 1],
		[4065, 1],
		[4093, 12],
		[4100, 33],
		[4107, 8],
		[4114, 12],
		[4121, 14],
		[4128, 14],
		[4135, 9]
	],
	"esm": true,
	"cjs": false
}
