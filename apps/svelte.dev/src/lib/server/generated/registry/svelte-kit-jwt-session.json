{
	"name": "svelte-kit-jwt-session",
	"description": "SvelteKit JWT session hook for authentication.",
	"repo_url": "https://github.com/astralyazilim/svelte_kit_jwt_session",
	"authors": ["pisinsi"],
	"homepage": "https://github.com/astralyazilim/svelte_kit_jwt_session#readme",
	"downloads": 18,
	"updated": "2022-11-19T23:30:12.979Z",
	"tags": ["auth", "server"],
	"typescript": true,
	"version": "0.0.22",
	"svelte_range": "^3.44.0",
	"kit_range": "next",
	"last_rune_check_version": "0.0.22",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-kit-jwt-session",
				"version": "0.0.22",
				"size": 5787
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# sveltekit jwt session\n\n## installation\n\n```shell\n  // npm\n  npm install svelte-kit-jwt-session\n\n  // yarn\n  yarn add svelte-kit-jwt-session\n  \n  // pnpm \n  pnpm add svelte-kit-jwt-session\n\n```\n\n## Usage\n\nhooks.server/index.ts|js\n\n\n```ts\nimport { handleSession, type Payloads } from \"svelte-kit-jwt-session\";\n\nconst session = handleSession({\n    access: {\n        cookieName: \"allins_session\",\n        cookieOptions: {\n            path: \"/\",\n            maxAge: 60\n        },\n        secret: \"secretKeyThatIsNotOnGithub\"\n    },\n    refresh: {\n        cookieName: \"allins_session_reserved\",\n        cookieOptions: {\n            path: \"/\",\n            maxAge: 60 * 60 * 24 * 7\n        },\n        secret: 'ssssssh!'\n    }\n})\n\nexport const handle: Handle = session\n\n// if you want to use handle hook use sequence helper method\n// export const handle = sequence(anotherHook, session)\n```\n\n\nand app.d.ts \n```ts\ndeclare namespace App {\n\tinterface Locals {\n\t\tsession: import(\"svelte-kit-jwt-session\").LocalType;\n\t}\n\t// interface PageData {}\n\t// interface Error {}\n\t// interface Platform {}\n}\n\n```\n## Login\n\nroutes/login/+page.server.ts or whatever you want\n```ts\nimport { type Action, type Actions, redirect } from \"@sveltejs/kit\"\nimport { login  }from \"svelte-kit-jwt-session\";\n\nconst loginAction: Action = (event) => {\n   // do your logic ...\n\n   /**\n    * @param { import(\"svelte-kit-jwt-session\").Payloads }  payloads \n    */\n   login({ accessPayload: { sub: \"j@doe\" , role: \"admin\"}, refreshPayload: { sub: \"j@doe\"}})\n\n   throw redirect(302, \"/\")\n}\n\nexport const actions: {\n    login: loginAction\n}\n\n```\n\n## Access session\n\n+layout.server.ts\n```ts\n import type { ServerLoad } from \"@sveltejs/kit\";\n  export const load: ServerLoad = ({locals}) => {\n\n    // session accessible on locals.session\n\n    return {\n        session: locals.session\n    }\n  }\n```\n\n## Reauth\nif you want to renew your access token automatically upon expiration\n```ts\n\nconst session = handleSession({\n    access: {...},\n    refresh: {...},\n    /**\n     * @param {JWTPayload | string} refreshToken\n     * @return { import(\"svelte-kit-jwt-session\").Payloads }\n     */\n    reauth: (refreshTokenPayload) => {\n        // do your logic here\n        \n        \n        return {\n            accessPayload: refreshTokenPayload,\n            refreshPayload: refreshTokenPayload\n        }\n    }\n})\n\n\n```",
	"legacy_svelte": false,
	"downloads_history": [
		[3589, 1],
		[3596, 22],
		[3603, 21],
		[3610, 22],
		[3617, 1],
		[3624, 5],
		[3638, 1],
		[3645, 1],
		[3652, 5],
		[3659, 1],
		[3666, 23],
		[3673, 22],
		[3687, 6],
		[3694, 5],
		[3701, 1],
		[3715, 5],
		[3736, 2],
		[3743, 1],
		[3750, 3],
		[3757, 5],
		[3764, 4],
		[3771, 21],
		[3778, 45],
		[3785, 3],
		[3792, 2],
		[3799, 2],
		[3806, 3],
		[3813, 1],
		[3820, 5],
		[3827, 4],
		[3834, 3],
		[3841, 110],
		[3848, 2],
		[3855, 6],
		[3862, 5],
		[3869, 2],
		[3876, 2],
		[3883, 3],
		[3890, 30],
		[3897, 9],
		[3904, 5],
		[3911, 3],
		[3918, 7],
		[3925, 3],
		[3932, 5],
		[3939, 6],
		[3946, 1],
		[3953, 1],
		[3960, 8],
		[3967, 6],
		[3974, 6],
		[3981, 1],
		[3988, 2],
		[3995, 3],
		[4002, 4],
		[4016, 3],
		[4023, 2],
		[4030, 2],
		[4037, 30],
		[4044, 22],
		[4051, 10],
		[4065, 4],
		[4072, 1],
		[4079, 2],
		[4086, 2],
		[4093, 4],
		[4100, 64],
		[4107, 5],
		[4114, 18],
		[4121, 38],
		[4128, 9]
	]
}
