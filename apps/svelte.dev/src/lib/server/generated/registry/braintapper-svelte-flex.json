{
	"name": "braintapper-svelte-flex",
	"description": "Create flexbox rows and columns for Svelte layouts.",
	"repo_url": "https://github.com/braintapper/braintapper-svelte-flex",
	"authors": ["braintapper"],
	"homepage": "https://github.com/braintapper/braintapper-svelte-flex#readme",
	"downloads": 6,
	"updated": "2020-11-20T16:51:24.967Z",
	"tags": ["ui"],
	"github_stars": 2,
	"typescript": false,
	"version": "0.0.2",
	"svelte_range": "^3.0.0",
	"last_rune_check_version": "0.0.2",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "braintapper-svelte-flex",
				"version": "0.0.2",
				"size": 61588
			}
		],
		"dependencies": [],
		"circular": []
	},
	"legacy_svelte": true,
	"readme": "# braintapper-svelte-flex\n\nSome Flexbox components for svelte.\n\nInspired by the [layout components](https://material.angularjs.org/latest/layout/introduction) of [AngularJS Material](https://material.angularjs.org/). \n\nUnlike the AngularJS layout components, these have no responsive breakpoints and don't have a flex-order attribute.\n\n## Usage\n\n\n### Component Import\n\nImport the components you need in your `<script>` tag:\n\n```\n  import { FlexColumn, FlexColumnCell, FlexRow, FlexRowCell } from \"braintapper-svelte-flex\";\n```\n\n\n### Example Markup\n\n```\n  <!-- this creates a row with 3 cells -->\n  <FlexRow>\n    <FlexRowCell flex=\"initial\" >\n      some content here\n    </FlexRowCell>\n    <FlexRowCell flex>\n      some content here\n    </FlexRowCell>\n    <FlexRowCell flex=\"initial\">\n      some content here\n    </FlexRowCell>\n  </FlexRow>\n```\n\n\n### Flex Prop Values\n\nThe `<FlexRowCell>` and `<FlexColumnCell>` take a flex prop/attribute.\n\n\n#### Example `flex` attribute values\n\n\n0 - 100 in increments of 5 translate to width in %\n\nExample: `<FlexRowCell flex={85}>`\n\n---\n\n33 and 66 for three row/column layouts\n\nExample: `<FlexRowCell flex={33}>`\n\n---\n\nWhen flex is present with an unmatched value in its CSS, it will fill the row/cell as required:\n\nExample: `<FlexRowCell flex>`\n\n---\n\nWhen flex is `initial`, retains the initial height or width\n\nExample: `<FlexRowCell flex=\"initial\">`\n\n---\n\nWhen flex is `auto`, starts with its initial height or width but will grow or shrink as needed\n\nExample: `<FlexRowCell flex=\"auto\">`\n\n--- \n\nWhen flex is `grow`, will shrink/grow as needed. Starts with a size of 100%. Same as `flex=\"100\"`\n\nExample: `<FlexRowCell flex=\"grow\">`\n\n---\n\nWhen flex is `nogrow`, starts with its initial height or width but will only shrink as needed\n\nExample: `<FlexRowCell flex=\"nogrow\">`\n\n---\n\nWhen flex is `noshrink`, starts with its initial height or width but will only grow as needed\n\nExample: `<FlexRowCell flex=\"noshrink\">`\n\nLicense: MIT",
	"downloads_history": [
		[3589, 13],
		[3596, 12],
		[3603, 6],
		[3610, 6],
		[3617, 2],
		[3624, 7],
		[3631, 12],
		[3638, 20],
		[3645, 2],
		[3652, 7],
		[3659, 1],
		[3666, 8],
		[3673, 7],
		[3687, 6],
		[3694, 7],
		[3701, 7],
		[3708, 6],
		[3715, 5],
		[3722, 18],
		[3736, 1],
		[3743, 8],
		[3750, 2],
		[3764, 12],
		[3771, 7],
		[3778, 1],
		[3785, 8],
		[3792, 8],
		[3799, 19],
		[3806, 9],
		[3813, 6],
		[3820, 1],
		[3827, 13],
		[3841, 8],
		[3848, 1],
		[3855, 24],
		[3862, 4],
		[3869, 8],
		[3876, 8],
		[3883, 1],
		[3890, 4],
		[3897, 3],
		[3904, 5],
		[3911, 12],
		[3918, 3],
		[3925, 2],
		[3932, 6],
		[3946, 3],
		[3953, 2],
		[3960, 6],
		[3967, 3],
		[3995, 1],
		[4023, 5],
		[4030, 4],
		[4037, 3],
		[4044, 3],
		[4051, 3],
		[4058, 1],
		[4072, 2],
		[4086, 2],
		[4093, 11],
		[4100, 6],
		[4107, 1],
		[4114, 6],
		[4121, 5],
		[4128, 3]
	],
	"esm": true,
	"cjs": false
}
