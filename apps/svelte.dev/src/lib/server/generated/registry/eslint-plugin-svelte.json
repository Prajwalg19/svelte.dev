{
	"name": "eslint-plugin-svelte",
	"description": "Lint Svelte code using AST.",
	"repo_url": "https://github.com/sveltejs/eslint-plugin-svelte",
	"authors": ["jounqin", "conduitry", "ota-meshi", "svelte-admin", "baseballyama"],
	"homepage": "https://sveltejs.github.io/eslint-plugin-svelte",
	"downloads": 481459,
	"updated": "2025-04-04T00:17:55.069Z",
	"tags": ["tooling"],
	"github_stars": 334,
	"typescript": true,
	"version": "3.5.1",
	"svelte_range": "^3.37.0 || ^4.0.0 || ^5.0.0",
	"last_rune_check_version": "3.5.1",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "eslint-plugin-svelte",
				"version": "3.5.1",
				"size": 761285
			},
			{
				"name": "@eslint-community/eslint-utils",
				"version": "4.7.0",
				"size": 482928
			},
			{
				"name": "eslint-visitor-keys",
				"version": "3.4.3",
				"size": 32278
			},
			{
				"name": "@jridgewell/sourcemap-codec",
				"version": "1.5.0",
				"size": 112815
			},
			{
				"name": "esutils",
				"version": "2.0.3",
				"size": 50582
			},
			{
				"name": "known-css-properties",
				"version": "0.35.0",
				"size": 37356
			},
			{
				"name": "postcss",
				"version": "8.5.3",
				"size": 201969
			},
			{
				"name": "nanoid",
				"version": "3.3.11",
				"size": 32583
			},
			{
				"name": "picocolors",
				"version": "1.1.1",
				"size": 6373
			},
			{
				"name": "source-map-js",
				"version": "1.2.1",
				"size": 139872
			},
			{
				"name": "postcss-load-config",
				"version": "3.1.4",
				"size": 22743
			},
			{
				"name": "yaml",
				"version": "1.10.2",
				"size": 448149
			},
			{
				"name": "lilconfig",
				"version": "2.1.0",
				"size": 16587
			},
			{
				"name": "postcss-safe-parser",
				"version": "7.0.1",
				"size": 5431
			},
			{
				"name": "semver",
				"version": "7.7.1",
				"size": 96674
			},
			{
				"name": "svelte-eslint-parser",
				"version": "1.1.3",
				"size": 340046
			},
			{
				"name": "eslint-scope",
				"version": "8.3.0",
				"size": 155422
			},
			{
				"name": "esrecurse",
				"version": "4.3.0",
				"size": 13527
			},
			{
				"name": "estraverse",
				"version": "5.3.0",
				"size": 37094
			},
			{
				"name": "eslint-visitor-keys",
				"version": "4.2.0",
				"size": 36136
			},
			{
				"name": "espree",
				"version": "10.3.0",
				"size": 79348
			},
			{
				"name": "acorn",
				"version": "8.14.1",
				"size": 547473
			},
			{
				"name": "acorn-jsx",
				"version": "5.3.2",
				"size": 24385
			},
			{
				"name": "postcss-scss",
				"version": "4.0.9",
				"size": 19425
			},
			{
				"name": "postcss-selector-parser",
				"version": "7.1.0",
				"size": 187187
			},
			{
				"name": "cssesc",
				"version": "3.0.0",
				"size": 17488
			},
			{
				"name": "util-deprecate",
				"version": "1.0.2"
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[0, 3],
			[0, 4],
			[0, 5],
			[0, 6],
			[6, 7],
			[6, 8],
			[6, 9],
			[0, 10],
			[10, 11],
			[10, 12],
			[0, 13],
			[0, 14],
			[0, 15],
			[15, 16],
			[16, 17],
			[17, 18],
			[16, 18],
			[15, 19],
			[15, 20],
			[20, 21],
			[20, 22],
			[20, 19],
			[15, 6],
			[15, 23],
			[15, 24],
			[24, 25],
			[24, 26]
		],
		"circular": []
	},
	"readme": "<!--DOCS_IGNORE_START-->\n\n[![NPM license](https://img.shields.io/npm/l/eslint-plugin-svelte.svg)](https://www.npmjs.com/package/eslint-plugin-svelte)\n[![NPM version](https://img.shields.io/npm/v/eslint-plugin-svelte.svg)](https://www.npmjs.com/package/eslint-plugin-svelte)\n[![NPM downloads](https://img.shields.io/badge/dynamic/json.svg?label=downloads&colorB=green&suffix=/day&query=$.downloads&uri=https://api.npmjs.org//downloads/point/last-day/eslint-plugin-svelte&maxAge=3600)](http://www.npmtrends.com/eslint-plugin-svelte)\n[![NPM downloads](https://img.shields.io/npm/dw/eslint-plugin-svelte.svg)](http://www.npmtrends.com/eslint-plugin-svelte)\n[![NPM downloads](https://img.shields.io/npm/dm/eslint-plugin-svelte.svg)](http://www.npmtrends.com/eslint-plugin-svelte)\n[![NPM downloads](https://img.shields.io/npm/dy/eslint-plugin-svelte.svg)](http://www.npmtrends.com/eslint-plugin-svelte)\n[![NPM downloads](https://img.shields.io/npm/dt/eslint-plugin-svelte.svg)](http://www.npmtrends.com/eslint-plugin-svelte)\n[![Build Status](https://github.com/sveltejs/eslint-plugin-svelte/workflows/CI/badge.svg?branch=main)](https://github.com/sveltejs/eslint-plugin-svelte/actions?query=workflow%3ACI)\n\n[![type-coverage](https://img.shields.io/badge/dynamic/json.svg?label=type-coverage&prefix=%E2%89%A5&suffix=%&query=$.typeCoverage.atLeast&uri=https%3A%2F%2Fraw.githubusercontent.com%2Fsveltejs%2Feslint-plugin-svelte%2Fmain%2Fpackage.json)](https://github.com/plantain-00/type-coverage)\n[![Conventional Commits](https://img.shields.io/badge/conventional%20commits-1.0.0-yellow.svg)](https://conventionalcommits.org)\n[![Code Style: Prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg)](https://github.com/prettier/prettier)\n[![changesets](https://img.shields.io/badge/maintained%20with-changesets-176de3.svg)](https://github.com/atlassian/changesets)\n\n<div align=\"center\">\n\n# eslint-plugin-svelte\n\n## ESLint plugin for Svelte using AST\n\n[Live Demo](https://eslint-online-playground.netlify.app/#eslint-plugin-svelte%20with%20typescript) •\n[Documentation](https://sveltejs.github.io/eslint-plugin-svelte/) •\n[Discord](https://svelte.dev/chat)\n\n</div>\n\n<!--DOCS_IGNORE_END-->\n\n## Introduction\n\n`eslint-plugin-svelte` is the official [ESLint](https://eslint.org/) plugin for [Svelte](https://svelte.dev/).  \nIt leverages the AST generated by [svelte-eslint-parser](https://github.com/sveltejs/svelte-eslint-parser) to provide custom linting for Svelte.  \nNote that `eslint-plugin-svelte` and `svelte-eslint-parser` cannot be used alongside [eslint-plugin-svelte3](https://github.com/sveltejs/eslint-plugin-svelte3).\n\n<!--USAGE_SECTION_START-->\n<!--USAGE_GUIDE_START-->\n\n## Installation\n\n```bash\nnpm install --save-dev svelte eslint eslint-plugin-svelte globals\n```\n\n> [!NOTE]\n>\n> **Requirements:**\n>\n> - ESLint v8.57.1, v9.0.0, and above\n> - Node.js v18.18.0, v20.9.0, v21.1.0 and above\n\n## Usage\n\nUse the `eslint.config.js` file to configure rules. For more details, see the [ESLint documentation](https://eslint.org/docs/latest/use/configure/configuration-files-new).\n\n### Configuration\n\n#### JavaScript project\n\n```js\n// eslint.config.js\nimport js from '@eslint/js';\nimport svelte from 'eslint-plugin-svelte';\nimport globals from 'globals';\nimport svelteConfig from './svelte.config.js';\n\n/** @type {import('eslint').Linter.Config[]} */\nexport default [\n  js.configs.recommended,\n  ...svelte.configs.recommended,\n  {\n    languageOptions: {\n      globals: {\n        ...globals.browser,\n        ...globals.node // Add this if you are using SvelteKit in non-SPA mode\n      }\n    }\n  },\n  {\n    files: ['**/*.svelte', '**/*.svelte.js'],\n    languageOptions: {\n      parserOptions: {\n        // We recommend importing and specifying svelte.config.js.\n        // By doing so, some rules in eslint-plugin-svelte will automatically read the configuration and adjust their behavior accordingly.\n        // While certain Svelte settings may be statically loaded from svelte.config.js even if you don’t specify it,\n        // explicitly specifying it ensures better compatibility and functionality.\n        svelteConfig\n      }\n    }\n  },\n  {\n    rules: {\n      // Override or add rule settings here, such as:\n      // 'svelte/rule-name': 'error'\n    }\n  }\n];\n```\n\n#### TypeScript project\n\n```shell\nnpm install --save-dev typescript-eslint\n```\n\n```js\n// eslint.config.js\nimport js from '@eslint/js';\nimport svelte from 'eslint-plugin-svelte';\nimport globals from 'globals';\nimport ts from 'typescript-eslint';\nimport svelteConfig from './svelte.config.js';\n\nexport default ts.config(\n  js.configs.recommended,\n  ...ts.configs.recommended,\n  ...svelte.configs.recommended,\n  {\n    languageOptions: {\n      globals: {\n        ...globals.browser,\n        ...globals.node\n      }\n    }\n  },\n  {\n    files: ['**/*.svelte', '**/*.svelte.ts', '**/*.svelte.js'],\n    // See more details at: https://typescript-eslint.io/packages/parser/\n    languageOptions: {\n      parserOptions: {\n        projectService: true,\n        extraFileExtensions: ['.svelte'], // Add support for additional file extensions, such as .svelte\n        parser: ts.parser,\n        // Specify a parser for each language, if needed:\n        // parser: {\n        //   ts: ts.parser,\n        //   js: espree,    // Use espree for .js files (add: import espree from 'espree')\n        //   typescript: ts.parser\n        // },\n\n        // We recommend importing and specifying svelte.config.js.\n        // By doing so, some rules in eslint-plugin-svelte will automatically read the configuration and adjust their behavior accordingly.\n        // While certain Svelte settings may be statically loaded from svelte.config.js even if you don’t specify it,\n        // explicitly specifying it ensures better compatibility and functionality.\n        svelteConfig\n      }\n    }\n  },\n  {\n    rules: {\n      // Override or add rule settings here, such as:\n      // 'svelte/rule-name': 'error'\n    }\n  }\n);\n```\n\n> [!WARNING]\n> The TypeScript parser uses a singleton internally, meaning it only respects the options provided during its initial initialization.\n> If you try to change the options for a different file or override them later, the parser will ignore the new options, which may lead to errors.\n> For more context, see [typescript-eslint/typescript-eslint#6778](https://github.com/typescript-eslint/typescript-eslint/issues/6778).\n\n### Available Configurations\n\nThis plugin provides the following configurations:\n\n- **`eslintPluginSvelte.configs.base`** ... Enables correct Svelte parsing.\n- **`eslintPluginSvelte.configs.recommended`** ... Includes `base` configuration, plus rules to prevent errors or unintended behavior.\n- **`eslintPluginSvelte.configs.prettier`** ... Disables rules that may conflict with [Prettier](https://prettier.io/). You still need to configure Prettier to work with Svelte manually, for example, by using [prettier-plugin-svelte](https://github.com/sveltejs/prettier-plugin-svelte).\n- **`eslintPluginSvelte.configs.all`** ... Includes all available rules. **Note:** This configuration is not recommended for production use, as it changes with every minor and major version of `eslint-plugin-svelte`. Use at your own risk.\n\nFor more details, see [the rule list](https://sveltejs.github.io/eslint-plugin-svelte/rules/) to explore the rules provided by this plugin.\n\n### settings.svelte\n\nYou can customize the behavior of this plugin using specific settings.\n\n```js\n// eslint.config.js\nexport default [\n  // ...\n  {\n    settings: {\n      svelte: {\n        // Specifies an array of rules to ignore reports within the template.\n        // For example, use this to disable rules in the template that may produce unavoidable false positives.\n        ignoreWarnings: [\n          '@typescript-eslint/no-unsafe-assignment',\n          '@typescript-eslint/no-unsafe-member-access'\n        ],\n        // Specifies options for Svelte compilation.\n        // This affects rules that rely on Svelte compilation,\n        // such as svelte/valid-compile and svelte/no-unused-svelte-ignore.\n        // Note that this setting does not impact ESLint’s custom parser.\n        compileOptions: {\n          // Specifies options related to PostCSS. You can disable the PostCSS processing by setting it to false.\n          postcss: {\n            // Specifies the path to the directory that contains the PostCSS configuration.\n            configFilePath: './path/to/my/postcss.config.js'\n          }\n        },\n        // Even if settings.svelte.kit is not specified, the rules will attempt to load information from svelte.config.js.\n        // However, if the default behavior does not work as expected, you should specify settings.svelte.kit explicitly.\n        // If you are using SvelteKit with a non-default configuration, you need to set the following options.\n        // The schema is a subset of SvelteKit’s configuration, so refer to the SvelteKit documentation for more details.\n        // https://svelte.dev/docs/kit/configuration\n        kit: {\n          files: {\n            routes: 'src/routes'\n          }\n        }\n      }\n    }\n  }\n  // ...\n];\n```\n\n## Editor Integrations\n\n**Visual Studio Code**  \nInstall [dbaeumer.vscode-eslint](https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint).  \nConfigure `.svelte` files in `.vscode/settings.json`:\n\n```json\n{\n  \"eslint.validate\": [\"javascript\", \"javascriptreact\", \"svelte\"]\n}\n```\n\n<!--USAGE_GUIDE_END-->\n<!--USAGE_SECTION_END-->\n\n## Migration Guide\n\nIf you’re migrating from `eslint-plugin-svelte` v1 or [`@ota-meshi/eslint-plugin-svelte`](https://www.npmjs.com/package/@ota-meshi/eslint-plugin-svelte), see the [migration guide](https://sveltejs.github.io/eslint-plugin-svelte/migration/).\n\n## Versioning Policy\n\nThis project follows [Semantic Versioning](https://semver.org/). Unlike [ESLint’s versioning policy](https://github.com/eslint/eslint#semantic-versioning-policy), new rules may be added to the recommended config in minor releases. If these rules cause unwanted warnings, you can disable them.\n\n<!--DOCS_IGNORE_END-->\n\n## Rules\n\n<!-- prettier-ignore-start -->\n<!--RULES_SECTION_START-->\n\n:wrench: Indicates that the rule is fixable, and using `--fix` option on the [command line](https://eslint.org/docs/user-guide/command-line-interface#fixing-problems) can automatically fix some of the reported problems.  \n:bulb: Indicates that some problems reported by the rule are manually fixable by editor [suggestions](https://eslint.org/docs/developer-guide/working-with-rules#providing-suggestions).  \n:star: Indicates that the rule is included in the `plugin:svelte/recommended` config.\n\n<!--RULES_TABLE_START-->\n\n## Possible Errors\n\nThese rules relate to possible syntax or logic errors in Svelte code:\n\n| Rule ID | Description |    |\n|:--------|:------------|:---|\n| [svelte/infinite-reactive-loop](https://sveltejs.github.io/eslint-plugin-svelte/rules/infinite-reactive-loop/) | Svelte runtime prevents calling the same reactive statement twice in a microtask. But between different microtask, it doesn't prevent. | :star: |\n| [svelte/no-dom-manipulating](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-dom-manipulating/) | disallow DOM manipulating | :star: |\n| [svelte/no-dupe-else-if-blocks](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-dupe-else-if-blocks/) | disallow duplicate conditions in `{#if}` / `{:else if}` chains | :star: |\n| [svelte/no-dupe-on-directives](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-dupe-on-directives/) | disallow duplicate `on:` directives | :star: |\n| [svelte/no-dupe-style-properties](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-dupe-style-properties/) | disallow duplicate style properties | :star: |\n| [svelte/no-dupe-use-directives](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-dupe-use-directives/) | disallow duplicate `use:` directives | :star: |\n| [svelte/no-not-function-handler](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-not-function-handler/) | disallow use of not function in event handler | :star: |\n| [svelte/no-object-in-text-mustaches](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-object-in-text-mustaches/) | disallow objects in text mustache interpolation | :star: |\n| [svelte/no-raw-special-elements](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-raw-special-elements/) | Checks for invalid raw HTML elements | :star::wrench: |\n| [svelte/no-reactive-reassign](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-reactive-reassign/) | disallow reassigning reactive values | :star: |\n| [svelte/no-shorthand-style-property-overrides](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-shorthand-style-property-overrides/) | disallow shorthand style properties that override related longhand properties | :star: |\n| [svelte/no-store-async](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-store-async/) | disallow using async/await inside svelte stores because it causes issues with the auto-unsubscribing features | :star: |\n| [svelte/no-unknown-style-directive-property](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-unknown-style-directive-property/) | disallow unknown `style:property` | :star: |\n| [svelte/require-store-callbacks-use-set-param](https://sveltejs.github.io/eslint-plugin-svelte/rules/require-store-callbacks-use-set-param/) | store callbacks must use `set` param | :bulb: |\n| [svelte/require-store-reactive-access](https://sveltejs.github.io/eslint-plugin-svelte/rules/require-store-reactive-access/) | disallow to use of the store itself as an operand. Need to use $ prefix or get function. | :star::wrench: |\n| [svelte/valid-compile](https://sveltejs.github.io/eslint-plugin-svelte/rules/valid-compile/) | disallow warnings when compiling. |  |\n| [svelte/valid-style-parse](https://sveltejs.github.io/eslint-plugin-svelte/rules/valid-style-parse/) | require valid style element parsing |  |\n\n## Security Vulnerability\n\nThese rules relate to security vulnerabilities in Svelte code:\n\n| Rule ID | Description |    |\n|:--------|:------------|:---|\n| [svelte/no-at-html-tags](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-at-html-tags/) | disallow use of `{@html}` to prevent XSS attack | :star: |\n| [svelte/no-target-blank](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-target-blank/) | disallow `target=\"_blank\"` attribute without `rel=\"noopener noreferrer\"` |  |\n\n## Best Practices\n\nThese rules relate to better ways of doing things to help you avoid problems:\n\n| Rule ID | Description |    |\n|:--------|:------------|:---|\n| [svelte/block-lang](https://sveltejs.github.io/eslint-plugin-svelte/rules/block-lang/) | disallows the use of languages other than those specified in the configuration for the lang attribute of `<script>` and `<style>` blocks. | :bulb: |\n| [svelte/button-has-type](https://sveltejs.github.io/eslint-plugin-svelte/rules/button-has-type/) | disallow usage of button without an explicit type attribute |  |\n| [svelte/no-at-debug-tags](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-at-debug-tags/) | disallow the use of `{@debug}` | :star::bulb: |\n| [svelte/no-ignored-unsubscribe](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-ignored-unsubscribe/) | disallow ignoring the unsubscribe method returned by the `subscribe()` on Svelte stores. |  |\n| [svelte/no-immutable-reactive-statements](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-immutable-reactive-statements/) | disallow reactive statements that don't reference reactive values. | :star: |\n| [svelte/no-inline-styles](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-inline-styles/) | disallow attributes and directives that produce inline styles |  |\n| [svelte/no-inspect](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-inspect/) | Warns against the use of `$inspect` directive | :star: |\n| [svelte/no-reactive-functions](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-reactive-functions/) | it's not necessary to define functions in reactive statements | :star::bulb: |\n| [svelte/no-reactive-literals](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-reactive-literals/) | don't assign literal values in reactive statements | :star::bulb: |\n| [svelte/no-svelte-internal](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-svelte-internal/) | svelte/internal will be removed in Svelte 6. | :star: |\n| [svelte/no-unnecessary-state-wrap](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-unnecessary-state-wrap/) | Disallow unnecessary $state wrapping of reactive classes | :star::bulb: |\n| [svelte/no-unused-class-name](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-unused-class-name/) | disallow the use of a class in the template without a corresponding style |  |\n| [svelte/no-unused-props](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-unused-props/) | Warns about defined Props properties that are unused | :star: |\n| [svelte/no-unused-svelte-ignore](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-unused-svelte-ignore/) | disallow unused svelte-ignore comments | :star: |\n| [svelte/no-useless-children-snippet](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-useless-children-snippet/) | disallow explicit children snippet where it's not needed | :star: |\n| [svelte/no-useless-mustaches](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-useless-mustaches/) | disallow unnecessary mustache interpolations | :star::wrench: |\n| [svelte/prefer-const](https://sveltejs.github.io/eslint-plugin-svelte/rules/prefer-const/) | Require `const` declarations for variables that are never reassigned after declared | :wrench: |\n| [svelte/prefer-destructured-store-props](https://sveltejs.github.io/eslint-plugin-svelte/rules/prefer-destructured-store-props/) | destructure values from object stores for better change tracking & fewer redraws | :bulb: |\n| [svelte/require-each-key](https://sveltejs.github.io/eslint-plugin-svelte/rules/require-each-key/) | require keyed `{#each}` block | :star: |\n| [svelte/require-event-dispatcher-types](https://sveltejs.github.io/eslint-plugin-svelte/rules/require-event-dispatcher-types/) | require type parameters for `createEventDispatcher` | :star: |\n| [svelte/require-optimized-style-attribute](https://sveltejs.github.io/eslint-plugin-svelte/rules/require-optimized-style-attribute/) | require style attributes that can be optimized |  |\n| [svelte/require-stores-init](https://sveltejs.github.io/eslint-plugin-svelte/rules/require-stores-init/) | require initial value in store |  |\n| [svelte/valid-each-key](https://sveltejs.github.io/eslint-plugin-svelte/rules/valid-each-key/) | enforce keys to use variables defined in the `{#each}` block | :star: |\n\n## Stylistic Issues\n\nThese rules relate to style guidelines, and are therefore quite subjective:\n\n| Rule ID | Description |    |\n|:--------|:------------|:---|\n| [svelte/consistent-selector-style](https://sveltejs.github.io/eslint-plugin-svelte/rules/consistent-selector-style/) | enforce a consistent style for CSS selectors |  |\n| [svelte/derived-has-same-inputs-outputs](https://sveltejs.github.io/eslint-plugin-svelte/rules/derived-has-same-inputs-outputs/) | derived store should use same variable names between values and callback | :bulb: |\n| [svelte/first-attribute-linebreak](https://sveltejs.github.io/eslint-plugin-svelte/rules/first-attribute-linebreak/) | enforce the location of first attribute | :wrench: |\n| [svelte/html-closing-bracket-new-line](https://sveltejs.github.io/eslint-plugin-svelte/rules/html-closing-bracket-new-line/) | Require or disallow a line break before tag's closing brackets | :wrench: |\n| [svelte/html-closing-bracket-spacing](https://sveltejs.github.io/eslint-plugin-svelte/rules/html-closing-bracket-spacing/) | require or disallow a space before tag's closing brackets | :wrench: |\n| [svelte/html-quotes](https://sveltejs.github.io/eslint-plugin-svelte/rules/html-quotes/) | enforce quotes style of HTML attributes | :wrench: |\n| [svelte/html-self-closing](https://sveltejs.github.io/eslint-plugin-svelte/rules/html-self-closing/) | enforce self-closing style | :wrench: |\n| [svelte/indent](https://sveltejs.github.io/eslint-plugin-svelte/rules/indent/) | enforce consistent indentation | :wrench: |\n| [svelte/max-attributes-per-line](https://sveltejs.github.io/eslint-plugin-svelte/rules/max-attributes-per-line/) | enforce the maximum number of attributes per line | :wrench: |\n| [svelte/mustache-spacing](https://sveltejs.github.io/eslint-plugin-svelte/rules/mustache-spacing/) | enforce unified spacing in mustache | :wrench: |\n| [svelte/no-extra-reactive-curlies](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-extra-reactive-curlies/) | disallow wrapping single reactive statements in curly braces | :bulb: |\n| [svelte/no-restricted-html-elements](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-restricted-html-elements/) | disallow specific HTML elements |  |\n| [svelte/no-spaces-around-equal-signs-in-attribute](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-spaces-around-equal-signs-in-attribute/) | disallow spaces around equal signs in attribute | :wrench: |\n| [svelte/prefer-class-directive](https://sveltejs.github.io/eslint-plugin-svelte/rules/prefer-class-directive/) | require class directives instead of ternary expressions | :wrench: |\n| [svelte/prefer-style-directive](https://sveltejs.github.io/eslint-plugin-svelte/rules/prefer-style-directive/) | require style directives instead of style attribute | :wrench: |\n| [svelte/shorthand-attribute](https://sveltejs.github.io/eslint-plugin-svelte/rules/shorthand-attribute/) | enforce use of shorthand syntax in attribute | :wrench: |\n| [svelte/shorthand-directive](https://sveltejs.github.io/eslint-plugin-svelte/rules/shorthand-directive/) | enforce use of shorthand syntax in directives | :wrench: |\n| [svelte/sort-attributes](https://sveltejs.github.io/eslint-plugin-svelte/rules/sort-attributes/) | enforce order of attributes | :wrench: |\n| [svelte/spaced-html-comment](https://sveltejs.github.io/eslint-plugin-svelte/rules/spaced-html-comment/) | enforce consistent spacing after the `<!--` and before the `-->` in a HTML comment | :wrench: |\n\n## Extension Rules\n\nThese rules extend the rules provided by ESLint itself, or other plugins to work well in Svelte:\n\n| Rule ID | Description |    |\n|:--------|:------------|:---|\n| [svelte/no-inner-declarations](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-inner-declarations/) | disallow variable or `function` declarations in nested blocks | :star: |\n| [svelte/no-trailing-spaces](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-trailing-spaces/) | disallow trailing whitespace at the end of lines | :wrench: |\n\n## SvelteKit\n\nThese rules relate to SvelteKit and its best Practices.\n\n| Rule ID | Description |    |\n|:--------|:------------|:---|\n| [svelte/no-export-load-in-svelte-module-in-kit-pages](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-export-load-in-svelte-module-in-kit-pages/) | disallow exporting load functions in `*.svelte` module in SvelteKit page components. | :star: |\n| [svelte/no-navigation-without-base](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-navigation-without-base/) | disallow using navigation (links, goto, pushState, replaceState) without the base path |  |\n| [svelte/valid-prop-names-in-kit-pages](https://sveltejs.github.io/eslint-plugin-svelte/rules/valid-prop-names-in-kit-pages/) | disallow props other than data or errors in SvelteKit page components. | :star: |\n\n## Experimental\n\n:warning: These rules are considered experimental and may change or be removed in the future:\n\n| Rule ID | Description |    |\n|:--------|:------------|:---|\n| [svelte/experimental-require-slot-types](https://sveltejs.github.io/eslint-plugin-svelte/rules/experimental-require-slot-types/) | require slot type declaration using the `$$Slots` interface |  |\n| [svelte/experimental-require-strict-events](https://sveltejs.github.io/eslint-plugin-svelte/rules/experimental-require-strict-events/) | require the strictEvents attribute on `<script>` tags |  |\n\n## System\n\nThese rules relate to this plugin works:\n\n| Rule ID | Description |    |\n|:--------|:------------|:---|\n| [svelte/comment-directive](https://sveltejs.github.io/eslint-plugin-svelte/rules/comment-directive/) | support comment-directives in HTML template | :star: |\n| [svelte/system](https://sveltejs.github.io/eslint-plugin-svelte/rules/system/) | system rule for working this plugin | :star: |\n\n## Deprecated\n\n- :warning: We're going to remove deprecated rules in the next major release. Please migrate to successor/new rules.\n- :innocent: We don't fix bugs which are in deprecated rules since we don't have enough resources.\n\n| Rule ID | Replaced by |\n|:--------|:------------|\n| [svelte/@typescript-eslint/no-unnecessary-condition](https://sveltejs.github.io/eslint-plugin-svelte/rules/@typescript-eslint/no-unnecessary-condition/) | This rule is no longer needed when using svelte-eslint-parser>=v0.19.0. |\n| [svelte/no-dynamic-slot-name](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-dynamic-slot-name/) | Now Svelte compiler itself throws an compile error. |\n| [svelte/no-goto-without-base](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-goto-without-base/) | [svelte/no-navigation-without-base](https://sveltejs.github.io/eslint-plugin-svelte/rules/no-navigation-without-base/) |\n\n<!--RULES_TABLE_END-->\n<!--RULES_SECTION_END-->\n<!-- prettier-ignore-end -->\n\n<!--DOCS_IGNORE_START-->\n\n## Contributing\n\nContributions are welcome! Please open an issue or submit a PR. For more details, see [CONTRIBUTING.md](./CONTRIBUTING.md).  \nRefer to [svelte-eslint-parser](https://github.com/sveltejs/svelte-eslint-parser) for AST details.\n\n<!--DOCS_IGNORE_END-->\n\n## License\n\nSee [LICENSE](LICENSE) (MIT).\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3589, 117670],
		[3596, 176577],
		[3603, 172618],
		[3610, 168966],
		[3617, 185913],
		[3624, 198512],
		[3631, 210215],
		[3638, 206116],
		[3645, 99047],
		[3652, 148520],
		[3659, 204257],
		[3666, 252598],
		[3673, 213347],
		[3680, 206489],
		[3687, 229339],
		[3694, 235324],
		[3701, 246648],
		[3708, 231586],
		[3715, 229765],
		[3722, 247223],
		[3729, 281326],
		[3736, 228488],
		[3743, 262398],
		[3750, 289711],
		[3757, 285388],
		[3764, 284828],
		[3771, 269720],
		[3778, 264527],
		[3785, 295116],
		[3792, 275758],
		[3799, 287602],
		[3806, 298427],
		[3813, 338433],
		[3820, 329942],
		[3827, 333942],
		[3834, 307730],
		[3841, 313682],
		[3848, 303124],
		[3855, 323453],
		[3862, 309246],
		[3869, 293251],
		[3876, 280774],
		[3883, 300322],
		[3890, 294920],
		[3897, 296783],
		[3904, 308335],
		[3911, 330743],
		[3918, 344379],
		[3925, 321685],
		[3932, 338884],
		[3939, 338216],
		[3946, 361297],
		[3953, 344506],
		[3960, 317731],
		[3967, 337050],
		[3974, 364213],
		[3981, 365389],
		[3988, 374506],
		[3995, 367441],
		[4002, 342490],
		[4009, 215024],
		[4016, 234261],
		[4023, 349722],
		[4030, 378997],
		[4037, 384198],
		[4044, 364223],
		[4051, 394149],
		[4058, 388175],
		[4065, 378122],
		[4072, 411452],
		[4079, 429718],
		[4086, 441213],
		[4093, 453842],
		[4100, 439416],
		[4107, 506429],
		[4114, 481459],
		[4121, 425007],
		[4128, 420695]
	]
}
