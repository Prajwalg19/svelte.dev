{
	"name": "@kyoheiu/svelte-toast",
	"description": "Display simple toast notifications in Svelte applications.",
	"repo_url": "https://github.com/kyoheiu/svelte-toast",
	"authors": ["kyoheiu"],
	"homepage": "https://github.com/kyoheiu/svelte-toast#readme",
	"downloads": 5,
	"updated": "2023-09-22T21:28:00.172Z",
	"tags": ["ui"],
	"typescript": true,
	"version": "0.1.0",
	"svelte_range": "^3.57.0 || ^4.0.0",
	"kit_range": "^1.21.0",
	"last_rune_check_version": "0.1.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@kyoheiu/svelte-toast",
				"version": "0.1.0",
				"size": 102778
			},
			{
				"name": "zx",
				"version": "7.2.3",
				"size": 76445
			},
			{
				"name": "fx",
				"version": "35.0.0",
				"size": 153557
			},
			{
				"name": "yaml",
				"version": "2.7.1",
				"size": 682531
			},
			{
				"name": "chalk",
				"version": "5.4.1",
				"size": 44242
			},
			{
				"name": "which",
				"version": "3.0.1",
				"size": 7472
			},
			{
				"name": "isexe",
				"version": "2.0.0"
			},
			{
				"name": "globby",
				"version": "13.2.2",
				"size": 25146
			},
			{
				"name": "slash",
				"version": "4.0.0",
				"size": 3834
			},
			{
				"name": "ignore",
				"version": "5.3.2",
				"size": 53630
			},
			{
				"name": "merge2",
				"version": "1.4.1",
				"size": 8897
			},
			{
				"name": "dir-glob",
				"version": "3.0.1",
				"size": 5417
			},
			{
				"name": "path-type",
				"version": "4.0.0",
				"size": 5407
			},
			{
				"name": "fast-glob",
				"version": "3.3.3",
				"size": 98396
			},
			{
				"name": "@nodelib/fs.stat",
				"version": "2.0.5",
				"size": 11845
			},
			{
				"name": "@nodelib/fs.walk",
				"version": "1.2.8",
				"size": 26377
			},
			{
				"name": "fastq",
				"version": "1.19.1",
				"size": 45922
			},
			{
				"name": "reusify",
				"version": "1.1.0",
				"size": 11696
			},
			{
				"name": "@nodelib/fs.scandir",
				"version": "2.1.5",
				"size": 22155
			},
			{
				"name": "run-parallel",
				"version": "1.2.0",
				"size": 6563
			},
			{
				"name": "queue-microtask",
				"version": "1.2.3",
				"size": 8367
			},
			{
				"name": "glob-parent",
				"version": "5.1.2",
				"size": 12134
			},
			{
				"name": "is-glob",
				"version": "4.0.3",
				"size": 13609
			},
			{
				"name": "is-extglob",
				"version": "2.1.1"
			},
			{
				"name": "micromatch",
				"version": "4.0.8",
				"size": 56599
			},
			{
				"name": "braces",
				"version": "3.0.3",
				"size": 44635
			},
			{
				"name": "fill-range",
				"version": "7.1.1",
				"size": 16743
			},
			{
				"name": "to-regex-range",
				"version": "5.0.1",
				"size": 22939
			},
			{
				"name": "is-number",
				"version": "7.0.0",
				"size": 9615
			},
			{
				"name": "picomatch",
				"version": "2.3.1",
				"size": 89952
			},
			{
				"name": "webpod",
				"version": "0.0.2",
				"size": 15881
			},
			{
				"name": "ps-tree",
				"version": "1.2.0",
				"size": 9307
			},
			{
				"name": "event-stream",
				"version": "3.3.4"
			},
			{
				"name": "through",
				"version": "2.3.8"
			},
			{
				"name": "duplexer",
				"version": "0.1.2",
				"size": 5470
			},
			{
				"name": "from",
				"version": "0.1.7"
			},
			{
				"name": "map-stream",
				"version": "0.1.0"
			},
			{
				"name": "pause-stream",
				"version": "0.0.11"
			},
			{
				"name": "split",
				"version": "0.3.3"
			},
			{
				"name": "stream-combiner",
				"version": "0.0.4"
			},
			{
				"name": "fs-extra",
				"version": "11.3.0",
				"size": 55287
			},
			{
				"name": "graceful-fs",
				"version": "4.2.11",
				"size": 32535
			},
			{
				"name": "jsonfile",
				"version": "6.1.0",
				"size": 19750
			},
			{
				"name": "universalify",
				"version": "2.0.1",
				"size": 4675
			},
			{
				"name": "minimist",
				"version": "1.2.8",
				"size": 54477
			},
			{
				"name": "node-fetch",
				"version": "3.3.1",
				"size": 107105
			},
			{
				"name": "data-uri-to-buffer",
				"version": "4.0.1",
				"size": 10049
			},
			{
				"name": "fetch-blob",
				"version": "3.2.0",
				"size": 21755
			},
			{
				"name": "node-domexception",
				"version": "1.0.0",
				"size": 29162
			},
			{
				"name": "web-streams-polyfill",
				"version": "3.3.3",
				"size": 9036205
			},
			{
				"name": "formdata-polyfill",
				"version": "4.0.10",
				"size": 32220
			},
			{
				"name": "@types/node",
				"version": "18.19.87",
				"size": 2064812
			},
			{
				"name": "undici-types",
				"version": "5.26.5",
				"size": 73053
			},
			{
				"name": "@types/which",
				"version": "3.0.4",
				"size": 6974
			},
			{
				"name": "@types/ps-tree",
				"version": "1.1.6",
				"size": 3228
			},
			{
				"name": "@types/fs-extra",
				"version": "11.0.4",
				"size": 36831
			},
			{
				"name": "@types/node",
				"version": "22.15.3",
				"size": 2350386
			},
			{
				"name": "undici-types",
				"version": "6.21.0",
				"size": 83680
			},
			{
				"name": "@types/jsonfile",
				"version": "6.1.4",
				"size": 5630
			},
			{
				"name": "@types/minimist",
				"version": "1.2.5",
				"size": 6267
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[1, 3],
			[1, 4],
			[1, 5],
			[5, 6],
			[1, 7],
			[7, 8],
			[7, 9],
			[7, 10],
			[7, 11],
			[11, 12],
			[7, 13],
			[13, 14],
			[13, 15],
			[15, 16],
			[16, 17],
			[15, 18],
			[18, 19],
			[19, 20],
			[18, 14],
			[13, 21],
			[21, 22],
			[22, 23],
			[13, 10],
			[13, 24],
			[24, 25],
			[25, 26],
			[26, 27],
			[27, 28],
			[24, 29],
			[1, 30],
			[1, 31],
			[31, 32],
			[32, 33],
			[32, 34],
			[32, 35],
			[32, 36],
			[32, 37],
			[37, 33],
			[32, 38],
			[38, 33],
			[32, 39],
			[39, 34],
			[1, 40],
			[40, 41],
			[40, 42],
			[42, 43],
			[40, 43],
			[1, 44],
			[1, 45],
			[45, 46],
			[45, 47],
			[47, 48],
			[47, 49],
			[45, 50],
			[50, 47],
			[1, 51],
			[51, 52],
			[1, 53],
			[1, 54],
			[1, 55],
			[55, 56],
			[56, 57],
			[55, 58],
			[58, 56],
			[1, 59]
		],
		"circular": []
	},
	"readme": "[![npm (scoped)](https://img.shields.io/npm/v/@zerodevx/svelte-toast/latest)](https://www.npmjs.com/package/@zerodevx/svelte-toast)\n[![Lines of code](https://img.shields.io/endpoint?url=https%3A%2F%2Fzerodevx.github.io%2Fsvelte-toast%2F_loc.json)](https://github.com/AlDanial/cloc)\n[![Size minified](https://img.shields.io/endpoint?url=https%3A%2F%2Fzerodevx.github.io%2Fsvelte-toast%2F_min.json)](https://cdn.jsdelivr.net/npm/@zerodevx/svelte-toast)\n[![Size gzipped](https://img.shields.io/endpoint?url=https%3A%2F%2Fzerodevx.github.io%2Fsvelte-toast%2F_gzip.json)](https://cdn.jsdelivr.net/npm/@zerodevx/svelte-toast)\n\n# svelte-toast\n\n> Simple elegant toast notifications.\n\nA feather-light and well-tested toast notification component for modern web frontends in\n[very](https://github.com/zerodevx/svelte-toast/blob/master/src/lib/SvelteToast.svelte)\n[little](https://github.com/zerodevx/svelte-toast/blob/master/src/lib/ToastItem.svelte)\n[lines](https://github.com/zerodevx/svelte-toast/blob/master/src/lib/stores.js) of\n[code](https://github.com/zerodevx/svelte-toast/blob/master/src/lib/index.js). Compiled (into UMD),\nit's only **20kB** minified (**8kB** gzipped) and can be used in Vanilla JS, or as a Svelte\ncomponent.\n\nBecause a demo helps better than a thousand API docs: https://zerodevx.github.io/svelte-toast/\n\n## Usage\n\nInstall the package:\n\n```bash\n$ npm i -D @zerodevx/svelte-toast\n```\n\nThe following are exported:\n\n- `SvelteToast` as the toast container;\n- `toast` as the toast controller.\n\n### Svelte\n\nIf you're using this in a Svelte app, import the toast container and place it in your app shell or\nroot layout.\n\n`+layout.svelte`:\n\n<!-- prettier-ignore -->\n```html\n<script>\n  import { SvelteToast } from '@zerodevx/svelte-toast'\n\n  // Optionally set default options here\n  const options = {\n    ...\n  }\n</script>\n\n...\n<SvelteToast {options} />\n```\n\nUse anywhere in your app - just import the toast controller.\n\n`MyComponent.svelte`:\n\n```html\n<script>\n  import { toast } from '@zerodevx/svelte-toast'\n</script>\n\n<button on:click={() => toast.push('Hello world!')}>SHOW TOAST</button>\n```\n\n### Vanilla JS\n\nFor any other application with a bundler, something like this should work:\n\n```js\n// Import the compiled code from `/dist`\nimport { SvelteToast, toast } from '@zerodevx/svelte-toast/dist'\n\nconst app = new SvelteToast({\n  // Set where the toast container should be appended into\n  target: document.body,\n  props: {\n    options: {\n      // Optionally set default options here\n      ...\n    }\n  }\n})\n\ntoast.push('Hello world!')\n```\n\n### CDN\n\nOr if you prefer to go old-school javascript and a CDN:\n\n```html\n<head>\n  ...\n  <!-- Load `toast` and `SvelteToast` into global scope  -->\n  <script src=\"https://cdn.jsdelivr.net/npm/@zerodevx/svelte-toast@0\"></script>\n  <!-- Register the app -->\n  <script>\n    const toastApp = new SvelteToast({\n      // Set where the toast container should be appended into\n      target: document.body,\n      props: {\n        options: {\n          // Optionally set default options here\n          ...\n        }\n      }\n    })\n\n    // Now you can `toast` anywhere!\n    toast.push('Hello world!')\n  </script>\n</head>\n```\n\n## Theming\n\nIn general, use CSS variables - the following (self-explanatory) vars are exposed:\n\n```css\n/**\n *         ._toastContainer\n *    ┌───────────────────────────────────────┐\n *    │    ._toastItem                        │\n *    │ ┌───────────────────────────────────┐ │\n *    │ │  ._toastMsg             ._toastBtn│ │\n *    │ │ ┌───────────────────────┐ ┌─────┐ │ │\n *    │ │ │                       │ │  ✕  │ │ │\n *    │ │ └───────────────────────┘ └─────┘ │ │\n *    │ │  ._toastBar                       │ │\n *    │ │ ═════════════════════════════════ │ │\n *    │ └───────────────────────────────────┘ │\n *    └───────────────────────────────────────┘\n */\n\n._toastContainer {\n  top: var(--toastContainerTop, 1.5rem);\n  right: var(--toastContainerRight, 2rem);\n  bottom: var(--toastContainerBottom, auto);\n  left: var(--toastContainerLeft, auto);\n  z-index: var(--toastContainerZIndex, 9999);\n}\n\n._toastItem {\n  width: var(--toastWidth, 16rem);\n  height: var(--toastHeight, auto);\n  min-height: var(--toastMinHeight, 3.5rem);\n  margin: var(--toastMargin, 0 0 0.5rem 0);\n  padding: var(--toastPadding, 0);\n  background: var(--toastBackground, rgba(66, 66, 66, 0.9));\n  color: var(--toastColor, #fff);\n  box-shadow: var(\n    --toastBoxShadow,\n    0 4px 6px -1px rgba(0, 0, 0, 0.1),\n    0 2px 4px -1px rgba(0, 0, 0, 0.06)\n  );\n  border: var(--toastBorder, none);\n  border-radius: var(--toastBorderRadius, 0.125rem);\n}\n\n._toastMsg {\n  padding: var(--toastMsgPadding, 0.75rem 0.5rem);\n}\n\n._toastBtn {\n  width: var(--toastBtnWidth, 2rem);\n  height: var(--toastBtnHeight, 100%);\n  font: var(--toastBtnFont, 1rem sans-serif);\n}\n\n._toastBtn::after {\n  content: var(--toastBtnContent, '✕');\n}\n\n._toastBar {\n  background: var(--toastBarBackground, rgba(33, 150, 243, 0.75));\n  top: var(--toastBarTop, auto);\n  right: var(--toastBarRight, auto);\n  bottom: var(--toastBarBottom, 0);\n  left: var(--toastBarLeft, 0);\n  height: var(--toastBarHeight, 6px);\n  width: var(--toastBarWidth, 100%);\n}\n```\n\nSo to apply your custom theme globally, do something like:\n\n<!-- prettier-ignore -->\n```html\n<style>\n  :root {\n    --toastBackground: #abcdef;\n    --toastColor: #123456;\n    --toastHeight: 300px;\n    ...\n  }\n</style>\n```\n\nTo apply CSS overrides to a particular Toast Item (on a per-toast basis), emit the toast with\noptions:\n\n```js\ntoast.push('Yo!', {\n  theme: {\n    '--toastBackground': 'cyan',\n    '--toastColor': 'black',\n    ...\n  }\n})\n```\n\nwhere `theme` is an object containing one or more CSS var key/value pairs.\n\n### Create Your Own Toast Actions\n\nFor convenient composing, you can either push toasts with\n[user-defined classes](#styling-with-user-defined-classes) (from `v0.7`), or create your own common\ntoast actions by stubbing them out. For example:\n\n`my-theme.js`\n\n```js\nimport { toast } from '@zerodevx/svelte-toast'\n\nexport const success = m => toast.push(m, {\n  theme: {\n    '--toastBackground': 'green',\n    '--toastColor': 'white',\n    '--toastBarBackground': 'olive'\n  }\n})\n\nexport const warning = m => toast.push(m, { theme: { ... } })\n\nexport const failure = m => toast.push(m, { theme: { ... } })\n```\n\nThen simply import these stubs in your consuming component:\n\n```js\nimport { success, warning, failure } from './my-theme'\n\n// Do something, then\nsuccess('It works!')\n```\n\n### Rich HTML\n\nToast messages can be in rich HTML too - for example:\n\n```js\n// Definitely not spam\ntoast.push(`<strong>You won the jackpot!</strong><br>\n  Click <a href=\"#\" target=\"_blank\">here</a> for details! 😛`)\n```\n\n### Custom Fonts and Styles\n\nIn a Svelte app, the quickest way to apply custom styles is to wrap the toast container then apply\nstyles on the wrapper:\n\n<!-- prettier-ignore -->\n```html\n<style>\n  .wrap {\n    display: contents;\n    font-family: Roboto, sans-serif;\n    font-size: 0.875rem;\n    /* You can set CSS vars here too */\n    --toastBackground: pink;\n    ...\n  }\n  .wrap :global(strong) {\n    font-weight: 600;\n  }\n</style>\n\n<div class=\"wrap\">\n  <SvelteToast />\n</div>\n```\n\nIn Vanilla JS, simply apply your styles to the `._toastContainer` class:\n\n<!-- prettier-ignore -->\n```css\n._toastContainer {\n  font-family: Roboto, sans-serif;\n  --toastBackground: yellow;\n  ...\n}\n```\n\n## Features\n\n### New from `v0.4`\n\n#### Supporting Multiple Toast Containers\n\nIt's now easy to send toasts to different container targets within your app. For example:\n\n<!-- prettier-ignore -->\n```html\n<script>\n  import { SvelteToast, toast } from '@zerodevx/svelte-toast'\n\n  // Sends a toast to default toast container\n  toast.push('Yo!')\n\n  // Sends a toast to \"new\" toast container\n  toast.push('Hey!', { target: 'new' })\n</script>\n\n<style>\n  .wrap {\n    --toastContainerTop: 0.5rem;\n    --toastContainerRight: 2rem;\n    --toastContainerBottom: auto;\n    --toastContainerLeft: 2rem;\n    --toastWidth: 100%;\n    font-size: 0.875rem;\n    ...\n  }\n</style>\n\n<!-- Default toast container -->\n<SvelteToast />\n\n<!-- Another toast container -->\n<div class=\"wrap\">\n  <!-- Declare container with a unique `target` name -->\n  <SvelteToast target=\"new\" options={{ duration: 8000, intro: { y: -64 } }} />\n</div>\n```\n\n#### Removing Multiple Toasts (Outdated)\n\n~~`pop()` now accepts a filter function.~~ This has been deprecated, but will remain for backward\ncompatibility until the next major. The recommended way to remove all toasts from a container target\n[has changed from `v0.9`](#removing-multiple-toasts).\n\n```js\n// Remove all toasts from \"new\" container\ntoast.pop((i) => i.target !== 'new') // DEPRECATED\n\n// Or remove ALL active toasts from ALL containers\ntoast.pop(0)\n```\n\n#### Accepting Object as First Param\n\n`push()` and `set()` can also take an object as its first parameter.\n\n```js\nlet id = toast.push('Yo!', { duration: 2000 })\n// ...is semantically equivalent to\nid = toast.push({ msg: 'Yo!', duration: 2000 })\n\ntoast.set(id, { msg: 'Waddup!' })\n// ...is semantically equivalent to\ntoast.set({ id, msg: 'Waddup!' })\n```\n\n### New from `v0.5`\n\n#### Pausable Toasts\n\nProgress bar tweens can now be paused when the mouse cursor (on desktop) is hovered over the toast\nitem. This behaviour is **disabled** by default. To enable, set option `pausable: true`.\n\n```js\ntoast.push('Hover me!', { pausable: true })\n```\n\n#### Send Svelte Component as a Message\n\nTo support complex UIs or workflows, a Svelte component can be pushed instead of a standard message\nif you're using this in a Svelte project. To do so, push options with `component` defined:\n\n```js\nimport MyCustomSvelteComponent from './MyCustomSvelteComponent.svelte'\n\ntoast.push({\n  component: {\n    src: MyCustomSvelteComponent, // set `src` to the component itself (required)\n    props: { ... },               // pass in `props` as key/value pairs (optional)\n    sendIdTo: 'toastId'           // forward toast id to `toastId` prop (optional)\n  },\n  ...                             // any other toast options\n})\n```\n\n### New from `v0.6`\n\n#### `onpop()` Callback Function\n\nA callback function can be run when a toast is closed. To do so, pass the function to the `onpop`\ntoast option:\n\n```js\ntoast.push('Hello world', {\n  onpop: (id) => {                // optionally get the toast id if needed\n    console.log(`${id} removed`)\n  },\n  ...                             // any other toast options\n})\n```\n\n### New from `v0.7`\n\n#### Styling with User-Defined Classes\n\nCustom class names can now be passed into each toast item. Very useful for composing toast actions,\nor implementing CSS-only dark modes.\n\n```html\n<script>\n  toast.push('Foo', { classes: ['info'] }) // background green\n  toast.push('Bar', { classes: ['warn'] }) // background red\n</script>\n<SvelteToast options={{ classes: ['log'] }} />\n<style>\n  :global(.log.info) {\n    --toastBackground: green;\n  }\n  :global(.log.warn) {\n    --toastBackground: red;\n  }\n</style>\n```\n\n### New from `v0.8`\n\n#### Auto-pause Toasts when Page Hidden\n\nThis feature uses the\n[Page Visibility API](https://developer.mozilla.org/en-US/docs/Web/API/Page_Visibility_API) (if it's\nsupported) to pause/resume a toast whenever the browser tab visibility changes - allowing one to\nemit notifications in the background without it being dismissed prematurely. This now happens\nautomatically and is default behaviour, since notifications should by nature ensure that they're\nseen.\n\n#### Customise Dismiss Button\n\nAdditional CSS vars are exposed - specifically, `--toastBtnContent` allows the '✕' default character\nto be changed. As with CSS `content` keys for pseudo elements, `url()` can be used to load external\nor inline icons.\n\n```html\n<script>\n  import { toast, SvelteToast } from '@zerodevx/svelte-toast'\n\n  const options = {\n    theme: {\n      '--toastBtnContent': `url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' ...\")`\n    }\n  }\n</script>\n\n<button on:click={() => toast.push('Hello!')}>SHOW TOAST</button>\n\n<SvelteToast {options} />\n```\n\n### New from `v0.9`\n\n#### Removing Multiple Toasts\n\nRemoving all toasts from a particular container target has just become more _targeted_. Simply call\n`pop()` with param `{ target: 'containerName' }`, or call `pop(0)` to clear everything.\n\n```js\n// Remove all toasts from \"new\" container\ntoast.pop({ target: 'new' })\n\n// Or remove ALL active toasts from ALL containers\ntoast.pop(0)\n```\n\n#### Big Tooling Upgrade\n\nUnder the hood, the project's been migrated to\n[`svelte-package`](https://github.com/sveltejs/kit/tree/master/packages/package). For Svelte\nconsumers, this helps keep in sync with breaking changes that happen in Svelte-world. For other\nconsumers, there's a change in import path:\n\n```js\n// For non-Svelte users, import the compiled code\nimport { toast, SvelteToast } from '@zerodevx/svelte-toast/dist' // ESM\nconst { toast, SvelteToast } = require('@zerodevx/svelte-toast/dist') // CJS\n```\n\n## Toast Options\n\n<!-- prettier-ignore -->\n```js\n// Default options\nconst options = {\n  duration: 4000,       // duration of progress bar tween to the `next` value\n  initial: 1,           // initial progress bar value\n  next: 0,              // next progress value\n  pausable: false,      // pause progress bar tween on mouse hover\n  dismissable: true,    // allow dismiss with close button\n  reversed: false,      // insert new toast to bottom of stack\n  intro: { x: 256 },    // toast intro fly animation settings\n  theme: {},            // css var overrides\n  classes: []           // user-defined classes\n}\n```\n\n## Toast Methods\n\n```js\n/**\n * Send a new toast\n * @param {(string|SvelteToastOptions)} msg\n * @param {SvelteToastOptions} [opts]\n * @returns {number}\n */\nfunction push(msg, opts) { ... }\n\n/**\n * Remove toast(s)\n * @param {(number|Object<'target',string>)} [id]\n */\nfunction pop(id) { ... }\n\n/**\n * Update an existing toast\n * @param {(number|SvelteToastOptions)} id\n * @param {SvelteToastOptions} [opts]\n */\nfunction set(id, opts) { ... }\n```\n\n## Development\n\nPackaging is through [SvelteKit](https://kit.svelte.dev/docs/packaging). Standard Github\n[contribution workflow](https://docs.github.com/en/get-started/quickstart/contributing-to-projects)\napplies.\n\n### Tests\n\nTesting is through [Playwright](https://playwright.dev/). To run the tests headlessly:\n\n```\n$ npm run test\n```\n\n## Changelog\n\nPlease refer to the [releases](https://github.com/zerodevx/svelte-toast/releases) page.\n\n## License\n\nISC\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 2],
		[3596, 2],
		[3603, 1],
		[3617, 1],
		[3624, 1],
		[3631, 3],
		[3638, 1],
		[3645, 3],
		[3659, 1],
		[3666, 3],
		[3673, 1],
		[3701, 1],
		[3722, 3],
		[3743, 1],
		[3750, 1],
		[3771, 3],
		[3778, 1],
		[3799, 2],
		[3806, 1],
		[3813, 1],
		[3820, 1],
		[3834, 1],
		[3841, 5],
		[3848, 1],
		[3862, 2],
		[3876, 1],
		[3883, 2],
		[3890, 1],
		[3897, 3],
		[3904, 1],
		[3925, 1],
		[3932, 1],
		[3939, 1],
		[3946, 1],
		[3974, 1],
		[3995, 2],
		[4009, 1],
		[4016, 5],
		[4023, 2],
		[4037, 3],
		[4044, 9],
		[4051, 3],
		[4058, 1],
		[4072, 2],
		[4086, 1],
		[4093, 1],
		[4100, 2],
		[4107, 2],
		[4114, 5],
		[4121, 6],
		[4128, 2]
	]
}
