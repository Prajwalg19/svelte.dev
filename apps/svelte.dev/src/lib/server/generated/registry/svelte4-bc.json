{
	"name": "svelte4-bc",
	"description": "Enable Svelte 4 backward compatibility in Svelte 5 projects.",
	"repo_url": "https://github.com/adiguba/svelte4-bc",
	"authors": ["adiguba"],
	"homepage": "https://github.com/adiguba/svelte4-bc#readme",
	"downloads": 4,
	"updated": "2024-10-19T15:38:16.130Z",
	"tags": ["tooling"],
	"github_stars": 0,
	"typescript": true,
	"version": "0.0.6",
	"svelte_range": "^5.0.0-next.262",
	"last_rune_check_version": "0.0.6",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte4-bc",
				"version": "0.0.6",
				"size": 29507
			},
			{
				"name": "esm-env",
				"version": "1.2.2",
				"size": 3784
			},
			{
				"name": "svelte4-bc",
				"version": "1.0.0",
				"isCircular": true,
				"circularTarget": 0
			}
		],
		"dependencies": [
			[0, 1],
			[0, 2]
		],
		"circular": []
	},
	"readme": "# Svelte 4 Backward Compatibility for Svelte 5\r\n\r\n**svelte4-bc** is a plugin that improves Svelte 4 backwards compatibility in Svelte 5\r\n\r\n## Goals\r\n\r\nThe purpose of this package is to enable a step-by-step migration of components, by maintaining backward compatibility from caller's code, even after converting a component to the new **Svelte 5** syntax (*snippets/handlers*).\r\n\r\nThis allows you to migrate a component without breaking all the code that uses it.\r\n\r\n## Why ?\r\n\r\n**Svelte 5** is already backwards compatible with the **Svelte 4** syntax (*slots, on:events* directives), but only for **Svelte 4** components.\r\n\r\nWhen a component is migrated to the new syntax (*snippet/handlers*), all the calling codes that use this component should also be migrated in order to replace *slots/on:events* by *snippets/handlers*.\r\nThis can be problematic on large projects, where we may want to make slower transitions.\r\n\r\n**svelte4-bc** allows to use *snippets/handlers* within a component, while still accepting *slots/on:events* from the outside.\r\n\r\n> [!TIP]\r\n> See this [demo REPL](https://svelte-5-preview.vercel.app/#H4sIAAAAAAAACu1Y3W7jRBR-laO0UhKRxl3aStR1AttsV0gIVQIkLrYrNLbH8ew6M9bMJGkxvuQlEBIPwFvxBDwC82tPsuluyw03qKpkn5nz830-f20zKEiFxSB-0wwoWuFBPHhZ14PJQD7U-kVscCWxehdszTMtSUTGSS3nd1T9SLKqGZewQDz_3lw9h4KzFQynUSCbWjPDq4MqFwdULj6hcr04pHS9mL4TVsWGlzEqJGTqhoAZvAlCmoTWJrum33oLssIScoIqtrzyryssBFpiZe5YSCTxaHxlfRVrmknCKIiSbb9lOapGqzE0xpTstVbWuLRmp_1lydfY2JLtnkFGs4pk70d4IzuDvd7QHUMMQ_gM9KXHrKyFZKuPmDHnB-0kUfDZExs7pITmsSyJmDVW0upjmdTzxuFtk6i2snQtZQ9l1ozGs7mjIKuYUDS289tvksjem2uP9tgmGk1KjHLMvQMbfZKxHM-Dr5pERgJEAIIknVsxKHk6h4ypNKKYSgGyRBLWAoO1IComhdOdhKYZjU283m66TtOK0OUEEM2dcsaxSoObjTL8iogayazEfDR2KlNnLuXR_K_ffwXjCn4B9eyN2zdBSV1jc_b3H7_96YgycD2Hj8G-CGDLEoNQhdyjhS0nUmIKWyLLgJQLQ4p4oBLdO9Ac1xXKFD5IiCUlUkFiDU3RQxT-B8-Yi9Z77uko1WOFuT8J4GtYHX6L8RECDDnPwH-92GOgB_8oV1uOlLscCFWpou8jSVJSEfkAFXrA_N98uENxJ1GfuTRZIaKTuznCKCtdY0LCtB9Xr6q4Njs4G3041c259bGvhf5Gex8IYqel74OPcda4iFojMhVuZOapdZ6Ulu23ccHRcqWJ09ZndwMb_N2gu3gnv755-ermOxjpGz6UXeVxZzXaO3FjwzRAXKB1ZR11xrtoakR9CAVjci-E17e3P-gQeiJCl0rXM2img82eqCP2eSy7zxv5xPY8h2z3JB-gtjlyNsCSqVrdATLtlQ5GEzlJ2zOWlaTKOab7bPUOLFU7DjxVH3VwmKom0lna6hx2easehXyobFlbNH6SFIzKE0F-xjG8-Ly-d1OuRnmuWIzhvBOlKHu_5GytZgccFS_0jzvJWMW4Ep6ennaTR2rP3keu-qsqzhiWnOROST-eSLxSBxKfKBPrFRUqhoLrX38J1TGcqbDgCxeHQWWxqO1mxXJSEJwPYj2F20m3DAWz5YlLkV9WGjg4GKB1i0uw3yglfG-U9ILBatWrZ1CgSuCrcI3JnRF1-MjM2d9ECsLxwg79ccihvj8a2jwdTlTOKpexcdyOA3Y8Jl0skFVIiNlQt6yhwdkckQKOj00Xmtpc8KnkOl5iOoRmMmgk0TzsiCoNSWHUfGu0TddvC7aJzTUQ6IdxtyQcujxrethtr2ne91VL1dzdo441cunfhbKD0RaXx2jfdjH6TqUxuvMAY9eBwiJSomlmWoirDsYVNTHoXBWsIjkcXV5ePrl0zs7OnIRtMC8qto2hJHmOaV9Rlv2JaxbecVepp3A6veDY76lBXSt5J94JpY_Qx1EURai_xWRZyhhSVuWHS7t33zt_do1ePKlGu83eudZ57xYgR43D4trtxAPRdLkX1-_7N5NeJmj9l0HNWS2eVo9e98vpiOIt2GNT2aOhGewnG1St8XD8zMoMKtLXY_OVQqNbdjeHnl6K3YTzFfXxUny8Ej9ViF2Qnn5FjJ1n-3V5sB47dftulP8vxv-kGK8XfTm-E2EpPvtfAN1MdbP4evGjWd_3x-n5SZq5kUrt0HTyn9JM1aWBZ5p57KFa_mPQMHYK3YoMciO3S3anZxJ8R80mdqB2R9s-jq2Ld_YBhNHOPyL6eCcw3CFzaNuJ2xT89tz1lp27I0Szkqm0Mo3I9RoXwt6ZMtp--EHftv8AOPpXXRoSAAA=) for a quick preview !\r\n\r\n## How to install / configure ?\r\n\r\nIn a **Svelte 5** project, install the package **svelte4-bc** :\r\n> npm i svelte4-bc\r\n\r\nAnd edit the file `vite.config.js` in order to add the plugin :\r\n```diff\r\nimport { sveltekit } from '@sveltejs/kit/vite';\r\n+import { svelte4BCPlugin } from 'svelte4-bc/plugin';\r\nimport { defineConfig } from 'vite';\r\n\r\nexport default defineConfig({\r\n-\tplugins: [sveltekit()]\r\n+\tplugins: [sveltekit(), svelte4BCPlugin()]\r\n});\r\n```\r\n\r\nThis plugin will transform all `*.svelte` files all components whose exports a variable named **svelte4_bc** :\r\n\r\n```svelte\r\n<script module>\r\n  export const svelte4_bc = {\r\n    slots: {\r\n      // slots config\r\n    },\r\n    events: {\r\n      // events config\r\n    }\r\n  }\r\n</script>\r\n<script>\r\n    // Your code\r\n</script>\r\n<!-- Your template -->\r\n```\r\n\r\n## Examples\r\n\r\n### Basic Example\r\n\r\nLet's take this simple **Svelte 4** component with a slot named `prefix` and an `on:click` event :\r\n```svelte\r\n<!-- Button.svelte -->\r\n<button on:click>\r\n\t{#if $$slots.prefix}\r\n\t\t<span><slot name=\"prefix\"/></span>\r\n\t{/if}\r\n\t<slot/>\r\n</button>\r\n```\r\nThe **Svelte 5** version of this component would be :\r\n```svelte\r\n<!-- Button.svelte -->\r\n<script>\r\n\tlet { onclick, prefix, children } = $props();\r\n</script>\r\n\r\n<button {onclick}>\r\n\t{#if prefix}\r\n\t\t<span>{@render prefix()}</span>\r\n\t{/if}\r\n\t{@render children?.()}\r\n</button>\r\n```\r\n\r\nBut now, this component requires the use of `snippets/handlers`, and `slots/on:events` will be ignored :\r\n\r\n```svelte\r\n<!-- This works -->\r\n<Button onclick={onclick}>\r\n\t{#snippet prefix()}<i>(icon)</i>{/snippet}\r\n\tclick\r\n</Button>\r\n\r\n<!-- This will compile normally, but slots/on:events will be ignored -->\r\n<Button on:click={onclick}>\r\n\t<i slot=\"prefix\">(icon)</i>\r\n\tclick\r\n</Button>\r\n```\r\n\r\nIn order to \"fix\" this, we can add a `<script module>` with the configuration for **Svelte4-BC** :\r\n\r\n```svelte\r\n<script module>\r\n  export const svelte4_bc = {\r\n    slots: {\r\n      // The slot 'prefix' will be mapped onto the prop 'prefix'\r\n      prefix: true\r\n    },\r\n    events: {\r\n      // The event 'click' will be mapped onto the prop 'onclick'\r\n      click: true\r\n    }\r\n  }\r\n</script>\r\n```\r\n\r\nNow, the `slots/on:events` declared on the config will not be ignored, and they will be mapped to the corresponding props.\r\n\r\nSee and try [the online demo on Stackblitz](https://stackblitz.com/edit/svelte4-bc?file=src%2Froutes%2F%2Bpage.svelte,src%2Froutes%2FButton.svelte)\r\n(since this is a plugin for ViteJS, it cannot be tested on the Svelte5 REPL)\r\n\r\nAn alternative would be to use the function **Svelte4BCWrapper** to manually wrap a component.\r\nSee this [Demo REPL](https://svelte-5-preview.vercel.app/#H4sIAAAAAAAACu1Y3W7jRBR-laO0UhKRxl3aStR1AttsV0gIVQIkLrYrNLbH8ew6M9bMJGkxvuQlEBIPwFvxBDwC82tPsuluyw03qKpkn5nz830-f20zKEiFxSB-0wwoWuFBPHhZ14PJQD7U-kVscCWxehdszTMtSUTGSS3nd1T9SLKqGZewQDz_3lw9h4KzFQynUSCbWjPDq4MqFwdULj6hcr04pHS9mL4TVsWGlzEqJGTqhoAZvAlCmoTWJrum33oLssIScoIqtrzyryssBFpiZe5YSCTxaHxlfRVrmknCKIiSbb9lOapGqzE0xpTstVbWuLRmp_1lydfY2JLtnkFGs4pk70d4IzuDvd7QHUMMQ_gM9KXHrKyFZKuPmDHnB-0kUfDZExs7pITmsSyJmDVW0upjmdTzxuFtk6i2snQtZQ9l1ozGs7mjIKuYUDS289tvksjem2uP9tgmGk1KjHLMvQMbfZKxHM-Dr5pERgJEAIIknVsxKHk6h4ypNKKYSgGyRBLWAoO1IComhdOdhKYZjU283m66TtOK0OUEEM2dcsaxSoObjTL8iogayazEfDR2KlNnLuXR_K_ffwXjCn4B9eyN2zdBSV1jc_b3H7_96YgycD2Hj8G-CGDLEoNQhdyjhS0nUmIKWyLLgJQLQ4p4oBLdO9Ac1xXKFD5IiCUlUkFiDU3RQxT-B8-Yi9Z77uko1WOFuT8J4GtYHX6L8RECDDnPwH-92GOgB_8oV1uOlLscCFWpou8jSVJSEfkAFXrA_N98uENxJ1GfuTRZIaKTuznCKCtdY0LCtB9Xr6q4Njs4G3041c259bGvhf5Gex8IYqel74OPcda4iFojMhVuZOapdZ6Ulu23ccHRcqWJ09ZndwMb_N2gu3gnv755-ermOxjpGz6UXeVxZzXaO3FjwzRAXKB1ZR11xrtoakR9CAVjci-E17e3P-gQeiJCl0rXM2img82eqCP2eSy7zxv5xPY8h2z3JB-gtjlyNsCSqVrdATLtlQ5GEzlJ2zOWlaTKOab7bPUOLFU7DjxVH3VwmKom0lna6hx2easehXyobFlbNH6SFIzKE0F-xjG8-Ly-d1OuRnmuWIzhvBOlKHu_5GytZgccFS_0jzvJWMW4Ep6ennaTR2rP3keu-qsqzhiWnOROST-eSLxSBxKfKBPrFRUqhoLrX38J1TGcqbDgCxeHQWWxqO1mxXJSEJwPYj2F20m3DAWz5YlLkV9WGjg4GKB1i0uw3yglfG-U9ILBatWrZ1CgSuCrcI3JnRF1-MjM2d9ECsLxwg79ccihvj8a2jwdTlTOKpexcdyOA3Y8Jl0skFVIiNlQt6yhwdkckQKOj00Xmtpc8KnkOl5iOoRmMmgk0TzsiCoNSWHUfGu0TddvC7aJzTUQ6IdxtyQcujxrethtr2ne91VL1dzdo441cunfhbKD0RaXx2jfdjH6TqUxuvMAY9eBwiJSomlmWoirDsYVNTHoXBWsIjkcXV5ePrl0zs7OnIRtMC8qto2hJHmOaV9Rlv2JaxbecVepp3A6veDY76lBXSt5J94JpY_Qx1EURai_xWRZyhhSVuWHS7t33zt_do1ePKlGu83eudZ57xYgR43D4trtxAPRdLkX1-_7N5NeJmj9l0HNWS2eVo9e98vpiOIt2GNT2aOhGewnG1St8XD8zMoMKtLXY_OVQqNbdjeHnl6K3YTzFfXxUny8Ej9ViF2Qnn5FjJ1n-3V5sB47dftulP8vxv-kGK8XfTm-E2EpPvtfAN1MdbP4evGjWd_3x-n5SZq5kUrt0HTyn9JM1aWBZ5p57KFa_mPQMHYK3YoMciO3S3anZxJ8R80mdqB2R9s-jq2Ld_YBhNHOPyL6eCcw3CFzaNuJ2xT89tz1lp27I0Szkqm0Mo3I9RoXwt6ZMtp--EHftv8AOPpXXRoSAAA=)\r\n\r\n### Name conflict\r\n\r\nOn **Svelte 4**, `slots` and `on:events` have their own namespaces separate from the props namespace.\r\n\r\n```svelte\r\n<!-- Svelte 4 -->\r\n<script>\r\n\texport let title;\r\n</script>\r\n<slot name=\"title\" />\r\n```\r\n\r\nSo we can encounter conflicts when migrating to Svelte 5, requiring to rename the snippets/handlers.\r\n\r\n```svelte\r\n<!-- Svelte 5 -->\r\n<script>\r\n\tlet { title, title_snippet } = $props();\r\n</script>\r\n{@render title_snippet?.()}\r\n```\r\n\r\nWe can use the config to define a new name for the slots/on:events :\r\n\r\n```svelte\r\n<script module>\r\n  export const svelte4_bc = {\r\n    slots: {\r\n      // The slot 'title' will be mapped onto the prop 'title_snippet'\r\n      title: \"title_snippet\"\r\n    }\r\n  }\r\n</script>\r\n```\r\n\r\n### Slot's parameters\r\n\r\nIn **Svelte 4**, the slot variables are managed via an object :\r\n\r\n```svelte\r\n<!-- Svelte 4 -->\r\n<slot name=\"header\" {title} {option} />\r\n```\r\n\r\nSo a slot with parameters will have to be migrated to a snippet with an single object with the specified properties :\r\n\r\n```svelte\r\n<!-- Svelte 5 -->\r\n<script>\r\n\tlet { header } = $props();\r\n</script>\r\n\r\n{@render header?.({ title, option })}\r\n```\r\n\r\nThis is also the default behavior of this plugin.\r\n\r\nBut it is still possible to use multiples parameters, by configuring this plugin to remap the slot variables to the correct parameters :\r\n```svelte\r\n<script module>\r\n  export const svelte4_bc = {\r\n    slots: {\r\n      // The slot 'header' will be mapped onto the prop 'header'\r\n      // The first param will be mapped to the slot variable 'title'\r\n      // The second param will be mapped to the slot variable 'option'\r\n      header: ['title', 'option']\r\n    }\r\n  }\r\n</script>\r\n<!-- Svelte 5 -->\r\n<script>\r\n\tlet { header } = $props();\r\n</script>\r\n\r\n{@render header?.(title, option)}\r\n```\r\n\r\n> [!TIP]\r\n> It is possible to use an object to define both the props and parameters of a slot :\r\n> \r\n>```svelte\r\n><script module>\r\n>  export const svelte4_bc = {\r\n>    slots: {\r\n>      header: {\r\n>        // The slot 'header' will be mapped onto the prop 'new_name'\r\n>        prop: 'new_name',\r\n>        // The first param will be mapped to the slot variable 'title'\r\n>        // The second param will be mapped to the slot variable 'option'\r\n>        args: ['title', 'option']\r\n>    }\r\n>  }\r\n> </script>\r\n> ```\r\n\r\n\r\n\r\n\r\n\r\n### Event dispatcher\r\n\r\n\r\n```svelte\r\n<!-- Svelte 4 -->\r\n<script>\r\n\timport { createEventDispatcher } from 'svelte';\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  // ...\r\n  dispatch(\"custom\");\r\n</script>\r\n```\r\n\r\n`createEventDispatcher` is deprecated in **Svelte 5**, and should be replaced by callback props.\r\n\r\n\r\n```svelte\r\n<!-- Svelte 5 -->\r\n<script>\r\n  let { oncustom } = $props();\r\n\r\n  // ...\r\n  oncustom?.();\r\n</script>\r\n```\r\n\r\nHowever, it's possible to enable a compatibility mode by setting `dispatch: true` in `svelte4_bc`.\r\nIn this mode, the dispatched event will be mapped to the equivalent callback props, like for event.\r\n\r\n```svelte\r\n<script module>\r\n  export const svelte4_bc = {\r\n    events: {\r\n      custom: true\r\n    },\r\n    dispatch: true\r\n  }\r\n</script>\r\n<!-- Svelte 5 -->\r\n<script>\r\n\timport { createEventDispatcher } from 'svelte';\r\n\r\n  const dispatch = createEventDispatcher();\r\n\r\n  // ...\r\n  dispatch(\"custom\"); // will be equivalent to oncustom?.();\r\n</script>\r\n```",
	"legacy_svelte": false,
	"downloads_history": [
		[3925, 245],
		[3932, 36],
		[3939, 70],
		[3946, 17],
		[3953, 8],
		[3967, 5],
		[3981, 5],
		[3988, 1],
		[3995, 1],
		[4002, 1],
		[4009, 2],
		[4016, 9],
		[4023, 8],
		[4030, 1],
		[4037, 12],
		[4044, 10],
		[4051, 4],
		[4065, 2],
		[4086, 1],
		[4093, 1],
		[4100, 5],
		[4107, 11],
		[4114, 4],
		[4121, 9],
		[4128, 3],
		[4135, 9]
	],
	"esm": true,
	"cjs": false
}
