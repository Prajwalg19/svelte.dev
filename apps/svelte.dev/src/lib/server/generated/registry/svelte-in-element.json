{
	"name": "svelte-in-element",
	"description": "Render Svelte component parts in arbitrary elements.",
	"repo_url": "",
	"authors": ["ravenstine"],
	"homepage": "https://github.com/ravenstine/svelte-in-element",
	"downloads": 9,
	"updated": "2022-07-29T22:26:18.693Z",
	"tags": ["miscellaneous"],
	"typescript": false,
	"version": "0.1.4",
	"svelte_range": "^3.49.0",
	"last_rune_check_version": "0.1.4",
	"github_stars": 0,
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-in-element",
				"version": "0.1.4",
				"size": 13932
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "Svelte In-Element\n=================\n\nNeed to render content from a Svelte component within an arbitrary element?  We've got you covered.\n\nThis package is inspired by the [in-element](https://github.com/emberjs/ember.js/blob/48112f90e6d5e21ac5da9a1d539148fbd91a16ff/packages/%40ember/-internals/glimmer/lib/syntax/in-element.ts) helper from [Ember.js](https://emberjs.com).  It is similar to concepts like [React portals](https://reactjs.org/docs/portals.html) and [Vue \"teleport\"](https://vuejs.org/guide/built-ins/teleport.html).\n\n\n## Installation\n\n```sh\nnpm install --save svelte-in-element\n```\n\n\n## Usage\n\n```svelte\n<script>\n  import InElement from 'svelte-in-element';\n\n  const myElement = document.querySelector('#myElement');\n</script>\n\n<InElement target={myElement}>\n  <h2>Hello World</h2>\n</InElement>\n```\n\nYou can also pass a query selector string:\n\n```svelte\n<InElement target=\"#myElement\">\n  <h2>Hello World</h2>\n</InElement>\n```\n\nAn optional `insertBefore` parameter allows you to insert the content at a specific position in the target.\n\n\n## Expected Behavior\n\n- If the `target` is undefined, null, false, 0, \"\", etc., nothing is rendered and there is no error.\n- If `insertBefore` is provided, the block will be rendered before the given element.\n- If `target` or `insertBefore` changes, content will be removed from the original position in the DOM and added to the new destination.\n- By default, the content of the target element is removed *unless* the value of `insertBefore` is a DOM node or `null`.  When `null` is passed, the last child of the target element is treated as a boundary.\n\nAt present, this component will do nothing under server-side rendering.\n\n\n## Example\n\nThe `test/` directory includes a simple e2e test that demonstrates this component in action.  Simply run `npm start` and visit `localhost:1337`.\n\n\n## License\n\nSee [LICENSE.txt](LICENSE.txt).\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3596, 2],
		[3603, 5],
		[3610, 6],
		[3617, 5],
		[3631, 1],
		[3645, 2],
		[3652, 3],
		[3659, 3],
		[3666, 6],
		[3673, 4],
		[3680, 1],
		[3694, 1],
		[3701, 1],
		[3708, 1],
		[3715, 1],
		[3722, 2],
		[3729, 2],
		[3736, 1],
		[3743, 3],
		[3757, 7],
		[3771, 5],
		[3778, 4],
		[3785, 1],
		[3792, 25],
		[3799, 13],
		[3806, 5],
		[3813, 1],
		[3827, 1],
		[3834, 9],
		[3841, 26],
		[3848, 2],
		[3855, 1],
		[3862, 1],
		[3869, 1],
		[3876, 1],
		[3883, 3],
		[3890, 5],
		[3897, 1],
		[3904, 2],
		[3911, 1],
		[3918, 4],
		[3925, 1],
		[3932, 1],
		[3939, 3],
		[3946, 1],
		[3953, 2],
		[3960, 2],
		[3974, 2],
		[3981, 2],
		[3988, 6],
		[3995, 1],
		[4002, 7],
		[4016, 3],
		[4023, 1],
		[4030, 5],
		[4037, 11],
		[4044, 10],
		[4051, 3],
		[4058, 2],
		[4065, 3],
		[4072, 7],
		[4079, 3],
		[4093, 2],
		[4100, 16],
		[4107, 6],
		[4114, 9],
		[4121, 12],
		[4128, 5]
	],
	"esm": true,
	"cjs": false
}
