{
	"name": "svelte-jss",
	"description": "Use JSS for styling Svelte and Sapper applications.",
	"repo_url": "",
	"authors": ["dominikguzei"],
	"downloads": 4,
	"updated": "2020-03-07T14:49:40.028Z",
	"tags": ["ui"],
	"typescript": false,
	"version": "1.1.2",
	"svelte_range": "^3",
	"last_rune_check_version": "1.1.2",
	"github_stars": 0,
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-jss",
				"version": "1.1.2",
				"size": 3632
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# Svelte JSS\n\nUse JSS for styling your Svelte and Sapper apps.\n\n## Installation\n\n`npm install svelte-jss --dev`\n\n`yarn add svelte-jss --dev`\n\n**Note**: it's important to install the package as a **dev dependency**, otherwise you will run into\na [weird error](https://github.com/sveltejs/sapper/issues/592).\n\n## Use in Svelte\n\nSvelte component example: `Input.svelte`\n```svelte\n<script>\n  import { useStyles } from 'svelte-jss';\n  const styles = useStyles({\n    input: {\n      border: '1px solid #eee',\n      boxSizing: 'border-box',\n      padding: '1em',\n      '&:focus': {\n        outline: 'none',\n      },\n      width: '100%',\n    }\n  });\n</script>\n\n<input class={styles.input} />\n```\n\n### Cross-component theming\n\nUse a svelte store to hold your styles and reactive statements in your components to update dynamically\nwhenever the value of the store changes:\n\n```svelte\n<script>\n  import { useStyles } from 'svelte-jss';\n  import { myCustomThemeStore } from './my/custom/theme.js';\n  $: styles = useStyles($myCustomThemeStore);\n</script>\n\n<input class={styles.input} />\n```\n\n## Server Side Rendering with Sapper\n\nTo enable SSR of the JSS styles used in any of your Svelte components you just need\nto render the `Jss` component **after** all other components like this:\n\nFor example in your `routes/_layout.svelte`:\n\n```svelte\n<script>\n  import Jss from \"svelte-jss/Jss.svelte\";\n</script>\n\n<div class=\"container\">\n  <main>\n    <slot></slot>\n  </main>\n  \n  <!-- Include after all other components -->\n  <Jss />\n\n</div>\n```\n\n`svelte-jss` ensures that only styles that are actually used are included in your SSR.\n\n## How to configure JSS\n\nSetup JSS plugins before any components using jss are mounted.\nE.g: in the script area of the `_layout.svelte` component:\n\n```svelte\n<script>\n  import jss from 'jss';\n  import jssPresetDefault from 'jss-preset-default';\n  jss.setup(jssPresetDefault());\n</script>\n\n<!-- Your components -->\n```\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3596, 2],
		[3603, 7],
		[3610, 8],
		[3617, 3],
		[3624, 2],
		[3631, 1],
		[3645, 7],
		[3652, 3],
		[3659, 1],
		[3666, 8],
		[3680, 1],
		[3701, 1],
		[3708, 1],
		[3729, 9],
		[3736, 6],
		[3757, 4],
		[3764, 3],
		[3771, 4],
		[3778, 1],
		[3785, 1],
		[3792, 3],
		[3799, 1],
		[3806, 3],
		[3813, 5],
		[3834, 2],
		[3848, 1],
		[3855, 2],
		[3862, 25],
		[3876, 1],
		[3883, 2],
		[3890, 8],
		[3897, 7],
		[3904, 8],
		[3911, 1],
		[3918, 1],
		[3932, 1],
		[3946, 3],
		[3953, 1],
		[3960, 2],
		[3981, 2],
		[3995, 10],
		[4023, 2],
		[4030, 5],
		[4037, 11],
		[4044, 13],
		[4051, 1],
		[4065, 2],
		[4093, 12],
		[4100, 9],
		[4107, 2],
		[4114, 4],
		[4121, 6],
		[4128, 7]
	],
	"esm": false,
	"cjs": true
}
