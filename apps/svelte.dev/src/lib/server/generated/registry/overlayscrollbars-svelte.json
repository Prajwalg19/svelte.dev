{
	"name": "overlayscrollbars-svelte",
	"description": "Integrates OverlayScrollbars for custom scrollbar styling.",
	"repo_url": "https://github.com/KingSora/OverlayScrollbars",
	"authors": ["kingsora"],
	"homepage": "https://kingsora.github.io/OverlayScrollbars",
	"downloads": 1112,
	"updated": "2025-02-19T13:28:21.987Z",
	"tags": ["ui"],
	"github_stars": 4090,
	"typescript": true,
	"version": "0.5.5",
	"svelte_range": "^5.0.0",
	"last_rune_check_version": "0.5.5",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "overlayscrollbars-svelte",
				"version": "0.5.5",
				"size": 1135262
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "<div align=\"center\">\r\n  <a href=\"https://kingsora.github.io/OverlayScrollbars\"><img src=\"https://raw.githubusercontent.com/KingSora/OverlayScrollbars/master/logo/logo.png\" width=\"160\" height=\"160\" alt=\"OverlayScrollbars\"></a>\r\n  <a href=\"https://svelte.dev/\"><img src=\"https://raw.githubusercontent.com/KingSora/OverlayScrollbars/master/packages/overlayscrollbars-svelte/logo.svg\" width=\"160\" height=\"160\" alt=\"Svelte\"></a>\r\n</div>\r\n<br />\r\n<div align=\"center\">\r\n\r\n  [![OverlayScrollbars](https://img.shields.io/badge/OverlayScrollbars-%5E2.0.0-338EFF?style=flat-square)](https://github.com/KingSora/OverlayScrollbars)\r\n  [![Svelte](https://img.shields.io/badge/Svelte-%5E5.0.0-FF3E00?style=flat-square&logo=svelte)](https://github.com/sveltejs/svelte)\r\n  [![Downloads](https://img.shields.io/npm/dt/overlayscrollbars-svelte.svg?style=flat-square)](https://www.npmjs.com/package/overlayscrollbars-svelte)\r\n  [![Version](https://img.shields.io/npm/v/overlayscrollbars-svelte.svg?style=flat-square)](https://www.npmjs.com/package/overlayscrollbars-svelte)\r\n  [![License](https://img.shields.io/github/license/kingsora/overlayscrollbars.svg?style=flat-square)](#)\r\n\r\n</div>\r\n<h3 align=\"center\">\r\n  <a href=\"https://kingsora.github.io/OverlayScrollbars\">Website</a>\r\n  &nbsp;&nbsp;&bull;&nbsp;&nbsp;\r\n  <a href=\"https://kingsora.github.io/OverlayScrollbars/examples\">Examples</a>\r\n</h3>\r\n\r\n# OverlayScrollbars for Svelte\r\n\r\nThis is the official OverlayScrollbars Svelte wrapper.\r\n\r\n## Installation\r\n\r\n```sh\r\nnpm install overlayscrollbars-svelte\r\n```\r\n\r\n## Peer Dependencies\r\n\r\nOverlayScrollbars for Svelte has the following **peer dependencies**:\r\n\r\n- The vanilla JavaScript library: [overlayscrollbars](https://www.npmjs.com/package/overlayscrollbars)\r\n\r\n```\r\nnpm install overlayscrollbars\r\n```\r\n\r\n- The Svelte framework: [svelte](https://www.npmjs.com/package/svelte)\r\n\r\n```\r\nnpm install svelte\r\n```\r\n\r\n## Usage\r\n\r\nThe first step is to import the CSS file into your app:\r\n```ts\r\nimport 'overlayscrollbars/overlayscrollbars.css';\r\n```\r\n\r\n> __Note__: If the path `'overlayscrollbars/overlayscrollbars.css'` is not working use `'overlayscrollbars/styles/overlayscrollbars.css'` as the import path for the CSS file.\r\n\r\n## Component\r\n\r\nThe main entry point is the `OverlayScrollbarsComponent` which can be used in your application as a component:\r\n\r\n```svelte\r\n<script>\r\nimport { OverlayScrollbarsComponent } from \"overlayscrollbars-svelte\";\r\n\r\n// ...\r\n</script>\r\n\r\n<OverlayScrollbarsComponent defer>\r\n  example content\r\n</OverlayScrollbarsComponent>\r\n```\r\n\r\n### Properties\r\n\r\nThe component accepts all properties of regular elements such as `div` and `span`.  \r\nAdditionally it has custom optional properties:\r\n\r\n- `element`: accepts a `string` which represents the tag of the root element.\r\n- `options`: accepts an `object` which represents the OverlayScrollbars options.\r\n- `events`: accepts an `object` which represents the OverlayScrollbars events.\r\n- `defer`: accepts an `boolean` or `object`. Defers the initialization to a point in time when the browser is idle.\r\n\r\n> __Note__: Its **highly recommended** to use the `defer` option whenever possible to defer the initialization to a browser's idle period.\r\n\r\n```svelte\r\n<!-- example usage -->\r\n<OverlayScrollbarsComponent\r\n  element=\"span\"\r\n  options={{ scrollbars: { autoHide: 'scroll' } }}\r\n  events={{ scroll: () => { /* ... */ } }}\r\n  defer\r\n/>\r\n```\r\n\r\n### Events\r\n\r\nAdditionally to the `events` property the `OverlayScrollbarsComponent` emits \"native\" Svelte events. To prevent name collisions with DOM events the events have a `os` prefix. \r\n\r\n> __Note__: Events are still supported even though they are are [deprecated](https://svelte.dev/docs/svelte/v5-migration-guide#Event-changes). This was done to ease migration and will be removed in a future release. Please use the `events` option instead.\r\n\r\n```svelte\r\n<!-- example usage -->\r\n<OverlayScrollbarsComponent\r\n  on:osInitialized={onInitialized}\r\n  on:osUpdated={onUpdated}\r\n  on:osDestroyed={onDestroyed}\r\n  on:osScroll={onScroll}\r\n/>\r\n```\r\n\r\nAll events are typed, but you can use the `EventListenerArgs` type as utility in case its needed:\r\n\r\n```ts\r\nimport type { EventListenerArgs } from 'overlayscrollbars';\r\n\r\n// example listener\r\nconst onUpdated = (event) => {\r\n  const [instance, onUpdatedArgs] = event.detail as EventListenerArgs['updated'];\r\n}\r\n```\r\n\r\n### Ref\r\n\r\nThe `ref` of the `OverlayScrollbarsComponent` will give you an object with which you can access the OverlayScrollbars `instance` and the root `element` of the component.  \r\nThe ref object has two properties:\r\n\r\n- `osInstance`: a function which returns the OverlayScrollbars instance.\r\n- `getElement`: a function which returns the root element.\r\n\r\n## Primitive\r\n\r\nIn case the `OverlayScrollbarsComponent` is not enough, you can also use the `useOverlayScrollbars` primitive:\r\n\r\n```svelte\r\n<script>\r\n  import { useOverlayScrollbars } from 'overlayscrollbars-svelte';\r\n  import { onMount } from 'svelte';\r\n\r\n  let div = $state();\r\n  let params = $state$({ options, events, defer });\r\n  const [initialize, instance] = useOverlayScrollbars(() => params);\r\n\r\n  /** \r\n   * or:\r\n   * \r\n   * let options = $state$();\r\n   * let events = $state();\r\n   * let defer = $state();\r\n   * const [initialize, instance] = useOverlayScrollbars({\r\n   *   options: () => options,\r\n   *   events: () => events,\r\n   *   defer: () => defer,\r\n   * });\r\n   * \r\n   */\r\n\r\n  onMount(() => {\r\n    initialize({ target: div });\r\n  });\r\n</script>\r\n\r\n<div bind:this={div}></div>\r\n```\r\n\r\nThe primitive is for advanced usage and lets you control the whole initialization process. This is useful if you want to integrate it with other plugins.\r\n\r\n### Parameters\r\n\r\nParameters are optional and similar to the `OverlayScrollbarsComponent`.\r\nIts an `object` with optional properties:\r\n\r\n- `options`: accepts an `object` which represents the OverlayScrollbars options.\r\n- `events`: accepts an `object` which represents the OverlayScrollbars events.\r\n- `defer`: accepts an `boolean` or `object`. Defers the initialization to a point in time when the browser is idle.\r\n\r\n> __Note__: You can also pass a `function` as parameter which returns the object in case the object itself is reactive. This also applies to all fields.\r\n\r\n### Return\r\n\r\nThe `useOverlayScrollbars` primitive returns a `tuple` with two values:\r\n\r\n- The first value is the `initialization` function, it takes one argument which is the `InitializationTarget`.\r\n- The second value is a function which returns the current OverlayScrollbars instance or `null` if not initialized.\r\n\r\n## License\r\n\r\nMIT\r\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3589, 29],
		[3596, 80],
		[3603, 66],
		[3610, 53],
		[3617, 65],
		[3624, 64],
		[3631, 146],
		[3638, 92],
		[3645, 78],
		[3652, 68],
		[3659, 136],
		[3666, 164],
		[3673, 255],
		[3680, 299],
		[3687, 302],
		[3694, 239],
		[3701, 198],
		[3708, 260],
		[3715, 220],
		[3722, 215],
		[3729, 203],
		[3736, 300],
		[3743, 592],
		[3750, 955],
		[3757, 633],
		[3764, 601],
		[3771, 385],
		[3778, 643],
		[3785, 547],
		[3792, 512],
		[3799, 591],
		[3806, 588],
		[3813, 752],
		[3820, 638],
		[3827, 851],
		[3834, 884],
		[3841, 751],
		[3848, 896],
		[3855, 765],
		[3862, 910],
		[3869, 788],
		[3876, 715],
		[3883, 702],
		[3890, 1019],
		[3897, 778],
		[3904, 911],
		[3911, 721],
		[3918, 1038],
		[3925, 653],
		[3932, 558],
		[3939, 641],
		[3946, 461],
		[3953, 556],
		[3960, 770],
		[3967, 692],
		[3974, 614],
		[3981, 729],
		[3988, 575],
		[3995, 644],
		[4002, 737],
		[4009, 255],
		[4016, 301],
		[4023, 829],
		[4030, 665],
		[4037, 848],
		[4044, 611],
		[4051, 676],
		[4058, 864],
		[4065, 1115],
		[4072, 996],
		[4079, 1157],
		[4086, 1302],
		[4093, 1095],
		[4100, 1287],
		[4107, 1068],
		[4114, 1112],
		[4121, 1065],
		[4128, 783]
	],
	"esm": true,
	"cjs": true
}
