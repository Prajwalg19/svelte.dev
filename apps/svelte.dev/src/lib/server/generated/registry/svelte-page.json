{
	"name": "svelte-page",
	"description": "Nested routing with page.js for Svelte.",
	"repo_url": "https://github.com/kaisermann/svelte-router",
	"authors": ["kaisermann"],
	"homepage": "https://github.com/kaisermann/svelte-router#readme",
	"downloads": 32,
	"updated": "2019-01-22T21:01:48.349Z",
	"tags": ["router"],
	"github_stars": 18,
	"typescript": false,
	"version": "2.2.1",
	"svelte_range": "^2.15.3",
	"last_rune_check_version": "2.2.1",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-page",
				"version": "2.2.1",
				"size": 11203
			},
			{
				"name": "page",
				"version": "1.11.6",
				"size": 113746
			},
			{
				"name": "path-to-regexp",
				"version": "1.2.1"
			},
			{
				"name": "isarray",
				"version": "0.0.1"
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[2, 3]
		],
		"circular": []
	},
	"readme": "# svelte-page\n\n> Nested routing with [`page.js`](https://github.com/visionmedia/page.js) for svelte\n\n## How to use\n\n1. Build a object with all your routes:\n\n```js\nexport default {\n  '/': home,\n  '/other': other,\n  '/things': {\n    component: things,\n    data: { foo: 'A custom property' },\n  },\n  '/things/:thing*': thing,\n  '/things/:thing/subthing/': subthing,\n}\n```\n\n2. Pass it to the `<Router />`\n\n```html\n<Router routes={routes} />\n\n<script>\n  import routes from './routes.js'\n\n  export default {\n    data() {\n      return {\n        routes\n      }\n    }\n  }\n</script>\n```\n\nEvery page may receive the following properties:\n\n- Any property passed to the page programatically with the `Router.go(path, { ...props })` or in the `routes.js` definition\n- `params` - An object representing all the parameters from the URL\n- `page`\n  - `child` - The nested route component that should be rendered;\n  - `props` - The props that should be passed to the nested component\n\n3. For nested routes, use the `<NestedRoute>`\n\n```html\nHere is my sub-page:\n<br>\n<NestedRoute {page} />\n\n<script>\n  export default {\n    components: {\n      NestedRoute: 'svelte-page/NestedRoute.html'\n    }\n  }\n</script>\n```\n\n`<NestedRoute />` can fire events to allow communication between parent and child pages.\n\nAvailable events:\n\n- `action`\n- `response`\n- `event`\n\n**Example:**\n\n```html\n<NestedRoute on:action=\"handle(event)\" />\n```\n\n## Props\n\n```html\n<Router\n  routes={routes}\n  strict={true}\n  hashbang={true}\n>\n```\n\n- `routes` - The routes object `(default: undefined)`\n- `strict` - If false, match trailling slash `(default: true)`\n- `hashbang` - Add `#!` before urls `(default: true)`\n\n**Dynamic**:\n\n- `context` - The `page.js` context object\n- `path` - The current router path\n\n## Slots\n\nBoth `<Router>` and `<NestedRoute>` have the optional `default` slot which is only rendered when the current route isn't associated with any component.\n\n```html\n<Router ...>\n  404 - Route not found\n</Router>\n\n<NestedRoute>\n  Nested route not found\n</NestedRoute>\n```\n\n## Events\n\n### Component events\n\n#### `notFound`\n\nWhen a route isn't found, both the `<Router>` and `<NestedRoute>` fire a `notFound` event.\n\n```html\n<Router on:notFound=\"console.log('Route not found!!!')\" />\n<NestedRoute on:notFound=\"console.log('NestedRoute not found!!!')\" />\n```\n\n#### `change`\n\nWhen a route change occurs, the `<Router/>` component fires a `change` event:\n\n```html\n<Router on:change=\"console.log('Route changed!!!')\" />\n```\n\nThis event is also fired at the `root` component with the name of `router:change`:\n\n```js\nexport default {\n  oncreate() {\n    this.root.on('router:change', context => {\n      console.log('New path:', context.path)\n    })\n  },\n}\n```\n\n---\n\nThe `<Router />` adds itself to the `root` component as a `router` property, so it's also possible to get the context by observing its lifecycle:\n\n```html\n<!-- Some other component down the hierarchy -->\n<script>\n  export default {\n    oncreate() {\n      this.root.router.on('update', ({ current }) => {\n        console.log('Current path:', current.context.path)\n      })\n    }\n  }\n</script>\n```\n\n## Static Methods\n\n```html\n<!-- Some other component down the hierarchy -->\n<script>\n  import Router from 'svelte-page'\n\n  export default {\n    oncreate() {\n      /** Show the specified route with an optional data object */\n      Router.go('/about', optionalData)\n      Router.push('/about', optionalData)\n\n      /** Go back to the previous route */\n      Router.back()\n    }\n  }\n</script>\n```\n\n## Example\n\n**App.html**\n\n```html\n<Router {routes} />\n\n<script>\n  import Home from './routes/Home.html';\n  import About from './routes/About.html';\n  import AboutPersonTemplate from './routes/AboutPersonTemplate.html';\n  import AboutPerson from './routes/AboutPerson.html';\n\n  export default {\n    components: {\n      Router: 'svelte-page/Router.html',\n    },\n    data() {\n      return {\n        routes: {\n          \"/\": Home,\n          /** About page will have a {name} prop */\n          \"/about\": {\n            component: About,\n            data: { name: 'Text name' }\n          },\n          /**\n           * Page will have {page.child} because of nested routes\n           **/\n          \"/about/*\": AboutPersonTemplate,\n          /** Page will have a {params.whoami} prop */\n          \"/about/:whoami\": AboutPerson\n        }\n      }\n    }\n  }\n</script>\n```\n\n**AboutPersonTemplate.html**\n\n```html\n<NestedRoute {page} />\n\n<script>\n  export default {\n    components: {\n      NestedRoute: 'svelte-page/NestedRoute.html',\n    },\n  }\n</script>\n```\n\nFor more examples, please check the [`example/src/routes.js`](https://github.com/kaisermann/svelte-router/blob/master/example/src/routes.js) file.\n\n## Credits and inspirations\n\n- [tivac/svelte-routing](https://github.com/tivac/svelte-routing/) :grin:\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3589, 10],
		[3596, 20],
		[3603, 30],
		[3610, 43],
		[3617, 24],
		[3624, 10],
		[3631, 26],
		[3638, 17],
		[3645, 22],
		[3652, 17],
		[3659, 11],
		[3666, 37],
		[3673, 5],
		[3680, 11],
		[3687, 10],
		[3694, 5],
		[3701, 39],
		[3708, 60],
		[3715, 21],
		[3722, 11],
		[3729, 43],
		[3736, 71],
		[3743, 28],
		[3750, 11],
		[3757, 47],
		[3764, 51],
		[3771, 93],
		[3778, 34],
		[3785, 40],
		[3792, 68],
		[3799, 54],
		[3806, 88],
		[3813, 48],
		[3820, 104],
		[3827, 44],
		[3834, 79],
		[3841, 47],
		[3848, 118],
		[3855, 82],
		[3862, 145],
		[3869, 72],
		[3876, 111],
		[3883, 60],
		[3890, 146],
		[3897, 83],
		[3904, 76],
		[3911, 39],
		[3918, 45],
		[3925, 18],
		[3932, 22],
		[3939, 67],
		[3946, 44],
		[3953, 104],
		[3960, 59],
		[3967, 39],
		[3974, 9],
		[3981, 51],
		[3988, 15],
		[3995, 31],
		[4002, 22],
		[4009, 34],
		[4016, 40],
		[4023, 11],
		[4030, 56],
		[4037, 72],
		[4044, 16],
		[4051, 50],
		[4058, 50],
		[4065, 81],
		[4072, 54],
		[4079, 20],
		[4086, 101],
		[4093, 51],
		[4100, 72],
		[4107, 40],
		[4114, 32],
		[4121, 127],
		[4128, 29]
	]
}
