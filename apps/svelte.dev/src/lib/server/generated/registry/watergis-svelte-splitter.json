{
	"name": "@watergis/svelte-splitter",
	"description": "Create resizable splitters using CSS grid in Svelte apps.",
	"repo_url": "",
	"authors": ["j_igarashi"],
	"homepage": "https://github.com/@watergis/svelte-splitter/README.md",
	"downloads": 45,
	"updated": "2024-08-25T12:14:06.722Z",
	"tags": ["ui"],
	"typescript": true,
	"version": "2.0.0",
	"svelte_range": "^4.0.0",
	"kit_range": "^2.0.0",
	"last_rune_check_version": "2.0.0",
	"github_stars": 0,
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@watergis/svelte-splitter",
				"version": "2.0.0",
				"size": 21624
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# @geoffcox/svelte-splitter\n\nA resizable splitter for Svelte that leverages CSS display:grid\n\n[Live Demo](https://geoffcox.github.io/demos/svelte-splitter)\n\n## Features\n\n- Vertical (left|right) and Horizontal (top/bottom) splitting\n- Provides slots for panes and splitter\n- Set initial split size\n- Minimum pane sizes\n- Sizes can be any CSS unit (e.g. px, %, fr, em, pt, cm, mm)\n- Reset to initial split with double-click\n- Resize with keyboard arrow keys\n- Nested splits with correct resizing\n- Customize the DefaultSplitter size & colors, or render your own splitter.\n\n## Technology\n\n- Built with Svelte and Typescript\n- Package has no dependencies\n- CSS grid combined with a simple percentage split system provides accurate and responsive resizing.\n\n# Installation\n\n```\nnpm install --save @geoffcox/svelte-splitter\n```\n\n# Usage\n\nTo create vertical or horizontal splits you only need the `Split` component.\n\n## Vertical Split\n\nThe default creates a left(50%) | right(50%) split, no minimum pane sizes, and renders the default splitter.\n\n```svelte\n<script>\n\timport { Split } from '@geoffcox/svelte-splitter';\n</script>\n\n<Split>\n\t<div slot=\"primary\">This is the left pane.</div>\n\t<div slot=\"secondary\">\n\t\tThis is the right pane.\n\t\t<div></div>\n\t</div></Split\n>\n```\n\n## Horizontal Split\n\nAdd the `horizontal` attribute to split top/bottom.\n\n```svelte\n<Split horizontal>\n\t<div slot=\"primary\">This is the top pane.</div>\n\t<div slot=\"secondary\">\n\t\tThis is the bottom pane.\n\t\t<div></div>\n\t</div></Split\n>\n```\n\n## Set the initial split size\n\nAdd the `initialPrimarySize` property to control where the initial split occurs.\n\n```svelte\n<Split initialPrimarySize=\"30%\">\n\t<div slot=\"primary\">Primary pane</div>\n\t<div slot=\"secondary\">\n\t\tSecondary pane\n\t\t<div></div>\n\t</div></Split\n>\n```\n\nTo support double-clicking to reset back to the initial size, add the `resetOnDoubleClick` property.\n\n```svelte\n<Split initialPrimarySize=\"30%\" resetOnDoubleClick>\n\t<div slot=\"primary\">Primary pane</div>\n\t<div slot=\"secondary\">\n\t\tSecondary pane\n\t\t<div></div>\n\t</div></Split\n>\n```\n\n## Nest Splits\n\nJust nest Split componets to create whatever layout you like.\nHere is an example of a common layout for a main, detail, and output view.\n\n```svelte\n<Split initialPrimarySize=\"30%\">\n\t<div slot=\"primary\">This is the left pane.</div>\n\t<svelte:fragment slot=\"secondary\">\n\t\t<Split horizontal initialPrimarySize=\"60%\">\n\t\t\t<div slot=\"primary\">This is the right-top pane.</div>\n\t\t\t<div slot=\"secondary\">This is the right-bottom pane.</div>\n\t\t</Split>\n\t</svelte:fragment>\n</Split>\n```\n\n## Constrain minimum pane sizes\n\nPrevent either pane from becoming too small using the `minPrimarySize` and `minSecondarySize` properties.\n\n```svelte\n<Split minPrimarySize=\"250px\" minSecondarySize=\"15%\">\n\t<div slot=\"primary\">This pane won't get smaller than 250 pixels.</div>\n\t<div slot=\"secondary\">\n\t\tThis pane won't get any smaller than 15% of the overall size of the split control./\n\t\t<div></div>\n\t</div></Split\n>\n```\n\n## Customize the splitter size\n\nSet the size of the default splitter's hit area with the `splitterSize` property.\nThe hit area is where the user can click to start dragging the splitter.\n\n```svelte\n<Split splitterSize=\"10px\">\n\t<div slot=\"primary\">Primary pane</div>\n\t<div slot=\"secondary\">\n\t\tSecondary pane\n\t\t<div></div>\n\t</div></Split\n>\n```\n\n## Customize the splitter colors\n\nChange the colors of the default splitter by adding the `DefaultSplitter` to the splitter slot.\nPass color properties to the default splitter.\n\n```svelte\n<Split defaultSplitterColors={colors}>\n  <div slot=\"primary\">Primary pane</div>\n  <svelte:fragment slot=\"splitter\">\n    <DefaultSplitter color=\"red\" hoverColor=\"#00FF00\" dragColor=\"blue\">\n  </svelte:fragment>\n  <div slot=\"secondary\">Secondary pane<div>\n</Split>\n```\n\n## Custom render the splitter\n\nSubstitute a custom splitter by replacing the default splitter.\n\n```svelte\n<Split defaultSplitterColors={colors}>\n\t<div slot=\"primary\">Primary pane</div>\n\t<svelte:fragment slot=\"splitter\">\n\t\t<MyAwesomeSplitter />\n\t</svelte:fragment>\n\t<div slot=\"secondary\">\n\t\tSecondary pane\n\t\t<div></div>\n\t</div></Split\n>\n```\n\nWhen building a customer splitter, leverage the context information from the parent `Split` component.\n\n```ts\nlet splitterContext = getContext<SplitterContextStore>(splitterContextKey);\n\n$: dragging = $splitterContext.dragging;\n$: horizontal = $splitterContext.horizontal;\n};\n```\n\n## Events\n\nSubscribe to the changed event to get updates.\n\n````ts\nconst onChanged = (event) => {\n    const {details: {percent, primarySize, splitterSize, secondarySize, dragging}} = event;\n    console.log(`percent: ${percent}`);\n    console.log(`primarySize: ${primarySize}`);\n    console.log(`splitterSize: ${splitterSize}`);\n    console.log(`secondarySize: ${secondarySize}`);\n    console.log(`dragging: ${dragging}`);\n};\n```ts\n\n```svelte\n<Split on:changed={onChanged}>\n    ...\n</Split>\n````\n\n## Imperative Methods\n\nGet or set the percentage by calling `getPercent` and `setPercent` on the `Split` handle.\n\n```ts\nlet splitControl;\n\nconst flipSplitPercent = () => {\n\tconst percent = splitControl.getPercent();\n\tsplitControl.setPercent(100 - percent);\n};\n```\n\n```svelte\n<Split bind:this={splitControl}>...</Split>\n```\n\n# Known limitations\n\n- No typescript definitions for Split or DefaultSplitter\n\n# Change History\n\n## 1.0.0 - First project publication\n\n- Based on the 2.1.0 version of @geoffcox/react-splitter\n- Updated to idomatic Svelte\n\n## 1.0.1 - Updated live demo link\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3883, 82],
		[3890, 27],
		[3897, 10],
		[3904, 9],
		[3911, 10],
		[3918, 6],
		[3925, 9],
		[3932, 76],
		[3939, 126],
		[3946, 121],
		[3953, 272],
		[3960, 161],
		[3967, 155],
		[3974, 208],
		[3981, 110],
		[3988, 109],
		[3995, 132],
		[4002, 61],
		[4009, 45],
		[4016, 22],
		[4023, 103],
		[4030, 113],
		[4037, 137],
		[4044, 219],
		[4051, 176],
		[4058, 94],
		[4065, 61],
		[4072, 211],
		[4079, 74],
		[4086, 43],
		[4093, 63],
		[4100, 69],
		[4107, 52],
		[4114, 45],
		[4121, 79],
		[4128, 174],
		[4135, 74]
	]
}
