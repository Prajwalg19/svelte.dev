{
	"name": "@airlookjs/svelte-sequence-editor",
	"description": "Edit timed sequences in Svelte with nested layers and blocks.",
	"repo_url": "https://github.com/airlookjs/airlookjs",
	"authors": ["olekristensen", "smukkejohan"],
	"homepage": "https://github.com/airlookjs/airlookjs/packages/svelte-sequence-editor#readme",
	"downloads": 16,
	"updated": "2024-09-02T19:35:39.529Z",
	"tags": ["ui"],
	"github_stars": 5,
	"typescript": true,
	"version": "4.1.9",
	"svelte_range": "^4.2.19",
	"kit_range": "^2.5.25",
	"last_rune_check_version": "4.1.9",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@airlookjs/svelte-sequence-editor",
				"version": "4.1.9",
				"size": 86284
			}
		],
		"dependencies": [],
		"circular": []
	},
	"legacy_svelte": true,
	"readme": "# Svelte Sequence Editor\n\nUI widget and logic for editing timed sequences in recursively nested structures of layers and blocks. Aimed at simple video and media editing in the browser.\n\n[![NPM Version](https://img.shields.io/npm/v/@airlookjs/svelte-sequence-editor.svg?style=flat-square&colorB=51C838)](https://www.npmjs.com/package/@airlookjs/svelte-sequence-editor)\n\n[![semantic-release: angular](https://img.shields.io/badge/semantic--release-angular-e10079?logo=semantic-release)](https://github.com/semantic-release/semantic-release)\n\n[![CI](https://github.com/airlookjs/svelte-sequence-editor/actions/workflows/ci.yml/badge.svg)](https://github.com/airlookjs/svelte-sequence-editor/actions/workflows/ci.yml)\n\n## Documentation\n\nSee [airlookjs.github.io/svelte-sequence-editor/](https://airlookjs.github.io/svelte-sequence-editor/) for additional examples and documentation.\n\n## Installation\n\n```bash\n$ npm install @airlookjs/svelte-sequence-editor\n```\n\n## Usage\n\n```typescript\nimport { createSequence, Sequence } from '@airlookjs/svelte-sequence-editor';\n\nconst sequenceTemplate = [\n    {\n\t\tkey: 'speak',\n\t\tblocks: [\n\t\t\t{\n\t\t\t\tkey: 'audio',\n                title: 'Audio',\n\t\t\t\tinTime: 0,\n\t\t\t\toutTime: 10000\n\t\t\t}\n\t\t]\n\t},\n    {\n\t\tkey: 'video',\n\t\tblocks: [\n\t\t\t{\n\t\t\t\tkey: 'footage',\n\t\t\t\ttitle: 'Footage',\n\t\t\t\tinTime: 0,\n\t\t\t\toutTime: 10000\n            },\n\n\t\t]\n\t},\n\n]\n\nconst sequence = createSequence({\n\t\t\tinitialData: ,\n\t\t\tduration: 30000,\n\t\t\toptions: {\n                // Will make the editor snap values to a frame rate of 30 fps\n\t\t\t\troundingBase: () => {\n\t\t\t\t\treturn (1 / 30) * 1000\n\t\t\t\t},\n\t\t\t    errorHandler: (error) => {\n\t\t\t\t\tconsole.error('sequence editor error', error);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\nconst { options, duration } = sequence;\n\n```\n\nRender the component with the sequence object as a prop.\n\n```html\n<Sequence {options} {duration} {sequence} />\n```\n\n## Styling with tailwind\n\nsvelte-sequence-editor uses tailwind for styling.\n",
	"downloads_history": [
		[3610, 325],
		[3617, 31],
		[3624, 19],
		[3631, 8],
		[3638, 12],
		[3645, 10],
		[3652, 5],
		[3659, 63],
		[3666, 119],
		[3673, 207],
		[3680, 7],
		[3687, 94],
		[3694, 1],
		[3708, 11],
		[3715, 8],
		[3722, 15],
		[3729, 239],
		[3736, 14],
		[3743, 34],
		[3750, 14],
		[3757, 5],
		[3764, 3],
		[3771, 7],
		[3778, 73],
		[3785, 4],
		[3792, 5],
		[3799, 7],
		[3806, 4],
		[3813, 34],
		[3820, 10],
		[3827, 4],
		[3834, 96],
		[3841, 4],
		[3848, 7],
		[3855, 80],
		[3862, 34],
		[3869, 10],
		[3876, 34],
		[3883, 8],
		[3890, 17],
		[3897, 61],
		[3904, 61],
		[3911, 14],
		[3918, 12],
		[3925, 6],
		[3932, 12],
		[3939, 11],
		[3946, 5],
		[3953, 6],
		[3960, 4],
		[3967, 27],
		[3974, 7],
		[3981, 24],
		[3988, 48],
		[3995, 30],
		[4002, 26],
		[4009, 13],
		[4016, 12],
		[4023, 20],
		[4030, 12],
		[4037, 22],
		[4044, 61],
		[4051, 9],
		[4058, 68],
		[4065, 44],
		[4072, 8],
		[4079, 3],
		[4086, 87],
		[4093, 12],
		[4100, 58],
		[4107, 37],
		[4114, 16],
		[4121, 18],
		[4128, 16]
	]
}
