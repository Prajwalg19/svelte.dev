{
	"name": "sage-svelte-highlight",
	"description": "Syntax highlighting for Svelte using Highlight.js.",
	"repo_url": "",
	"authors": ["sagethesagesage"],
	"downloads": 7,
	"updated": "2022-08-17T15:08:22.424Z",
	"tags": ["ui"],
	"typescript": true,
	"version": "0.0.2",
	"svelte_range": "^3.49.0",
	"kit_range": "1.0.0-next.407",
	"last_rune_check_version": "0.0.2",
	"github_stars": 0,
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "sage-svelte-highlight",
				"version": "0.0.2",
				"size": 431401
			},
			{
				"name": "highlight.js",
				"version": "11.6.0",
				"size": 3911356
			}
		],
		"dependencies": [[0, 1]],
		"circular": []
	},
	"readme": "# svelte-highlight\n\n[![NPM][npm]][npm-url]\n![npm](https://img.shields.io/npm/dt/svelte-highlight?color=ff3e00&style=for-the-badge)\n\n> Syntax highlighting for Svelte using [highlight.js](https://github.com/highlightjs/highlight.js).\n\nTry it in [StackBlitz](https://stackblitz.com/edit/svelte-highlight?file=src%2Froutes%2Findex.svelte).\n\n## [Documentation](https://svhe.onrender.com)\n\n## Installation\n\n```bash\n# Yarn\nyarn add -D svelte-highlight\n\n# npm\nnpm i -D svelte-highlight\n\n# pnpm\npnpm i -D svelte-highlight highlight.js\n```\n\nNote that [pnpm](https://github.com/pnpm/pnpm) users must also install `highlight.js`.\n\n## SvelteKit Set-up\n\nTo use this library with [SvelteKit](https://github.com/sveltejs/kit) or [Vite](https://github.com/sveltejs/vite-plugin-svelte), instruct Vite to [optimize](https://vitejs.dev/config/dep-optimization-options.html#optimizedeps-include) `highlight.js` and `highlight.js/lib/core`:\n\n```diff\n+ optimizeDeps: {\n+   include: [\"highlight.js\", \"highlight.js/lib/core\"],\n+ },\n```\n\n**vite.config.js**\n\n```js\nimport { sveltekit } from \"@sveltejs/kit/vite\";\n\n/** @type {import('vite').UserConfig} */\nexport default {\n  plugins: [sveltekit()],\n  optimizeDeps: {\n    include: [\"highlight.js\", \"highlight.js/lib/core\"],\n  },\n};\n```\n\nRefer to [examples/sveltekit](examples/sveltekit) or [examples/vite](examples/vite).\n\n## Usage\n\nThere are two ways to apply `highlight.js` styles.\n\n1. Injected styles through [svelte:head](https://svelte.dev/docs#template-syntax-svelte-head)\n2. CSS StyleSheets\n\n### Injected Styles\n\nThis component exports `highlight.js` themes in JavaScript. Import the theme from `svelte-highlight/styles` and inject it using the [svelte:head](https://svelte.dev/docs#svelte_head) API.\n\n```svelte\n<script>\n  import Highlight from \"svelte-highlight\";\n  import typescript from \"svelte-highlight/languages/typescript\";\n  import github from \"svelte-highlight/styles/github\";\n\n  const code = \"const add = (a: number, b: number) => a + b;\";\n</script>\n\n<svelte:head>\n  {@html github}\n</svelte:head>\n\n<Highlight language={typescript} {code} />\n```\n\n### CSS StyleSheet\n\nDepending on your set-up, importing a CSS StyleSheet in Svelte may require a CSS file loader. Refer to [examples/webpack](examples/webpack) for a sample set-up.\n\n```svelte\n<script>\n  import { Highlight } from \"svelte-highlight\";\n  import typescript from \"svelte-highlight/languages/typescript\";\n  import \"svelte-highlight/styles/github.css\";\n\n  const code = \"const add = (a: number, b: number) => a + b;\";\n</script>\n\n<Highlight language={typescript} {code} />\n```\n\n#### Linking from a CDN\n\nCSS StyleSheets can also be externally linked from a Content Delivery Network (CDN) like [unpkg.com](https://unpkg.com/).\n\nThis is best suited for prototyping and not recommended for production use.\n\n**HTML**\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <link\n      rel=\"stylesheet\"\n      href=\"https://unpkg.com/svelte-highlight/styles/github.css\"\n    />\n  </head>\n</html>\n```\n\n**svelte:head**\n\n```svelte\n<svelte:head>\n  <link\n    rel=\"stylesheet\"\n    href=\"https://unpkg.com/svelte-highlight/styles/github.css\"\n  />\n</svelte:head>\n```\n\n## Svelte Syntax Highlighting\n\nUse the `HighlightSvelte` component for Svelte syntax highlighting.\n\n```svelte\n<script>\n  import { HighlightSvelte } from \"svelte-highlight\";\n  import github from \"svelte-highlight/styles/github\";\n\n  $: code = `<button on:click={() => { console.log(0); }}>Increment {count}</button>`;\n</script>\n\n<svelte:head>\n  {@html github}\n</svelte:head>\n\n<HighlightSvelte {code} />\n```\n\n## Auto-highlighting\n\nThe `HighlightAuto` component uses [highlightAuto](https://highlightjs.readthedocs.io/en/latest/api.html#highlightauto) API.\n\n**Note:** auto-highlighting will result in a larger bundle size in order to infer a language.\n\nPrefer to specify a language if possible.\n\n```svelte\n<script>\n  import { HighlightAuto } from \"svelte-highlight\";\n  import github from \"svelte-highlight/styles/github\";\n\n  $: code = `body {\\n  padding: 0;\\n  color: red;\\n}`;\n</script>\n\n<svelte:head>\n  {@html github}\n</svelte:head>\n\n<HighlightAuto {code} />\n```\n\n## Language Targeting\n\nAll `Highlight` components apply a `data-language` attribute on the codeblock containing the language name.\n\nSee the [Languages page](SUPPORTED_LANGUAGES.md) for a list of supported languages.\n\n```css\n[data-language=\"css\"] {\n  /* custom style rules */\n}\n```\n\n## Language Tags\n\nAll `Highlight` components allow for a tag to be added at the top-right of the codeblock displaying the language name.\n\nThe language tag can be given a custom `background` , `color` , and `border-radius` through CSS custom properties.\n\nIt is recommended that you set values for `--hljs-background` and `--hljs-foreground` to ensure the langtags are readable with your theme.\n\nSee the [Languages page](SUPPORTED_LANGUAGES.md) for a list of supported languages.\n\nDefaults:\n\n- `--hljs-background: inherit`\n- `--hljs-foreground: inherit`\n- `--hljs-border-radius: 0`\n\n```svelte\n<script>\n  import { HighlightAuto } from \"svelte-highlight\";\n\n  $: code = `.body { padding: 0; margin: 0; }`;\n</script>\n\n<HighlightAuto {code} langtag />\n```\n\n```css\n[data-language=\"css\"] {\n  --hljs-background: linear-gradient(135deg, #2996cf, 80%, white);\n  --hljs-foreground: #fff;\n  --hljs-radius: 8px;\n}\n```\n\n## Custom Language\n\nFor custom language highlighting, pass a `name` and `register` function to the language prop.\n\nRefer to the highlight.js [language definition guide](https://highlightjs.readthedocs.io/en/latest/language-guide.html) for guidance.\n\n```svelte\n<script>\n  import { Highlight } from \"svelte-highlight\";\n  import hljs from \"highlight.js\";\n\n  const language = {\n    name: \"custom-language\",\n    register: (hljs) => {\n      return {\n        /** custom language rules */\n        contains: [],\n      };\n    },\n  };\n</script>\n\n<Highlight {language} code=\"...\" />\n```\n\n## Code-splitting\n\nYou can use the `dynamic import` syntax to code-split code.\n\nIn the example below, the `HighlightAuto` component and injected styles are dynamically loaded.\n\n```svelte\n<script>\n  import { onMount } from \"svelte\";\n\n  let component;\n  let styles;\n\n  onMount(async () => {\n    component = (await import(\"svelte-highlight\")).HighlightAuto;\n    styles = (await import(\"svelte-highlight/styles/github\")).default;\n  });\n</script>\n\n<svelte:head>\n  {#if styles}\n    {@html styles}\n  {/if}\n</svelte:head>\n\n<svelte:component\n  this={component}\n  langtag\n  code={`body {\\n  padding: 0;\\n  color: red;\\n}`}\n/>\n```\n\n## API\n\n### Props\n\n| Name                                            | Type                                           | Default value                            |\n| :---------------------------------------------- | :--------------------------------------------- | :--------------------------------------- |\n| code                                            | `any`                                          | `undefined`                              |\n| language (only required for `Highlight.svelte`) | { name: `string`; register: hljs => `object` } | { name: undefined, register: undefined } |\n| langtag                                         | `boolean`                                      | `false`                                  |\n\n- `$$restProps` are forwarded to the `pre` element\n\n### Dispatched Events\n\n- **on:highlight**: fired after code syntax is highlighted\n\n```svelte\n<Highlight\n  language={typescript}\n  {code}\n  on:highlight={(e) => {\n    console.log(e.detail.highlighted); // \"<span>...</span>\"\n  }}\n/>\n```\n\n## TypeScript\n\nSvelte version 3.31 or greater is required to use this component with TypeScript.\n\nTypeScript definitions are auto-generated by SvelteKit.\n\n## [Supported Languages](SUPPORTED_LANGUAGES.md)\n\n## [Supported Styles](SUPPORTED_STYLES.md)\n\n## Examples\n\n- [examples/rollup](examples/rollup)\n- [examples/sveltekit](examples/sveltekit)\n- [examples/vite](examples/vite)\n- [examples/webpack](examples/webpack)\n\n## [Changelog](CHANGELOG.md)\n\n## License\n\n[MIT](LICENSE)\n\n[npm]: https://img.shields.io/npm/v/svelte-highlight.svg?style=for-the-badge&color=%23ff3e00\n[npm-url]: https://npmjs.com/package/svelte-highlight\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 1],
		[3596, 3],
		[3603, 1],
		[3610, 2],
		[3624, 3],
		[3645, 4],
		[3652, 4],
		[3659, 18],
		[3666, 33],
		[3673, 22],
		[3680, 6],
		[3687, 20],
		[3694, 13],
		[3701, 27],
		[3708, 20],
		[3715, 16],
		[3722, 11],
		[3729, 18],
		[3736, 20],
		[3743, 21],
		[3750, 15],
		[3757, 23],
		[3764, 16],
		[3771, 14],
		[3778, 16],
		[3785, 23],
		[3792, 32],
		[3799, 36],
		[3806, 31],
		[3813, 26],
		[3820, 39],
		[3827, 23],
		[3834, 34],
		[3841, 46],
		[3848, 25],
		[3855, 32],
		[3862, 29],
		[3869, 31],
		[3876, 23],
		[3883, 21],
		[3890, 41],
		[3897, 35],
		[3904, 36],
		[3911, 32],
		[3918, 16],
		[3925, 6],
		[3932, 1],
		[3939, 1],
		[3946, 3],
		[3953, 1],
		[3967, 1],
		[3974, 1],
		[3981, 1],
		[3995, 1],
		[4009, 1],
		[4016, 2],
		[4023, 4],
		[4030, 2],
		[4037, 4],
		[4044, 11],
		[4051, 1],
		[4058, 3],
		[4065, 1],
		[4079, 9],
		[4086, 2],
		[4093, 1],
		[4100, 6],
		[4107, 2],
		[4114, 7],
		[4121, 15],
		[4128, 5]
	],
	"esm": true,
	"cjs": false
}
