{
	"name": "@castlenine/svelte-aoe",
	"description": "Animate elements on scroll in Svelte applications.",
	"repo_url": "https://github.com/castlenine/svelte-aoe",
	"authors": ["castlenine"],
	"homepage": "https://github.com/castlenine/svelte-aoe",
	"downloads": 38,
	"updated": "2024-05-06T21:32:22.329Z",
	"tags": ["ui"],
	"github_stars": 0,
	"typescript": true,
	"version": "1.4.0",
	"svelte_range": "^3.54.0 || ^4.0.0",
	"kit_range": "^1.30.4",
	"last_rune_check_version": "1.4.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@castlenine/svelte-aoe",
				"version": "1.4.0",
				"size": 21307
			}
		],
		"dependencies": [],
		"circular": []
	},
	"legacy_svelte": true,
	"readme": "<div align=\"center\">\n\n# `@castlenine/svelte-aoe`\n\n[![npm.badge]][npm] [![download.badge]][download]\n\nA Svelte component to animate elements, without dependencies\n</div>\n\n`@castlenine/svelte-aoe` utilizes the [Intersection Observer API](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API) to detect when an element enters the viewport.\n\nWhen the element is detected as being in the viewport, `@castlenine/svelte-aoe` applies a class that triggers a CSS animation.\n\n## ðŸš€ [Demo](https://castlenine-svelte-aoe.vercel.app/)\n\n## Installation\n\nUse your package manager to install:\n\n```bash\nnpm i @castlenine/svelte-aoe --save-dev\n```\n\n## Setup\n\n- Import the package\n\n```svelte\nimport AnimateOnEnter from '@castlenine/svelte-aoe';\n```\n\n- Add the component to your layout/page/component.\n\n```svelte\n<AnimateOnEnter />\n```\n\n- Add a `data-aoe` attribute to the element that you want to animate and define an animation.\n\n```svelte\n<img data-aoe=\"fade-up\" src=\"https://dummyimage.com/500x300\"/>\n```\n\n## Example: SvelteKit Global Setup\n\nFile: `src/routes/+layout.svelte`\n\n```svelte\n<script>\n  import AnimateOnEnter from '@castlenine/svelte-aoe';\n</script>\n\n<AnimateOnEnter />\n\n<slot />\n```\n\n## Animations\n\n### Normal speed\n\n- `up`\n- `right`\n- `left`\n- `down`\n- `fade`\n- `fade-up`\n- `fade-right`\n- `fade-left`\n- `fade-down`\n\n### Fast speed\n\n- `up-fast`\n- `right-fast`\n- `left-fast`\n- `down-fast`\n- `fade-fast`\n- `fade-up-fast`\n- `fade-right-fast`\n- `fade-left-fast`\n- `fade-down-fast`\n\n### Slow speed\n\n- `up-slow`\n- `right-slow`\n- `left-slow`\n- `down-slow`\n- `fade-slow`\n- `fade-up-slow`\n- `fade-right-slow`\n- `fade-left-slow`\n- `fade-down-slow`\n\n### Normal speed partial fade\n\nStart wih `0.25` opacity\n\n- `partial-fade`\n- `partial-fade-up`\n- `partial-fade-right`\n- `partial-fade-left`\n- `partial-fade-down`\n\n### Fast speed partial fade\n\nStart wih `0.25` opacity\n\n- `partial-fade-fast`\n- `partial-fade-up-fast`\n- `partial-fade-right-fast`\n- `partial-fade-left-fast`\n- `partial-fade-down-fast`\n\n### Slow speed partial fade\n\nStart wih `0.25` opacity\n\n- `partial-fade-slow`\n- `partial-fade-up-slow`\n- `partial-fade-right-slow`\n- `partial-fade-left-slow`\n- `partial-fade-down-slow`\n\nYou can add your own animations by following the same pattern in your CSS.\n\n```css\n[data-aoe='your-animation'] {\n  transform: translateX(-45px);\n  transition:\n    transform 600ms,\n    opacity 900ms;\n\n  &.aoe {\n    transform: translateX(0);\n    transition-delay: 0s;\n  }\n}\n```\n\n## Properties\n\n| Property name | Type                                         | Default value |\n| ------------- | -------------------------------------------- | ------------- |\n| `root`        | `Document`, `Element`, `null`, `undefined`   | `null`        |\n| `rootMargin`  | `string` in pixel (`px`) or percentage (`%`) | `0px`         |\n| `threshold`   | `number`, `number[]` between `0` and `1.0`   | `0.3`         |\n\n`root` is the element that is used as the viewport for checking visibility of the target. Must be the ancestor of the target. Defaults to the browser viewport if not specified or if `null`.\n\n`rootMargin` is the margin around the root. Can have values similar to the CSS margin property, e.g. `\"10px 20px 30px 40px\"` (top, right, bottom, left). The values can be percentages. Defaults to `'0px'` (no margin).\n\n`threshold` is either a single number or an array of numbers which indicate at what percentage of the target's visibility the observer's callback should be executed. A value of `0.0` or `0` indicates that even a single pixel of the target is visible. A value of `1.0` or `1` indicates that the target is completely visible. Defaults to `0.3` (30%).\n\n---\n\nInspired by [Animate on Scroll](https://michalsnik.github.io/aos/) and forked from [lliamscholtz/svelte-aoe](https://github.com/lliamscholtz/svelte-aoe)\n\n[npm]: https://www.npmjs.com/package/@castlenine/svelte-aoe\n[npm.badge]: https://img.shields.io/npm/v/@castlenine/svelte-aoe\n[download]: https://www.npmjs.com/package/@castlenine/svelte-aoe\n[download.badge]: https://img.shields.io/npm/d18m/@castlenine/svelte-aoe\n",
	"downloads_history": [
		[3813, 2],
		[3827, 5],
		[3834, 1],
		[3841, 21],
		[3848, 2],
		[3855, 31],
		[3862, 3],
		[3869, 5],
		[3876, 5],
		[3883, 1],
		[3890, 7],
		[3897, 27],
		[3904, 3],
		[3911, 23],
		[3918, 8],
		[3925, 6],
		[3932, 3],
		[3939, 15],
		[3953, 3],
		[3960, 1],
		[3967, 1],
		[3974, 4],
		[3981, 9],
		[3988, 8],
		[3995, 9],
		[4002, 6],
		[4016, 2],
		[4023, 3],
		[4030, 3],
		[4037, 5],
		[4044, 4],
		[4051, 5],
		[4058, 2],
		[4065, 25],
		[4072, 52],
		[4079, 14],
		[4086, 47],
		[4093, 93],
		[4100, 186],
		[4107, 55],
		[4114, 38],
		[4121, 26],
		[4128, 33]
	],
	"esm": true,
	"cjs": false
}
