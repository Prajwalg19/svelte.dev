{
	"name": "svelt-yjs",
	"description": "Create Svelte stores from Yjs types for collaborative apps.",
	"repo_url": "https://github.com/relm-us/svelt-yjs",
	"authors": ["canadaduane"],
	"downloads": 6,
	"updated": "2021-03-05T14:44:13.946Z",
	"tags": ["miscellaneous"],
	"github_stars": 95,
	"homepage": "",
	"typescript": true,
	"version": "1.1.0",
	"svelte_range": "^3.34.0",
	"last_rune_check_version": "1.1.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelt-yjs",
				"version": "1.1.0",
				"size": 16233
			},
			{
				"name": "tslib",
				"version": "2.0.3",
				"size": 34220
			},
			{
				"name": "yjs",
				"version": "13.6.26",
				"size": 2301972
			},
			{
				"name": "lib0",
				"version": "0.2.105",
				"size": 1886582
			},
			{
				"name": "isomorphic.js",
				"version": "0.2.5",
				"size": 4941
			}
		],
		"dependencies": [
			[0, 1],
			[0, 2],
			[2, 3],
			[3, 4]
		],
		"circular": []
	},
	"readme": "# Svelt-yjs\n\n[Svelt-yjs](https://github.com/relm-us/svelt-yjs) is a library for your Svelte app\nthat lets you build Svelte stores from Yjs types. When built on the client-side Yjs\nlibrary, your Svelte app gets transport-agnostic synchronization (e.g.\n[y-webrtc](https://github.com/yjs/y-webrtc),\n[y-websocket](https://github.com/yjs/y-websocket) ) across networks and\nundo/redo management basically for free.\n\n[Yjs](https://yjs.dev) is often thought of as a way to make collaborative text\nediting work in a browser, but its underlying technology is amenable to a\nvariety of web use cases. We think [Svelte](https://svelte.dev) and Yjs are\npositioned to make collaborative,\n[local-first](https://www.inkandswitch.com/local-first.html) apps much easier to\nbuild.\n\nAt [Relm](https://github.com/relm-us), for example, we've been using it as the\nsynchronization layer between participants in a [collaborative 3D\nworld](https://www.relm.us). \n\n## Live Demo\n\nSee https://svelt-yjs.dev\n\nOpen it up in multiple browsers at the same time!\n\nNote: the source code for the Live Demo is in the `example/` folder.\n\n## Getting Started\n\nStarting with a Svelte component:\n\n```svelte\n<script lang=\"ts\">\n  import { readableArray } from 'svelt-yjs'\n  import * as Y from 'yjs'\n\n  // All Yjs types must be embedded in a Y.Doc\n  const ydoc: Y.Doc = new Y.Doc()\n\n  // Create a Y.Array in the Y.Doc\n  const yarray: Y.Array<string> = ydoc.getArray('list')\n\n  // Generate a Svelte readable store from the Y.Array\n  const list = readableArray(yarray)\n\n  // The store has a `y` object that references `yarray`\n  // Note: The following is identical to `yarray.push(['one', 'two', 'three'])`\n  //       See Yjs docs for other methods on Y.Array.\n  list.y.push(['one', 'two', 'three'])\n</script>\n\n{#each $list as item, i}\n  <div>\n    {item}\n    <button on:click={() => list.y.delete(i)}>remove</button>\n  </div>\n{/each}\n```\n\n## License\n\nMIT\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3589, 43],
		[3596, 7],
		[3603, 31],
		[3610, 9],
		[3617, 11],
		[3624, 6],
		[3631, 19],
		[3638, 17],
		[3645, 7],
		[3652, 12],
		[3659, 11],
		[3666, 14],
		[3673, 14],
		[3680, 12],
		[3687, 5],
		[3694, 6],
		[3701, 12],
		[3708, 22],
		[3715, 16],
		[3722, 8],
		[3729, 36],
		[3736, 15],
		[3743, 33],
		[3750, 73],
		[3757, 9],
		[3764, 14],
		[3771, 37],
		[3778, 17],
		[3785, 6],
		[3792, 5],
		[3799, 15],
		[3806, 42],
		[3813, 45],
		[3820, 21],
		[3827, 4],
		[3834, 10],
		[3841, 3],
		[3848, 3],
		[3855, 32],
		[3862, 124],
		[3869, 95],
		[3876, 101],
		[3883, 137],
		[3890, 119],
		[3897, 140],
		[3904, 27],
		[3911, 43],
		[3918, 17],
		[3925, 16],
		[3932, 25],
		[3939, 16],
		[3946, 21],
		[3953, 17],
		[3960, 17],
		[3967, 23],
		[3974, 21],
		[3981, 26],
		[3988, 2],
		[3995, 3],
		[4002, 1],
		[4009, 3],
		[4016, 4],
		[4023, 3],
		[4030, 5],
		[4037, 12],
		[4044, 6],
		[4051, 5],
		[4065, 4],
		[4072, 6],
		[4079, 1],
		[4093, 11],
		[4100, 10],
		[4107, 28],
		[4114, 6],
		[4121, 27],
		[4128, 10]
	]
}
