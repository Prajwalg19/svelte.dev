{
	"name": "@crownframework/svelte-error-boundary",
	"description": "Provides a simple error boundary component for Svelte.",
	"repo_url": "https://github.com/crownframework/svelte-error-boundary",
	"authors": ["mrlundis", "alfredringstad"],
	"homepage": "https://github.com/crownframework/svelte-error-boundary#readme",
	"downloads": 1590,
	"updated": "2020-11-17T12:33:31.915Z",
	"tags": ["miscellaneous"],
	"github_stars": 74,
	"typescript": false,
	"version": "1.0.3",
	"svelte_range": "^3.0.0",
	"last_rune_check_version": "1.0.3",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@crownframework/svelte-error-boundary",
				"version": "1.0.3",
				"size": 6570
			}
		],
		"dependencies": [],
		"circular": []
	},
	"legacy_svelte": true,
	"readme": "# Svelte Error Boundary\n\nThis package provides a simple error boundary component for Svelte that can be\ncan be used with both DOM and SSR targets. The default error boundary component\nprovides an optional `onError` callback that can be used to log the error to\ne.g. Sentry.\n\nThis package also provides a `createBoundary` function that can be used to\nmonkey-patch an existing Svelte component in order to create custom error\nstate UIs.\n\nMonkey-patching is obviously less than ideal since this might break without\nwarning in future versions of Svelte. This library should be considered merely\nas a stop-gap solution for those using Svelte in production today.\n\nRelevant Svelte issues: [svelte#1096](https://github.com/sveltejs/svelte/issues/1096)\n[svelte##3587](https://github.com/sveltejs/svelte/issues/#3587)\n[svelte##3733](https://github.com/sveltejs/svelte/issues/#3733)\n\n**[REPL Demo](https://svelte.dev/repl/9d44bbcf30444cd08cca6b85f07f2e2a?version=3.29.4)**\n\n## Installation\n\n```bash\nnpm i -D @crownframework/svelte-error-boundary\n```\n\n## Use default error boundary\n\n```svelte\n<script>\n  import { Boundary } from '@crownframework/svelte-error-boundary';\n  let a;\n</script>\n\n<!-- The code inside the boundary will throw -->\n<Boundary onError={console.error}>\n  {a.b.c}\n</Boundary>\n```\n\n## Create custom error boundary\n\nYou can use the `createBoundary` function to monkey-patch any ordinary Svelte\ncomponent in to an error boundary.\n\nThe component needs to meet the following criteria:\n\n1. Have one unnamed slot (this is what will be \"enhanced\" with an error boundary)\n2. Accept an error prop which will contain a writable store with the last error\n\nFeel free to use the [default error boundary component](./src/DefaultBoundary.svelte)\nas inspiration.\n\n### CustomBoundary.js\n\n```js\nimport { createBoundary } from '@crownframework/svelte-error-boundary';\nimport Component from './CustomBoundaryComponent.svelte';\nexport default createBoundary(Component);\n```\n\n### Usage\n\n```svelte\n<script>\n   // You might need to add .js extension depending on your bundler config\n  import Boundary from './CustomBoundary';\n  let a;\n</script>\n\n<!-- The code inside the boundary will throw -->\n<Boundary onError={console.error}>\n  {a.b.c}\n</Boundary>\n```\n\n## TODO\n\n- [x] Catch client side errors after initial mount\n- [ ] Allow client side recovery if error condition goes away\n\n## Credits\n\nThe initial version of this package was based on a proof of concept by @halfnelson:\nhttps://svelte.dev/repl/006facb65ece4f808cd733e838783228?version=3.22.2\n\n## License\n\nMIT.\n",
	"downloads_history": [
		[3589, 849],
		[3596, 1863],
		[3603, 1579],
		[3610, 1775],
		[3617, 1955],
		[3624, 1568],
		[3631, 1581],
		[3638, 1487],
		[3645, 354],
		[3652, 1119],
		[3659, 1569],
		[3666, 1427],
		[3673, 1800],
		[3680, 1827],
		[3687, 1444],
		[3694, 1696],
		[3701, 1810],
		[3708, 1825],
		[3715, 1406],
		[3722, 1805],
		[3729, 1475],
		[3736, 1213],
		[3743, 1072],
		[3750, 1372],
		[3757, 1250],
		[3764, 1268],
		[3771, 1073],
		[3778, 1097],
		[3785, 1144],
		[3792, 1319],
		[3799, 1325],
		[3806, 1437],
		[3813, 1537],
		[3820, 1205],
		[3827, 1328],
		[3834, 1100],
		[3841, 1423],
		[3848, 1656],
		[3855, 1269],
		[3862, 1866],
		[3869, 1187],
		[3876, 1107],
		[3883, 1533],
		[3890, 1442],
		[3897, 1382],
		[3904, 1119],
		[3911, 1227],
		[3918, 1347],
		[3925, 1077],
		[3932, 1234],
		[3939, 1395],
		[3946, 1342],
		[3953, 1154],
		[3960, 1325],
		[3967, 1520],
		[3974, 1512],
		[3981, 1309],
		[3988, 1231],
		[3995, 1213],
		[4002, 1098],
		[4009, 429],
		[4016, 765],
		[4023, 1447],
		[4030, 1430],
		[4037, 1473],
		[4044, 1542],
		[4051, 1151],
		[4058, 2184],
		[4065, 1810],
		[4072, 1416],
		[4079, 1526],
		[4086, 1342],
		[4093, 1498],
		[4100, 1447],
		[4107, 1457],
		[4114, 1590],
		[4121, 1245],
		[4128, 1332]
	],
	"esm": false,
	"cjs": true
}
