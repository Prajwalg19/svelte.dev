{
	"name": "svelte-web3-provider",
	"description": "Provides Web3 functionality for Svelte applications.",
	"repo_url": "https://github.com/binsarjr/svelte-web3-provider",
	"authors": ["binsarjr"],
	"homepage": "https://github.com/binsarjr/svelte-web3-provider#readme",
	"downloads": 5,
	"updated": "2022-11-04T17:21:28.607Z",
	"tags": ["integration"],
	"github_stars": 2,
	"typescript": true,
	"version": "0.0.1-setprovider",
	"svelte_range": "^3.44.0",
	"kit_range": "next",
	"last_rune_check_version": "0.0.1-setprovider",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-web3-provider",
				"version": "0.0.1-setprovider",
				"size": 10757
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# Svelte Web3 Provider\nsvelte web3 is provider for [web3.js](https://web3js.readthedocs.io) for handle request network to metamask or other provider.\nExample see [here](./src/routes).\n\n## Contribute\nNeed Contribution For Better Docs\n\n\n## Instalation\nUse any package manager do you want.\n```bash\n// Using Yarn to install\nyarn add --dev svelte-web3-provider\n\n// or if you prefer NPM\nnpm install --save-dev svelte-web3-provider\n```\n\n## Basic Usage\nYou must add `Web3Provider` to root layout and Web3Provider will detect if browser support etehreum or not. if not, you can set fallback provider.So, it will use the provider you have set.\n\n```svelte\n<script>\n    // routes/+layout.svelte\n\timport Web3Provider from 'svelte-web3-provider';\n    import net from 'net'\n    import Web3 from 'web3'\n</script>\n\n    \n<!--  No Fallback Provider -->\n<Web3Provider />\n\n<!--  With Fallback Provider -->\n<Web3Provider fallbackProvider=\"http://localhost:8545\" />\n<Web3Provider fallbackProvider={new Web3.providers.WebsocketProvider('ws://localhost:8546')} />\n<Web3Provider fallbackProvider={new Web3.providers.IpcProvider('/Users/myuser/Library/Ethereum/geth.ipc', net)} />\n\n\n<slot/>\n```\n\n\nThen, you can do everything u need with web3.js. like this\n```svelte\n<script>\n// routes/auto/+layout.svelte\n\timport Web3Provider from '$lib';\n</script>\n\n<Web3Provider/>\n<main>\n\t<slot />\n</main>\n```\n```svelte\n<script>\n    // routes/auto/+page.svelte\n\timport { connected, isLoading, isSupportEthereum, selectedAccount, web3 } from 'svelte-web3-provider';\n\n\tlet balance = '';\n\t$: if ($web3 && $selectedAccount) {\n\t\t$web3.eth.getBalance($selectedAccount).then(value => {\n\t\t\tbalance=value\n\t\t});\n\t}\n</script>\n\n<p>{$selectedAccount || 'no address'}</p>\n<p>Balance: {balance}</p>\n{#if $connected}\n\tConnected wallet\n{:else}\n\twallet not connected\n{/if}\n\n{#if $isLoading}\n\t<p>Loading...</p>\n{/if}\n{#if !$isSupportEthereum}\n\t<p>not support ethereum network</p>\n{/if}\n```\n\n## Change provider on the fly\nyou can change your provider on the fly(example: change provider after 2 seconds). use `setProvider`\n```svelte\n<script>\n// routes/onthefly/+layout.svelte\n\timport Web3Provider from '$lib';\n</script>\n\n<Web3Provider/>\n<main>\n\t<slot />\n</main>\n```\n```svelte\n<script>\n// routes/onthefly/+page.svelte\n\timport { browser } from '$app/environment';\n\timport {\n\t\tconnected,\n\t\tisLoading,\n\t\tisSupportEthereum,\n\t\tselectedAccount,\n\t\tsetProvider,\n\t\tweb3\n\t} from '$lib';\n\n\tlet balance = '';\n\n\t$: if (browser) {\n\t\tsetTimeout(() => {\n\t\t\t// do like this\n\t\t\tsetProvider('http://127.0.0.1:8545');\n\t\t}, 2000);\n\t}\n\n\t$: if ($web3 && $selectedAccount) {\n\t\t$web3.eth.getBalance($selectedAccount).then((value) => {\n\t\t\tbalance = value;\n\t\t});\n\t}\n</script>\n\n<p>{$selectedAccount || 'no address'}</p>\n<p>Balance: {balance}</p>\n{#if $connected}\n\tConnected wallet\n{:else}\n\twallet not connected\n{/if}\n\n{#if $isLoading}\n\t<p>Loading...</p>\n{/if}\n{#if !$isSupportEthereum}\n\t<p>not support ethereum network</p>\n{/if}\n\n\n```\n\n## Manual Setup Provider\nyou have to set manual props in `Web3Provider` to disable detect automatically browser and do what you want\n```svelte\n<script>\n// routes/manual/+layout.svelte\n\timport Web3Provider from '$lib';\n</script>\n\n<Web3Provider manual/>\n<main>\n\t<slot />\n</main>\n```\n```svelte\n<script>\n// routes/manual/+page.svelte\n\timport { browser } from '$app/environment';\n\timport {\n\t\tconnected,\n\t\tisLoading,\n\t\tisSupportEthereum,\n\t\tselectedAccount,\n\t\tsetProvider,\n\t\tweb3\n\t} from '$lib';\n\n\tlet balance = '';\n\t$: if (browser) {\n\t\t// set your provider like this\n\t\t// then, all store will reactivy automatically\n\t\tsetProvider('http://127.0.0.1:8545');\n\t}\n\n\t$: if ($web3 && $selectedAccount) {\n\t\t$web3.eth.getBalance($selectedAccount).then((value) => {\n\t\t\tbalance = value;\n\t\t});\n\t}\n</script>\n\n<p>{$selectedAccount || 'no address'}</p>\n<p>Balance: {balance}</p>\n{#if $connected}\n\tConnected wallet\n{:else}\n\twallet not connected\n{/if}\n\n{#if $isLoading}\n\t<p>Loading...</p>\n{/if}\n{#if !$isSupportEthereum}\n\t<p>not support ethereum network</p>\n{/if}\n```\n\n## Store\nu can see available store in this [file](./src/lib/store/preferences.ts)",
	"legacy_svelte": true,
	"downloads_history": [
		[3596, 1],
		[3603, 6],
		[3610, 6],
		[3624, 1],
		[3631, 3],
		[3638, 2],
		[3645, 2],
		[3652, 6],
		[3666, 6],
		[3673, 3],
		[3694, 3],
		[3701, 2],
		[3708, 2],
		[3715, 1],
		[3722, 2],
		[3729, 3],
		[3750, 3],
		[3757, 1],
		[3771, 5],
		[3778, 6],
		[3785, 1],
		[3792, 1],
		[3799, 2],
		[3806, 1],
		[3820, 1],
		[3827, 3],
		[3834, 1],
		[3841, 5],
		[3848, 9],
		[3869, 1],
		[3876, 1],
		[3883, 1],
		[3890, 6],
		[3897, 2],
		[3904, 6],
		[3925, 1],
		[3946, 1],
		[3953, 2],
		[3967, 6],
		[3974, 1],
		[3981, 2],
		[3988, 6],
		[4009, 1],
		[4016, 5],
		[4023, 1],
		[4030, 1],
		[4037, 4],
		[4044, 16],
		[4051, 10],
		[4065, 2],
		[4079, 7],
		[4086, 1],
		[4100, 16],
		[4107, 10],
		[4114, 5],
		[4121, 8],
		[4128, 5],
		[4135, 5]
	]
}
