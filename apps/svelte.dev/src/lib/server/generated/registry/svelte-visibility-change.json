{
	"name": "svelte-visibility-change",
	"description": "Detect browser page visibility changes using Page Visibility API.",
	"repo_url": "https://github.com/metonym/svelte-visibility-change",
	"authors": ["metonym"],
	"homepage": "https://metonym.github.io/svelte-visibility-change/",
	"downloads": 513,
	"updated": "2025-03-22T01:52:03.428Z",
	"tags": ["miscellaneous"],
	"github_stars": 22,
	"typescript": true,
	"version": "0.7.0",
	"svelte_range": "^5.25.2",
	"last_rune_check_version": "0.7.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-visibility-change",
				"version": "0.7.0",
				"size": 9566
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# svelte-visibility-change\n\n[![NPM][npm]][npm-url]\n\n> Detect browser page visibility changes using the [Page Visibility API](https://developer.mozilla.org/en-US/docs/Web/API/Page_Visibility_API)\n\n<!-- REPO_URL -->\n\nUse this utility component and action to listen to browser page visibility changes.\n\nThe visibility state of a page can either be `visible` or `hidden`.\n\n**Use cases**\n\n- make a network request when the browser tab is focused\n- check for app UI updates when the tab is focused\n- play/pause audio when the tab is focused/blurred\n- pause expensive background computations when the tab is blurred\n\nTry it in the [Svelte REPL](https://svelte.dev/repl/a4b8bdb782514baaa7fa1cb26313b303).\n\n---\n\n<!-- TOC -->\n\n## Installation\n\n```sh\n# npm\nnpm i svelte-visibility-change\n\n# pnpm\npnpm i svelte-visibility-change\n\n# Yarn\nyarn add svelte-visibility-change\n\n# Bun\nbun add svelte-visibility-change\n```\n\n## Usage\n\n### Basic\n\nBind to the `state` prop to determine if the current tab is currently visible or hidden.\n\nIn the following example, switch to a different tab in the same browser window. The page title should change from \"visible\" to \"hidden.\"\n\n<!-- render:Basic -->\n\n```svelte\n<script>\n  import VisibilityChange from \"svelte-visibility-change\";\n\n  let state; /** \"visible\" | \"hidden\" */\n\n  $: if (typeof window !== \"undefined\") {\n    document.title = state;\n  }\n</script>\n\n<VisibilityChange bind:state />\n```\n\n### visible / hidden\n\nYou can also bind to the boolean `visible` and `hidden` props.\n\n```svelte\n<script>\n  import VisibilityChange from \"svelte-visibility-change\";\n\n  let visible; /** boolean */\n  let hidden; /** boolean */\n</script>\n\n<VisibilityChange bind:visible bind:hidden />\n```\n\n### `on:visible` / `on:hidden`\n\nAn alternative to binding to props is to listen to the `on:visible` and `on:hidden` dispatched events.\n\n<!-- render:Events -->\n\n```svelte\n<script>\n  import VisibilityChange from \"svelte-visibility-change\";\n\n  let events = [];\n</script>\n\n<VisibilityChange\n  on:visible={() => (events = [...events, \"on:visible\"])}\n  on:hidden={() => (events = [...events, \"on:hidden\"])}\n/>\n\n{events.join(\", \")}\n```\n\n### `on:change`\n\nThis component dispatches an `on:change` event whenever a [visibilitychange](https://developer.mozilla.org/en-US/docs/Web/API/Document/visibilitychange_event) event occurs.\n\n**Note:** unlike `on:visible`, this event only fires when the page visibility changes _after the component has mounted._\n\n```svelte\n<VisibilityChange\n  on:change={({ detail }) => {\n    console.log(detail.state); // \"visible\" | \"hidden\"\n    console.log(detail.visible); // boolean\n    console.log(detail.hidden); // boolean\n  }}\n/>\n```\n\n### `visibilityChange` action\n\nAn alternative to the `VisibilityChange` component is the `visibilityChange` action.\n\nThe action only dispatches a \"change\" event with the same `event.detail` signature.\n\n```svelte\n<script>\n  import { visibilityChange } from \"svelte-visibility-change\";\n</script>\n\n<div\n  use:visibilityChange\n  on:visibilitychange={({ detail }) => {\n    console.log(detail.state); // \"visible\" | \"hidden\"\n    console.log(detail.visible); // boolean\n    console.log(detail.hidden); // boolean\n  }}\n>\n</div>\n```\n\n## API\n\n### Props\n\n| Name    | Type                      | Default value |\n| :------ | :------------------------ | :------------ |\n| state   | `\"visible\"` or `\"hidden\"` | `undefined`   |\n| visible | `boolean`                 | `false`       |\n| hidden  | `boolean`                 | `false`       |\n\n### Dispatched Events\n\n- **on:visible**: fired if the page is visible\n- **on:hidden**: fired if the page visibility is hidden\n- **on:change**: fired when a page visibility event occurs, after the initial mount\n\n## Changelog\n\n[CHANGELOG.md](CHANGELOG.md)\n\n## License\n\n[MIT](LICENSE)\n\n[npm]: https://img.shields.io/npm/v/svelte-visibility-change.svg?style=for-the-badge&color=%23ff3e00\n[npm-url]: https://npmjs.com/package/svelte-visibility-change\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3596, 135],
		[3603, 171],
		[3610, 230],
		[3617, 149],
		[3624, 232],
		[3631, 149],
		[3638, 236],
		[3645, 207],
		[3652, 192],
		[3659, 229],
		[3666, 189],
		[3673, 143],
		[3680, 159],
		[3687, 254],
		[3694, 161],
		[3701, 146],
		[3708, 141],
		[3715, 99],
		[3722, 196],
		[3729, 162],
		[3736, 156],
		[3743, 212],
		[3750, 130],
		[3757, 197],
		[3764, 185],
		[3771, 181],
		[3778, 222],
		[3785, 193],
		[3792, 168],
		[3799, 193],
		[3806, 165],
		[3813, 267],
		[3820, 216],
		[3827, 164],
		[3834, 117],
		[3841, 195],
		[3848, 167],
		[3855, 219],
		[3862, 162],
		[3869, 177],
		[3876, 156],
		[3883, 130],
		[3890, 176],
		[3897, 159],
		[3904, 196],
		[3911, 221],
		[3918, 175],
		[3925, 188],
		[3932, 186],
		[3939, 243],
		[3946, 230],
		[3953, 189],
		[3960, 214],
		[3967, 233],
		[3974, 139],
		[3981, 200],
		[3988, 161],
		[3995, 144],
		[4002, 86],
		[4009, 133],
		[4016, 195],
		[4023, 333],
		[4030, 267],
		[4037, 369],
		[4044, 307],
		[4051, 392],
		[4058, 444],
		[4065, 411],
		[4072, 456],
		[4079, 521],
		[4086, 487],
		[4093, 613],
		[4100, 415],
		[4107, 367],
		[4114, 513],
		[4121, 447],
		[4128, 225],
		[4135, 234]
	]
}
