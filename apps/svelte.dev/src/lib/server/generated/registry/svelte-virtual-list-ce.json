{
	"name": "svelte-virtual-list-ce",
	"description": "Render virtual lists efficiently in Svelte applications.",
	"repo_url": "https://github.com/gitbreaker222/svelte-virtual-list",
	"authors": ["breaker222"],
	"homepage": "https://github.com/gitbreaker222/svelte-virtual-list#readme",
	"downloads": 109,
	"updated": "2022-01-23T17:21:01.681Z",
	"tags": ["ui"],
	"github_stars": 21,
	"typescript": false,
	"version": "3.1.0-beta.2",
	"svelte_range": "^3.0.0-beta.2",
	"last_rune_check_version": "3.1.0-beta.2",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-virtual-list-ce",
				"version": "3.1.0-beta.2",
				"size": 9053
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# svelte-virtual-list-ce ([demo](https://svelte.dev/repl/3ed4b471023045e68b3b5a181dabb59d?version=3.46.2))\n\n_Community-Edition fork of [svelte-virtual-list](https://github.com/sveltejs/svelte-virtual-list)_\n\n![logo.svg](./logo_svelte-virtual-list-ce.svg)\n\nA virtual list component for Svelte apps. Instead of rendering all your data, `<VirtualList>` just renders the bits that are visible, keeping your page nice and light.\n\n## Installation\n\n```bash\nyarn add svelte-virtual-list-ce\n```\n\n\n## Usage\n\n```html\n<script>\n  import VirtualList from 'svelte-virtual-list-ce';\n\n  const things = [\n    // these can be any values you like\n    { name: 'one', number: 1 },\n    { name: 'two', number: 2 },\n    { name: 'three', number: 3 },\n    // ...\n    { name: 'six thousand and ninety-two', number: 6092 }\n  ];\n</script>\n\n<VirtualList items={things} let:item>\n  <!-- this will be rendered for each currently visible item -->\n  <p>{item.number}: {item.name}</p>\n</VirtualList>\n```\n\n\n## `start` and `end`\n\nYou can track which rows are visible at any given by binding to the `start` and `end` values:\n\n```html\n<VirtualList items={things} bind:start bind:end>\n  <p>{item.number}: {item.name}</p>\n</VirtualList>\n\n<p>showing {start}-{end} of {things.length} rows</p>\n```\n\nYou can rename them with e.g. `bind:start={a} bind:end={b}`.\n\n\n## `height`\n\nBy default, the `<VirtualList>` component will fill the vertical space of its container. You can specify a different height by passing any CSS length:\n\n```html\n<VirtualList height=\"500px\" items={things} let:item>\n  <p>{item.number}: {item.name}</p>\n</VirtualList>\n```\n\n## `itemHeight`\n\nYou can optimize initial display and scrolling when the height of items is known in advance. This should be a number representing a pixel value.\n\n```html\n<VirtualList itemHeight={48} items={things} let:item>\n  <p>{item.number}: {item.name}</p>\n</VirtualList>\n```\n\n## `scrollToIndex()`\n\nYou can jump to anywhere in the list, by calling `scrollToIndex` with one of the list items index.\n\n```html\n<script>\n  let scrollToIndex;\n\n  function handleButtonClick (event) {\n    // ... define your index variable here\n    scrollToIndex(index);\n  };\n</script>\n\n<VirtualList bind:scrollToIndex items={things}>\n  <p>{item.number}: {item.name}</p>\n</VirtualList>\n```\n\nYou can also `export let scrollToIndex` to call it from outside. In this case it should be initialized with `undefined`, to prevent warnings in the logs:\n\n```html\n<!-- InnerComponent.svelte -->\n<script>\n  export let scrollToIndex = undefined;\n</script>\n\n<!-- OuterComponent.svelte -->\n<script>\n  let scrollToIndex;\n  function someLogic () {\n    scrollToIndex(index);\n  };\n</script>\n\n<InnerComponent bind:scrollToIndex></InnerComponent>\n```\n\n\n## Configuring webpack\n\nIf you're using webpack with [svelte-loader](https://github.com/sveltejs/svelte-loader), make sure that you add `\"svelte\"` to [`resolve.mainFields`](https://webpack.js.org/configuration/resolve/#resolve-mainfields) in your webpack config. This ensures that webpack imports the uncompiled component (`src/index.html`) rather than the compiled version (`index.mjs`) â€” this is more efficient.\n\nIf you're using Rollup with [rollup-plugin-svelte](https://github.com/rollup/rollup-plugin-svelte), this will happen automatically.\n\n\n## License\n\n[LIL](LICENSE)\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3596, 147],
		[3603, 120],
		[3610, 120],
		[3617, 97],
		[3624, 94],
		[3631, 80],
		[3638, 120],
		[3645, 70],
		[3652, 98],
		[3659, 114],
		[3666, 131],
		[3673, 149],
		[3680, 124],
		[3687, 130],
		[3694, 78],
		[3701, 73],
		[3708, 93],
		[3715, 42],
		[3722, 71],
		[3729, 94],
		[3736, 45],
		[3743, 98],
		[3750, 165],
		[3757, 141],
		[3764, 128],
		[3771, 139],
		[3778, 72],
		[3785, 96],
		[3792, 125],
		[3799, 115],
		[3806, 63],
		[3813, 91],
		[3820, 76],
		[3827, 68],
		[3834, 69],
		[3841, 292],
		[3848, 72],
		[3855, 120],
		[3862, 97],
		[3869, 71],
		[3876, 65],
		[3883, 77],
		[3890, 68],
		[3897, 77],
		[3904, 180],
		[3911, 132],
		[3918, 98],
		[3925, 116],
		[3932, 84],
		[3939, 56],
		[3946, 123],
		[3953, 103],
		[3960, 125],
		[3967, 137],
		[3974, 81],
		[3981, 105],
		[3988, 133],
		[3995, 102],
		[4002, 81],
		[4009, 46],
		[4016, 103],
		[4023, 148],
		[4030, 71],
		[4037, 89],
		[4044, 166],
		[4051, 214],
		[4058, 140],
		[4065, 190],
		[4072, 98],
		[4079, 120],
		[4086, 100],
		[4093, 69],
		[4100, 99],
		[4107, 237],
		[4114, 109],
		[4121, 118],
		[4128, 134],
		[4135, 152]
	]
}
