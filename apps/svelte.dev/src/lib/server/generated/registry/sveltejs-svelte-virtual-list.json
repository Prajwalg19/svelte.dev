{
	"name": "@sveltejs/svelte-virtual-list",
	"description": "Render virtual lists efficiently in Svelte applications.",
	"repo_url": "https://github.com/sveltejs/svelte-virtual-list",
	"authors": ["dominik_g", "rich_harris", "svelte-admin", "conduitry"],
	"homepage": "https://github.com/sveltejs/svelte-virtual-list#readme",
	"downloads": 19349,
	"updated": "2019-08-22T14:41:08.370Z",
	"tags": ["miscellaneous"],
	"github_stars": 721,
	"typescript": false,
	"version": "3.0.1",
	"svelte_range": "^3.0.0-beta.2",
	"last_rune_check_version": "3.0.1",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@sveltejs/svelte-virtual-list",
				"version": "3.0.1",
				"size": 9122
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# svelte-virtual-list ([demo](https://svelte.dev/repl/f78ddd84a1a540a9a40512df39ef751b))\n\nA virtual list component for Svelte apps. Instead of rendering all your data, `<VirtualList>` just renders the bits that are visible, keeping your page nice and light.\n\n## Installation\n\n```bash\nyarn add @sveltejs/svelte-virtual-list\n```\n\n\n## Usage\n\n```html\n<script>\n  import VirtualList from '@sveltejs/svelte-virtual-list';\n\n  const things = [\n    // these can be any values you like\n    { name: 'one', number: 1 },\n    { name: 'two', number: 2 },\n    { name: 'three', number: 3 },\n    // ...\n    { name: 'six thousand and ninety-two', number: 6092 }\n  ];\n</script>\n\n<VirtualList items={things} let:item>\n  <!-- this will be rendered for each currently visible item -->\n  <p>{item.number}: {item.name}</p>\n</VirtualList>\n```\n\n\n## `start` and `end`\n\nYou can track which rows are visible at any given by binding to the `start` and `end` values:\n\n```html\n<VirtualList items={things} bind:start bind:end>\n  <p>{item.number}: {item.name}</p>\n</VirtualList>\n\n<p>showing {start}-{end} of {things.length} rows</p>\n```\n\nYou can rename them with e.g. `bind:start={a} bind:end={b}`.\n\n\n## `height`\n\nBy default, the `<VirtualList>` component will fill the vertical space of its container. You can specify a different height by passing any CSS length:\n\n```html\n<VirtualList height=\"500px\" items={things} let:item>\n  <p>{item.number}: {item.name}</p>\n</VirtualList>\n```\n\n\n## `itemHeight`\n\nYou can optimize initial display and scrolling when the height of items is known in advance. This should be a number representing a pixel value.\n\n```html\n<VirtualList itemHeight={48} items={things} let:item>\n  <p>{item.number}: {item.name}</p>\n</VirtualList>\n```\n\n\n## Configuring webpack\n\nIf you're using webpack with [svelte-loader](https://github.com/sveltejs/svelte-loader), make sure that you add `\"svelte\"` to [`resolve.mainFields`](https://webpack.js.org/configuration/resolve/#resolve-mainfields) in your webpack config. This ensures that webpack imports the uncompiled component (`src/index.html`) rather than the compiled version (`index.mjs`) â€” this is more efficient.\n\nIf you're using Rollup with [rollup-plugin-svelte](https://github.com/rollup/rollup-plugin-svelte), this will happen automatically.\n\n\n## License\n\n[LIL](LICENSE)\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3596, 3110],
		[3603, 3206],
		[3610, 2960],
		[3617, 3042],
		[3624, 3160],
		[3631, 3285],
		[3638, 2766],
		[3645, 875],
		[3652, 2143],
		[3659, 2719],
		[3666, 2860],
		[3673, 3226],
		[3680, 2905],
		[3687, 3136],
		[3694, 3752],
		[3701, 3876],
		[3708, 4028],
		[3715, 3493],
		[3722, 4083],
		[3729, 4064],
		[3736, 3409],
		[3743, 3794],
		[3750, 3362],
		[3757, 3812],
		[3764, 4360],
		[3771, 2739],
		[3778, 3224],
		[3785, 3931],
		[3792, 3723],
		[3799, 3653],
		[3806, 3863],
		[3813, 3795],
		[3820, 3472],
		[3827, 4306],
		[3834, 3249],
		[3841, 5493],
		[3848, 4706],
		[3855, 4823],
		[3862, 3656],
		[3869, 3538],
		[3876, 4298],
		[3883, 4475],
		[3890, 3812],
		[3897, 3258],
		[3904, 4035],
		[3911, 3711],
		[3918, 4352],
		[3925, 4772],
		[3932, 4696],
		[3939, 5001],
		[3946, 4607],
		[3953, 3803],
		[3960, 3299],
		[3967, 3018],
		[3974, 4647],
		[3981, 3070],
		[3988, 3964],
		[3995, 3894],
		[4002, 4187],
		[4009, 1776],
		[4016, 7251],
		[4023, 11275],
		[4030, 10274],
		[4037, 13183],
		[4044, 16348],
		[4051, 17835],
		[4058, 20260],
		[4065, 20248],
		[4072, 17807],
		[4079, 17508],
		[4086, 15980],
		[4093, 15301],
		[4100, 14606],
		[4107, 18852],
		[4114, 19349],
		[4121, 17818],
		[4128, 12196],
		[4135, 15123]
	],
	"esm": false,
	"cjs": true
}
