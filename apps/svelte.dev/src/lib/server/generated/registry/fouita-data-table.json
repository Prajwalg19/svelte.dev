{
	"name": "@fouita/data-table",
	"description": "Build responsive data tables with Svelte and Tailwind CSS.",
	"repo_url": "https://github.com/fouita/svelte-tw-data-table",
	"authors": ["fouita"],
	"homepage": "https://github.com/fouita/svelte-tw-data-table#readme",
	"downloads": 6,
	"updated": "2021-02-20T16:58:36.814Z",
	"tags": ["ui"],
	"github_stars": 27,
	"typescript": false,
	"version": "0.0.2",
	"svelte_range": "^3.0.0",
	"last_rune_check_version": "0.0.2",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@fouita/data-table",
				"version": "0.0.2",
				"size": 105767
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# Responsive DataTable with svelte and tailwindcss\n\nResponsive data-table built with svelte and tailwindcss\n\n## Installation\n```bash\n    $npm i @fouita/data-table -D\n```\n\n## Simple usage\n\nTo fill out the table you can add a simple json data and a head attribute to specify what to display.\n\n![DataTable foutia](https://cdn.fouita.com/assets/pics/template/data-table/data-table-simple.jpg)\n\n```html\n<script>\n\timport DataTable from '@fouita/data-table'\n\t\t\n\tconst data = [\n\t\t  {\n\t\t    \"first_name\": \"Wynn\",\n\t\t    \"last_name\": \"Donovan\",\n\t\t    \"company\": \"EMTRAK\",\n\t\t    \"email\": \"wynn.donovan@emtrak.io\",\n\t\t    \"phone\": \"+1 (809) 577-3968\",\n\t\t    \"address\": \"555 Freeman Street, Winesburg, New Jersey, 8986\"\n\t\t  },\n\t\t  {\n\t\t    \"first_name\": \"Arlene\",\n\t\t    \"last_name\": \"Cooley\",\n\t\t    \"company\": \"XUMONK\",\n\t\t    \"email\": \"arlene.cooley@xumonk.us\",\n\t\t    \"phone\": \"+1 (926) 459-2880\",\n\t\t    \"address\": \"659 Dupont Street, Lynn, West Virginia, 7173\"\n\t\t  },\n\t\t  {\n\t\t    \"first_name\": \"Jewell\",\n\t\t    \"last_name\": \"Sellers\",\n\t\t    \"company\": \"TECHADE\",\n\t\t    \"email\": \"jewell.sellers@techade.info\",\n\t\t    \"phone\": \"+1 (957) 456-2432\",\n\t\t    \"address\": \"955 Beekman Place, Waikele, Northern Mariana Islands, 341\"\n\t\t  }\n\t]\n\n\tconst head= {\n\t\tfirst_name: 'First Name',\n\t\tlast_name: 'Last Name',\n\t\temail: 'Email',\n\t\tphone: 'Phone',\n\t\tcompany: 'Company',\n\t}\n\n\n</script>\n\n\n<DataTable {head} rows={data} hover />\n```\n\nThe above example does not show the attribute address because it's not included in the head. You can add a list of selection and update the head list dynamically if you want.\n\nBy adding `hover` we tell the table to change the background of the row when hovering.\n\n## Stripped\n\nby adding a `stripped` prop the table becames like the following\n\n![DataTable foutia](https://cdn.fouita.com/assets/pics/template/data-table/data-table-stripped.jpg)\n\n```html\n<DataTable {head} rows={data} stripped />\n```\n\n## Customizing Header\n\nWe can customize the alignement of text, the background/text color of all/some columns.\n\nBy adding `_class` attribute inside the head we can change the style easily\n\n![DataTable foutia](https://cdn.fouita.com/assets/pics/template/data-table/data-table-red.jpg)\n\n```javascript\n    const head= {\n\t\tfirst_name: 'First Name',\n\t\tlast_name: 'Last Name',\n\t\temail: 'Email',\n\t\tphone: 'Phone',\n\t\tcompany: 'Company',\n\t\t_class: 'bg-red-200 text-red-700'\n\t}\n```\n\nTo update the entire column we can attribute `_class` to the specific head property like the following\n\n![DataTable foutia](https://cdn.fouita.com/assets/pics/template/data-table/data-table-red-blue.jpg)\n\n```javascript\n    const head= {\n\t\tfirst_name: 'First Name',\n\t\tlast_name: 'Last Name',\n\t\temail: 'Email',\n\t\tphone: {value: 'Phone', _class: 'text-right bg-blue-200 text-blue-900'},\n\t\tcompany: {value: 'Company', _class: 'text-left'},\n\t\t_class: 'bg-red-200 text-red-700'\n\t}\n```\n\nThis will override the global head class style.\n\n\n## Customizing rows/cells\n\nWe can customize rows and cells by also adding `_class` attribute inside the data\n\n![DataTable foutia](https://cdn.fouita.com/assets/pics/template/data-table/data-table-row.jpg)\n\n```javascript\n    const data = [\n\t\t  // ... \n\t\t  {\n\t\t    \"first_name\": \"Arlene\",\n\t\t    \"last_name\": \"Cooley\",\n\t\t    \"company\": \"XUMONK\",\n\t\t    \"email\": \"arlene.cooley@xumonk.us\",\n\t\t    \"phone\": \"+1 (926) 459-2880\",\n\t\t    \"address\": \"659 Dupont Street, Lynn, West Virginia, 7173\",\n\t\t\t_class: 'bg-green-200 font-bold text-red-700 text-center'\n\t\t  },\n\t\t  // ...\n\t]\n```\n\nIt goes the same for specific cells like the follwing\n\n![DataTable foutia](https://cdn.fouita.com/assets/pics/template/data-table/data-table-cells.jpg)\n\n```javascript\n    const data = [\n\t\t  // ... \n\t\t   {\n\t\t    \"first_name\": \"Arlene\",\n\t\t    \"last_name\": \"Cooley\",\n\t\t    \"company\": \"XUMONK\",\n\t\t    \"email\": \"arlene.cooley@xumonk.us\",\n\t\t    \"phone\": {\n\t\t\t\tvalue: \"+1 (926) 459-2880\", \n\t\t\t\t_class: 'text-white bg-green-600 p-5 border-2 border-red-600 text-center'\n\t\t\t},\n\t\t    \"address\": \"659 Dupont Street, Lynn, West Virginia, 7173\",\n\t\t\t\t_class: 'bg-green-200 font-bold text-red-700 text-center'\n\t\t  },\n\t\t  // ...\n\t]\n```\n\n## Sort, Search and Pagination\n\nTo keep things simple, the sorting and pagination functions are custom depending on how you are planning to use the DataTable (with preloaded data or you prefer doing server request).\n\nthis is an example on how to use them.\n\n### Data Sorting\n\n![DataTable foutia](https://cdn.fouita.com/assets/pics/template/data-table/data-table-sort.jpg)\n\n```html\n<script>\n\timport DataTable from '@fouita/data-table'\n\t\t\n\tlet rows = [\n\t\t  {\n\t\t    \"first_name\": \"Wynn\",\n\t\t    \"last_name\": \"Donovan\",\n\t\t    \"company\": \"EMTRAK\"\n\t\t  },\n\t\t  {\n\t\t    \"first_name\": \"Arlene\",\n\t\t    \"last_name\": \"Cooley\",\n            \"company\": \"XUMONK\",\n            _class: 'bg-green-200 font-bold text-red-700 text-center'\n\t\t  },\n\t\t  {\n\t\t    \"first_name\": \"Jewell\",\n\t\t    \"last_name\": \"Sellers\",\n\t\t    \"company\": \"TECHADE\"\n\t\t  }\n\t]\n    \n    // define your sort function (call API if you like), it should return an object with 'asc' and 'desc' methods\n\tconst sortFn = (label) => {\n\t\treturn {\n\t\t\tasc: () => {\n\t\t\t\trows = rows.sort((a,b) => a[label]>b[label] ? 1:-1)\n\t\t\t},\n\t\t\tdesc: () => {\n\t\t\t\trows = rows.sort((a,b) => a[label]<b[label] ? 1:-1)\n\t\t\t}\n\t\t}\n\t}\n\n    // add sort attribute in the column head and call the sort function\n\tlet head= {\n\t\tfirst_name: {\n\t\t\tvalue: 'First Name', \n\t\t\tsort: sortFn('first_name')\n\t\t},\n\t\tlast_name: {\n\t\t\tvalue: 'Last Name', \n\t\t\tsort: sortFn('last_name')\n\t\t},\n\t\tcompany: 'Company',\n\t}\n\n\n\n</script>\n\n\n<DataTable {head} {rows} hover />\n```\n\n### Data search\n\nFor the search we can add an input that filter the data rows and return a filtred list, no big deal!\n\n![DataTable foutia](https://cdn.fouita.com/assets/pics/template/data-table/data-table-search.jpg)\n\nWe can create a `Search.svelte` component like the following\n\n```html\n<script>\n\texport let search = ''\n\timport {SearchIcon} from 'svelte-feather-icons'\n</script>\n\n\n<div class=\"flex flex-row\" >\n\t<div class=\"text-gray-600 border border-gray-400 flex flex-row rounded max-w-xs my-3 bg-white\" >\n\t\t<input type=\"search\" bind:value={search} placeholder=\"Search...\" class=\"h-10 w-64 rounded text-sm focus:outline-none px-3\">\n\t\t<button class=\"m-3 focus:outline-none\" >\n\t\t\t<SearchIcon class=\"w-4 h-4\" />\n\t\t</button>\n\t</div>\n</div>\n```\n\nAnd then use it with the search function, we can use [Fuse](https://fusejs.io) for simple search\n\n```html\n<script>\n    import DataTable from '@fouita/data-table'\n    import Fuse from 'fuse.js/dist/fuse.min.js';\n    import Search from './Search.svelte'\n\n    const users = [\n\t\t  {\n\t\t    \"first_name\": \"Wynn\",\n\t\t    \"last_name\": \"Donovan\",\n\t\t    \"company\": \"EMTRAK\"\n\t\t  },\n\t\t  {\n\t\t    \"first_name\": \"Arlene\",\n\t\t    \"last_name\": \"Cooley\",\n            \"company\": \"XUMONK\",\n            _class: 'bg-green-200 font-bold text-red-700 text-center'\n\t\t  },\n\t\t  {\n\t\t    \"first_name\": \"Jewell\",\n\t\t    \"last_name\": \"Sellers\",\n\t\t    \"company\": \"TECHADE\"\n\t\t  }\n    ]\n\n    const head= {\n\t\tfirst_name: 'First Name',\n\t\tlast_name: 'Last Name',\n\t\tcompany: 'Company'\n\t}\n    \n    let rows = users\n    let keywords = ''\n    const options = {\n\t  keys: ['first_name', 'last_name', 'company']\n    }\n    const fuse = new Fuse(rows, options)\n\n    let keywords=''\n\n\t$: if(keywords){\n\t\t// Call server here if you need server request\n\t\tlet result = fuse.search(keywords)\n\t\trows = result.map(r => r.item)\n\t}\n\n\t$: if(keywords==''){\n\t\trows = users\n\t}\n</script>\n\n<Search />\n<DataTable {head} {rows} />\n```\n\n### Pagination \n\nfor the pagination you can checkout [Fouita Pagination](https://github.com/fouita/svelte-tw-pagination) and update the data each time you navigate (it's very simple!)\n\n\n\n## About\n\n[Fouita : UI framework for svelte + tailwind components](https://fouita.com)",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 11],
		[3596, 23],
		[3603, 32],
		[3610, 45],
		[3617, 33],
		[3624, 67],
		[3631, 62],
		[3638, 10],
		[3645, 7],
		[3659, 13],
		[3666, 27],
		[3673, 3],
		[3680, 5],
		[3687, 2],
		[3694, 1],
		[3701, 3],
		[3708, 4],
		[3715, 13],
		[3722, 5],
		[3729, 13],
		[3736, 12],
		[3743, 16],
		[3750, 8],
		[3757, 4],
		[3764, 5],
		[3771, 1],
		[3778, 3],
		[3785, 4],
		[3792, 7],
		[3799, 1],
		[3806, 2],
		[3813, 1],
		[3820, 3],
		[3827, 2],
		[3834, 2],
		[3841, 1],
		[3848, 4],
		[3855, 6],
		[3862, 16],
		[3869, 1],
		[3876, 2],
		[3883, 3],
		[3890, 1],
		[3897, 3],
		[3904, 4],
		[3911, 4],
		[3918, 1],
		[3925, 4],
		[3932, 9],
		[3939, 4],
		[3953, 1],
		[3960, 2],
		[3967, 1],
		[3988, 1],
		[3995, 2],
		[4009, 1],
		[4016, 7],
		[4023, 3],
		[4030, 13],
		[4037, 26],
		[4044, 6],
		[4051, 4],
		[4058, 7],
		[4065, 1],
		[4072, 2],
		[4079, 4],
		[4086, 1],
		[4093, 16],
		[4100, 2],
		[4107, 2],
		[4114, 6],
		[4121, 8],
		[4128, 2]
	]
}
