{
	"name": "frc-nt-svelte",
	"description": "Create custom dashboards for FRC using Svelte and NetworkTables.",
	"repo_url": "",
	"authors": ["cr1spybacon8r"],
	"downloads": 9,
	"updated": "2022-07-26T19:12:51.607Z",
	"tags": ["ui", "integration"],
	"typescript": true,
	"version": "0.1.4",
	"svelte_range": "^3.5.0",
	"last_rune_check_version": "0.1.4",
	"github_stars": 0,
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "frc-nt-svelte",
				"version": "0.1.4",
				"size": 248331
			},
			{
				"name": "rollup-plugin-terser",
				"version": "7.0.2",
				"size": 8464
			},
			{
				"name": "@babel/code-frame",
				"version": "7.27.1",
				"size": 33160
			},
			{
				"name": "@babel/helper-validator-identifier",
				"version": "7.27.1",
				"size": 48330
			},
			{
				"name": "js-tokens",
				"version": "4.0.0"
			},
			{
				"name": "picocolors",
				"version": "1.1.1",
				"size": 6373
			},
			{
				"name": "jest-worker",
				"version": "26.6.2",
				"size": 66949
			},
			{
				"name": "@types/node",
				"version": "22.15.3",
				"size": 2350386
			},
			{
				"name": "undici-types",
				"version": "6.21.0",
				"size": 83680
			},
			{
				"name": "merge-stream",
				"version": "2.0.0",
				"size": 4306
			},
			{
				"name": "supports-color",
				"version": "7.2.0",
				"size": 7035
			},
			{
				"name": "has-flag",
				"version": "4.0.0",
				"size": 4419
			},
			{
				"name": "serialize-javascript",
				"version": "4.0.0",
				"size": 16202
			},
			{
				"name": "randombytes",
				"version": "2.1.0",
				"size": 6363
			},
			{
				"name": "safe-buffer",
				"version": "5.2.1",
				"size": 32101
			},
			{
				"name": "terser",
				"version": "5.39.0",
				"size": 2221569
			},
			{
				"name": "@jridgewell/source-map",
				"version": "0.3.6",
				"size": 177363
			},
			{
				"name": "@jridgewell/gen-mapping",
				"version": "0.3.8",
				"size": 81596
			},
			{
				"name": "@jridgewell/set-array",
				"version": "1.2.1",
				"size": 17945
			},
			{
				"name": "@jridgewell/sourcemap-codec",
				"version": "1.5.0",
				"size": 112815
			},
			{
				"name": "@jridgewell/trace-mapping",
				"version": "0.3.25",
				"size": 169330
			},
			{
				"name": "@jridgewell/resolve-uri",
				"version": "3.1.2",
				"size": 53153
			},
			{
				"name": "acorn",
				"version": "8.14.1",
				"size": 547473
			},
			{
				"name": "commander",
				"version": "2.20.3",
				"size": 62442
			},
			{
				"name": "source-map-support",
				"version": "0.5.21",
				"size": 85177
			},
			{
				"name": "buffer-from",
				"version": "1.1.2",
				"size": 5047
			},
			{
				"name": "source-map",
				"version": "0.6.1"
			},
			{
				"name": "svelte-icons",
				"version": "2.1.0",
				"size": 10155084
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[2, 3],
			[2, 4],
			[2, 5],
			[1, 6],
			[6, 7],
			[7, 8],
			[6, 9],
			[6, 10],
			[10, 11],
			[1, 12],
			[12, 13],
			[13, 14],
			[1, 15],
			[15, 16],
			[16, 17],
			[17, 18],
			[17, 19],
			[17, 20],
			[20, 21],
			[20, 19],
			[16, 20],
			[15, 22],
			[15, 23],
			[15, 24],
			[24, 25],
			[24, 26],
			[0, 27]
		],
		"circular": []
	},
	"readme": "# FRC Network Tables Svelte\n\n![Minified Size](https://img.shields.io/bundlephobia/min/frc-nt-svelte?style=for-the-badge)\n![Build Status](https://img.shields.io/github/workflow/status/CrispyBacon1999/frc-nt-svelte/Publish?style=for-the-badge)\n![NPM Version](https://img.shields.io/npm/v/frc-nt-svelte?style=for-the-badge)\n\nThis is a library for creating custom dashboards using the modern web framework Svelte. It's still heavily under development, but has several features built in already.\n\n## Components\n\nCurrently, all components only register their key watchers on initial mount. On unmount, the listeners still run in the background, so it has potential for memory leaks. This is something that is planned to be addressed soon in the future.\n\n### Autonomous Picker\n\nProvides a selection menu with autonomous menus\n\n### BooleanIndicator\n\nSimple indicator with colors representing a true or false value in a network table key\n\n### ConnectionStatus\n\nShows whether the NetworkTables server can be accessed\n\n### FieldLayout\n\nWIP: Will show the robot position on the field\n\n## Stores\n\n### Robot State\n\nProvides several properties about the robot's current state\n\n```ts\n$robotState;\n\nisEnabled: boolean;\nisAutonomous: boolean;\nisTest: boolean;\nisEStopped: boolean;\nisFMSAttached: boolean;\nisDSAttached: boolean;\n```\n\n### Match Info\n\nProvides information about the current match, according to FMS\n\n```ts\n$eventName: string;\n\n$matchType: string[(\"Unknown\", \"Practice\", \"Qualification\", \"Elimination\")];\n\n$matchNumber: number;\n```\n\n## Grid\n\nAll built in components support a Shuffleboard style grid system for quick UI development. The grid is configurable size, with defaults of 12 columns, 5 rows. This can be changed with the `rows` or `columns` properties on the `Grid` component.\n\nPass in the `rowSpan` or `colSpan` props on components to change how wide or tall the components are.\n\n## Theming\n\nCurrently, all theming is done through CSS variables. There are no default values, so they need to be set manually.\n\n```css\n:root {\n    --true-boolean: green;\n    --false-boolean: red;\n}\n```\n\n## Custom components\n\nThe NetworkTables API is exposed for use in custom components. This uses the pynetworktables2js API, documented at https://robotpy.readthedocs.io/projects/pynetworktables2js/en/stable/api_js.html. The `NetworkTables` variable can be found by using `import { NetworkTables } from \"frc-nt-svelte\";`\n\nIf you want your component to have the same grid capabilities as the built in components, wrap it in a `GridItem` and pass in a `colSpan` and `rowSpan` variable.\n\n### Sample component (BooleanIndicator)\n\n```svelte\n<script>\n    import NetworkTables from \"./utils/networktables\";\n    import { onMount } from \"svelte\";\n    import GridItem from \"./grid/GridItem.svelte\";\n\n    let value = false;\n    export let ntKey;\n    export let rowSpan = 1;\n    export let colSpan = 1;\n\n    onMount(() => {\n        NetworkTables.addKeyListener(\n            ntKey,\n            (key, data, isNew) => {\n                value = data;\n            },\n            true\n        );\n    });\n</script>\n\n<GridItem {colSpan} {rowSpan}>\n    <div class=\"indicator\" class:true={value}>\n        <slot />\n    </div>\n</GridItem>\n\n<style>\n    .indicator {\n        background-color: var(--false-boolean);\n        padding: 20px;\n        width: 100%;\n        height: 100%;\n    }\n\n    .true {\n        background-color: var(--true-boolean);\n    }\n</style>\n```\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3596, 11],
		[3603, 1],
		[3617, 5],
		[3624, 2],
		[3631, 1],
		[3645, 1],
		[3652, 1],
		[3666, 6],
		[3673, 7],
		[3701, 2],
		[3722, 1],
		[3729, 10],
		[3736, 1],
		[3743, 1],
		[3750, 1],
		[3757, 5],
		[3778, 7],
		[3792, 2],
		[3799, 2],
		[3806, 1],
		[3827, 1],
		[3834, 1],
		[3841, 21],
		[3848, 1],
		[3855, 5],
		[3876, 1],
		[3883, 1],
		[3890, 38],
		[3897, 12],
		[3904, 5],
		[3911, 11],
		[3918, 5],
		[3925, 6],
		[3932, 15],
		[3939, 16],
		[3946, 11],
		[3953, 16],
		[3960, 7],
		[3967, 1],
		[3974, 1],
		[3988, 1],
		[3995, 8],
		[4002, 2],
		[4009, 4],
		[4023, 2],
		[4030, 5],
		[4037, 12],
		[4044, 10],
		[4051, 2],
		[4058, 4],
		[4065, 2],
		[4072, 4],
		[4079, 2],
		[4086, 1],
		[4093, 6],
		[4100, 12],
		[4107, 4],
		[4114, 9],
		[4121, 12],
		[4128, 6]
	]
}
