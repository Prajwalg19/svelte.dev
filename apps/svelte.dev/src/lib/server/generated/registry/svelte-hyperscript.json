{
	"name": "svelte-hyperscript",
	"description": "Use hyperscript to create Svelte components.",
	"repo_url": "https://github.com/kenoxa/svelte-hyperscript",
	"authors": ["sastan"],
	"homepage": "https://github.com/kenoxa/svelte-hyperscript#readme",
	"downloads": 3616,
	"updated": "2020-06-29T15:29:31.097Z",
	"tags": ["tooling"],
	"github_stars": 8,
	"typescript": true,
	"version": "1.2.1",
	"svelte_range": "3.x",
	"last_rune_check_version": "1.2.1",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-hyperscript",
				"version": "1.2.1",
				"size": 197340
			},
			{
				"name": "@babel/runtime-corejs3",
				"version": "7.27.1",
				"size": 328415
			},
			{
				"name": "core-js-pure",
				"version": "3.42.0",
				"size": 1129517
			},
			{
				"name": "core-js",
				"version": "3.42.0",
				"size": 1272681
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[0, 3]
		],
		"circular": []
	},
	"readme": "# svelte-hyperscript\n\n> use [hyperscript](https://github.com/hyperhype/hyperscript) to create [svelte](https://svelte.dev/) components\n\n[![License](https://badgen.net/npm/license/svelte-hyperscript)](https://github.com/kenoxa/svelte-hyperscript/blob/main/LICENSE)\n[![Latest Release](https://badgen.net/npm/v/svelte-hyperscript)](https://www.npmjs.com/package/svelte-hyperscript)\n[![View changelog](https://badgen.net/badge/%E2%80%8B/Explore%20Changelog/green?icon=awesome)](https://changelogs.xyz/svelte-hyperscript)\n\n[![CI](https://github.com/kenoxa/svelte-hyperscript/workflows/CI/badge.svg)](https://github.comkenoxan/svelte-hyperscript/actions?query=branch%3Amain+workflow%3ACI)\n[![Coverage Status](https://badgen.net/coveralls/c/github/kenoxa/svelte-hyperscript/main)](https://coveralls.io/github/kenoxa/svelte-hyperscript?branch=main)\n[![PRs Welcome](https://badgen.net/badge/PRs/welcome/purple)](http://makeapullrequest.com)\n[![Conventional Commits](https://badgen.net/badge/Conventional%20Commits/1.0.0/cyan)](https://conventionalcommits.org)\n\n## What?\n\nThis package exposes an [hyperscript](https://github.com/hyperhype/hyperscript) compatible function: `h(tag, properties, ...children)` which returns a svelte component.\n\n## Why?\n\nThis is the core for [svelte-jsx] and [svelte-htm]. These packages allow to simplify svelte testing code especially slot handling.\n\n## Installation\n\n```sh\nnpm install svelte-hyperscript\n```\n\nAnd then import it:\n\n```js\n// using es modules\nimport h from 'svelte-hyperscript'\n\n// common.js\nconst h = require('svelte-hyperscript')\n```\n\nAlternatively use [UNPKG](https://unpkg.com/svelte-htm/) or [jsDelivr](https://cdn.jsdelivr.net/npm/svelte-htm/) packages:\n\nWith script tags and globals:\n\n```html\n<!-- UNPKG -->\n<script src=\"https://unpkg.com/svelte-hyperscript\"></script>\n\n<!-- jsDelivr -->\n<script src=\"https://cdn.jsdelivr.net/npm/svelte-hyperscript\"></script>\n\n<script>\n  <!-- And then grab it off the global like so: -->\n  const h = svelteHyperscript\n</script>\n```\n\nHotlinking from unpkg: _(no build tool needed!)_\n\n```js\nimport h from 'https://unpkg.com/svelte-hyperscript?module'\n```\n\n## Usage\n\n```js\nimport h from 'svelte-hyperscript'\n\nimport Button from '../src/Button.svelte'\n\nlet clicked = 0\nconst LabeledButton = h(Button, { 'on:click': () => (clicked += 1) }, h('span', null, 'Click Me!'))\n\nconst button = new LabeledButton({\n  target: document.body,\n})\n```\n\nThe above example written in [jsx] using [svelte-jsx]:\n\n```jsx\nimport Button from '../src/Button.svelte'\n\nlet clicked = 0\nconst LabeledButton = (\n  <Button onClick={() => (clicked += 1)}>\n    <span>Click Me!</span>\n  </Button>\n)\n\nconst button = new LabeledButton({\n  target: document.body,\n})\n```\n\nor using [svelte-htm]:\n\n```js\nimport html from 'svelte-htm'\nimport Button from '../src/Button.svelte'\n\nlet clicked = 0\nconst LabeledButton = html`<${Button} on:click=${() => (clicked += 1)}><span>Click Me!</span><//>`\n\nconst button = new LabeledButton({\n  target: document.body,\n})\n```\n\n## API\n\nWe [aim to support](#feature-set) all svelte features. In some cases this is not possible due to the static nature of hyperscript. For those cases we provided feasible workarounds:\n\n### Using stores to allow reactivity\n\nTo allow reactivity the following properties accept a [writable store](https://svelte.dev/docs#svelte_store):\n\n- [bind:property](https://svelte.dev/docs#bind_element_property)\n- [bind:group](https://svelte.dev/docs#bind_group)\n- [bind:this](https://svelte.dev/docs#bind_this)\n- [\\<slot let:name={value}>](https://svelte.dev/docs#slot_let)\n\n[\\<slot let:name={value}>](https://svelte.dev/docs#slot_let) additionally accepts a function which is called with the current value.\n\nThis allows to for example to access the value if an input:\n\n```js\nimport { test } from '@jest/globals'\nimport { render } from '@testing-library/svelte'\nimport userEvent from '@testing-library/user-event'\n\nimport { writable, get } from 'svelte/store'\n\nimport h from 'svelte-hyperscript'\n\ntest('write into an input', () => {\n  const text = writable()\n  const { getByRole } = render(h('input', { 'bind:value': text }))\n\n  const input = getByRole('textbox')\n\n  await userEvent.type(input, 'some text')\n\n  expect(get(text)).toBe('some text')\n})\n```\n\nThe [tests](https://github.com/kenoxa/svelte-hyperscript/tree/main/src/__tests__) are a good source of how to use this feature.\n\n### Action factories\n\nThe [action feature](https://svelte.dev/docs#use_action) of svelte is supported but lacks the possibility to pass parameters to the action. This can still be achieved using a factory function as action:\n\n```js\nimport h from 'svelte-hyperscript'\n\nimport action from 'some-action-module'\n\nh('div', { 'use:action': (node) => action(node, parameters) })\n```\n\n## Related Projects\n\n- [svelte-jsx] - write svelte components using [jsx]\n- [svelte-htm] - [**H**yperscript **T**agged **M**arkup](https://www.npmjs.com/package/htm) for svelte\n- [svelte-fragment-component] - a utility component\n\n## Feature Set\n\n- [x] plain html children\n- [x] readable store children\n- [x] on:eventname\n- [x] on:eventname modifiers\n- [x] bind:property **but** using writable store\n  - [x] bind:property on components\n  - [x] bind:property on html elements\n  - [x] bind:group\n  - [x] bind:this\n- [x] use:action\n- [x] class:name\n- [ ] transition:fn\n- [ ] in:fn/out:fn\n- [x] `<slot>`\n  - [x] `<slot name=\"name\">`\n  - [x] `<slot let:name={setter}>` **but** using setter or writable store\n  - [x] `<slot let:name={property}>{property}</slot>` when using a writable store\n- [x] context propagation\n- [ ] svelte:self\n- [ ] svelte:component\n- [ ] svelte:window\n- [ ] svelte:body\n- [ ] svelte:head\n\n## Support\n\nThis project is free and open-source, so if you think this project can help you or anyone else, you may [star it on GitHub](https://github.com/kenoxa/svelte-hyperscript). Feel free to [open an issue](https://github.comkenoxan/svelte-hyperscript/issues) if you have any idea, question, or you've found a bug.\n\n## Contribute\n\nThanks for being willing to contribute!\n\n**Working on your first Pull Request?** You can learn how from this _free_ series [How to Contribute to an Open Source Project on GitHub](https://egghead.io/series/how-to-contribute-to-an-open-source-project-on-github)\n\nWe are following the [Conventional Commits](https://www.conventionalcommits.org) convention.\n\n### Develop\n\n- `npm test`: Run test suite\n- `npm run build`: Generate bundles\n- `npm run lint`: Lints code\n\n## NPM Statistics\n\n[![NPM](https://nodei.co/npm/svelte-hyperscript.png)](https://nodei.co/npm/svelte-hyperscript/)\n\n## License\n\n`svelte-hyperscript` is open source software [licensed as MIT](https://github.com/kenoxa/svelte-hyperscript/blob/main/LICENSE).\n\n[jsx]: https://reactjs.org/docs/introducing-jsx.html\n[svelte-jsx]: https://www.npmjs.com/package/svelte-jsx\n[svelte-hyperscript]: https://www.npmjs.com/package/svelte-hyperscript\n[svelte-fragment-component]: https://www.npmjs.com/package/svelte-fragment-component\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3589, 3825],
		[3596, 5965],
		[3603, 6031],
		[3610, 5899],
		[3617, 4788],
		[3624, 5151],
		[3631, 5440],
		[3638, 5076],
		[3645, 1662],
		[3652, 2863],
		[3659, 5174],
		[3666, 5901],
		[3673, 4926],
		[3680, 4051],
		[3687, 4969],
		[3694, 3702],
		[3701, 4961],
		[3708, 4223],
		[3715, 3998],
		[3722, 3835],
		[3729, 4292],
		[3736, 3327],
		[3743, 3794],
		[3750, 3693],
		[3757, 3764],
		[3764, 4193],
		[3771, 3922],
		[3778, 4829],
		[3785, 6773],
		[3792, 7932],
		[3799, 7309],
		[3806, 8172],
		[3813, 9373],
		[3820, 9102],
		[3827, 9888],
		[3834, 9594],
		[3841, 13029],
		[3848, 12682],
		[3855, 8592],
		[3862, 6170],
		[3869, 7183],
		[3876, 4745],
		[3883, 5552],
		[3890, 4929],
		[3897, 5117],
		[3904, 4980],
		[3911, 5521],
		[3918, 4572],
		[3925, 4315],
		[3932, 4392],
		[3939, 4802],
		[3946, 4236],
		[3953, 3764],
		[3960, 3720],
		[3967, 3960],
		[3974, 4453],
		[3981, 3722],
		[3988, 4060],
		[3995, 4004],
		[4002, 2954],
		[4009, 1513],
		[4016, 1670],
		[4023, 4758],
		[4030, 3299],
		[4037, 3149],
		[4044, 3455],
		[4051, 3328],
		[4058, 2811],
		[4065, 3383],
		[4072, 3576],
		[4079, 5545],
		[4086, 7086],
		[4093, 4121],
		[4100, 3900],
		[4107, 3292],
		[4114, 3616],
		[4121, 2449],
		[4128, 3901]
	]
}
