{
	"name": "@equipmentshare/date-range-input",
	"description": "Provide user interface for inputting date ranges in Svelte.",
	"repo_url": "https://github.com/EquipmentShare/date-range-input",
	"authors": ["equipmentshare"],
	"homepage": "https://github.com/EquipmentShare/date-range-input/#date-range-input",
	"downloads": 6,
	"updated": "2020-02-26T18:00:07.289Z",
	"tags": ["ui"],
	"github_stars": 15,
	"typescript": false,
	"version": "2.1.0",
	"svelte_range": "^3.0.0",
	"last_rune_check_version": "2.1.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@equipmentshare/date-range-input",
				"version": "2.1.0",
				"size": 172500
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# date-range-input\n\nA user interface for inputting date ranges.\n\n**[Demo](https://equipmentshare.github.io/date-range-input/)**\n\n<img src=\"./demo.gif\" width=\"425.5px\" height=\"202px\">\n\n## Install\n\n```sh\nnpm i @equipmentshare/date-range-input\n```\n\n## How to use\n\nThe date range input takes these properties.\n\n`start` and `end` are required.  They must be an object with these numeric properties: `year`, `month`, and `day`.\n\n`visibleStartMonth` and `visibleEndMonth` are optional, for if you want to manually specify which month should be displayed in each calendar.  They are an object with the numeric properties `year` and `month`.\n\nThe component emits a `change` event with a `detail` property that is an object with `start` and `end` properties.  Both dates are objects with `year`/`month`/`day` properties.\n\n### As vanilla JS\n\n```js\nimport DateRangeInput from '@equipmentshare/date-range-input'\n\nconst dateRangeInput = new DateRangeInput({\n\ttarget: document.querySelector('div.date-range-input'),\n\tprops: {\n\t\tstart: {\n\t\t\tyear: 2020,\n\t\t\tmonth: 1,\n\t\t\tday: 5,\n\t\t},\n\t\tend: {\n\t\t\tyear: 2020,\n\t\t\tmonth: 1,\n\t\t\tday: 18,\n\t\t},\n\t\tvisibleEndMonth: {\n\t\t\tyear: 2020,\n\t\t\tmonth: 2\n\t\t}\n\t}\n})\n\ndateRangeInput.$on('change', event => console.log(event.detail))\n```\n\n### As a Svelte component\n\n```html\n<script>\nimport DateRangeInput from '@equipmentshare/date-range-input'\n</script>\n\n<DateRangeInput\n\tstart={ { year: 2020, month: 1, day: 10 } }\n\tend={ { year: 2020, month: 1, day: 20 } }\n\tvisibleEndMonth={ { year: 2020, month: 2 } }\n\ton:change={ event => console.log(event.detail) }\n>\n</DateRangeInput>\n\n```\n\n## How to test/develop\n\n```sh\nnpm run dev\n```\n\nEdit `src/TestApp.svelte` to play with the component.\n\n## To consider\n\nA couple folks have said that they expected different behavior when they started a click-and-drag on an existing end-point.\n\nIf this continues, we may want to experiment with different behavior when a drag starts on a current end-point â€“ probably making it drag that end-point around, as opposed to the normal behavior of starting a new range selection\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 3],
		[3596, 35],
		[3603, 7],
		[3610, 2],
		[3617, 4],
		[3631, 1],
		[3638, 21],
		[3645, 9],
		[3652, 9],
		[3659, 36],
		[3666, 53],
		[3673, 36],
		[3680, 10],
		[3687, 25],
		[3694, 14],
		[3701, 32],
		[3708, 30],
		[3715, 26],
		[3722, 26],
		[3729, 34],
		[3736, 21],
		[3743, 23],
		[3750, 22],
		[3757, 25],
		[3764, 29],
		[3771, 13],
		[3778, 25],
		[3785, 35],
		[3792, 58],
		[3799, 53],
		[3806, 46],
		[3813, 47],
		[3820, 49],
		[3827, 41],
		[3834, 48],
		[3841, 32],
		[3848, 50],
		[3855, 40],
		[3862, 75],
		[3869, 46],
		[3876, 45],
		[3883, 43],
		[3890, 33],
		[3897, 47],
		[3904, 57],
		[3911, 36],
		[3918, 28],
		[3925, 7],
		[3932, 5],
		[3939, 2],
		[3946, 1],
		[3953, 2],
		[3960, 3],
		[3967, 1],
		[3974, 1],
		[3981, 1],
		[3988, 2],
		[3995, 1],
		[4002, 1],
		[4009, 4],
		[4016, 5],
		[4023, 4],
		[4030, 6],
		[4037, 4],
		[4044, 5],
		[4051, 2],
		[4058, 3],
		[4065, 1],
		[4072, 1],
		[4079, 1],
		[4086, 5],
		[4093, 28],
		[4100, 7],
		[4107, 2],
		[4114, 6],
		[4121, 7],
		[4128, 4]
	],
	"esm": false,
	"cjs": true
}
