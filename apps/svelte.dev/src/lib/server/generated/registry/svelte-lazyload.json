{
	"name": "svelte-lazyload",
	"description": "Implement lazy loading for images and content in Svelte.",
	"repo_url": "https://github.com/abrochard/svelte-lazyload",
	"authors": ["abrochard"],
	"homepage": "https://github.com/abrochard/svelte-lazyload#readme",
	"downloads": 6,
	"updated": "2019-06-15T03:53:55.405Z",
	"tags": ["ui"],
	"github_stars": 9,
	"typescript": false,
	"version": "0.0.4",
	"svelte_range": "3.x",
	"last_rune_check_version": "0.0.4",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-lazyload",
				"version": "0.0.4",
				"size": 6683
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "[![npm][npm]][npm-url]\n[![CircleCI](https://circleci.com/gh/abrochard/svelte-lazyload.svg?style=svg)](https://circleci.com/gh/abrochard/svelte-lazyload)\n\n# svelte-lazyload\n\nLazy loading library using the svelte framework\n\n\n## Getting Started\n\nLook at the [example folder](https://github.com/abrochard/svelte-lazyload/tree/master/example) for a simple setup.\n\n\n## Installation\n\n```bash\nnpm i svelte-lazyload\n```\n\n## Usage\n\n```html\n<script>\n\n import { LazyLoadContainer, LazyLoad } from 'svelte-lazyload';\n\n let statuses = [\n     200,\n     201,\n     202,\n     203,\n     204,\n     206,\n     207,\n     208,\n     226,\n     300,\n     301,\n     400,\n     401,\n     403,\n     500\n ];\n\n</script>\n\n<LazyLoadContainer>\n    {#each statuses as status, i}\n    <LazyLoad id=\"{i}\">\n        <div style=\"min-height: 500px\">\n            <img src='https://httpstatusdogs.com/img/{status}.jpg' alt={status}/>\n        </div>\n    </LazyLoad>\n    {/each}\n</LazyLoadContainer>\n```\n\n### Tuning\n\n`svelte-lazyload` uses an intersection observer to determine when an element comes into the view port. It is possible to tune that behavior in accordance to the [official doc](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API#Creating_an_intersection_observer) and pass a prop `threshold` to the `LazyLoadContainer`. This number between 0 and 1 determines at which percentage of the target's visibility the element will be rendered. For example, a value of 0.5 means that the placeholder element has to be halfway visible for it to be swapped out for the child element of the `LazyLoad` tags. The default is 0.01.\n\n## Nota bene\n\nThe `id` prop is mandatory for the `<LazyLoad>` tag as it will be used to uniquely observe the element via an intersection observer.\n\nThe element inside the `<LazyLoad>` tags must be able to render immediately or at least have a min-height. If not, during loading time, your component will have a height of 0, making the component under it visible and repeating the same problem. This cascade will end up loading more components than you wish for.\n\n\n[npm]: https://img.shields.io/npm/v/svelte-lazyload.svg\n[npm-url]: https://www.npmjs.com/package/svelte-lazyload\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 28],
		[3596, 68],
		[3603, 143],
		[3610, 79],
		[3617, 60],
		[3624, 90],
		[3631, 62],
		[3638, 43],
		[3645, 15],
		[3652, 3],
		[3659, 52],
		[3666, 73],
		[3673, 36],
		[3680, 51],
		[3687, 48],
		[3694, 116],
		[3701, 45],
		[3708, 71],
		[3715, 25],
		[3722, 53],
		[3729, 59],
		[3736, 23],
		[3743, 52],
		[3750, 14],
		[3757, 64],
		[3764, 24],
		[3771, 4],
		[3778, 10],
		[3785, 29],
		[3792, 3],
		[3799, 3],
		[3806, 9],
		[3813, 1],
		[3820, 18],
		[3827, 1],
		[3834, 1],
		[3841, 5],
		[3848, 2],
		[3855, 4],
		[3862, 21],
		[3876, 2],
		[3883, 1],
		[3890, 4],
		[3897, 6],
		[3904, 3],
		[3911, 7],
		[3918, 1],
		[3925, 1],
		[3932, 1],
		[3953, 2],
		[3960, 3],
		[3967, 7],
		[3974, 1],
		[3981, 1],
		[3995, 3],
		[4002, 1],
		[4009, 5],
		[4016, 1],
		[4023, 2],
		[4030, 7],
		[4037, 13],
		[4044, 9],
		[4051, 2],
		[4058, 2],
		[4065, 2],
		[4072, 2],
		[4086, 1],
		[4093, 11],
		[4100, 6],
		[4107, 2],
		[4114, 6],
		[4121, 6],
		[4128, 3]
	],
	"esm": false,
	"cjs": true
}
