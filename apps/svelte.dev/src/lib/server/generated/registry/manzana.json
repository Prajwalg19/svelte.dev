{
	"name": "manzana",
	"description": "Build forms with validation in Svelte applications.",
	"repo_url": "https://github.com/EstebanBorai/manzana",
	"authors": ["estebanborai"],
	"homepage": "https://manzana.estebanborai.com",
	"downloads": 11,
	"updated": "2022-06-14T04:17:11.438Z",
	"tags": ["tooling"],
	"github_stars": 3,
	"typescript": true,
	"version": "0.2.12",
	"svelte_range": "^3.46.4",
	"last_rune_check_version": "0.2.12",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "manzana",
				"version": "0.2.12",
				"size": 975492
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "<div>\n  <h1 align=\"center\">manzana</h1>\n  <h4 align=\"center\">\n    üçè Build forms on Svelte as easy as eating apple.\n  </h4>\n</div>\n\n## Installation\n\n```bash\n# npm\nnpm install manzana\n\n# yarn\nyarn add manzana\n\n# pnpm\npnpm add manzana\n```\n\n## Examples\n\n### Creating a new form\n\n```svelte\n<script lang=\"ts\">\n  import { newForm } from 'manzana';\n  import * as Sentry from '@sentry/browser';\n  import * as Yup from 'yup';\n\n  import { EmailAlreadyTaken } from '$lib/errors';\n  import { agentService } from '$lib/services/agent';\n  import { notificationStore } from '$lib/stores/notification';\n\n  const { handleSubmit, values, errors, isSubmitting } = newForm({\n    initialValues: {\n      name: 'James'\n      lastName: 'Bond',\n      nickname: 'Agent 007',\n      email: 'james.bond@agent007.com',\n    },\n    validationSchema: Yup.object({\n      name: Yup.string().required(),\n      lastName: Yup.string().required(),\n      nickname: Yup.string().required(),\n      email: Yup.string().email().required(),\n    }),\n    onSubmit: async (values, helpers) => {\n      try {\n        await agentService.register(values);\n      } catch (error) {\n        if (error instanceof EmailAlreadyTaken) {\n          helpers.setFieldError(\n            'email',\n            'The email is already taken!');\n          return;\n        }\n\n        Sentry.captureException(error);\n\n        notificationStore.displayError({\n          text: 'An error ocurred registering an agent.'\n        });\n      }\n    },\n  });\n</script>\n\n<form>\n  <div>\n    <label>Name</label>\n    <input type=\"text\" name=\"name\" bind:value={$values.name} />\n    <p class:hidden={!$errors.name}></p>\n  </div>\n  <div>\n    <label>Last Name</label>\n    <input type=\"text\" name=\"lastName\" bind:value={$values.lastName} />\n    <p class:hidden={!$errors.lastName}></p>\n  </div>\n  <div>\n    <label>Nickname</label>\n    <input type=\"text\" name=\"nickname\" bind:value={$values.nickname} />\n    <p class:hidden={!$errors.nickname}></p>\n  </div>\n  <div>\n    <label>Email</label>\n    <input type=\"text\" name=\"email\" bind:value={$values.email} />\n    <p class:hidden={!$errors.email}></p>\n  </div>\n  <button type=\"submit\" class:disabled={$isSubmitting} disabled={$isSubmitting}>\n    Create Account\n  </button>\n</form>\n```\n\n## Releasing\n\nWhenever a tag is pushed a new release is created an the package is\npublished to the NPM registry using GitHub Actions.\n\nBump the current version using `npm` as follows:\n\n```sh\n# for versions with breaking changes use `major`\nnpm version major\n\n# for versions with non-breaking changes use `minor`\nnpm version minor\n\n# for patch versions use `patch`\nnpm version patch\n```\n\nThen push the repository including tag metadata as follows\n\n```sh\ngit push origin main --follow-tags\n```\n\n## Contributions\n\nAny contribution to this package is welcome! Don't hesitate on opening a\nPR or creating an issue!\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3589, 1],
		[3596, 34],
		[3610, 1],
		[3617, 3],
		[3631, 1],
		[3645, 2],
		[3659, 1],
		[3666, 17],
		[3673, 1],
		[3680, 2],
		[3708, 2],
		[3722, 1],
		[3736, 1],
		[3743, 1],
		[3750, 3],
		[3757, 1],
		[3771, 16],
		[3778, 6],
		[3785, 12],
		[3792, 1],
		[3799, 3],
		[3806, 2],
		[3813, 1],
		[3827, 1],
		[3834, 17],
		[3841, 1],
		[3848, 1],
		[3855, 83],
		[3862, 1],
		[3869, 1],
		[3883, 1],
		[3890, 18],
		[3904, 17],
		[3911, 1],
		[3918, 3],
		[3932, 3],
		[3946, 1],
		[3953, 2],
		[3960, 2],
		[3967, 17],
		[3981, 1],
		[3988, 1],
		[4016, 6],
		[4023, 1],
		[4030, 16],
		[4037, 5],
		[4044, 17],
		[4051, 5],
		[4058, 1],
		[4065, 2],
		[4093, 1],
		[4100, 49],
		[4114, 11],
		[4121, 24],
		[4128, 19]
	],
	"esm": true,
	"cjs": false
}
