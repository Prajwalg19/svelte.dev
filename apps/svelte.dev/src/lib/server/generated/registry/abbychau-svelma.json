{
	"name": "@abbychau/svelma",
	"description": "Provides Bulma components for Svelte.",
	"repo_url": "https://github.com/abbychau/svelma",
	"authors": ["abbychau"],
	"homepage": "https://github.com/c0bra/svelma#readme",
	"downloads": 8,
	"updated": "2021-03-17T17:12:53.189Z",
	"tags": ["design-system"],
	"github_stars": 5,
	"typescript": false,
	"version": "0.4.1",
	"svelte_range": "^3.35.0",
	"last_rune_check_version": "0.4.1",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@abbychau/svelma",
				"version": "0.4.1",
				"size": 657365
			}
		],
		"dependencies": [],
		"circular": []
	},
	"legacy_svelte": true,
	"readme": "# Svelma\r\n\r\n> Svelma is a set of UI components for [Svelte](https://svelte.dev) based on the [Bulma](http://bulma.io) CSS framework.\r\n\r\n<a href=\"https://www.npmjs.com/package/svelma\"><img src=\"https://img.shields.io/npm/v/svelma.svg\" /></a>\r\n<a href=\"https://www.npmjs.com/package/svelma\"><img src=\"https://img.shields.io/npm/l/svelma.svg\" /></a>\r\n<a href=\"https://bundlephobia.com/result?p=svelma\"><img src=\"https://badgen.net/bundlephobia/minzip/svelma\"></a>\r\n<a href=\"https://travis-ci.com/c0bra/svelma\"><img src=\"https://travis-ci.com/c0bra/svelma.svg?branch=master\"></a>\r\n\r\n<!-- <a href=\"https://circleci.com/gh/c0bra/svelma\"><img src=\"https://img.shields.io/circleci/project/c0bra/svelma/svelma.svg?style=flat-square\" /></a> -->\r\n<!-- <a href=\"https://codecov.io/gh/svelma/svelma\"><img src=\"https://img.shields.io/codecov/c/github/svelma/svelma.svg?style=flat-square\" /></a> -->\r\n\r\n# Inspiration\r\n\r\nMuch thanks to the [Buefy](https://buefy.org) project! It provided the inspiration and lots of code examples for Svelma.. If you like Vue.js and Bulma, check it out.\r\n\r\n# Features\r\n\r\n- Extremely lightweight thanks to Svelte, a compile-only javascript framework. The bundle is `50K` minified, `14K` gzipped.\r\n- Components can be used independently, so a modern tree-shaking bundler will reduce the final bundle size even further.\r\n- Svelma does not bundle Bulma, so you are free to include it in your project however you wish, themes and all.\r\n\r\n# Documentation\r\n\r\n[See docs + demos site here](https://c0bra.github.io/svelma)\r\n\r\n# Quick Start\r\n\r\n### 1. Create a svelte app from the template\r\n\r\n[https://github.com/sveltejs/template](sveltejs/template) is a template repo for svelte. [degit](https://www.npmjs.com/package/degit) will scaffold the repo for you:\r\n\r\n    $ npx degit sveltejs/template my-svelma-project\r\n    $ cd my-svelma-project\r\n    $ npm install\r\n\r\n_NOTE_: There are of course other ways to set up a project using svelte. This is just the quickest way to start.\r\n\r\n### 2. Install svelma and dependencies via npm\r\n\r\nNote that you'll need a CSS processing plugin for rollup so that you can import css files. Here we're using `rollup-plugin-postcss`. If you're going to use a\r\n`<link>` tag in your HTML you can skip the plugin and the `import ... css` statement below in step #2\r\n\r\n    $ npm install --save bulma svelma\r\n    $ npm install node-sass svelte-preprocess rollup-plugin-postcss --save-dev\r\n\r\nAdd the postcss plugin to your rollup config (I don't think the order really matters):\r\n\r\n```js\r\n// rollup.config.js\r\nimport postcss from 'rollup-plugin-postcss'\r\nimport preprocess from 'svelte-preprocess'\r\n\r\n// ...\r\n\r\nexport default {\r\n  // ...\r\n  plugins: [\r\n    svelte({\r\n      // ...\r\n      preprocess: preprocess()\r\n    }),\r\n\r\n    postcss(),\r\n  }\r\n}\r\n```\r\n\r\n### 3. Import Bulma's CSS and Svelma components\r\n\r\n```html\r\n<!-- App.svelte -->\r\n<script>\r\n  import 'bulma/css/bulma.css'\r\n  import { Button } from 'svelma'\r\n</script>\r\n\r\n<button type=\"is-primary\">I'm a Button!</button>\r\n```\r\n\r\n### 4. Include [Font Awesome](https://fontawesome.com/) icons\r\n\r\nFrom CDN in your HTML page:\r\n\r\n```html\r\n<link rel=\"stylesheet\" href=\"https://use.fontawesome.com/releases/v5.3.1/css/all.css\"></link>\r\n```\r\n\r\n...or as an npm package imported into your root component:\r\n\r\n    $ npm install --save @fortawesome/fontawesome-free\r\n\r\n```html\r\n<!-- App.svelte -->\r\n<script>\r\n  import 'bulma/css/bulma.css'\r\n  import '@fortawesome/fontawesome-free/css/all.css'\r\n</script>\r\n```\r\n\r\n### SSR\r\n\r\nIf you are doing server-side rendering with Sapper, you'll need to import the .svelte files directly so that your app can compile them, rather than importing from the compiled module.\r\n\r\ni.e.:\r\n\r\n```js\r\nimport Button from 'svelma/src/components/Button.svelte'\r\n```\r\n\r\ninstead of\r\n\r\n```js\r\nimport { Button } from 'svelma'\r\n```\r\n\r\n# Development\r\n\r\n1. Clone this repo: `git clone https://github.com/c0bra/svelma.git`\r\n2. Install dependencies:\r\n   1. `npm i && (cd docs; npm i)`\r\n   2. `npm install -g semantic-release-cli commitizen`\r\n3. Start the automated build and automated docs: `npm run dev`\r\n4. Open url that console prints in your browser\r\n\r\n## Commit\r\n\r\n    $ git cz\r\n\r\n# Publish\r\n\r\n_NOTE_: CI should publish new versions using `semantic-release` automatically\r\n\r\n```bash\r\n$ npm version <version>\r\n$ npm publish\r\n```\r\n\r\n# License\r\n\r\nCode released under MIT license.\r\n\r\nCopyright &copy;, Brian Hann.\r\n",
	"downloads_history": [
		[3589, 1],
		[3596, 3],
		[3603, 3],
		[3610, 3],
		[3617, 2],
		[3624, 1],
		[3631, 9],
		[3638, 1],
		[3652, 2],
		[3659, 13],
		[3666, 4],
		[3673, 2],
		[3687, 1],
		[3708, 3],
		[3715, 1],
		[3722, 2],
		[3729, 1],
		[3736, 1],
		[3764, 4],
		[3778, 2],
		[3785, 1],
		[3792, 1],
		[3799, 1],
		[3806, 3],
		[3813, 1],
		[3827, 1],
		[3834, 1],
		[3841, 1],
		[3855, 6],
		[3862, 4],
		[3876, 4],
		[3890, 1],
		[3897, 1],
		[3904, 3],
		[3911, 5],
		[3918, 3],
		[3932, 1],
		[3939, 1],
		[3946, 1],
		[3953, 1],
		[3960, 2],
		[3974, 1],
		[3988, 1],
		[3995, 1],
		[4002, 1],
		[4009, 3],
		[4016, 1],
		[4023, 4],
		[4030, 2],
		[4037, 4],
		[4044, 6],
		[4051, 1],
		[4058, 2],
		[4072, 1],
		[4079, 1],
		[4086, 3],
		[4093, 27],
		[4100, 14],
		[4114, 8],
		[4121, 14],
		[4128, 3]
	],
	"esm": false,
	"cjs": true
}
