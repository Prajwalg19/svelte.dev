{
	"name": "svelte-statusable",
	"description": "Manage application status with a simple Svelte store.",
	"repo_url": "https://github.com/sveltetools/svelte-statusable",
	"authors": ["paulmaly"],
	"homepage": "https://github.com/sveltetools/svelte-statusable#readme",
	"downloads": 17,
	"updated": "2022-07-28T07:42:07.521Z",
	"tags": ["miscellaneous"],
	"github_stars": 4,
	"typescript": true,
	"version": "1.1.0",
	"svelte_range": "3.x",
	"last_rune_check_version": "1.1.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-statusable",
				"version": "1.1.0",
				"size": 208989
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# Super tiny, simple to use SvelteJS store to control your application status.\n\n[![NPM version](https://img.shields.io/npm/v/svelte-statusable.svg?style=flat)](https://www.npmjs.com/package/svelte-statusable) [![NPM downloads](https://img.shields.io/npm/dm/svelte-statusable.svg?style=flat)](https://www.npmjs.com/package/svelte-statusable)\n\n\n## Install\n\n```bash\nnpm i svelte-statusable --save-dev\n```\n\n```bash\nyarn add svelte-statusable\n```\n\nCDN: [UNPKG](https://unpkg.com/svelte-statusable/) | [jsDelivr](https://cdn.jsdelivr.net/npm/svelte-statusable/) (available as `window.statusable`)\n\nIf you are **not** using ES6, instead of importing add \n\n```html\n<script src=\"/path/to/svelte-statusable/index.js\"></script>\n```\n\njust before closing body tag.\n\n## Usage\n\n### Create store to control `online/offline` status and page `visibility` with zero-config:\n\n```javascript\nimport { statusable } from 'svelte-statusable';\n\nexport const status = statusable();\n```\n\nCheck it somewhere in you app:\n\n```svelte\n{#if ! $status.online}\n  <mark>Intenet connection lost</mark>\n{/if}\n\n<script>\n  import { status } from './stores/status';\n\n  $: if ($status.hidden) {\n    player.pause();\n  }\n\n  $: console.log($status); // { online: true, hidden: false, heartbeat: false, stream: false }\n</script>\n```\n\n### Pass `ping` option on store creation to ping your server route and check its status: \n\nJust provide event name as `event` and `withCredentials` properties in config object.\n\n```javascript\nimport { statusable } from 'svelte-statusable';\n\nexport const status = statusable({\n  ping: 'https://mydomain/status'\n});\n```\n\nOR additional options to full control:\n\n```javascript\nimport { statusable } from 'svelte-statusable';\n\nexport const status = statusable({\n  ping: {\n    url: 'https://mydomain/status',\n    retry: 5000, // interval of polling\n    abort: 1000, // acceptable response time\n    // any Fetch API options\n  }\n});\n```\n\nCheck it somewhere in you app:\n\n```svelte\n{#if ! $status.heartbeat}\n  <mark>Server connection lost</mark>\n{/if}\n```\n\n### Usage with Server-sent event:\n\nJust provide SSE url via `sse` option to control SSE stream status: \n\n```javascript\nexport const status = statusable({\n  sse: 'https://mydomain/stream'\n});\n\n// OR\n\nexport const status = statusable({\n  sse: {\n    url: 'https://mydomain/stream',\n    withCredentials: true,\n  }\n});\n```\n\nCheck it somewhere in you app:\n\n```svelte\n{#if ! $status.stream}\n  <mark>Live updates are stopped. Re-connecting...</mark>\n{/if}\n```\n\n## License\n\nMIT &copy; [PaulMaly](https://github.com/PaulMaly)\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 6],
		[3603, 33],
		[3610, 21],
		[3617, 15],
		[3624, 7],
		[3631, 6],
		[3638, 1],
		[3645, 6],
		[3652, 26],
		[3659, 16],
		[3666, 12],
		[3673, 1],
		[3680, 4],
		[3687, 24],
		[3694, 4],
		[3701, 3],
		[3708, 1],
		[3715, 4],
		[3722, 8],
		[3729, 7],
		[3736, 4],
		[3743, 6],
		[3750, 5],
		[3757, 28],
		[3764, 4],
		[3771, 6],
		[3778, 7],
		[3785, 6],
		[3792, 7],
		[3799, 12],
		[3806, 13],
		[3813, 4],
		[3820, 13],
		[3827, 43],
		[3834, 8],
		[3841, 18],
		[3848, 9],
		[3855, 21],
		[3862, 9],
		[3869, 14],
		[3876, 9],
		[3883, 37],
		[3890, 13],
		[3897, 22],
		[3904, 8],
		[3911, 22],
		[3918, 10],
		[3925, 5],
		[3932, 2],
		[3939, 5],
		[3946, 12],
		[3953, 9],
		[3960, 7],
		[3967, 8],
		[3974, 3],
		[3981, 4],
		[3988, 7],
		[3995, 1],
		[4002, 2],
		[4009, 3],
		[4016, 3],
		[4023, 3],
		[4030, 25],
		[4037, 16],
		[4044, 19],
		[4051, 18],
		[4058, 18],
		[4065, 1],
		[4072, 18],
		[4079, 10],
		[4086, 11],
		[4093, 2],
		[4100, 14],
		[4107, 13],
		[4114, 17],
		[4121, 21],
		[4128, 11],
		[4135, 10]
	],
	"esm": true,
	"cjs": false
}
