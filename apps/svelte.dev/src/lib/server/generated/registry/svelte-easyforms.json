{
	"name": "svelte-easyforms",
	"description": "Build forms with validation using inputs and textarea components.",
	"repo_url": "https://github.com/kevmodrome/svelte-easyforms",
	"authors": ["kevmodrome"],
	"homepage": "https://github.com/kevmodrome/svelte-easyforms#readme",
	"downloads": 5,
	"updated": "2019-12-05T16:04:21.334Z",
	"tags": ["miscellaneous"],
	"github_stars": 11,
	"typescript": false,
	"version": "1.0.5",
	"svelte_range": "^3.16.0",
	"last_rune_check_version": "1.0.5",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-easyforms",
				"version": "1.0.5",
				"size": 94987
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# svelte-easyforms\n\nA very opinionated form library for Svelte. Currently only supports inputs and textarea.\n\n[DEMO](https://svelte.dev/repl/d133210432dc47758674ac6a9233e370?version=3.16.0)\n\nUsage:\n\n```javascript\nimport Form from \"svelte-easyforms\";\n\nconst emailValidator = value =>\n  /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\n    value\n  );\n\nconst inputs = [\n  {\n    name: \"name\",\n    title: \"Who are you ?\",\n    placeholder: \"Name, company, etc...\"\n  },\n  {\n    name: \"email\",\n    title: \"What's your email?\",\n    placeholder: \"Email...\",\n    type: \"email\",\n    validator: emailValidator\n  },\n  {\n    name: \"message\",\n    title: \"Your message\",\n    placeholder: \"Write your message here...\",\n    full: true,\n    multiline: true\n  }\n];\n\nconst submitForm = e => {\n  console.log(\"submitForm\");\n};\n```\n\nAnd your HTML:\n\n```javascript\n<Form {inputs} buttonText=\"SEND MESSAGE\" on:submit=\"{submitForm}\" reset />\n```\n\nOptions:\nEach input object takes a couple of options\n\n- name\n- initialValue\n- title (shows up above the input)\n- placeholder\n- type (defaults to \"text\")\n- validator (optional, should return true if the value passes)\n- multiline (optional, turns input into textarea)\n- full (optional, makes the field span the whole form, instead of half)\n- errorMessage (optional, shows up if there is an error)\n- textareaHeight (optional, used with multiline, specifies how large the textarea field should be to begin with)\n- font (optional, specifies font)\n\nThe Form itself takes a number of props:\n\n- inputs (an array of inputs)\n- buttonText (optional)\n- reset (optional, makes the resetbutton appear)\n- resetText (optional, changes the text on the reset button)\n- debug (optional, displays the values, touched and errors objects)\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 9],
		[3596, 17],
		[3603, 7],
		[3610, 15],
		[3617, 17],
		[3631, 10],
		[3638, 8],
		[3645, 9],
		[3652, 1],
		[3659, 27],
		[3666, 6],
		[3673, 8],
		[3680, 1],
		[3708, 17],
		[3715, 8],
		[3722, 8],
		[3729, 32],
		[3743, 1],
		[3757, 3],
		[3764, 1],
		[3771, 8],
		[3778, 9],
		[3785, 2],
		[3792, 2],
		[3799, 1],
		[3806, 2],
		[3820, 1],
		[3834, 2],
		[3841, 8],
		[3848, 2],
		[3855, 1],
		[3862, 31],
		[3869, 1],
		[3883, 1],
		[3890, 14],
		[3904, 3],
		[3911, 10],
		[3932, 1],
		[3946, 2],
		[3953, 1],
		[3960, 3],
		[3967, 1],
		[3974, 8],
		[3981, 3],
		[3988, 1],
		[3995, 10],
		[4002, 1],
		[4009, 6],
		[4023, 9],
		[4030, 6],
		[4037, 11],
		[4044, 4],
		[4051, 1],
		[4058, 1],
		[4065, 1],
		[4072, 8],
		[4079, 1],
		[4086, 10],
		[4093, 11],
		[4100, 9],
		[4107, 3],
		[4114, 5],
		[4121, 8],
		[4128, 1]
	],
	"esm": true,
	"cjs": false
}
