{
	"name": "svelte-generic-table-pager",
	"description": "Extract configurable lines and dispatches as page data.",
	"repo_url": "https://github.com/ivosdc/svelte-generic-table-pager",
	"authors": ["nologin"],
	"homepage": "https://github.com/ivosdc/svelte-generic-table-pager#readme",
	"downloads": 161,
	"updated": "2021-06-30T13:14:36.152Z",
	"tags": ["ui"],
	"github_stars": 4,
	"typescript": false,
	"version": "0.2.73",
	"svelte_range": "^3.37.0",
	"last_rune_check_version": "0.2.73",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-generic-table-pager",
				"version": "0.2.73",
				"size": 103335
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# svelte-generic-table-pager\n\nA svelte paginator using svelte-generic-crud-table.\n\n- Svelte-component: `import GenericTablePager from 'svelte-generic-table-pager'`\n\n[See REPL on svelte.dev:](https://svelte.dev/repl/b81c81da687c432fa407bb6bbd1a1713?version=3.38.2 \"Example\")\n\n## Install\n\n```\nnpm install svelte-generic-table-pager\n```\n\n# Usage\nUse the svelte-generic-table-pager in your component to show, edit, update and delete it's content *paginated*.\nJust include the table as seen in the example below.\n\n## column settings\nAll fields are optional.\n\nSettings regarding a column behaviour can be specified in the table_config.\nOnly wanted keys of your source array have to be mapped by columns_settings *name*. All other attributes are optional.\n```js\n    const table_config = {\n        name: 'Awesome',\n        options: ['CREATE', 'EDIT', 'DELETE', 'DETAILS'],\n        columns_setting: [\n            {name: 'id', show: false, edit: true, width: '0px'},\n            {name: 'job', show: true, edit: true, width: '150px', description: 'The job'},\n            {name: 'name', show: true, edit: true, width: '150px', tooltip: true},\n            {name: 'private', show: true, edit: false, width: '200px', description: 'your things', tooltip: true},\n            {name: 'html', show: true, edit: true, width: '500px', type: 'html', description: 'You can use HTML', tooltip: true}\n        ],\n        details_text: 'detail'   // replace the standard icon with an text-link\n    }\n```\n- <b>*name*</b>: the key from your data-array. This is used as column name.\n- *show*: true/false; Should this column displayed? (optional, default: false)\n- *edit*: true/false; Set this field editable or not. (optional, default: false)\n- *width*: px/em; set the field width.  (optional, default: 100px)\n- *description*: A tooltip for the columns name. E.g. to see the full name or other description.  (optional, default: unset)\n- *tooltip*: true/false; When the text does not fit into the field you can show the full text as tooltip.  (optional, default: false)\n- *type*: There are two types:  (optional, default: text)\n    - *text*: Default.\n    - *html*: The value/text will be interpreted as HTML.\n\n[See REPL on svelte.dev:](https://svelte.dev/repl/b81c81da687c432fa407bb6bbd1a1713?version=3.38.2 \"Example\")\n\n###  Svelte-Component:\n```html\n<script>\n    import GenericTablePager from 'svelte-generic-table-pager/src/GenericTablePager.svelte'\n\n    function handleDelete(event) {\n        const id = event.detail.id; // position in myObjectArray\n        const body = event.detail.body; // object to delete\n        console.log(JSON.stringify(event.detail.body));\n        myObjectArray.slice(id,1);\n    }\n\n    function handleUpdate(event) {\n        const id = event.detail.id; // position in table\n        const body = event.detail.body;\n        console.log(JSON.stringify(body));\n        myObjectArray[id] = body;\n    }\n\n    function handleCreate(event) {\n        console.log(JSON.stringify(event.detail)); // empty object is passed by now\n        myObjectArray.push({id: -1, name:'new Element', sthg:'2345', why:'1234'})\n        const copy = myObjectArray;\n        myObjectArray = [];\n        myObjectArray = copy;\n    }\n\n    function handleDetails(event) {\n        const id = event.detail.id; // position in table\n        const body = event.detail.body;\n        console.log(JSON.stringify(body));\n    }\n\n\n    function handleSort(e) {\n        console.log(e);\n    }\n\n    let myObjectArray = [\n        {id: 1, name: \"A_NAME_1\", sthg: \"A_STHG_1\", why: \"because\"},\n        {id: 1, name: \"A_NAME_12\", sthg: \"A_STHG_1\", why: \"because\"},\n        {id: 1, name: \"A_NAME_13\", sthg: \"A_STHG_1\", why: \"because\"},\n        {id: 1, name: \"A_NAME_14\", sthg: \"A_STHG_1\", why: \"because\"},\n        {id: 1, name: \"A_NAME_15\", sthg: \"A_STHG_1\", why: \"because\"},\n        {id: 1, name: \"A_NAME_16\", sthg: \"A_STHG_1\", why: \"because\"},\n        {id: 1, name: \"A_NAME_17\", sthg: \"A_STHG_1\", why: \"because\"},\n        {id: 1, name: \"A_NAME_18\", sthg: \"A_STHG_1\", why: \"because\"},\n        {id: 1, name: \"A_NAME_19\", sthg: \"A_STHG_1\", why: \"because\"},\n        {id: 1, name: \"A_NAME_1\", sthg: \"A_STHG_1\", why: \"because\"},\n        {id: 1, name: \"A_NAME_12345\", sthg: \"A_STHG_1\", why: \"because\"},\n        {id: 1, name: \"A_NAME_1\", sthg: \"A_STHG_1\", why: \"because\"},\n        {id: 1, name: \"A_NAME_1\", sthg: \"A_STHG_1\", why: \"because\"},\n        {id: 1, name: \"A_NAME_1\", sthg: \"A_STHG_1\", why: \"because\"},\n        {id: 1, name: \"A_NAME_1\", sthg: \"A_STHG_1\", why: \"because\"},\n        {id: 1, name: \"A_NAME_1\", sthg: \"A_STHG_1\", why: \"because\"},\n        {id: 1, name: \"A_NAME_1\", sthg: \"A_STHG_1\", why: \"because\"},\n        {id: 1, name: \"A_NAME_1\", sthg: \"A_STHG_1\", why: \"because\"},\n        {id: 1, name: \"A_NAME_1\", sthg: \"A_STHG_1\", why: \"because\"},\n        {id: 1, name: \"A_NAME_1\", sthg: \"A_STHG_1\", why: \"because\"},\n        {id: 1, name: \"A_NAME_1\", sthg: \"A_STHG_1\", why: \"because\"},\n        {id: 1, name: \"A_NAME_1\", sthg: \"A_STHG_1\", why: \"because\"},\n        {id: 2, name: \"A_NAME_2\", sthg: \"A_STHG_2\", why: \"I can\"}\n    ];\n\n\n</script>\n\n<main>\n    <GenericTablePager on:delete={handleDelete}\n                       on:update={handleUpdate}\n                       on:create={handleCreate}\n                       on:details={handleDetails}\n                       on:sort={handleSort}\n                       table_config={{\n                           name: 'Awesome:',\n                           options: ['CREATE', 'EDIT', 'DELETE', 'DETAILS'],\n                           columns_setting: [\n                               {name: 'id', show: false, edit: true, size: '200px'},\n                               {name: 'name', show: true, edit: true, size: '200px'},\n                               {name: 'why', show: true, edit: true, size: '200px'},\n                               {name: 'sthg', show: true, edit: false, size: '200px'}\n                           ],\n                       details_text: 'detail'   // replace the standard icon with an text-link\n                       }}\n                       pager_data={myObjectArray}\n                       pager_config={{\n                                    name: 'crud-table-pager',\n                                    lines: 5,\n                                    steps: [1, 2, 5, 10, 20, 50],\n                                    width: '600px'\n                                    }}/></GenericTablePager>\n</main>\n```\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 18],
		[3596, 114],
		[3603, 118],
		[3610, 108],
		[3617, 33],
		[3624, 33],
		[3631, 25],
		[3638, 27],
		[3645, 18],
		[3652, 26],
		[3659, 13],
		[3666, 94],
		[3673, 42],
		[3680, 14],
		[3687, 33],
		[3694, 21],
		[3701, 45],
		[3708, 13],
		[3715, 33],
		[3722, 39],
		[3729, 113],
		[3736, 29],
		[3743, 29],
		[3750, 19],
		[3757, 111],
		[3764, 57],
		[3771, 75],
		[3778, 22],
		[3785, 22],
		[3792, 5],
		[3799, 23],
		[3806, 30],
		[3813, 51],
		[3820, 27],
		[3827, 17],
		[3834, 41],
		[3841, 10],
		[3848, 45],
		[3855, 202],
		[3862, 290],
		[3869, 10],
		[3876, 13],
		[3883, 27],
		[3890, 121],
		[3897, 33],
		[3904, 24],
		[3911, 19],
		[3918, 39],
		[3925, 22],
		[3932, 18],
		[3939, 15],
		[3946, 8],
		[3953, 12],
		[3960, 17],
		[3967, 29],
		[3974, 25],
		[3981, 34],
		[3988, 60],
		[3995, 35],
		[4002, 34],
		[4009, 18],
		[4016, 46],
		[4023, 52],
		[4030, 115],
		[4037, 118],
		[4044, 43],
		[4051, 75],
		[4058, 25],
		[4065, 21],
		[4072, 36],
		[4079, 29],
		[4086, 75],
		[4093, 26],
		[4100, 101],
		[4107, 58],
		[4114, 161],
		[4121, 193],
		[4128, 52]
	],
	"esm": true,
	"cjs": false
}
