{
	"name": "svelte-mobx",
	"description": "Integrate MobX state management with Svelte.",
	"repo_url": "https://github.com/xelaok/svelte-mobx",
	"authors": ["xelaok"],
	"homepage": "https://github.com/xelaok/svelte-mobx#readme",
	"downloads": 11,
	"updated": "2020-12-29T02:31:16.447Z",
	"tags": ["miscellaneous"],
	"github_stars": 49,
	"typescript": true,
	"version": "1.0.0",
	"svelte_range": "^3",
	"last_rune_check_version": "1.0.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-mobx",
				"version": "1.0.0",
				"size": 4605
			},
			{
				"name": "mobx",
				"version": "6.13.7",
				"size": 4334846
			},
			{
				"name": "svelte",
				"version": "3.59.2",
				"size": 10624206
			}
		],
		"dependencies": [
			[0, 1],
			[0, 2]
		],
		"circular": []
	},
	"readme": "## svelte-mobx ([npm](https://www.npmjs.com/package/svelte-mobx))\n[MobX](https://mobx.js.org) connector for [Svelte](https://svelte.dev)\n\n## Installation\n\n```bash\nnpm i -S svelte-mobx\n```\n\n## Usage ([example repository](https://github.com/xelaok/svelte-mobx-example))\n\n```typescript\nimport App from \"./App.svelte\";\nimport { AppVm } from \"./App.vm\";\n\nnew App({\n    props: { vm: new AppVm() },\n    target: document.body,\n});\n```\n\n```sveltehtml\n// App.svelte\n\n<script context=\"module\">\n    import { connect } from \"svelte-mobx\";\n</script>\n\n<script>\n    export let vm;\n    const { autorun } = connect();\n\n    let currentTimeString;\n    let elapsedSecondsString;\n\n    $: autorun(() => {\n        currentTimeString = vm.currentTimeString;\n        elapsedSecondsString = vm.elapsedSecondsString;\n    });\n</script>\n\n<div>\n    <h1>The time is {currentTimeString}</h1>\n    <div>This page has been open for {elapsedSecondsString}</div>\n</div>\n```\n\n```typescript\n// App.vm.ts\n\nexport class AppVm {\n    startTime: Date = new Date();\n    currentTime: Date = new Date();\n\n    constructor() {\n        makeAutoObservable(this, {\n            startTime: observable,\n            currentTime: observable,\n            elapsedSeconds: computed,\n            currentTimeString: computed,\n            elapsedSecondsString: computed,\n            updateCurrentTime: action,\n        });\n\n        setInterval(() => this.updateCurrentTime(), UPDATE_INTERVAL);\n    }\n\n    get elapsedSeconds() {\n        return Math.round((this.currentTime.getTime() - this.startTime.getTime()) / 1000);\n    }\n\n    get currentTimeString() {\n        return timeFormatter.format(this.currentTime);\n    }\n\n    get elapsedSecondsString() {\n        return `${this.elapsedSeconds} ${this.elapsedSeconds === 1 ? \"second\" : \"seconds\"}`;\n    }\n\n    updateCurrentTime() {\n        this.currentTime = new Date();\n    }\n}\n```\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3589, 2],
		[3596, 41],
		[3603, 15],
		[3610, 13],
		[3617, 16],
		[3624, 14],
		[3631, 9],
		[3638, 22],
		[3645, 18],
		[3652, 21],
		[3659, 12],
		[3666, 13],
		[3673, 15],
		[3680, 13],
		[3687, 41],
		[3694, 15],
		[3701, 13],
		[3708, 9],
		[3715, 11],
		[3722, 40],
		[3729, 19],
		[3736, 14],
		[3743, 14],
		[3750, 6],
		[3757, 8],
		[3764, 4],
		[3771, 11],
		[3778, 7],
		[3785, 14],
		[3792, 21],
		[3799, 12],
		[3806, 7],
		[3813, 6],
		[3820, 13],
		[3827, 13],
		[3834, 7],
		[3841, 11],
		[3848, 9],
		[3855, 26],
		[3862, 26],
		[3869, 13],
		[3876, 15],
		[3883, 5],
		[3890, 15],
		[3897, 16],
		[3904, 10],
		[3911, 19],
		[3918, 14],
		[3925, 5],
		[3932, 5],
		[3939, 9],
		[3946, 4],
		[3953, 2],
		[3960, 2],
		[3967, 2],
		[3974, 1],
		[3981, 11],
		[3988, 1],
		[3995, 7],
		[4002, 4],
		[4009, 1],
		[4016, 1],
		[4023, 9],
		[4030, 8],
		[4037, 15],
		[4044, 15],
		[4051, 7],
		[4058, 2],
		[4065, 29],
		[4072, 4],
		[4079, 13],
		[4086, 2],
		[4093, 29],
		[4100, 10],
		[4107, 6],
		[4114, 11],
		[4121, 12],
		[4128, 15]
	],
	"esm": false,
	"cjs": true
}
