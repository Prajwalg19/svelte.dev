{
	"name": "@vanillacode314/svelte-derived-mutable",
	"description": "Create mutable derived runes in Svelte 5.",
	"repo_url": "https://github.com/vanillacode314/svelte-derived-mutable",
	"authors": ["raqueebuddinaziz"],
	"homepage": "https://github.com/vanillacode314/svelte-derived-mutable#readme",
	"downloads": 7,
	"updated": "2024-09-22T23:37:04.691Z",
	"tags": ["miscellaneous"],
	"github_stars": 0,
	"typescript": true,
	"version": "2.0.2",
	"svelte_range": "^5.0.0-next.1",
	"kit_range": "^2.0.0",
	"last_rune_check_version": "2.0.2",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@vanillacode314/svelte-derived-mutable",
				"version": "2.0.2",
				"size": 6285
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# svelte-derived-mutable\n\nHelper function to create a derived rune in svelte 5 which can be mutated \n\n## Usage\n\n```svelte\n<script>\n\timport { derivedMutable } from '@vanillacode314/svelte-derived-mutable';\n\n\tasync function createTodo(title) {\n\t\tawait new Promise((resolve) => setTimeout(resolve, 1000));\n\t\t// NOTE: appending on server to demonstrate the derivation behaviour\n\t\ttodos.push(title + ' on server');\n\t}\n\n\tlet todos = $state(['a', 'b', 'c']);\n\t// NOTE: use $state.snapshot to deepTrack the value\n\tconst optimisticTodos = derivedMutable(() => $state.snapshot(todos));\n\n\tasync function addTodo(title) {\n\t\toptimisticTodos.value.push(title);\n\t\tawait createTodo(title);\n\t}\n</script>\n\n<ul>\n\t{#each optimisticTodos.value as todo}\n\t\t<li>{todo}</li>\n\t{/each}\n</ul>\n<button onclick={() => addTodo('test')}>Add Todo</button>\n```\n\n## Behavior\n\n- The intial value is derived from the passed function.\n- Does not deeptrack the value by default. If you want to deepTrack the value use `$state.snapshot` like the usage example.\n- To access the value both when getting or setting the value needs to be done using `.value` property regardless of whether the value is primitive or object.\n- On setting the value, only the derived store value is updated, not the original store value.\n- Any changes made will be overwritten when the derivation function runs again.\n\n## Tips\n\n### When to and not to deeptrack\n\n- deepTrack if you will be mutating the parent state used in derivation function. Like the usage example.\n- do not deepTrack if you will always be replacing the parent state used in derivation function. Like setting the parent state from an api call for example.\n\n## Installation\n\n### Download the code directly in your codebase (Recommended)\n\nRun this command where you want to download the file\n```sh\ncurl \"https://raw.githubusercontent.com/vanillacode314/svelte-derived-mutable/refs/heads/main/src/lib/index.svelte.ts\" -o svelte-derived-mutable.svelte.ts\n```\n\n### Install from npm\n\n```sh\nnpm install @vanillacode314/svelte-derived-mutable\nyarn add @vanillacode314/svelte-derived-mutable\npnpm add @vanillacode314/svelte-derived-mutable\nbun add @vanillacode314/svelte-derived-mutable\n```\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3911, 326],
		[3918, 92],
		[3925, 2],
		[3932, 5],
		[3939, 12],
		[3946, 3],
		[3960, 2],
		[3967, 4],
		[3981, 6],
		[3988, 1],
		[3995, 9],
		[4002, 1],
		[4009, 2],
		[4016, 3],
		[4023, 11],
		[4030, 1],
		[4037, 13],
		[4044, 10],
		[4051, 7],
		[4058, 1],
		[4065, 5],
		[4072, 2],
		[4093, 5],
		[4100, 6],
		[4107, 11],
		[4114, 7],
		[4121, 5],
		[4128, 3],
		[4135, 11]
	]
}
