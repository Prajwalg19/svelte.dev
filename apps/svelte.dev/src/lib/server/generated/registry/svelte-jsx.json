{
	"name": "svelte-jsx",
	"description": "Enable JSX syntax for testing Svelte components.",
	"repo_url": "https://github.com/kenoxa/svelte-jsx",
	"authors": ["sastan"],
	"homepage": "https://github.com/kenoxa/svelte-jsx#readme",
	"downloads": 572,
	"updated": "2021-02-07T11:12:20.070Z",
	"tags": ["tooling"],
	"github_stars": 38,
	"typescript": false,
	"version": "2.0.0",
	"svelte_range": "3.x",
	"last_rune_check_version": "2.0.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-jsx",
				"version": "2.0.0",
				"size": 20587
			},
			{
				"name": "@babel/runtime-corejs3",
				"version": "7.27.1",
				"size": 328415
			},
			{
				"name": "core-js-pure",
				"version": "3.42.0",
				"size": 1129517
			},
			{
				"name": "core-js",
				"version": "3.42.0",
				"size": 1272681
			},
			{
				"name": "svelte-fragment-component",
				"version": "1.2.0",
				"size": 86847
			},
			{
				"name": "svelte-hyperscript",
				"version": "1.2.1",
				"size": 197340
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[0, 3],
			[0, 4],
			[0, 5],
			[5, 1],
			[5, 3]
		],
		"circular": []
	},
	"readme": "# svelte-jsx\n\n> [jsx] for [svelte](https://svelte.dev/) to simplify testing\n\n[![License](https://badgen.net/npm/license/svelte-jsx)](https://github.com/kenoxa/svelte-jsx/blob/main/LICENSE)\n[![Latest Release](https://badgen.net/npm/v/svelte-jsx)](https://www.npmjs.com/package/svelte-jsx)\n[![View changelog](https://badgen.net/badge/%E2%80%8B/Explore%20Changelog/green?icon=awesome)](https://changelogs.xyz/svelte-jsx)\n\n[![CI](https://github.com/kenoxa/svelte-jsx/workflows/CI/badge.svg)](https://github.com/kenoxa/svelte-jsx/actions?query=branch%3Amain+workflow%3ACI)\n[![Coverage Status](https://badgen.net/coveralls/c/github/kenoxa/svelte-jsx/main)](https://coveralls.io/github/kenoxa/svelte-jsx?branch=main)\n[![PRs Welcome](https://badgen.net/badge/PRs/welcome/purple)](http://makeapullrequest.com)\n[![Conventional Commits](https://badgen.net/badge/Conventional%20Commits/1.0.0/cyan)](https://conventionalcommits.org)\n\n> If your are not using [babel](https://babeljs.io/) take a look at [svelte-htm].\n\n## What?\n\nWrite svelte components in [jsx].\n\n## Why?\n\nThis is especially useful for [testing svelte components](https://github.com/svelte-society/recipes-mvp/blob/master/testing.md).\n\n## Installation\n\n```sh\nnpm install --save-dev svelte-jsx\n```\n\n### Babel Configuration\n\nThis packages allows to use svelte with [jsx] (see [@babel/plugin-transform-react-jsx](https://babeljs.io/docs/en/babel-plugin-transform-react-jsx)). A [working babel setup](https://babeljs.io/setup) is therefore required.\n\nIn your [babel configuration file](https://babeljs.io/docs/en/configuration) add:\n\n```json\n{\n  \"plugins\": [\n    [\"@babel/plugin-transform-react-jsx\", { \"runtime\": \"automatic\", \"importSource\": \"svelte-jsx\" }]\n  ]\n}\n```\n\nOr if you already use [@babel/preset-react](https://babeljs.io/docs/en/babel-preset-react) make sure `runtime` is set to `automatic`:\n\n```json\n{\n  \"presets\": [[\"@babel/preset-react\", { \"runtime\": \"automatic\", \"importSource\": \"svelte-jsx\" }]]\n}\n```\n\nIf it not an option to use `svelte-jsx` as an `importSource` globally for the project, it is possible to use the [@jsxImportSource](https://babeljs.io/docs/en/babel-plugin-transform-react-jsx#customizing-the-automatic-runtime-import) pragma within a file:\n\n```js\n/** @jsxImportSource svelte-jsx */\n\nrender(\n  <SomeComponent>\n    <SomeChild />\n  </SomeComponent>,\n)\n```\n\n## Usage\n\n> Please note the differences to svelte component syntax [outlined below](#api).\n\n```js\nimport { render, fireEvent } from '@testing-library/svelte'\n\nimport Button from '../src/Button.svelte'\n\ntest('should render', async () => {\n  let clicked = 0\n  const { getByRole } = render(<Button on_click={() => (clicked += 1)}>Click Me!</Button>)\n\n  const button = getByRole('button')\n\n  await fireEvent.click(button)\n\n  expect(clicked).toBe(1)\n})\n```\n\n## API\n\n[jsx] currently does not allow to use `:` in attribute/property names. As a workaround every `:` can be replaced be `_` (for example `bind_value` is converted to `bind:value` for svelte). For event listeners we support the standard jsx naming convention `onEventname` (this is converted to `on:eventname` in svelte) as well.\n\nFor the sake of best compatibility we convert the `className` attribute to `class` for svelte.\n\nWe [aim to support](https://github.com/kenoxa/svelte-hyperscript#feature-set) all svelte features. In some cases this is not possible. For those cases we provided feasible workarounds. See [svelte-hyperscript] for further details.\n\nSome notable differences are:\n\n- Using [stores](https://svelte.dev/docs#svelte_store) to allow reactivity\n\n  ```js\n  import { render } from '@testing-library/svelte'\n  import userEvent from '@testing-library/user-event'\n  import { writable, get } from 'svelte/store'\n\n  test('write into an input', async () => {\n    const text = writable()\n    const { getByRole } = render(<input bind_value={text}>)\n\n    const input = getByRole('textbox')\n\n    await userEvent.type(input, 'some text')\n\n    expect(get(text)).toBe('some text')\n  })\n  ```\n\n- Action properties lack the possibility to pass parameters to the action\n\n  ```js\n  import action from 'some-action-module'\n\n  const Div = <div use_action={(node) => action(node, parameters)}></div>\n  ```\n\n## Related Projects\n\n- [svelte-htm] - [**H**yperscript **T**agged **M**arkup](https://www.npmjs.com/package/htm) for svelte; a jsx-like [syntax](https://www.npmjs.com/package/htm#syntax-like-jsx-but-also-lit) using [Tagged Templates]\n- [svelte-hyperscript] - the core of this implementation\n- [svelte-fragment-component] - a utility component\n- [@testing-library/svelte](https://testing-library.com/docs/svelte-testing-library/intro) - helps to test UI components in a user-centric way\n- [reactjs/rfcs/0000-create-element-changes](https://github.com/reactjs/rfcs/blob/createlement-rfc/text/0000-create-element-changes.md)\n\n## Support\n\nThis project is free and open-source, so if you think this project can help you or anyone else, you may [star it on GitHub](https://github.com/kenoxa/svelte-jsx). Feel free to [open an issue](https://github.com/kenoxa/svelte-jsx/issues) if you have any idea, question, or you've found a bug.\n\n## Contribute\n\nThanks for being willing to contribute!\n\n**Working on your first Pull Request?** You can learn how from this _free_ series [How to Contribute to an Open Source Project on GitHub](https://egghead.io/series/how-to-contribute-to-an-open-source-project-on-github)\n\nWe are following the [Conventional Commits](https://www.conventionalcommits.org) convention.\n\n### Develop\n\n- `npm test`: Run test suite\n- `npm run build`: Generate bundles\n- `npm run lint`: Lints code\n\n## NPM Statistics\n\n[![NPM](https://nodei.co/npm/svelte-jsx.png)](https://nodei.co/npm/svelte-jsx/)\n\n## License\n\n`svelte-jsx` is open source software [licensed as MIT](https://github.com/kenoxa/svelte-jsx/blob/main/LICENSE).\n\n[tagged templates]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Tagged_templates\n[all modern browsers]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Browser_compatibility\n[jsx]: https://reactjs.org/docs/introducing-jsx.html\n[svelte-htm]: https://www.npmjs.com/package/svelte-htm\n[svelte-hyperscript]: https://www.npmjs.com/package/svelte-hyperscript\n[svelte-fragment-component]: https://www.npmjs.com/package/svelte-fragment-component\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3589, 1197],
		[3596, 2172],
		[3603, 1907],
		[3610, 2528],
		[3617, 2173],
		[3624, 2084],
		[3631, 1666],
		[3638, 2286],
		[3645, 700],
		[3652, 1095],
		[3659, 1945],
		[3666, 2742],
		[3673, 2492],
		[3680, 1844],
		[3687, 2085],
		[3694, 1505],
		[3701, 2723],
		[3708, 1834],
		[3715, 2106],
		[3722, 1443],
		[3729, 1793],
		[3736, 1242],
		[3743, 1361],
		[3750, 1042],
		[3757, 1289],
		[3764, 1387],
		[3771, 1061],
		[3778, 998],
		[3785, 2690],
		[3792, 1280],
		[3799, 1861],
		[3806, 1135],
		[3813, 1489],
		[3820, 699],
		[3827, 2012],
		[3834, 2672],
		[3841, 5049],
		[3848, 3807],
		[3855, 2886],
		[3862, 2534],
		[3869, 2931],
		[3876, 1420],
		[3883, 1149],
		[3890, 1328],
		[3897, 1577],
		[3904, 1645],
		[3911, 1757],
		[3918, 1214],
		[3925, 1282],
		[3932, 1273],
		[3939, 1475],
		[3946, 1436],
		[3953, 1071],
		[3960, 786],
		[3967, 1327],
		[3974, 1196],
		[3981, 796],
		[3988, 640],
		[3995, 809],
		[4002, 597],
		[4009, 335],
		[4016, 317],
		[4023, 693],
		[4030, 481],
		[4037, 538],
		[4044, 475],
		[4051, 661],
		[4058, 452],
		[4065, 551],
		[4072, 695],
		[4079, 852],
		[4086, 600],
		[4093, 502],
		[4100, 488],
		[4107, 496],
		[4114, 572],
		[4121, 563],
		[4128, 334]
	]
}
