{
	"name": "explorator-ai",
	"description": "Build AI-powered applications using Svelte and Vercel AI SDK.",
	"repo_url": "https://github.com/exploratortech/ai-sdk",
	"authors": ["1orzero"],
	"homepage": "https://sdk.vercel.ai/docs",
	"downloads": 4,
	"updated": "2024-08-15T06:32:23.446Z",
	"tags": ["integration"],
	"github_stars": 0,
	"typescript": true,
	"version": "3.3.8",
	"svelte_range": "^3.0.0 || ^4.0.0",
	"last_rune_check_version": "3.3.8",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "explorator-ai",
				"version": "3.3.8",
				"size": 1951319
			},
			{
				"name": "@ai-sdk/provider",
				"version": "0.0.19",
				"size": 158559
			},
			{
				"name": "json-schema",
				"version": "0.4.0",
				"size": 26079
			},
			{
				"name": "@ai-sdk/provider-utils",
				"version": "1.0.11",
				"size": 1291940
			},
			{
				"name": "nanoid",
				"version": "3.3.6",
				"size": 21685
			},
			{
				"name": "secure-json-parse",
				"version": "2.7.0",
				"size": 40656
			},
			{
				"name": "eventsource-parser",
				"version": "1.1.2",
				"size": 203599
			},
			{
				"name": "@ai-sdk/react",
				"version": "0.0.43",
				"size": 302569
			},
			{
				"name": "swr",
				"version": "2.2.5",
				"size": 620320
			},
			{
				"name": "client-only",
				"version": "0.0.1",
				"size": 611
			},
			{
				"name": "use-sync-external-store",
				"version": "1.5.0",
				"size": 28186
			},
			{
				"name": "@ai-sdk/ui-utils",
				"version": "0.0.31",
				"size": 4052295
			},
			{
				"name": "zod-to-json-schema",
				"version": "3.22.5",
				"size": 166481
			},
			{
				"name": "@ai-sdk/solid",
				"version": "0.0.34",
				"size": 166746
			},
			{
				"name": "@ai-sdk/svelte",
				"version": "0.0.36",
				"size": 167702
			},
			{
				"name": "sswr",
				"version": "2.1.0",
				"size": 32755
			},
			{
				"name": "swrev",
				"version": "4.0.0",
				"size": 31743
			},
			{
				"name": "@ai-sdk/vue",
				"version": "0.0.35",
				"size": 165414
			},
			{
				"name": "swrv",
				"version": "1.0.4",
				"size": 146908
			},
			{
				"name": "@opentelemetry/api",
				"version": "1.9.0",
				"size": 1218213
			},
			{
				"name": "jsondiffpatch",
				"version": "0.6.0",
				"size": 105714
			},
			{
				"name": "chalk",
				"version": "5.4.1",
				"size": 44242
			},
			{
				"name": "diff-match-patch",
				"version": "1.0.5",
				"size": 97445
			},
			{
				"name": "@types/diff-match-patch",
				"version": "1.0.36",
				"size": 5828
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[0, 3],
			[3, 4],
			[3, 1],
			[3, 5],
			[3, 6],
			[0, 7],
			[7, 8],
			[8, 9],
			[8, 10],
			[7, 11],
			[11, 2],
			[11, 1],
			[11, 5],
			[11, 12],
			[11, 3],
			[7, 3],
			[0, 13],
			[13, 11],
			[13, 3],
			[0, 14],
			[14, 15],
			[15, 16],
			[14, 11],
			[14, 3],
			[0, 11],
			[0, 17],
			[17, 18],
			[17, 11],
			[17, 3],
			[0, 19],
			[0, 6],
			[0, 20],
			[20, 21],
			[20, 22],
			[20, 23],
			[0, 2],
			[0, 4],
			[0, 5],
			[0, 12]
		],
		"circular": []
	},
	"readme": "![hero illustration](./assets/hero.gif)\n\n# Vercel AI SDK\n\nThe [Vercel AI SDK](https://sdk.vercel.ai/docs) is a TypeScript toolkit designed to help you build AI-powered applications using popular frameworks like Next.js, React, Svelte, Vue and runtimes like Node.js.\n\nTo learn more about how to use the Vercel AI SDK, check out our [API Reference](https://sdk.vercel.ai/docs/reference) and [Documentation](https://sdk.vercel.ai/docs).\n\n## Installation\n\nYou will need Node.js 18+ and pnpm installed on your local development machine.\n\n```shell\nnpm install ai\n```\n\n## Usage\n\n### AI SDK Core\n\nThe [AI SDK Core](https://sdk.vercel.ai/docs/ai-sdk-core/overview) module provides a unified API to interact with model providers like [OpenAI](https://sdk.vercel.ai/providers/ai-sdk-providers/openai), [Anthropic](https://sdk.vercel.ai/providers/ai-sdk-providers/anthropic), [Google](https://sdk.vercel.ai/providers/ai-sdk-providers/google-generative-ai), and more.\n\nYou will then install the model provider of your choice.\n\n```shell\nnpm install @ai-sdk/openai\n```\n\n###### @/index.ts (Node.js Runtime)\n\n```ts\nimport { generateText } from 'ai';\nimport { openai } from '@ai-sdk/openai'; // Ensure OPENAI_API_KEY environment variable is set\n\nasync function main() {\n  const { text } = await generateText({\n    model: openai('gpt-4-turbo'),\n    system: 'You are a friendly assistant!',\n    prompt: 'Why is the sky blue?',\n  });\n\n  console.log(text);\n}\n\nmain();\n```\n\n### AI SDK UI\n\nThe [AI SDK UI](https://sdk.vercel.ai/docs/ai-sdk-ui/overview) module provides a set of hooks that help you build chatbots and generative user interfaces. These hooks are framework agnostic, so they can be used in Next.js, React, Svelte, Vue, and SolidJS.\n\n###### @/app/page.tsx (Next.js App Router)\n\n```tsx\n'use client';\n\nimport { useChat } from 'ai/react';\n\nexport default function Page() {\n  const { messages, input, handleSubmit, handleInputChange, isLoading } =\n    useChat();\n\n  return (\n    <div>\n      {messages.map(message => (\n        <div key={message.id}>\n          <div>{message.role}</div>\n          <div>{message.content}</div>\n        </div>\n      ))}\n\n      <form onSubmit={handleSubmit}>\n        <input\n          value={input}\n          placeholder=\"Send a message...\"\n          onChange={handleInputChange}\n          disabled={isLoading}\n        />\n      </form>\n    </div>\n  );\n}\n```\n\n###### @/app/api/chat/route.ts (Next.js App Router)\n\n```ts\nimport { CoreMessage, streamText } from 'ai';\nimport { openai } from '@ai-sdk/openai';\n\nexport async function POST(req: Request) {\n  const { messages }: { messages: CoreMessage[] } = await req.json();\n\n  const result = await streamText({\n    model: openai('gpt-4'),\n    system: 'You are a helpful assistant.',\n    messages,\n  });\n\n  return result.toDataStreamResponse();\n}\n```\n\n### AI SDK RSC\n\nThe [AI SDK RSC](https://sdk.vercel.ai/docs/ai-sdk-rsc/overview) module provides an alternative API that also helps you build chatbots and generative user interfaces for frameworks that support [React Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components) (RSC).\n\nThis API leverages the benefits of [Streaming](https://nextjs.org/docs/app/building-your-application/rendering/server-components#streaming) and [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations) offered by RSC, thus improving the developer experience of managing states between server/client and building generative user interfaces.\n\n###### @/app/actions.tsx (Next.js App Router)\n\n```tsx\nimport { streamUI } from 'ai/rsc';\nimport { z } from 'zod';\n\nasync function submitMessage() {\n  'use server';\n\n  const stream = await streamUI({\n    model: openai('gpt-4-turbo'),\n    messages: [\n      { role: 'system', content: 'You are a friendly bot!' },\n      { role: 'user', content: input },\n    ],\n    text: ({ content, done }) => {\n      return <div>{content}</div>;\n    },\n    tools: {\n      deploy: {\n        description: 'Deploy repository to vercel',\n        parameters: z.object({\n          repositoryName: z\n            .string()\n            .describe('The name of the repository, example: vercel/ai-chatbot'),\n        }),\n        generate: async function* ({ repositoryName }) {\n          yield <div>Cloning repository {repositoryName}...</div>;\n          await new Promise(resolve => setTimeout(resolve, 3000));\n          yield <div>Building repository {repositoryName}...</div>;\n          await new Promise(resolve => setTimeout(resolve, 2000));\n          return <div>{repositoryName} deployed!</div>;\n        },\n      },\n    },\n  });\n\n  return {\n    ui: stream.value,\n  };\n}\n\nexport const AI = createAI({\n  initialAIState: {},\n  initialUIState: {},\n  actions: {\n    submitMessage,\n  },\n});\n```\n\n###### @/app/layout.tsx (Next.js App Router)\n\n```tsx\nimport { ReactNode } from 'react';\nimport { AI } from '@/app/actions';\n\nexport default function Layout({ children }: { children: ReactNode }) {\n  <AI>{children}</AI>;\n}\n```\n\n###### @/app/page.tsx (Next.js App Router)\n\n```tsx\n'use client';\n\nimport { useActions } from 'ai/rsc';\nimport { ReactNode, useState } from 'react';\n\nexport default function Page() {\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState<ReactNode[]>([]);\n  const { submitMessage } = useActions();\n\n  return (\n    <div>\n      <input\n        value={input}\n        onChange={event => {\n          setInput(event.target.value);\n        }}\n      />\n      <button\n        onClick={async () => {\n          const { ui } = await submitMessage(input);\n          setMessages(currentMessages => [...currentMessages, ui]);\n        }}\n      >\n        Submit\n      </button>\n    </div>\n  );\n}\n```\n\n## Templates\n\nWe've built [templates](https://vercel.com/templates?type=ai) that include AI SDK integrations for different use cases, providers, and frameworks. You can use these templates to get started with your AI-powered application.\n\n## Community\n\nThe Vercel AI SDK community can be found on [GitHub Discussions](https://github.com/vercel/ai/discussions) where you can ask questions, voice ideas, and share your projects with other people.\n\n## Contributing\n\nContributions to the Vercel AI SDK are welcome and highly appreciated. However, before you jump right into it, we would like you to review our [Contribution Guidelines](https://github.com/vercel/ai/blob/main/CONTRIBUTING.md) to make sure you have smooth experience contributing to Vercel AI SDK.\n\n## Authors\n\nThis library is created by [Vercel](https://vercel.com) and [Next.js](https://nextjs.org) team members, with contributions from the [Open Source Community](https://github.com/vercel/ai/graphs/contributors).\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3876, 114],
		[3883, 20],
		[3890, 34],
		[3897, 15],
		[3904, 21],
		[3911, 39],
		[3918, 12],
		[3925, 2],
		[3932, 1],
		[3939, 3],
		[3946, 1],
		[3953, 3],
		[3967, 1],
		[3974, 3],
		[3981, 1],
		[4002, 1],
		[4009, 1],
		[4023, 5],
		[4030, 3],
		[4037, 5],
		[4044, 7],
		[4051, 2],
		[4058, 1],
		[4072, 2],
		[4093, 4],
		[4107, 4],
		[4114, 4],
		[4121, 8],
		[4128, 5]
	],
	"esm": true,
	"cjs": true
}
