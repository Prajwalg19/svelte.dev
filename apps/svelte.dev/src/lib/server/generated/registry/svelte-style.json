{
	"name": "svelte-style",
	"description": "Apply styles to Svelte elements using actions.",
	"repo_url": "https://github.com/metonym/svelte-style",
	"authors": ["metonym"],
	"homepage": "https://github.com/metonym/svelte-style",
	"downloads": 6,
	"updated": "2021-10-31T02:31:25.841Z",
	"tags": ["ui"],
	"github_stars": 1,
	"typescript": true,
	"version": "0.1.0",
	"svelte_range": "^3.44.0",
	"last_rune_check_version": "0.1.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-style",
				"version": "0.1.0",
				"size": 6416
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# svelte-style\n\n[![NPM][npm]][npm-url]\n\n> Style utilities as Svelte actions\n\n<!-- REPO_URL -->\n\n`svelte-style` provides style utilities as Svelte actions as an alternative to writing CSS.\n\n---\n\n<!-- TOC -->\n\n## Installation\n\n**Yarn**\n\n```bash\nyarn add -D svelte-style\n```\n\n**NPM**\n\n```bash\nnpm i -D svelte-style\n```\n\n**pnpm**\n\n```bash\npnpm i -D svelte-style\n```\n\n## Usage\n\n### Visually hidden\n\nUse the `visuallyHidden` action to hide content without breaking screen readers.\n\n```svelte\n<script>\n  import { visuallyHidden } from \"svelte-style\";\n</script>\n\n<div use:visuallyHidden>Text</div>\n```\n\nThe action accepts an argument that conditionally toggles the style.\n\n```svelte\n<script>\n  import { visuallyHidden } from \"svelte-style\";\n\n  let toggled = false;\n</script>\n\n<button on:click={() => (toggled = !toggled)}>\n  Toggle <span style=\"color: red\" use:visuallyHidden={toggled}>Text</span>\n</button>\n```\n\n## API\n\n### Style class\n\nCreate your own Svelte action that conditionally applies styles using the `Style` class.\n\n**JavaScript**\n\n```svelte no-eval\n<script>\n  import { Style } from \"svelte-style\";\n\n  const style = \"color: red\";\n\n  const colorRed = (node, enabled) => new Style(node, enabled, style).init();\n</script>\n\n<div use:colorRed>Red text</div>\n```\n\n**TypeScript**\n\nIf your set-up includes TypeScript, use `UseStyleType` to statically type the action.\n\n```ts\nimport { Style } from \"svelte-style\";\nimport { UseStyleType } from \"svelte-style/src/Style\";\n\nconst style = \"color: red\";\n\nconst colorRed: UseStyleType = (node, enabled) => new Style(node, enabled, style).init();\n```\n\n## TypeScript\n\nSvelte version 3.31 or greater is required to use this component with TypeScript.\n\nTypeScript definitions are located in the [types folder](types/).\n\n## Changelog\n\n[CHANGELOG.md](CHANGELOG.md)\n\n## License\n\n[MIT](LICENSE)\n\n[npm]: https://img.shields.io/npm/v/svelte-style.svg?style=for-the-badge&color=%23ff3e00\n[npm-url]: https://npmjs.com/package/svelte-style\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 8],
		[3603, 9],
		[3610, 10],
		[3617, 4],
		[3624, 2],
		[3631, 8],
		[3645, 4],
		[3652, 2],
		[3659, 1],
		[3666, 6],
		[3673, 1],
		[3680, 2],
		[3687, 3],
		[3694, 1],
		[3701, 1],
		[3708, 5],
		[3715, 8],
		[3729, 2],
		[3736, 1],
		[3750, 1],
		[3757, 4],
		[3764, 2],
		[3771, 3],
		[3778, 3],
		[3785, 1],
		[3792, 2],
		[3799, 3],
		[3806, 5],
		[3813, 1],
		[3820, 2],
		[3834, 4],
		[3841, 1],
		[3848, 1],
		[3855, 11],
		[3862, 1],
		[3869, 6],
		[3876, 3],
		[3883, 4],
		[3890, 3],
		[3897, 7],
		[3904, 2],
		[3911, 4],
		[3918, 1],
		[3925, 1],
		[3932, 1],
		[3939, 3],
		[3946, 3],
		[3960, 2],
		[3974, 3],
		[3981, 1],
		[4002, 1],
		[4009, 1],
		[4016, 1],
		[4023, 3],
		[4030, 2],
		[4037, 3],
		[4044, 6],
		[4051, 1],
		[4058, 1],
		[4065, 1],
		[4072, 7],
		[4086, 1],
		[4093, 6],
		[4100, 4],
		[4107, 6],
		[4114, 6],
		[4121, 6],
		[4128, 1],
		[4135, 10]
	],
	"esm": false,
	"cjs": true
}
