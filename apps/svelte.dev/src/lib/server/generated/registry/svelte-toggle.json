{
	"name": "svelte-toggle",
	"description": "Create accessible toggle switch component for Svelte.",
	"repo_url": "https://github.com/metonym/svelte-toggle",
	"authors": ["metonym"],
	"homepage": "https://github.com/metonym/svelte-toggle",
	"downloads": 522,
	"updated": "2024-03-15T20:10:55.160Z",
	"tags": ["ui"],
	"github_stars": 44,
	"typescript": true,
	"version": "4.0.1",
	"svelte_range": "^4.2.12",
	"last_rune_check_version": "4.0.1",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-toggle",
				"version": "4.0.1",
				"size": 12894
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# svelte-toggle\n\n[![NPM][npm]][npm-url]\n\n> Accessible toggle switch component\n\n<!-- REPO_URL -->\n\nThis Svelte component implements accessibility practices for toggle buttons recommended by the [Inclusive Components guide](https://inclusive-components.design/toggle-button/).\n\nTry it in the [Svelte REPL](https://svelte.dev/repl/7eee5c643a684315a4fdfe45964aca61).\n\n---\n\n## Installation\n\n```sh\n# yarn\nyarn add -D svelte-toggle\n\n# npm\nnpm i -D svelte-toggle\n\n# pnpm\npnpm i -D svelte-toggle\n```\n\n## Usage\n\n### Uncontrolled\n\nThe component is toggled by default.\n\n```svelte\n<script>\n  import Toggle from \"svelte-toggle\";\n\n  let isToggled = true;\n</script>\n\n<Toggle on:toggle={(e) => (isToggled = e.detail)} />\n\nToggled? {isToggled}\n```\n\n### Two-way binding\n\nThe `toggled` prop supports two way binding.\n\n```svelte\n<script>\n  import Toggle from \"svelte-toggle\";\n\n  let toggled = false;\n</script>\n\n<Toggle bind:toggled />\n\n<button on:click={() => (toggled = !toggled)}>\n  {toggled ? \"Turn off\" : \"Turn on\"}\n</button>\n```\n\n### Switch descriptors\n\nCustomize the toggle switch descriptors using the `\"on\"` and `\"off\"` props.\n\n```svelte\n<Toggle on=\"On\" off=\"Off\" />\n```\n\nAlternatively, you can override the default slot:\n\n```svelte\n<Toggle let:toggled>\n  <strong>{toggled ? \"Yes\" : \"No\"}</strong>\n</Toggle>\n```\n\n### Small variant\n\nSet `small` to `true` to use the small size variant.\n\n```svelte\n<Toggle small />\n```\n\n### Custom colors\n\nCustomize the switch colors:\n\n- `switchColor` (default: `#fff`)\n- `toggledColor` (default: `#0f62fe`)\n- `untoggledColor` (default: `#8d8d8d`)\n\n```svelte\n<Toggle switchColor=\"#eee\" toggledColor=\"#24a148\" untoggledColor=\"#fa4d56\" />\n```\n\n### Custom label\n\nCustomize the label text through the `label` prop.\n\n```svelte\n<Toggle label=\"Custom label\" />\n```\n\n### Hidden label\n\nSet `hideLabel` to `true` to visually hide the label.\n\n**Note**: You should still provide a `label` value for [accessibility](https://www.w3.org/WAI/tutorials/forms/labels/#hiding-label-text).\n\n```svelte\n<Toggle hideLabel label=\"Custom label\" />\n```\n\n### Disabled\n\nSet `disabled` to `true` to use the disabled state.\n\n```svelte\n<Toggle disabled />\n```\n\n### Fully controlled\n\n`ToggleCore` is an unstyled component that provides the accessibility attributes for the `label` and `button` elements.\n\nUse this component if you want to style the component yourself.\n\n```svelte\n<script>\n  import { ToggleCore } from \"svelte-toggle\";\n\n  let on = false;\n</script>\n\n<ToggleCore toggled={on} let:label let:button>\n  <!-- svelte-ignore a11y-label-has-associated-control -->\n  <label {...label}>Label</label>\n  <button {...button} on:click={() => (on = !on)}>\n    {on ? \"On\" : \"Off\"}\n  </button>\n</ToggleCore>\n```\n\n## API\n\nAPI for the default `Toggle` component.\n\n### Props\n\n| Prop name      | Type      | Default value                            |\n| :------------- | :-------- | :--------------------------------------- |\n| id             | `string`  | `\"toggle\" + Math.random().toString(36)\"` |\n| label          | `string`  | `\"Label\"`                                |\n| hideLabel      | `boolean` | `false`                                  |\n| small          | `boolean` | `false`                                  |\n| toggled        | `boolean` | `true`                                   |\n| disabled       | `boolean` | `false`                                  |\n| on             | `string`  | `undefined`                              |\n| off            | `string`  | `undefined`                              |\n| switchColor    | `string`  | `\"#fff\"`                                 |\n| toggledColor   | `string`  | `\"#0f62fe\"`                              |\n| untoggledColor | `string`  | `\"#8d8d8d\"`                              |\n\n### Dispatched events\n\n- **on:toggle**: fired whenever `toggled` changes\n\n```svelte\n<script>\n  import Toggle from \"svelte-toggle\";\n\n  let events = [];\n</script>\n\n<Toggle on:toggle={(e) => (events = [...events, e.detail])} />\n\non:toggle: {events.join(\", \")}\n```\n\n### Forwarded events\n\n- on:click\n- on:focus\n- on:blur\n\n## Changelog\n\n[CHANGELOG.md](CHANGELOG.md)\n\n## License\n\n[MIT](LICENSE)\n\n[npm]: https://img.shields.io/npm/v/svelte-toggle.svg?color=%23ff3e00&style=for-the-badge\n[npm-url]: https://npmjs.com/package/svelte-toggle\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3596, 591],
		[3603, 655],
		[3610, 840],
		[3617, 924],
		[3624, 669],
		[3631, 529],
		[3638, 556],
		[3645, 279],
		[3652, 446],
		[3659, 593],
		[3666, 559],
		[3673, 534],
		[3680, 693],
		[3687, 587],
		[3694, 649],
		[3701, 367],
		[3708, 468],
		[3715, 690],
		[3722, 661],
		[3729, 565],
		[3736, 546],
		[3743, 643],
		[3750, 558],
		[3757, 482],
		[3764, 507],
		[3771, 606],
		[3778, 430],
		[3785, 496],
		[3792, 655],
		[3799, 643],
		[3806, 465],
		[3813, 512],
		[3820, 583],
		[3827, 668],
		[3834, 455],
		[3841, 451],
		[3848, 373],
		[3855, 474],
		[3862, 508],
		[3869, 352],
		[3876, 232],
		[3883, 283],
		[3890, 460],
		[3897, 606],
		[3904, 281],
		[3911, 479],
		[3918, 380],
		[3925, 279],
		[3932, 281],
		[3939, 415],
		[3946, 534],
		[3953, 454],
		[3960, 304],
		[3967, 440],
		[3974, 414],
		[3981, 417],
		[3988, 422],
		[3995, 483],
		[4002, 454],
		[4009, 140],
		[4016, 157],
		[4023, 443],
		[4030, 557],
		[4037, 751],
		[4044, 553],
		[4051, 488],
		[4058, 632],
		[4065, 511],
		[4072, 502],
		[4079, 608],
		[4086, 505],
		[4093, 452],
		[4100, 438],
		[4107, 629],
		[4114, 522],
		[4121, 555],
		[4128, 403],
		[4135, 389]
	],
	"esm": true,
	"cjs": false
}
