{
	"name": "@markdoc-garden/svelte-renderer",
	"description": "Render Markdoc files in Svelte(kit) applications.",
	"repo_url": "https://github.com/markdoc-garden/svelte-renderer",
	"authors": ["lofty_brambles"],
	"homepage": "https://github.com/markdoc-garden/svelte-renderer",
	"downloads": 5,
	"updated": "2023-07-20T11:11:32.679Z",
	"tags": ["content"],
	"github_stars": 1,
	"typescript": true,
	"version": "1.0.2",
	"svelte_range": "*",
	"kit_range": "^1.20.4",
	"last_rune_check_version": "1.0.2",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@markdoc-garden/svelte-renderer",
				"version": "1.0.2",
				"size": 14077
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "<h1 align=\"center\">@markdoc-garden/svelte-renderer</h1>\n\n> Packaging tool use to transpile between [Markdoc](https://markdoc.dev) for your templating needs and [Svelte](https://svelte.dev) as your base Javascript framework. It allows you to render markdoc directly using a pre-processor or use a svelte component to render generated markdown trees - as and when necessary.\n\n<h2 align=\"center\">Features</h2>\n\n- ✅ Offers a svelte component to render markdoc snippets.\n- ✅ Offers a svelte preprocessor to render markdoc files as svelte files.\n- ✅ Integrates with svelte-kit with ease, along with layouts.\n- ✅ Uses a simple config file to get markdoc configuration and custom svelte commponents.\n- ✅ Provides a plugin API with basic typing to parse [markdoc-rendered, post-parsing AST](https://markdoc.dev/docs/render#parse).\n- ✅ Pipes results from frontmatter and plugins into variables.\n- ✅ First class typescript usage, follows conventions set by svelte-kit documentation.\n\n<h2 align=\"center\">Usage</h2>\n\n### Setup\n\n- `NPM` - `npm install --save-dev @markdoc-garden/svelte-renderer`\n- `YARN` - `yarn add --dev @markdoc-garden/svelte-renderer`\n- `PNPM` - `pnpm add --save-dev @markdoc-garden/svelte-renderer`\n\n### As a preprocessor\n\nThe first step is to add it to your svelte configuration. NOTE, that this preprocessor _must_ be passed before `vitePreprocess` and extensions must include _only_ those files that are markdoc pages.\n\n```js\n// svelte.config.js\nimport adapter from \"@sveltejs/adapter-auto\";\nimport { vitePreprocess } from \"@sveltejs/kit/vite\";\nimport { markdocPreprocess } from \"@markdoc-garden/svelte-renderer\";\n\nconst extensions = [\".md\", \".markdoc\"];\n\n/** @type {import('@sveltejs/kit').Config} */\nconst config = {\n  preprocess: [markdocPreprocess({ extensions }), vitePreprocess()],\n  extensions: [...extensions, \".svelte\"],\n  kit: {\n    adapter: adapter(),\n  },\n};\n\nexport default config;\n```\n\nThe full reference for the passed configuration to the preprocessor is:\n\n```js\nimport { markdocPreprocess } from \"@markdoc-garden/svelte-renderer\";\n\nconst config = {\n  preprocess: [\n    markupPreprocess({\n      // Mandatory. These files are passed as markdoc pages\n      extensions: [\".md\", \".markdoc\"],\n      // Optional, defaults to the given value. Refers an absolute path to your exported config file.\n      markdocConfigPath: \"src/lib/markdoc.config.js\",\n    }),\n  ],\n};\n```\n\nThe second step is to add your own markdoc config file. You can configure the path to it, as given, and it must have three KEY exports.\n\n```js\n// src/lib/markdoc.config.js\nimport type { Plugin } from \"@markdoc-garden/svelte-renderer\";\nimport type { Config } from \"@markdoc/markdoc\";\nimport type { SvelteComponent } from \"svelte\";\n\nexport const plugins: Plugin[] = [];\nexport const config: Config = {};\nexport const components: Record<string, typeof SvelteComponent> = [];\n```\n\n### In a svelte-component\n\nYou can render a markdoc-renderable-tree within a svelte component too! Simply follow the markdoc documentation on [how to generate a Renderable Tree Node](https://markdoc.dev/docs/render) and plug that into props along with an Object of custom svelte components.\n\n```svelte\n<script>\n  import { Renderer } from \"@markdoc-garden/svelte-renderer\";\n  import md from \"@markdoc/markdoc\";\n\n  import Button from \"@components/Button.svelte\";\n  import Notification from \"@components/Notification.svelte\";\n\n  const components = {\n    button: Button,\n    notification: Notification\n  }\n\n  const text = `# Hey, this is some markdoc!`;\n  const ast = md.parse(text);\n  const renderabletree = md.transform(ast);\n</script>\n\n<Renderer content={renderabletree} {components}>\n```\n\n### Piping variable values from frontmatter\n\nAny values declared in the frontmatter of your markdoc file will be available as a variable under the `$frontmatter.[variable]` scope.\n\n```markdown\n---\ntitle: Simbaaaaa!\n---\n\n# {% $frontmatter.title %}\n```\n\n### Layouts\n\nSince it transpiles to simple svelte components, you can add layouts and more! Simply use the standard `+layout` structure of svelte-kit and it _simply_ works!\n\n### Plugins\n\nTBD(ocumented).\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3596, 4],
		[3603, 6],
		[3610, 1],
		[3624, 1],
		[3631, 5],
		[3645, 3],
		[3659, 2],
		[3673, 4],
		[3687, 1],
		[3708, 1],
		[3722, 1],
		[3736, 1],
		[3757, 3],
		[3764, 1],
		[3771, 2],
		[3778, 3],
		[3785, 1],
		[3792, 2],
		[3799, 2],
		[3806, 2],
		[3813, 1],
		[3834, 2],
		[3841, 15],
		[3848, 3],
		[3855, 2],
		[3862, 8],
		[3869, 3],
		[3883, 2],
		[3890, 3],
		[3897, 3],
		[3911, 1],
		[3918, 3],
		[3932, 2],
		[3939, 3],
		[3946, 1],
		[3960, 1],
		[3981, 1],
		[4016, 4],
		[4030, 6],
		[4037, 6],
		[4044, 9],
		[4051, 5],
		[4058, 2],
		[4072, 1],
		[4086, 1],
		[4093, 3],
		[4100, 7],
		[4107, 1],
		[4114, 5],
		[4121, 5],
		[4128, 4]
	]
}
