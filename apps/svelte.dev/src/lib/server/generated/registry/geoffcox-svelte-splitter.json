{
	"name": "@geoffcox/svelte-splitter",
	"description": "Create resizable splitters using CSS grid templates.",
	"repo_url": "",
	"authors": ["geoffcox"],
	"homepage": "https://github.com/GeoffCox/svelte-splitter/blob/main/package/README.md",
	"downloads": 47,
	"updated": "2021-04-29T16:31:18.128Z",
	"tags": ["ui"],
	"typescript": true,
	"version": "1.0.1",
	"svelte_range": "^3.0.0",
	"last_rune_check_version": "1.0.1",
	"github_stars": 0,
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@geoffcox/svelte-splitter",
				"version": "1.0.1",
				"size": 275908
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# @geoffcox/svelte-splitter\n\nA resizable splitter for Svelte that leverages CSS display:grid\n\n[Live Demo](https://geoffcox.github.io/demos/svelte-splitter)\n\n## Features\n- Vertical (left|right) and Horizontal (top/bottom) splitting\n- Provides slots for panes and splitter\n- Set initial split size\n- Minimum pane sizes\n- Sizes can be any CSS unit (e.g. px, %, fr, em, pt, cm, mm)\n- Reset to initial split with double-click\n- Resize with keyboard arrow keys\n- Nested splits with correct resizing\n- Customize the DefaultSplitter size & colors, or render your own splitter.\n\n## Technology\n- Built with Svelte and Typescript\n- Package has no dependencies\n- CSS grid combined with a simple percentage split system provides accurate and responsive resizing.\n\n# Installation\n\n```\nnpm install --save @geoffcox/svelte-splitter\n```\n# Usage\n\nTo create vertical or horizontal splits you only need the `Split` component.\n\n## Vertical Split\nThe default creates a left(50%) | right(50%) split, no minimum pane sizes, and renders the default splitter.\n\n```svelte\n<Split>\n  <div slot=\"primary\">This is the left pane.</div>\n  <div slot=\"secondary\">This is the right pane.<div>\n</Split>\n```\n\n## Horizontal Split\nAdd the `horizontal` attribute to split top/bottom.\n\n```svelte\n<Split horizontal>\n  <div slot=\"primary\">This is the top pane.</div>\n  <div slot=\"secondary\">This is the bottom pane.<div>\n</Split>\n```\n\n## Set the initial split size\nAdd the `initialPrimarySize` property to control where the initial split occurs.\n\n```svelte\n<Split initialPrimarySize='30%'>\n  <div slot=\"primary\">Primary pane</div>\n  <div slot=\"secondary\">Secondary pane<div>\n</Split>\n```\n\nTo support double-clicking to reset back to the initial size, add the `resetOnDoubleClick` property.\n\n```svelte\n<Split initialPrimarySize='30%' resetOnDoubleClick>\n  <div slot=\"primary\">Primary pane</div>\n  <div slot=\"secondary\">Secondary pane<div>\n</Split>\n```\n\n## Nest Splits\nJust nest Split componets to create whatever layout you like.\nHere is an example of a common layout for a main, detail, and output view.\n\n```svelte\n<Split initialPrimarySize='30%'>\n  <div slot=\"primary\">This is the left pane.</div>\n  <svelte:fragment slot=\"secondary\">\n    <Split horizontal initialPrimarySize='60%'>\n      <div slot=\"primary\">This is the right-top pane.</div>\n      <div slot=\"secondary\">This is the right-bottom pane.</div>\n    </Split>\n  </svelte:fragment>\n</Split>\n```\n## Constrain minimum pane sizes\nPrevent either pane from becoming too small using the `minPrimarySize` and `minSecondarySize` properties.\n\n```svelte\n<Split minPrimarySize='250px' minSecondarySize='15%'>\n  <div slot=\"primary\">This pane won't get smaller than 250 pixels.</div>\n  <div slot=\"secondary\">This pane won't get any smaller than 15% of the overall size of the split control./<div>\n</Split>\n```\n\n## Customize the splitter size\nSet the size of the default splitter's hit area with the `splitterSize` property.\nThe hit area is where the user can click to start dragging the splitter.\n\n```svelte\n<Split splitterSize='10px'>\n  <div slot=\"primary\">Primary pane</div>\n  <div slot=\"secondary\">Secondary pane<div>\n</Split>\n```\n## Customize the splitter colors\nChange the colors of the default splitter by adding the `DefaultSplitter` to the splitter slot.\nPass color properties to the default splitter.\n\n```svelte\n<Split defaultSplitterColors={colors}>\n  <div slot=\"primary\">Primary pane</div>\n  <svelte:fragment slot=\"splitter\">\n    <DefaultSplitter color=\"red\" hoverColor=\"#00FF00\" dragColor=\"blue\">\n  </svelte:fragment>\n  <div slot=\"secondary\">Secondary pane<div>\n</Split>\n```\n## Custom render the splitter\nSubstitute a custom splitter by replacing the default splitter.\n\n```svelte\n<Split defaultSplitterColors={colors}>\n  <div slot=\"primary\">Primary pane</div>\n  <svelte:fragment slot=\"splitter\">\n    <MyAwesomeSplitter />\n  </svelte:fragment>\n  <div slot=\"secondary\">Secondary pane<div>\n</Split>\n```\n\nWhen building a customer splitter, leverage the context information from the parent `Split` component.\n\n```ts\nlet splitterContext = getContext<SplitterContextStore>(splitterContextKey);\n\n$: dragging = $splitterContext.dragging;\n$: horizontal = $splitterContext.horizontal;\n};\n```\n\n## Events\nSubscribe to the changed event to get updates.\n\n```ts\nconst onChanged = (event) => {\n    console.log(`percent: ${event.percent}`);\n    console.log(`primarySize: ${event.primarySize}`);\n    console.log(`splitterSize: ${event.splitterSize}`);\n    console.log(`secondarySize: ${event.secondarySize}`);\n    console.log(`dragging: ${event.dragging}`);\n};\n```ts\n\n```svelte\n<Split on:changed={onChanged}>\n    ...\n</Split>\n```\n## Imperative Methods\nGet or set the percentage by calling `getPercent` and `setPercent` on the `Split` handle.\n\n```ts\nlet splitControl;\n\nconst flipSplitPercent = () => {\n    const percent = splitControl.getPercent();\n    splitControl.setPercent(100 - percent);\n}\n```\n\n```svelte\n<Split      \n      bind:this={splitControl}>\n    ...\n</Split>\n```\n\n# Known limitations\n\n- No typescript definitions for Split or DefaultSplitter\n\n# Change History\n\n## 1.0.0 - First project publication\n- Based on the 2.1.0 version of @geoffcox/react-splitter\n- Updated to idomatic Svelte\n\n## 1.0.1 - Updated live demo link",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 181],
		[3596, 176],
		[3603, 283],
		[3610, 259],
		[3617, 465],
		[3624, 321],
		[3631, 215],
		[3638, 126],
		[3645, 110],
		[3652, 127],
		[3659, 234],
		[3666, 203],
		[3673, 191],
		[3680, 173],
		[3687, 143],
		[3694, 127],
		[3701, 286],
		[3708, 215],
		[3715, 165],
		[3722, 345],
		[3729, 182],
		[3736, 130],
		[3743, 131],
		[3750, 214],
		[3757, 180],
		[3764, 137],
		[3771, 115],
		[3778, 184],
		[3785, 134],
		[3792, 164],
		[3799, 159],
		[3806, 130],
		[3813, 150],
		[3820, 200],
		[3827, 178],
		[3834, 138],
		[3841, 145],
		[3848, 253],
		[3855, 168],
		[3862, 119],
		[3869, 109],
		[3876, 119],
		[3883, 132],
		[3890, 153],
		[3897, 89],
		[3904, 119],
		[3911, 109],
		[3918, 296],
		[3925, 107],
		[3932, 155],
		[3939, 99],
		[3946, 153],
		[3953, 161],
		[3960, 298],
		[3967, 171],
		[3974, 140],
		[3981, 199],
		[3988, 217],
		[3995, 137],
		[4002, 175],
		[4009, 43],
		[4016, 70],
		[4023, 165],
		[4030, 137],
		[4037, 235],
		[4044, 133],
		[4051, 128],
		[4058, 131],
		[4065, 132],
		[4072, 75],
		[4079, 148],
		[4086, 87],
		[4093, 97],
		[4100, 74],
		[4107, 77],
		[4114, 47],
		[4121, 77],
		[4128, 77]
	],
	"esm": true,
	"cjs": false
}
