{
	"name": "svelte-reparent",
	"description": "Reparent DOM nodes with ease in Svelte applications.",
	"repo_url": "https://github.com/LeoDog896/svelte-reparent",
	"authors": ["leodog896"],
	"homepage": "https://leodog896.github.io/svelte-reparent",
	"downloads": 5,
	"updated": "2023-09-07T23:39:43.789Z",
	"tags": ["miscellaneous"],
	"github_stars": 16,
	"typescript": true,
	"version": "0.0.1",
	"svelte_range": ">=4.0.0",
	"kit_range": "^1.20.4",
	"last_rune_check_version": "0.0.1",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-reparent",
				"version": "0.0.1",
				"size": 365589
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# [svelte-reparent](https://leodog896.github.io/svelte-reparent)\n\nReparent elements with ease. Svelte non-internal using alternative to [react-reparenting](https://github.com/paol-imi/react-reparenting).\n\n## Example\n\n```svelte\n<script lang=\"ts\">\n\timport { onMount } from 'svelte';\n\timport { Portal, Limbo, teleport } from '$lib';\n\n\tlet component: HTMLElement;\n\n\tfunction send(label: string) {\n\t\treturn () => {\n\t\t\tteleport(component, label);\n\t\t};\n\t}\n\n\tonMount((): void => send('a')());\n</script>\n\n<main>\n\t<Limbo bind:component>\n\t\t<input placeholder=\"Enter unkept state\" />\n\t</Limbo>\n\t<div class=\"container\">\n\t\t<h1>Container A</h1>\n\t\t<Portal key=\"a\" {component} />\n\t\t<button on:click={send('a')}>Move Component Here</button>\n\t</div>\n\t<div class=\"container\">\n\t\t<h1>Container B</h1>\n\t\t<Portal key=\"b\" {component} />\n\t\t<button on:click={send('b')}>Move Component Here</button>\n\t</div>\n</main>\n```\n\n## Advantages\n\n- No need to worry about keeping state in sync between components.\n- No dependencies on internal svelte APIs, unlike React and Vue alternatives.\n- Simple API, with only three exported functions.\n\n## Disadvantages\n\n- Since this library is relatively new, there may be bugs. (Please report them! Every bug report helps!)\n\n## How it works\n\nThis library is split into three main concepts:\n\n- `Limbo`, which serves as the \"owner\" of a component to be teleported.\n- `Portal`, which serves as the \"receiver\" of a component to be teleported, and displays it.\n- Teleportation, which transfers borrowship of a component from one `Portal` to another.\n\nThe `Limbo` component is the \"root\" component of the `Portal` component. There is a global\nregistry, which maps component instances to what portal ID they belong in. When a `Portal`\nis destroyed, it is moved back to `Limbo` and removed from the registry.\n\nIn order to move the DOM around, this library extensively uses `<div style=\"display: contents\">`.\nThe usage of this allows for `svelte-reparent` to _ensure_ that svelte components\nhave a single root element, which is moved around (in the case of `Limbo`), or\nappended to (in the case of `Portal`).\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 1],
		[3596, 3],
		[3603, 9],
		[3610, 3],
		[3617, 4],
		[3624, 1],
		[3631, 7],
		[3638, 18],
		[3645, 8],
		[3652, 6],
		[3659, 11],
		[3666, 11],
		[3673, 15],
		[3680, 14],
		[3687, 4],
		[3694, 4],
		[3701, 2],
		[3708, 2],
		[3715, 1],
		[3722, 1],
		[3729, 1],
		[3736, 2],
		[3743, 2],
		[3750, 1],
		[3757, 3],
		[3764, 1],
		[3771, 1],
		[3778, 4],
		[3785, 2],
		[3792, 6],
		[3799, 5],
		[3806, 18],
		[3813, 1],
		[3820, 1],
		[3827, 3],
		[3834, 3],
		[3841, 6],
		[3848, 7],
		[3855, 8],
		[3862, 3],
		[3869, 6],
		[3876, 2],
		[3883, 4],
		[3890, 13],
		[3897, 6],
		[3904, 2],
		[3911, 3],
		[3918, 2],
		[3925, 1],
		[3932, 3],
		[3939, 3],
		[3946, 1],
		[3953, 4],
		[3960, 2],
		[3967, 1],
		[3974, 2],
		[3981, 2],
		[3988, 5],
		[3995, 1],
		[4002, 5],
		[4009, 1],
		[4016, 1],
		[4023, 3],
		[4030, 9],
		[4037, 12],
		[4044, 8],
		[4051, 3],
		[4058, 1],
		[4065, 2],
		[4072, 1],
		[4079, 1],
		[4086, 1],
		[4093, 2],
		[4100, 4],
		[4107, 2],
		[4114, 5],
		[4121, 7],
		[4128, 2]
	]
}
