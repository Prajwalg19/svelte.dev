{
	"name": "@iguacel/svelte-typeahead",
	"description": "Create accessible, fuzzy search typeahead component for Svelte apps.",
	"repo_url": "https://github.com/metonym/svelte-typeahead",
	"authors": ["iguacel"],
	"homepage": "https://github.com/metonym/svelte-typeahead",
	"downloads": 4,
	"updated": "2023-05-01T07:15:34.339Z",
	"tags": ["ui"],
	"github_stars": 226,
	"typescript": true,
	"version": "4.4.1",
	"svelte_range": "^3.52.0",
	"last_rune_check_version": "4.4.1",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@iguacel/svelte-typeahead",
				"version": "4.4.1",
				"size": 144695
			},
			{
				"name": "@iguacel/fuzzy",
				"version": "0.1.4",
				"size": 13921
			},
			{
				"name": "svelte-search",
				"version": "1.1.0",
				"size": 56413
			}
		],
		"dependencies": [
			[0, 1],
			[0, 2]
		],
		"circular": []
	},
	"readme": "# svelte-typeahead\n\n[![NPM][npm]][npm-url]\n\n> Accessible, fuzzy search typeahead component.\n\n<!-- REPO_URL -->\n\nThis component uses the lightweight [fuzzy](https://github.com/mattyork/fuzzy) library for client-side, fuzzy search and follows [WAI-ARIA guidelines](https://www.w3.org/TR/wai-aria-practices/examples/combobox/aria1.1pattern/listbox-combo.html).\n\nTry it in the [Svelte REPL](https://svelte.dev/repl/a1b828d80de24f7e995b2365782c8d04).\n\n---\n\n## Fork\n\n@iguacel/svelte-typeahead\n\nReplace fuzzy with @iguacel/fuzzy to support diacritics\nMinor css changes\n\n<!-- TOC -->\n\n## Installation\n\n```bash\n# Yarn\nyarn add -D svelte-typeahead\n\n# npm\nnpm i -D svelte-typeahead\n\n# pnpm\npnpm i -D svelte-typeahead\n```\n\n## Usage\n\n### Basic\n\nPass an array of objects to the `data` prop. Use the `extract` prop to specify the value to search on.\n\n```svelte\n<script>\n  import Typeahead from \"svelte-typeahead\";\n\n  const data = [\n    { state: \"California\" },\n    { state: \"North Carolina\" },\n    { state: \"North Dakota\" },\n    { state: \"South Carolina\" },\n    { state: \"South Dakota\" },\n    { state: \"Michigan\" },\n    { state: \"Tennessee\" },\n    { state: \"Nevada\" },\n    { state: \"New Hampshire\" },\n    { state: \"New Jersey\" },\n  ];\n\n  const extract = (item) => item.state;\n</script>\n\n<Typeahead {data} {extract} />\n```\n\n### Custom label\n\n`$$restProps` are forwarded to [svelte-search](https://github.com/metonym/svelte-search).\n\nUse the `label` prop to specify a custom label.\n\n```svelte\n<Typeahead label=\"U.S. States\" {data} {extract} />\n```\n\n### Hidden label\n\nSet `hideLabel` to `true` to visually hide the label.\n\nIt's recommended that you set the `label` – even if hidden – for accessibility.\n\n```svelte\n<Typeahead label=\"U.S. States\" hideLabel {data} {extract} />\n```\n\n### Custom-styled results\n\nThis component uses the [fuzzy](https://github.com/mattyork/fuzzy) library to highlight matching characters with the [mark](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/mark) element.\n\nUse the default slot to render custom results.\n\n```svelte\n<Typeahead {data} {extract} let:result let:index>\n  <strong>{@html result.string}</strong>\n  {index}\n</Typeahead>\n```\n\n### No results\n\nUse the \"no-results\" slot to render a message if the search value does not yield results.\n\n```svelte\n<Typeahead value=\"abcd\" {data} {extract} let:value>\n  <svelte:fragment slot=\"no-results\">\n    No results found for \"{value}\"\n  </svelte:fragment>\n</Typeahead>\n```\n\n### Limit the number of results\n\nUse the `limit` prop to specify the maximum number of results to display. The default is `Infinity`.\n\n```svelte\n<Typeahead limit={2} {data} {extract} />\n```\n\n### Disabled items\n\nDisable items using the `disable` filter. Disabled items are not selectable or navigable by keyboard.\n\nIn the following example, items with a `state` value containing \"Carolina\" are disabled.\n\n```svelte\n<Typeahead\n  {data}\n  value=\"ca\"\n  extract={(item) => item.state}\n  disable={(item) => /Carolina/.test(item.state)}\n/>\n```\n\n### Focus after select\n\nSet `focusAfterSelect` to `true` to re-focus the search input after selecting a result.\n\n```svelte\n<Typeahead focusAfterSelect {data} {extract} />\n```\n\n### Show dropdown on focus\n\nBy default, the dropdown will be shown if the `value` has results.\n\nSet `showDropdownOnFocus` to `true` to only show the dropdown when the search input is focused.\n\n```svelte\n<Typeahead value=\"ca\" showDropdownOnFocus {data} {extract} />\n```\n\n### Show all results on focus\n\nBy default, no results are shown if an empty input (i.e., `value=\"\"`) is focused.\n\nSet `showAllResultsOnFocus` to `true` for all results to be shown when an empty input is focused.\n\n```svelte\n<Typeahead showAllResultsOnFocus {data} {extract} />\n```\n\n### Styling\n\n**Note:** this component is minimally styled by design. You can target the component using the `[data-svelte-typeahead]` selector.\n\n```css\n:global([data-svelte-typeahead]) {\n  margin: 1rem;\n}\n```\n\n## API\n\n### Props\n\n| Name                  | Type                                                                       | Default value     | Description                                                                                                                           |\n| :-------------------- | :------------------------------------------------------------------------- | :---------------- | :------------------------------------------------------------------------------------------------------------------------------------ |\n| value                 | `string`                                                                   | `\"\"`              | Input search value.                                                                                                                   |\n| data                  | `TItem[]`                                                                  | `[]`              | Items to search.                                                                                                                      |\n| extract               | `(TItem) => any`                                                           | `(item) => item`  | Target the value if `TItem` is an object.                                                                                             |\n| disable               | `(TItem) => boolean`                                                       | `(item) => false` | Disabled items are shown in results but are not selectable.                                                                           |\n| filter                | `(TItem) => boolean`                                                       | `(item) => false` | Filtered out items will not be displayed in the results.                                                                              |\n| autoselect            | `boolean`                                                                  | `true`            | Whether to automatically select the first result.                                                                                     |\n| inputAfterSelect      | `\"update\" \\| \"clear\" \\| \"keep\"`                                            | `\"update\"`        | Set to `\"clear\"` to clear the `value` after selecting a result. Set to `\"keep\"` to keep the search field unchanged after a selection. |\n| results               | `FuzzyResult[]`                                                            | `[]`              | Raw fuzzy results from the [fuzzy](https://github.com/mattyork/fuzzy) module                                                          |\n| focusAfterSelect      | `boolean`                                                                  | `false`           | Set to `true` to re-focus the input after selecting a result.                                                                         |\n| showDropdownOnFocus   | `boolean`                                                                  | `false`           | Set to `true` to only show results when the input is focused.                                                                         |\n| showAllResultsOnFocus | `boolean`                                                                  | `false`           | Set to `true` for all results to be shown when an empty input is focused.                                                             |\n| limit                 | `number`                                                                   | `Infinity`        | Specify the maximum number of results to display.                                                                                     |\n| `...$$restProps`      | (forwarded to [`svelte-search`](https://github.com/metonym/svelte-search)) | N/A               | All other props are forwarded to the input element.                                                                                   |\n\n### Dispatched events\n\n- **on:select**: dispatched when selecting a result\n- **on:clear**: dispatched when clearing the input field\n\n```svelte\n<script>\n  import Typeahead from \"svelte-typeahead\";\n\n  let e = [];\n</script>\n\n<Typeahead\n  {data}\n  {extract}\n  on:select={({ detail }) => (e = [...e, { event: \"select\", detail }])}\n  on:clear={() => (e = [...e, { event: \"clear\" }])}\n/>\n\n<pre>{JSON.stringify(e, null, 2)}</pre>\n```\n\n### Forwarded events\n\nThe following events are forwarded to the [svelte-search](https://github.com/metonym/svelte-search) component.\n\n- on:type\n- on:input\n- on:change\n- on:focus\n- on:clear\n- on:blur\n- on:keydown\n\n## TypeScript\n\nSvelte version 3.31 or greater is required to use this component with TypeScript.\n\nTypeScript definitions are located in the [types folder](./types).\n\n## Changelog\n\n[Changelog](CHANGELOG.md)\n\n## License\n\n[MIT](LICENSE)\n\n[npm]: https://img.shields.io/npm/v/svelte-typeahead.svg?color=%23ff3e00&style=for-the-badge\n[npm-url]: https://npmjs.com/package/svelte-typeahead\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 2],
		[3596, 2],
		[3603, 2],
		[3624, 2],
		[3631, 1],
		[3638, 1],
		[3645, 3],
		[3652, 1],
		[3659, 1],
		[3666, 1],
		[3680, 1],
		[3701, 1],
		[3729, 1],
		[3736, 1],
		[3757, 1],
		[3778, 3],
		[3806, 3],
		[3827, 1],
		[3834, 1],
		[3841, 5],
		[3855, 4],
		[3862, 3],
		[3876, 1],
		[3883, 2],
		[3897, 1],
		[3904, 1],
		[3932, 2],
		[3953, 1],
		[3967, 1],
		[3974, 1],
		[3981, 1],
		[4002, 4],
		[4016, 3],
		[4023, 2],
		[4037, 2],
		[4044, 8],
		[4051, 3],
		[4058, 1],
		[4065, 1],
		[4072, 1],
		[4086, 1],
		[4093, 1],
		[4100, 3],
		[4107, 1],
		[4114, 4],
		[4121, 7],
		[4128, 3]
	]
}
