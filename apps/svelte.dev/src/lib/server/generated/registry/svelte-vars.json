{
	"name": "svelte-vars",
	"description": "Repurpose var declarations for reactive variables in Svelte.",
	"repo_url": "",
	"authors": ["emmyarty"],
	"downloads": 3,
	"updated": "2023-05-08T04:54:54.312Z",
	"tags": ["tooling"],
	"typescript": false,
	"version": "0.1.0",
	"svelte_range": "^3.59.0",
	"last_rune_check_version": "0.1.0",
	"github_stars": 0,
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-vars",
				"version": "0.1.0",
				"size": 3060
			},
			{
				"name": "svelte",
				"version": "3.59.2",
				"size": 10624206
			}
		],
		"dependencies": [[0, 1]],
		"circular": []
	},
	"readme": "Eyeballs tripping up over a couple of dollar signs? Do you exclusively use **const** and **let** in your code? Have a play with this.\n\nTo get started, here's an example of what your **svelte.config.js** file might look like when using this plugin in a SvelteKit project:\n\n```js\nimport { svelteVars } from 'svelte-vars'\nexport default {\n\tpreprocess: [ svelteVars(), vitePreprocess() ],\n\tkit: { adapter: adapter() }\n}\n```\n\nAnd within your Svelte components, you can now do the following:\n```jsx\n<script lang=\"ts\">\n    let value = 0;\n    // $: doubled = value * 2;\n    var doubled = value * 2;\n    const increment = () => val = val + 1\n</script>\n\n<button on:click={increment}>{doubled}</button>\n```",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 2],
		[3603, 1],
		[3610, 2],
		[3624, 1],
		[3638, 1],
		[3659, 1],
		[3666, 3],
		[3687, 1],
		[3701, 1],
		[3708, 2],
		[3722, 5],
		[3736, 1],
		[3743, 1],
		[3757, 1],
		[3764, 1],
		[3778, 1],
		[3785, 1],
		[3792, 2],
		[3806, 2],
		[3813, 1],
		[3834, 1],
		[3841, 5],
		[3848, 1],
		[3862, 2],
		[3883, 2],
		[3890, 2],
		[3911, 1],
		[3939, 1],
		[3953, 1],
		[3960, 1],
		[3981, 1],
		[3988, 1],
		[4023, 2],
		[4037, 4],
		[4044, 4],
		[4051, 1],
		[4058, 1],
		[4065, 1],
		[4072, 3],
		[4100, 4],
		[4107, 2],
		[4114, 3],
		[4121, 5],
		[4128, 1],
		[4135, 6]
	]
}
