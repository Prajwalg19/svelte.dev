{
	"name": "svelte-store2",
	"description": "Extend Svelte stores with additional methods.",
	"repo_url": "https://github.com/vkurko/svelte-store2",
	"authors": ["vkurko"],
	"homepage": "https://github.com/vkurko/svelte-store2#readme",
	"downloads": 8,
	"updated": "2023-01-16T10:41:11.476Z",
	"tags": ["miscellaneous"],
	"github_stars": 4,
	"typescript": false,
	"version": "1.0.1",
	"svelte_range": "^3.55.1",
	"last_rune_check_version": "1.0.1",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-store2",
				"version": "1.0.1",
				"size": 4311
			},
			{
				"name": "svelte",
				"version": "3.59.2",
				"size": 10624206
			}
		],
		"dependencies": [[0, 1]],
		"circular": []
	},
	"readme": "# Svelte store2\nSometimes you need to get the value of a store outside of a component or store that you are not subscribed to. Svelte provides a [get()](https://svelte.dev/docs#run-time-svelte-store-get) function for this, but it works by creating a temporary subscription, which may not be what you expect.\n\nStore2 provides `writable2`, `derived2` and `readable2` stores, each with a `get()` method to retrieve the current store value.\n\n## Usage\nInstall the package:\n```bash\nnpm install --save-dev svelte-store2\n```\nThen you can just replace the original Svelte stores with `writable2`, `derived2` or `readable2` and benefit from using the `get()` method:\n```js\nimport {writable2, derived2} from 'svelte-store2';\n\nconst w = writable2(0);\nconst d = derived2(w, $w => $w * 2);\n\nw.get();  // 0\nd.get();  // 0\n\nw.set(2);\nw.get();  // 2\nd.get();  // 4\n```",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 33],
		[3603, 5],
		[3610, 5],
		[3617, 3],
		[3624, 1],
		[3631, 2],
		[3638, 18],
		[3645, 7],
		[3652, 6],
		[3659, 5],
		[3666, 9],
		[3673, 7],
		[3680, 4],
		[3687, 5],
		[3694, 3],
		[3701, 4],
		[3708, 10],
		[3715, 3],
		[3722, 12],
		[3729, 5],
		[3736, 1],
		[3743, 1],
		[3750, 2],
		[3757, 4],
		[3764, 2],
		[3771, 5],
		[3778, 2],
		[3785, 4],
		[3792, 5],
		[3799, 4],
		[3806, 5],
		[3813, 5],
		[3820, 3],
		[3827, 3],
		[3834, 4],
		[3841, 9],
		[3848, 4],
		[3855, 12],
		[3862, 2],
		[3869, 1],
		[3876, 3],
		[3883, 4],
		[3890, 7],
		[3897, 4],
		[3904, 3],
		[3911, 2],
		[3918, 1],
		[3925, 3],
		[3932, 2],
		[3939, 3],
		[3946, 3],
		[3953, 1],
		[3960, 1],
		[3967, 2],
		[3974, 5],
		[3981, 3],
		[3988, 1],
		[3995, 2],
		[4002, 5],
		[4009, 4],
		[4016, 6],
		[4023, 2],
		[4030, 6],
		[4037, 9],
		[4044, 8],
		[4051, 4],
		[4058, 1],
		[4065, 4],
		[4072, 2],
		[4079, 1],
		[4086, 1],
		[4093, 2],
		[4100, 13],
		[4107, 3],
		[4114, 8],
		[4121, 14],
		[4128, 6],
		[4135, 6]
	],
	"esm": true,
	"cjs": false
}
