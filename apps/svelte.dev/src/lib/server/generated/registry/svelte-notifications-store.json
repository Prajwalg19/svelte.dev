{
	"name": "svelte-notifications-store",
	"description": "Manage multiple categorized notifications in Svelte.",
	"repo_url": "",
	"authors": ["sergeantweb"],
	"downloads": 8,
	"updated": "2022-03-06T20:07:51.622Z",
	"tags": ["miscellaneous"],
	"typescript": false,
	"version": "1.0.4",
	"svelte_range": "^3.5.0",
	"last_rune_check_version": "1.0.4",
	"github_stars": 0,
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-notifications-store",
				"version": "1.0.4",
				"size": 12746
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# Svelte notifications store\nThis is a simple notifications store helping to use multiple categorized notifications.\n\nYou can copy/paste the code from `src/index.js` to your project's `stores.js`\n\n## Installation\n`npm i svelte-notifications-store`\n\n## Usage example\n```sveltehtml\n<script>\n    import { notifications } from \"svelte-notifications-store\";\n    \n    // Add a new notification\n    const notification = {\n        type: 'cart',\n        content: 'Notification test'\n    }\n    notifications.add(\n        notification, // Notification to add.\n        true, // We need to add `new` field.\n        5000 // We want to remove `new` field after 5 seconds.\n    )\n</script>\n\n <!-- show notifications -->\n{#if notifications.count('cart')}\n    <ul>\n        {#each $notifications as notification}\n            {#if notification.new}\n                <div class=\"notification\">{notification.content}</div>\n            {/if}\n        {/each}\n    </ul>\n{/if}\n```\n\n# The `notifications` store\n\n## Store methods\n### Subscribe\n`notifications.subscribe()` refer to the svelte store's subscribe method\n\nReturns an array containing your notifications :\n\n```javascript\n$notifications = {\n    // Custom notification type\n    type: 'cart',\n    \n    // This notification is set to `new` using the `add()` method\n    new: true, // It can be manualy set to false if `add()` doesn't trigger a timer\n    \n    // You can use any other parameters in your notifications\n    content: 'Notification test',\n}\n```\n\n### Add\n`notifications.add()` This method add a new notification to the store\n\n```javascript\nimport { notifications } from \"svelte-notifications-store\";\n\n// Add a new notification\nconst notification = {\n    type: 'cart',\n    content: 'Notification test'\n}\nnotifications.add(\n    notification, // Notification to add.\n    true, // We need to add `new` field.\n    5000 // We want to remove `new` field after 5 seconds.\n)\n```\n\n\n### Count\n`notifications.count()` This method count notifications in the store,\nresult can be filtered by `type`\n\n```javascript\n    /* ...Import store and add notification ... */\n\n    // Count notifications\n    const countAll = notifications.count()\n    const count = notifications.count('cart')\n```\n`countAll` returns the total `Number` of notifications\n\n`count` returns the `Number` of notifications that have `type` = `cart`\n\n\n### Remove\n`notifications.remove(key)` This method remove one notification by its array key\n\n```javascript\n    /* ...Import store and add notification ... */\n\n    // Get last notification key (length - 1)\n    const lastNotifId = notifications.count() - 1\n\n    // Remove the notification\n    const countAll = notifications.remove(lastNotifId)\n```\n\n### Remove All notifiations\n`notifications.removeAll()` This method remove all notifications from the store\n\n```javascript\n    /* ...Import store and add notification ... */\n\n    // Remove the notification\n    const countAll = notifications.removeAll()\n```",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 1],
		[3603, 4],
		[3610, 5],
		[3617, 1],
		[3631, 1],
		[3645, 4],
		[3659, 2],
		[3666, 5],
		[3680, 11],
		[3701, 1],
		[3708, 1],
		[3729, 5],
		[3750, 3],
		[3757, 2],
		[3778, 1],
		[3785, 2],
		[3792, 2],
		[3799, 1],
		[3806, 3],
		[3834, 2],
		[3841, 1],
		[3848, 2],
		[3855, 21],
		[3862, 2],
		[3869, 1],
		[3876, 1],
		[3883, 1],
		[3890, 4],
		[3897, 5],
		[3904, 1],
		[3925, 1],
		[3932, 2],
		[3960, 2],
		[3981, 2],
		[4002, 1],
		[4023, 1],
		[4030, 4],
		[4037, 13],
		[4044, 4],
		[4051, 1],
		[4058, 1],
		[4065, 1],
		[4093, 9],
		[4100, 6],
		[4107, 3],
		[4114, 8],
		[4121, 14],
		[4128, 5]
	]
}
