{
	"name": "@storeon/svelte",
	"description": "Connect Storeon state manager with Svelte components.",
	"repo_url": "https://github.com/storeon/svelte",
	"authors": ["ai", "distolma"],
	"homepage": "https://github.com/storeon/svelte#readme",
	"downloads": 9,
	"updated": "2020-06-21T12:40:32.821Z",
	"tags": ["miscellaneous"],
	"github_stars": 56,
	"typescript": true,
	"version": "1.0.0",
	"svelte_range": "^3.20.0",
	"last_rune_check_version": "1.0.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@storeon/svelte",
				"version": "1.0.0",
				"size": 10777
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# Storeon Svelte\n\n[![npm version](https://badge.fury.io/js/%40storeon%2Fsvelte.svg)](https://www.npmjs.com/package/@storeon/svelte)\n[![Build Status](https://travis-ci.org/storeon/svelte.svg?branch=master)](https://travis-ci.org/storeon/svelte)\n\n\n<img src=\"https://storeon.github.io/storeon/logo.svg\" align=\"right\" alt=\"Storeon logo by Anton Lovchikov\" width=\"160\" height=\"142\">\n\n[Svelte] is the smallest JS framework, but even so, it contains many built-in features. One of them is a `svelte/store`. But why we need to use a third-party store? `@storeon/svelte` has several advantages compared with the built-in one.\n\n- **Size**. 179 bytes (+ Storeon itself) instead of 485 bytes (minified and gzipped).\n- **Ecosystem**. Many additional [tools] can be combined with a store.\n- **Speed**. Bind components to the changes in the exact store that you need.\n\n[storeon]: https://github.com/storeon/storeon\n[tools]: https://github.com/storeon/storeon#tools\n[svelte]: https://github.com/sveltejs/svelte\n[size limit]: https://github.com/ai/size-limit\n[demo]: https://codesandbox.io/s/admiring-beaver-edi8m\n[article]: https://evilmartians.com/chronicles/storeon-redux-in-173-bytes\n\n## Install\n```sh\nnpm install -S @storeon/svelte\n```\nor\n```sh\nyarn add @storeon/svelte\n```\n## How to use ([Demo])\n\nCreate store using `storeon` module:\n\n#### `store.js`\n\n```javascript\nimport { createStoreon } from 'storeon'\n\nlet counter = store => {\n  store.on('@init', () => ({ count: 0 }))\n  store.on('inc', ({ count }) => ({ count: count + 1 }))\n}\n\nexport const store = createStoreon([counter])\n```\n\nUsing TypeScript you can pass `State` and `Events` interface to the `createStoreon` function:\n\n#### `store.ts`\n\n```typescript\nimport { StoreonModule, createStoreon } from 'storeon'\n\ninterface State {\n  count: number\n}\n\ninterface Events {\n  'inc': undefined\n  'set': number\n}\n\nlet counter = (store: StoreonModule<State, Events>) => {\n  store.on('@init', () => ({ count: 0 }))\n  store.on('inc', ({ count }) => ({ count: count + 1 }))\n  store.on('set', (_, event) => ({ count: event}))\n};\n\nexport const store = createStoreon<State, Events>([counter])\n```\n\n#### `App.svelte`\n\nProvide store to Svelte Context using `provideStoreon` from `@storeon/svelte`\n\n```html\n<script>\n  import { provideStoreon } from '@storeon/svelte'\n  import { store } from './store'\n  import Counter from './Counter.svelte'\n\n  provideStoreon(store)\n</script>\n\n<Counter />\n```\n\nImport `useStoreon` function from our `@storeon/svelte` module and use it for getting state and dispatching new events:\n\n#### `Child.svelte`\n\n```html\n<script>\n  import { useStoreon } from '@storeon/svelte';\n\n  const { count, dispatch } = useStoreon('count');\n\n  function increment() {\n    dispatch('inc');\n  }\n</script>\n\n<h1>The count is {$count}</h1>\n\n<button on:click={increment}>+</button>\n```\nUsing typescript you can pass `State` and `Events` interfaces to `useStoreon` function to be full type safe\n```html\n<script lang=\"typescript\">\n  import { useStoreon } from '@storeon/svelte';\n  import { State, Events } from './store'\n\n  const { count, dispatch } = useStoreon<State, Events>('count');\n\n  function increment() {\n    dispatch('inc');\n  }\n</script>\n\n<h1>The count is {$count}</h1>\n\n<button on:click={increment}>+</button>\n```\n\n## Usage with [@storeon/router](https://github.com/storeon/router)\nIf you want to use the @storeon/svelte with the `@storeon/router` you should import the `router.createRouter` from `@storeon/router` and add this module to `createStoreon`\n\n#### `store.js`\n```js\nimport { createStoreon } from 'storeon'\nimport { createRouter } from '@storeon/router';\n\nconst store = createStoreon([\n  createRouter([\n    ['/', () => ({ page: 'home' })],\n    ['/blog', () => ({ page: 'blog' })],\n  ])\n])\n```\n\nAnd use it like:\n#### `App.svelte`\n```html\n<script>\n  import { provideStoreon } from '@storeon/svelte'\n  import { store } from './store'\n  import Counter from './Child.svelte'\n\n  provideStoreon(store)\n</script>\n\n<Counter />\n```\n#### `Child.svelte`\n```html\n<script>\n  import { useStoreon } from '@storeon/svelte';\n  import router from '@storeon/router'\n\n  const { [router.key]: route } = useStoreon(router.key)\n</script>\n\nYou can access the router like default svelte store via $:\n{$route.match.page}\n```\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3589, 2],
		[3596, 2],
		[3603, 16],
		[3610, 3],
		[3617, 8],
		[3631, 1],
		[3645, 18],
		[3652, 2],
		[3659, 5],
		[3666, 17],
		[3680, 2],
		[3687, 6],
		[3694, 1],
		[3701, 3],
		[3708, 3],
		[3715, 3],
		[3722, 1],
		[3729, 1],
		[3743, 2],
		[3750, 1],
		[3757, 6],
		[3764, 16],
		[3771, 1],
		[3778, 2],
		[3785, 2],
		[3792, 3],
		[3799, 2],
		[3806, 5],
		[3813, 1],
		[3820, 9],
		[3827, 2],
		[3834, 3],
		[3841, 1],
		[3848, 1],
		[3855, 1],
		[3862, 85],
		[3869, 1],
		[3876, 5],
		[3883, 7],
		[3890, 7],
		[3897, 19],
		[3904, 28],
		[3911, 1],
		[3918, 24],
		[3925, 30],
		[3932, 3],
		[3939, 7],
		[3946, 12],
		[3953, 22],
		[3960, 28],
		[3967, 28],
		[3974, 2],
		[3981, 18],
		[3988, 14],
		[3995, 1],
		[4016, 3],
		[4023, 20],
		[4037, 18],
		[4044, 12],
		[4051, 3],
		[4058, 2],
		[4065, 1],
		[4072, 2],
		[4086, 2],
		[4093, 33],
		[4100, 8],
		[4107, 3],
		[4114, 9],
		[4121, 21],
		[4128, 3]
	]
}
