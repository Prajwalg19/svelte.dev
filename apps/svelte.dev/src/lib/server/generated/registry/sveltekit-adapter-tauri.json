{
	"name": "sveltekit-adapter-tauri",
	"description": "SvelteKit adapter for Tauri with SSR support.",
	"repo_url": "https://github.com/mudiageo/sveltekit-adapter-tauri",
	"authors": ["mudiageo"],
	"homepage": "https://github.com/mudiageo/sveltekit-adapter-tauri#readme",
	"downloads": 4,
	"updated": "2024-10-31T13:46:52.016Z",
	"tags": ["adapter"],
	"github_stars": 1,
	"typescript": true,
	"version": "0.1.5",
	"svelte_range": "^5.0.0",
	"kit_range": "^2.0.0",
	"last_rune_check_version": "0.1.5",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "sveltekit-adapter-tauri",
				"version": "0.1.5",
				"size": 17815
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# SvelteKit Adapter Tauri\n\n⚠️ **Experimental Status**: This adapter is currently in early experimental stage. API and functionality may change significantly between versions. Use in production at your own risk.\n\n## Quick Start\n\n```bash\nnpm install --save-dev sveltekit-adapter-tauri\n```\n\n```javascript\n// svelte.config.js\nimport adapter from 'sveltekit-adapter-tauri';\n\n/** @type {import('@sveltejs/kit').Config} */\nexport default {\n  kit: {\n    adapter: adapter({\n      mode: 'ssr' // default mode\n    })\n  }\n};\n```\n\n## Features\n\n- 🔄 SSR Support: Server-side rendering with Tauri\n- 🌐 SPA Mode: Single-page application mode\n- 📄 Static Mode: Static site generation\n- 🔌 Server Mode: Full server capabilities through Tauri IPC\n- ⚡ Fast Development: Quick development cycle with HMR\n- 🔒 Secure: No need to expose server ports\n\n## Modes\n\n### SSR Mode (Default)\nServer-side rendering with client-side hydration. Best for applications requiring SEO and initial fast page loads.\n\n```javascript\nadapter({\n  mode: 'ssr'\n})\n```\n\n### SPA Mode\nSingle-page application mode. Best for applications with rich client-side interactions.\n\n```javascript\nadapter({\n  mode: 'spa'\n})\n```\n\n### Static Mode\nPre-renders all pages at build time. Best for content-focused sites.\n\n```javascript\nadapter({\n  mode: 'static'\n})\n```\n\n### Server Mode\nEnables server-side functionality through Tauri IPC. Best for applications requiring backend functionality.\n\n```javascript\nadapter({\n  mode: 'server'\n})\n```\n\n## Configuration Options\n\n| Option | Type | Default | Description |\n|--------|------|---------|-------------|\n| mode | 'ssr' \\| 'spa' \\| 'static' \\| 'server' | 'ssr' | Application mode |\n| out | string | 'build' | Output directory |\n| precompress | boolean | false | Enable Brotli/Gzip precompression |\n| envPrefix | string | '' | Environment variable prefix |\n| serverPath | string | 'src-tauri/src/server.rs' | Server bindings path |\n\n## Project Structure\n\n```\nmy-tauri-app/\n├── src/\n│   └── routes/\n├── src-tauri/\n│   ├── src/\n│   │   └── main.rs\n│   └── tauri.conf.json\n├── static/\n├── svelte.config.js\n├── package.json\n└── vite.config.js\n```\n\n## Development Workflow\n\n1. Initialize your project:\n```bash\nnpx sv create my-tauri-app\ncd my-tauri-app\n```\n\n2. Add Tauri:\n```bash\nnpm install --save-dev @tauri-apps/cli\nnpm run tauri init\n```\n\n3. Install the adapter:\n```bash\nnpm install --save-dev sveltekit-adapter-tauri\n```\n\n4. Configure svelte.config.js as shown above\n\n5. Development:\n```bash\nnpm run tauri dev\n```\n\n6. Build:\n```bash\nnpm run tauri build\n```\n\n## Server Mode Setup\n\nWhen using server mode, you'll need to set up Tauri IPC handlers:\n\n```rust\n// src-tauri/src/main.rs\nuse tauri::command;\n\n#[command]\nasync fn handle_server_request(request: ServerRequest) -> Result<ServerResponse, String> {\n  // Handle server requests\n}\n\nfn main() {\n  tauri::Builder::default()\n    .invoke_handler(tauri::generate_handler![handle_server_request])\n    .run(tauri::generate_context!())\n    .expect(\"error while running tauri application\");\n}\n```\n\n## TypeScript Support\n\nThe adapter includes TypeScript definitions. No additional setup required.\n\n## Known Limitations\n\n- Hot module replacement (HMR) may be unreliable in server mode\n- Some SvelteKit features may not work as expected in server mode\n- Static mode does not support dynamic routes\n- Server-side environment variables require special handling\n\n## Contributing\n\nContributions are welcome! Please read our [Contributing Guide](CONTRIBUTING.md) first.\n\n## License\n\nMIT\n\n\n\n## what it does\n\nWe're excited to announce sveltekit-adapter-tauri, an experimental adapter that brings the power of SvelteKit to Tauri applications. This adapter enables developers to build desktop applications using SvelteKit's powerful features while leveraging Tauri's secure, lightweight runtime.\n\n## Why This Adapter?\n\nThe desktop application landscape is evolving. While Electron has been the go-to solution, Tauri offers a more lightweight, secure alternative. However, integrating modern web frameworks like SvelteKit with Tauri hasn't been straightforward(espefially when using server side rendering) —until now.\n\n## Key Features\n\n1. **Multiple Modes**: Choose between SSR, SPA, static, or server modes based on your needs.\n2. **Seamless Integration**: Works with existing SvelteKit projects.\n3. **Security First**: No exposed ports in production.\n4. **Developer Experience**: Maintains SvelteKit's excellent DX.\n\n## Looking Forward\n\nThis is just the beginning. We're working on:\n- Enhanced server capabilities\n- Better development tools\n- Performance optimizations\n- Expanded documentation\n\nTry it out and let me know what you think!\n\n# Our Roadmap\n\n## Current Status: Experimental (v0.1.x)\n\nThis roadmap outlines the development path from experimental to production-ready status.\n\n## Phase 1: Foundation (v0.1.x - v0.3.x)\nCurrent focus: Core functionality and stability\n\n### v0.1.x (Current)\n- ✅ Basic adapter implementation\n- ✅ SSR support (basic)\n- ✅ Static file serving\n- ✅ Basic documentation\n- ✅ Initial test suite\n\n### v0.2.x (Q4 2024)\n- 🔄 Enhanced error handling\n- 🔄 Improved TypeScript support\n- 🔄 Basic hot module replacement (HMR)\n- 🔄 Development mode improvements\n- 🔄 Core stabilization\n- 🔄 Environment variables handling\n- 🔄 Basic CI/CD pipeline\n\n### v0.3.x (Q1 2025)\n- 📋 Full server mode implementation\n- 📋 Tauri IPC optimization\n- 📋 Enhanced build process\n- 📋 Development tools\n- 📋 Example applications\n- 📋 Enhanced testing framework\n\n## Phase 2: Enhancement (v0.4.x - v0.6.x)\nFocus: Feature completeness and developer experience\n\n### v0.4.x (Q2 2025)\n- 📋 Advanced SSR features\n- 📋 Improved routing handling\n- 📋 Asset optimization\n- 📋 Development server enhancements\n- 📋 Plugin system foundation\n- 📋 Performance monitoring tools\n\n### v0.5.x (Q2 2025)\n- 📋 Advanced server features\n  - WebSocket support\n  - Server-sent events\n  - File upload handling\n- 📋 Custom middleware support\n- 📋 Enhanced security features\n- 📋 Development mode debugging tools\n- 📋 Configuration presets\n\n### v0.6.x (Q2 2025)\n- 📋 Advanced build optimizations\n- 📋 Custom server adapters\n- 📋 Enhanced error boundaries\n- 📋 Development mode UI\n- 📋 Auto-configuration features\n- 📋 Migration tools\n\n## Phase 3: Stabilization (v0.7.x - v0.9.x)\nFocus: Production readiness and ecosystem\n\n### v0.7.x (Q3 2025)\n- 📋 Production optimizations\n  - Build size optimization\n  - Load time improvements\n  - Memory usage optimization\n- 📋 Advanced caching strategies\n- 📋 Deployment guides\n- 📋 Production monitoring tools\n\n### v0.8.x (Q4 2025)\n- 📋 Enterprise features\n  - Advanced security options\n  - Custom protocols\n  - Multi-window support\n- 📋 Performance profiling tools\n- 📋 Advanced debugging features\n- 📋 Production testing tools\n\n### v0.9.x (Q4 2025)\n- 📋 Final stabilization\n- 📋 Complete documentation\n- 📋 Migration guides\n- 📋 Production case studies\n- 📋 Performance benchmarks\n- 📋 Security audits\n\n## Phase 4: Production Release (v1.0.0)\nTarget: Q1 2026\n\n### v1.0.0\n- 📋 Production-ready release\n- 📋 Complete feature set\n- 📋 Comprehensive documentation\n- 📋 Full test coverage\n- 📋 Production examples\n- 📋 Enterprise support readiness\n\n## Future Considerations (Post v1.0.0)\n\n### Performance\n- Advanced build optimizations\n- Custom compilation targets\n- Enhanced caching strategies\n\n### Developer Experience\n- Visual configuration tools\n- Enhanced debugging capabilities\n- Advanced development tools\n\n### Enterprise Features\n- Custom protocol handling\n- Advanced security options\n- Enterprise deployment tools\n\n### Ecosystem\n- Plugin system\n- Third-party integrations\n- Community templates\n\n## Contributing\n\nWe welcome contributions at all stages of development. Priority areas:\n\n1. Core Functionality\n   - Bug fixes\n   - Performance improvements\n   - Test coverage\n\n2. Documentation\n   - Usage examples\n   - Best practices\n   - Troubleshooting guides\n\n3. Tools and Utilities\n   - Development tools\n   - Testing utilities\n   - Configuration helpers\n\n## Feature Requests\n\nFeature requests should align with our roadmap phases and focus on:\n1. Stability and reliability\n2. Developer experience\n3. Performance optimization\n4. Production readiness\n\nSubmit feature requests through GitHub issues with the `enhancement` label.\n\n## Version Support\n\n- Development versions (0.x.x): 3 months\n- Production versions (1.x.x): 12 months\n- LTS versions: TBD post-1.0.0\n\n## Timeline Notes\n\n- Dates are tentative and subject to change\n- Features may be moved between versions based on community feedback\n- Security updates take priority over feature development\n- Breaking changes will be clearly documented\n- Beta testing periods will precede major releases\n\n## Success Metrics\n\nWe'll measure success through:\n1. Adoption metrics\n2. Performance benchmarks\n3. Community feedback\n4. Production deployments\n5. Testing coverage\n6. Documentation completeness\n\n## Get Involved\n\n- GitHub Discussions: Technical discussions and feature requests\n- Issue Tracker: Bug reports and specific issues\n- Pull Requests: Code contributions\n\n## Tracking Progress\n\nTrack our progress:\n- GitHub Project Board\n- Milestone tracking\n- Regular releases\n- Development blog (coming soon)\n\nLegend:\n- ✅ Completed\n- 🔄 In Progress\n- 📋 Planned\n\n\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3953, 435],
		[3960, 23],
		[3967, 3],
		[3974, 1],
		[3981, 4],
		[3988, 6],
		[3995, 8],
		[4002, 5],
		[4009, 1],
		[4016, 17],
		[4023, 4],
		[4030, 10],
		[4037, 10],
		[4044, 22],
		[4051, 7],
		[4065, 1],
		[4079, 3],
		[4086, 3],
		[4100, 7],
		[4107, 15],
		[4114, 4],
		[4121, 11],
		[4128, 6],
		[4135, 9]
	],
	"esm": true,
	"cjs": false
}
