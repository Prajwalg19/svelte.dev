{
	"name": "@rodneylab/sveltekit-components",
	"description": "Provide handy components for SvelteKit sites.",
	"repo_url": "https://github.com/rodneylab/sveltekit-components",
	"authors": ["rodneylab"],
	"homepage": "https://github.com/rodneylab/sveltekit-components#readme",
	"downloads": 25,
	"updated": "2024-12-04T10:06:54.921Z",
	"tags": ["ui"],
	"github_stars": 59,
	"typescript": true,
	"version": "3.0.2",
	"svelte_range": ">=3 <6",
	"kit_range": "^2.5.6",
	"last_rune_check_version": "3.0.2",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@rodneylab/sveltekit-components",
				"version": "3.0.2",
				"size": 20827
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "<img src=\"https://github.com/rodneylab/sveltekit-components/raw/main/images/rodneylab-github-sveltekit-components.png\" alt=\"Rodney Lab sveltekit-components Github banner\">\n\n<p align=\"center\">\n  <a aria-label=\"Open Rodney Lab site\" href=\"https://rodneylab.com\" rel=\"nofollow noopener noreferrer\">\n    <img alt=\"Rodney Lab logo\" src=\"https://rodneylab.com/assets/icon.png\" width=\"60\" />\n  </a>\n</p>\n<h1 align=\"center\">\n  Sveltekit Components\n</h1>\n\n# sveltekit-components\n\n[![Open in StackBlitz](https://developer.stackblitz.com/img/open_in_stackblitz.svg)](https://stackblitz.com/github/rodneylab/sveltekit-components)\n\nLibrary of TypeScript friendly SvelteKit components for adding functionality to your SvelteKit apps.\n\n## Setup\n\nTo install the package run\n\n```shell\npnpm add -D @rodneylab/sveltekit-components @rodneylab/sveltekit-map-component\npnpm add --save-peer leaflet\n```\n\n## Components\n\n### Form Fields\n\nAdd accessible text, email and password inputs to your SvelteKit site forms. See <a href=\"https://github.com/rodneylab/sveltekit-components/blob/main/src/routes/form.svelte\">full SvelteKit form examples</a> or get started with extracts below:\n\n```svelte\n<script lang=\"ts\">\n\timport {\n\t\tEmailInputField,\n\t\tPasswordInputField,\n\t\tTextArea,\n\t\tTextInputField,\n\t} from '@rodneylab/sveltekit-components';\n</script>\n\n<form on:submit|preventDefault={handleSubmit}>\n\t<TextInputField\n\t\tvalue={name}\n\t\tid=\"form-name\"\n\t\tplaceholder=\"Blake Jones\"\n\t\ttitle=\"Name\"\n\t\terror={errors?.name ?? null}\n\t\ton:update={(event) => {\n\t\t\tname = event.detail;\n\t\t}}\n\t\tstyle=\"padding-bottom:1rem\"\n\t/>\n\t<EmailInputField\n\t\tvalue={email}\n\t\tid=\"form-email\"\n\t\tplaceholder=\"blake@example.com\"\n\t\ttitle=\"Email\"\n\t\terror={errors?.email ?? null}\n\t\ton:update={(event) => {\n\t\t\temail = event.detail;\n\t\t}}\n\t\tstyle=\"padding-bottom:1rem\"\n\t/>\n\t<TextArea\n\t\tvalue={message}\n\t\tid=\"form-message\"\n\t\tplaceholder=\"Enter your message here\"\n\t\ttitle=\"Message\"\n\t\terror={errors?.message ?? null}\n\t\ton:update={(event) => {\n\t\t\tmessage = event.detail;\n\t\t}}\n\t\tstyle=\"padding-bottom:1rem\"\n\t/>\n\t<button type=\"submit\" disabled={submitting}>Submit form</button>\n</form>\n\n<form on:submit|preventDefault={handleSubmit}>\n\t<EmailInputField\n\t\tvalue={email}\n\t\tid=\"login-email\"\n\t\tplaceholder=\"blake@example.com\"\n\t\ttitle=\"Email\"\n\t\terror={errors?.email ?? null}\n\t\ton:update={(event) => {\n\t\t\temail = event.detail;\n\t\t}}\n\t\tstyle=\"padding-bottom:1rem\"\n\t/>\n\t<PasswordInputField\n\t\tvalue={password}\n\t\tid=\"login-password\"\n\t\tplaceholder=\"P@$sw0rD\"\n\t\ttitle=\"Password\"\n\t\terror={errors?.password ?? null}\n\t\ton:update={(event) => {\n\t\t\tpassword = event.detail;\n\t\t}}\n\t\tstyle=\"padding-bottom:1rem;border-style:none\"\n\t/>\n\t<button type=\"submit\" disabled={submitting}>Submit form</button>\n</form>\n```\n\n### Image\n\nResponsive image component with lazy loading support. Requires the vanilla-lazyload package for lazy loading and vite-imagetools for responsive image support:\n\n```shell\npnpm install -D vanilla-lazyload vite-imagetools\n```\n\nYou will also need to update `svelte.config.js` configuration to use vite-imagetools:\n\n```javascript\n/** @type {import('@sveltejs/kit').Config} */\nimport { imagetools } from 'vite-imagetools';\n...\n\nconst config = {\n  kit: {\n    // hydrate the <div id=\"svelte\"> element in src/app.html\n    target: '#svelte',\n    vite: {\n      plugins: [imagetools()],\n    },\n  },\n};\n\nexport default config;\n```\n\nFor lazyloading, load the vanilla-lazyload script into the document in a layout component (e.g. `src/routes/__layout.svelte`):\n\n```svelte\n  import lazyload from 'vanilla-lazyload';\n  import { browser } from '$app/environment';\n\n  if (browser && !document.lazyloadInstance) {\n    document.lazyloadInstance = new lazyload();\n  }\n```\n\nThen use the `Image` component on a page:\n\n```svelte\n<script>\n\timport { onMount } from 'svelte';\n\timport { browser } from '$app/environment';\n\timport { Image } from '@rodneylab/sveltekit-components';\n\n\timport meta from '$lib/assets/your-image.jpg?w=768&metadata';\n\timport srcsetJpeg from '$lib/assets/your-image.jpg?w=1536;1280;768;640&jpeg&srcset';\n\timport srcsetWebp from '$lib/assets/your-image.jpg?w=1536;1280;768;640&webp&srcset';\n\n\texport let imageData;\n\n\tonMount(() => {\n\t\tif (browser) {\n\t\t\tdocument.lazyloadInstance.update();\n\t\t}\n\t});\n\n\tconst { width, height, src } = meta;\n\tconst sources = [\n\t\t{ srcset: srcsetWebp, type: 'image/webp' },\n\t\t{ srcset: srcsetJpeg, type: 'image/jpeg' },\n\t];\n\n\tconst sizes = '(max-width: 672px) calc(100vw - 32px), 672px';\n</script>\n\n<Image {alt} {width} {height} {src} {sources} {placeholder} {sizes} style={'border-radius:12px'} />\n```\n\nThe code in `onMount` only needs to be called once for each page, so if, for example, you have component A, B and C all containing an image and included in page Z, add the `onMount` code only to page Z and add the `Image` component (without `onMount` code) to `A.svelte`, `B.svelte` and `C.svelte`.\n\nIf you want to load the image eagerly use the `loading` prop to specify this:\n\n```svelte\n<Image {alt} {width} loading=\"eager\" {height} {src} {sources} {placeholder} {sizes} />\n```\n\nBest practise is to load the largest contentful paint above the fold eagerly. Typically this means eager loading for banner images.\n\n#### Props\n\n<dl>\n<dt><code>alt: string</code></dt><dd>Text describing the image for screen reader users.</dd>\n<dt><code>width: number</code></dt><dd>Nominal image width, used to help reduced cumulative layout shift.</dd>\n<dt><code>height: number</code></dt><dd>Nominal image height, used to help reduced cumulative layout shift.</dd>\n<dt><code>src: string</code></dt><dd>Image source. This is the fallback for older browsers.</dd>\n<dt><code>sources: { srcset: string; type: string }[]</code></dt><dd>Array of source and types for responsive images.</dd>\n<dt><code>placeholder: string</code></dt><dd>Can be a Base64 encoded, low resolution placeholder which is displayed while the full resolution image is loading.</dd>\n<dt><code>sizes: string</code></dt><dd>Media query like string which helps the browser choose the right image size.</dd>\n<dt><code>loading: string</code></dt><dd>Can be <code>eager</code> or <code>lazy</code>. Default is <code>lazy</code>.</dd>\n</dl>\n\nSee <a aria-label=\"Open post on SvelteKit image plugin\" href=\"https://rodneylab.com/sveltekit-image-plugin/\">article on SvelteKit images which provides much more background</a> on what these props are and how you might update them.\n\n### Map\n\nAdd a map to your SvelteKit site using <a aria-label=\"Learn more about Map box\" href=\"https://www.mapbox.com/\">Mapbox</a> with <a aria-label=\"Learn more about Open street map\" href=\"https://www.openstreetmap.org/#map=6/54.910/-3.432\">OpenStreetMap</a> and <a aria-label=\"Learn about leaflet j s\" href=\"https://leafletjs.com/\n\">LeafletJS</a>. Requires a Mapbox access token, just add it your to the `.env` file in your project:\n\n```plaintext\nPUBLIC_MAPBOX_ACCESS_TOKEN=your.token\n```\n\nAdd the component to a `.svelte` file in your project:\n\n```svelte\n<script>\n\timport { Map } from '@rodneylab/sveltekit-map-component';\n\tconst latitude = 51.50162;\n\tconst longitude = -0.14115;\n\tconst zoom = 16;\n\tconst location = { latitude, longitude };\n</script>\n\n<Map\n\tid=\"my-map\"\n\t{location}\n\t{zoom}\n\timportance=\"high\"\n\tmarkerMarkup=\"<p>We are <strong>here</strong>!</p>\"\n/>\n```\n\n## Further Info\n\nTo create your own SvelteKit component library see the video on <a aria-label=\"Learn how to create a Svelte Kit Component library\" href=\"https://rodneylab.com/create-sveltekit-component-library/\">creating a SvelteKit component library</a>. Drop a comment on that page if you have a question.\n\nFeel free to jump into the [Rodney Lab matrix chat room](https://matrix.to/#/%23rodney:matrix.org).\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 55],
		[3596, 84],
		[3603, 75],
		[3610, 62],
		[3617, 73],
		[3624, 34],
		[3631, 28],
		[3638, 44],
		[3645, 37],
		[3652, 41],
		[3659, 92],
		[3666, 116],
		[3673, 68],
		[3680, 56],
		[3687, 20],
		[3694, 12],
		[3701, 12],
		[3708, 22],
		[3715, 16],
		[3722, 40],
		[3729, 20],
		[3736, 8],
		[3743, 12],
		[3750, 20],
		[3757, 106],
		[3764, 17],
		[3771, 46],
		[3778, 15],
		[3785, 11],
		[3792, 1],
		[3799, 4],
		[3806, 13],
		[3813, 6],
		[3820, 15],
		[3827, 7],
		[3834, 6],
		[3841, 56],
		[3848, 3],
		[3855, 126],
		[3862, 42],
		[3869, 2],
		[3876, 13],
		[3883, 22],
		[3890, 4],
		[3897, 20],
		[3904, 53],
		[3911, 8],
		[3918, 17],
		[3925, 4],
		[3932, 44],
		[3939, 16],
		[3946, 6],
		[3953, 11],
		[3960, 5],
		[3967, 14],
		[3974, 11],
		[3981, 6],
		[3988, 116],
		[3995, 21],
		[4002, 21],
		[4009, 25],
		[4016, 27],
		[4023, 52],
		[4030, 11],
		[4037, 68],
		[4044, 58],
		[4051, 22],
		[4058, 9],
		[4065, 1],
		[4072, 6],
		[4079, 56],
		[4086, 17],
		[4093, 80],
		[4100, 43],
		[4107, 85],
		[4114, 25],
		[4121, 23],
		[4128, 15]
	],
	"esm": true,
	"cjs": false
}
