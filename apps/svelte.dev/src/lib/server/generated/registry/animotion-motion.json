{
	"name": "@animotion/motion",
	"description": "Animate values over time in Svelte applications.",
	"repo_url": "https://github.com/animotionjs/motion",
	"authors": ["mattcroat"],
	"homepage": "https://animotion.pages.dev",
	"downloads": 19,
	"updated": "2025-01-22T10:51:32.916Z",
	"tags": ["ui"],
	"github_stars": 47,
	"typescript": true,
	"version": "2.0.1",
	"svelte_range": "^5.0.0",
	"kit_range": "^2.16.0",
	"last_rune_check_version": "2.0.1",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@animotion/motion",
				"version": "2.0.1",
				"size": 8842
			},
			{
				"name": "d3-interpolate",
				"version": "3.0.1",
				"size": 69687
			},
			{
				"name": "d3-color",
				"version": "3.1.0",
				"size": 61152
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2]
		],
		"circular": []
	},
	"legacy_svelte": false,
	"readme": "# Motion\n\nhttps://github.com/animotionjs/motion/assets/38083522/7cd87b1b-016f-46d3-b2c9-67e849d4559f\n\n## What Is Motion?\n\nMotion is a simple Svelte animation library. Instead of being limited to animating CSS properties using a JavaScript animation library, or the [Web Animations API](https://developer.mozilla.org/en-US/docs/Web/API/Web_Animations_API), it uses values that change over time, to animate any property.\n\n## Installation\n\n```sh\nnpm i @animotion/motion\n```\n\n## Methods\n\n- `tween` is the value over time which can be a single value, such as `tween(0)`, or an object `tween({ count: 0 })`\n- `reset` is a helper function to reset the animation to its default values\n\n## Usage\n\n- `to` method is used to animate values\n- `sfx` method is used to play sounds\n- `tween` and `to` method accept an options object for `duration`, `delay`, and `easing`\n- `await` keyword can be used to wait for animations to finish\n\n## Example\n\n```svelte\n<script>\n\timport { tween } from '@animotion/motion'\n\n\tconst sfx = {\n\t\ttransition: 'sfx/transition.mp3',\n\t\ttally: 'sfx/tally.mp3',\n\t}\n\n\tconst camera = tween({ x: -2, y: -2, w: 24, h: 24 })\n\tconst circle = tween({ x: 2.5, y: 2.5, r: 1.5, fill: '#00ffff' })\n\tconst text = tween({ count: 0, opacity: 0 })\n\n\tasync function animate() {\n\t\tawait camera.sfx(sfx.transition).to({ x: 0, y: 0, w: 10, h: 10 })\n\t\tcircle.sfx(sfx.transition).to({ x: 10, y: 10, r: 3, fill: '#ffff00' })\n\t\tcamera.to({ x: 5, y: 5 })\n\t\tawait text.to({ opacity: 1 }, { duration: 300 })\n\t\ttext.sfx(sfx.tally).to({ count: 10_000 }, { duration: 600 })\n\t}\n</script>\n\n<svg viewBox=\"{camera.x} {camera.y} {camera.w} {camera.h}\">\n\t{@render grid()}\n\n\t<circle cx={circle.x} cy={circle.y} r={circle.r} fill={circle.fill} />\n\n\t<text\n\t\tx={circle.x}\n\t\ty={circle.y}\n\t\tfont-size={circle.r * 0.4}\n\t\topacity={text.opacity}\n\t\ttext-anchor=\"middle\"\n\t\tdominant-baseline=\"middle\"\n\t\tfill=\"#000\"\n\t>\n\t\t{text.count}\n\t</text>\n</svg>\n\n<button onclick={animate}>Animate</button>\n```\n",
	"downloads_history": [
		[3596, 59],
		[3603, 137],
		[3610, 8],
		[3617, 2],
		[3624, 11],
		[3631, 1],
		[3638, 1],
		[3645, 8],
		[3652, 4],
		[3659, 6],
		[3666, 10],
		[3673, 3],
		[3680, 2],
		[3694, 4],
		[3701, 1],
		[3715, 4],
		[3722, 5],
		[3729, 1],
		[3736, 1],
		[3750, 2],
		[3771, 1],
		[3778, 53],
		[3785, 155],
		[3792, 27],
		[3799, 5],
		[3806, 19],
		[3813, 34],
		[3820, 13],
		[3827, 275],
		[3834, 110],
		[3841, 29],
		[3848, 41],
		[3855, 43],
		[3862, 49],
		[3869, 41],
		[3876, 130],
		[3883, 82],
		[3890, 78],
		[3897, 69],
		[3904, 92],
		[3911, 145],
		[3918, 51],
		[3925, 56],
		[3932, 65],
		[3939, 27],
		[3946, 62],
		[3953, 32],
		[3960, 64],
		[3967, 41],
		[3974, 45],
		[3981, 58],
		[3988, 22],
		[3995, 44],
		[4002, 28],
		[4009, 9],
		[4016, 35],
		[4023, 40],
		[4030, 27],
		[4037, 149],
		[4044, 42],
		[4051, 17],
		[4058, 41],
		[4065, 50],
		[4072, 69],
		[4079, 59],
		[4086, 145],
		[4093, 32],
		[4100, 39],
		[4107, 27],
		[4114, 19],
		[4121, 43],
		[4128, 21]
	],
	"esm": true,
	"cjs": false
}
