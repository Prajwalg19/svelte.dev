{
	"name": "sveltekit-yup",
	"description": "Validate forms in SvelteKit using Yup schema.",
	"repo_url": "https://github.com/etuncay/sveltekit-yup",
	"authors": ["etuncay"],
	"homepage": "https://github.com/etuncay/sveltekit-yup",
	"downloads": 11,
	"updated": "2023-11-15T15:48:29.096Z",
	"tags": ["ui", "miscellaneous"],
	"github_stars": 0,
	"typescript": true,
	"version": "0.0.7",
	"svelte_range": "^4.0.0",
	"kit_range": "^1.20.4",
	"last_rune_check_version": "0.0.7",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "sveltekit-yup",
				"version": "0.0.7",
				"size": 12438
			},
			{
				"name": "yup",
				"version": "1.6.1",
				"size": 259897
			},
			{
				"name": "property-expr",
				"version": "2.0.6",
				"size": 10306
			},
			{
				"name": "tiny-case",
				"version": "1.0.3",
				"size": 5697
			},
			{
				"name": "toposort",
				"version": "2.0.2",
				"size": 16683
			},
			{
				"name": "type-fest",
				"version": "2.19.0",
				"size": 201534
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[1, 3],
			[1, 4],
			[1, 5]
		],
		"circular": []
	},
	"readme": "# sveltekit-yup\r\n![npm](https://img.shields.io/npm/v/sveltekit-yup) ![NPM](https://img.shields.io/npm/l/sveltekit-yup) ![GitHub top language](https://img.shields.io/github/languages/top/etuncay/sveltekit-yup) ![npm](https://img.shields.io/npm/dm/sveltekit-yup)\r\n\r\n\r\nSvelte component library using [Yup](https://www.npmjs.com/package/yup) for form validation.\r\n\r\nAn update has been made for the [svelte-yup](https://github.com/KamyarLajani/svelte-yup) project sveltekit.\r\n\r\n\r\n\r\n### Installation\r\n\r\n```sh\r\n$ npm i sveltekit-yup --save-dev\r\n```\r\n```sh\r\n$ npm i yup\r\n```\r\n\r\n### Sample code\r\n\r\n```html\r\n<script>\r\n    import * as yup from 'yup';\r\n    import {YupForm, YupMessage} from 'sveltekit-yup';\r\n    let schema = yup.object().shape({\r\n        name: yup.string().required().max(30).label(\"Name\"),\r\n        email: yup.string().required().email().label(\"Email address\"),\r\n    });\r\n    let fields = {email: \"\", name: \"\"};\r\n    let submitted = false;\r\n    let isValid;\r\n    function formSubmit(){\r\n        submitted = true;\r\n        isValid = schema.isValidSync(fields);\r\n        if(isValid){\r\n            alert('Everything is validated!');\r\n        }\r\n    }\r\n</script>\r\n\r\n<YupForm class=\"form\" {schema} {fields} submitHandler={formSubmit} {submitted}>\r\n    <input type=\"text\" bind:value={fields.name} placeholder=\"Name\">\r\n    <YupMessage name=\"name\" />\r\n    <input type=\"text\" bind:value={fields.email} placeholder=\"Email address\">\r\n    <YupMessage name=\"email\" />\r\n    <button type=\"submit\">Submit</button>\r\n</YupForm>\r\n\r\n\r\n```\r\n### Add isInvalid for making input border style.\r\nExample:\r\n\r\n```html\r\n<script>\r\n...\r\nimport {YupMessage, isInvalid} from 'sveltekit-yup';\r\n...\r\n$: invalid = (name)=>{\r\n    if(submitted){\r\n        return isInvalid(schema, name, fields);\r\n    }\r\n    return false;\r\n}\r\n...\r\n</script>\r\n\r\n```\r\n\r\n```html\r\n<input type=\"text\" class:invalid={invalid(\"name\")} bind:value={fields.name} placeholder=\"Name\">\r\n<style>\r\n.invalid {\r\n    border-color: red !important;\r\n}\r\n</style>\r\n```\r\n### All messages in one place\r\nExample below to put all messages in one place by `YupAllMessages` component.\r\n```js\r\nimport {YupAllMessages} from 'sveltekit-yup';\r\n```\r\n```html\r\n<YupAllMessages />\r\n```\r\n### Custom Message color\r\n```html\r\n<YupForm ... color=\"#b00020\">\r\n```\r\n### Components\r\n\r\n| name | props | description |\r\n| ------ | ------ | ------------- |\r\n| `YupForm` | `schema`, `fields`, `submitHandler`, `submitted` and `color` |  |\r\n| `YupMessage` | `name` | Error message of a field name by `name` prop. name should be the schema field name (no label name)\r\n| `YupAllMessages` |  | Puts all field messages in one place |\r\n\r\n### Functions\r\n\r\n`isInvalid(schema:Object, name:String, fields:Object)` \r\n\r\n### Example disable button until everything is validated\r\n\r\n```js\r\n...\r\nlet btnDisabled = false;\r\n$: if(submitted){\r\n    btnDisabled = true;\r\n    isValid = schema.isValidSync(fields);\r\n    if(isValid){\r\n        btnDisabled = false;\r\n    }\r\n}\r\n...\r\n```\r\n\r\n```html\r\n<button type=\"submit\" disabled={btnDisabled}>Submit</button>\r\n```\r\n\r\n### Author\r\nEmrullah TUNCAY\r\n\r\nLicense\r\n----\r\n\r\nMIT\r\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3631, 6],
		[3638, 4],
		[3645, 3],
		[3652, 18],
		[3659, 3],
		[3666, 15],
		[3673, 15],
		[3680, 1],
		[3687, 1],
		[3694, 6],
		[3701, 1],
		[3715, 1],
		[3722, 7],
		[3729, 1],
		[3750, 2],
		[3757, 1],
		[3771, 13],
		[3778, 13],
		[3792, 2],
		[3799, 5],
		[3806, 1],
		[3813, 4],
		[3827, 1],
		[3834, 32],
		[3848, 2],
		[3855, 2],
		[3876, 1],
		[3883, 1],
		[3890, 6],
		[3897, 6],
		[3904, 7],
		[3925, 2],
		[3932, 1],
		[3939, 6],
		[3946, 1],
		[3953, 2],
		[3974, 1],
		[3995, 1],
		[4002, 1],
		[4009, 1],
		[4016, 1],
		[4037, 12],
		[4044, 7],
		[4051, 3],
		[4065, 1],
		[4093, 1],
		[4100, 18],
		[4107, 3],
		[4114, 11],
		[4121, 8],
		[4128, 2],
		[4135, 4]
	]
}
