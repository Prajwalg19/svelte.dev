{
	"name": "svelte-streamable",
	"description": "Provide Svelte store for real-time updates from SSE.",
	"repo_url": "https://github.com/sveltetools/svelte-streamable",
	"authors": ["paulmaly"],
	"homepage": "https://github.com/sveltetools/svelte-streamable#readme",
	"downloads": 28,
	"updated": "2022-07-27T14:41:23.079Z",
	"tags": ["miscellaneous"],
	"github_stars": 11,
	"typescript": true,
	"version": "2.3.0",
	"svelte_range": "3.x",
	"last_rune_check_version": "2.3.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-streamable",
				"version": "2.3.0",
				"size": 191292
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# Super tiny, simple to use SvelteJS store for real-time updates from server via SSE.\n\n[![NPM version](https://img.shields.io/npm/v/svelte-streamable.svg?style=flat)](https://www.npmjs.com/package/svelte-streamable) [![NPM downloads](https://img.shields.io/npm/dm/svelte-streamable.svg?style=flat)](https://www.npmjs.com/package/svelte-streamable)\n\n\n## Install\n\n```bash\nnpm i svelte-streamable --save-dev\n```\n\n```bash\nyarn add svelte-streamable\n```\n\nCDN: [UNPKG](https://unpkg.com/svelte-streamable/) | [jsDelivr](https://cdn.jsdelivr.net/npm/svelte-streamable/) (available as `window.Streamable`)\n\nIf you are **not** using ES6, instead of importing add \n\n```html\n<script src=\"/path/to/svelte-streamable/index.js\"></script>\n```\n\njust before closing body tag.\n\n## Usage\n\n### Store for any server updates in JSON format\n\nJust provide Server-sent event endpoint as `url` property in config object.\n\n```javascript\nimport { streamable } from 'svelte-streamable';\n\nconst updatesAsync = streamable({\n  url: 'http://xxx.xxx.xxx:xxx/updates'\n});\n```\n\n### Store for specific server event and allow credentials if needed:\n\nJust provide event name as `event` and `withCredentials` properties in config object.\n\n```javascript\nimport { streamable } from 'svelte-streamable';\n\nconst postsAsync = streamable({\n  url: 'http://xxx.xxx.xxx:xxx/updates',\n  event: 'posts',\n  withCredentials: true,\n});\n```\n\n### Pre-process recieved data with custom logic:\n\nJust provide callback handler as second argument of `streamable` constructor and return the value:\n\n```javascript\nimport { streamable } from 'svelte-streamable';\n\nconst postsAsync = streamable({\n  url: 'http://xxx.xxx.xxx:xxx/updates',\n  event: 'posts'\n}, ($posts) => {\n  return $posts.reduce(...);\n});\n```\n\n### Asynchronous callback with cleanup logic:\n\nThis sematic formly looks like Svelte's [derived](https://svelte.dev/docs#derived) store:\n\n```javascript\nimport { streamable } from 'svelte-streamable';\n\nconst postsAsync = streamable({\n  url: 'http://xxx.xxx.xxx:xxx/updates',\n  event: 'posts'\n}, ($posts, set) => {\n\n  // some async logic\n\n\tsetTimeout(() => {\n\t  set($posts);\n\t}, 1000);\n\n\treturn (lastSubscriber) => {\n\t\t// cleanup logic\n    console.log(lastSubscriber ?  'no more subscribers' : 'new update cleanup');\n\t};\n});\n```\n\n### Supporting several formats of the data:\n\nUse `format` option with one of the folowing value: `json` (default), `base64`, `urlencoded` or `raw`.\n\n```javascript\nimport { streamable } from 'svelte-streamable';\n\nconst csvAsync = streamable({\n  url: 'http://xxx.xxx.xxx:xxx/updates',\n  format: 'urlencoded',\n});\n```\n\n### Get value in `raw` format instead of `json` (default) with custom preprocessing:\n\n```javascript\nimport { streamable } from 'svelte-streamable';\n\nconst csvAsync = streamable({\n  url: 'http://xxx.xxx.xxx:xxx/updates',\n  event: 'csv',\n  format: 'raw',\n}, ($csv) => {\n  return CSVToArray($csv);\n});\n```\n\n### Using with `svelte-asyncable`\n\nStreamable store contains a Promise to control async statuses (pending, fullfilled, rejected). To use the data in synchronous-way, you can use `syncable` store from  [svelte-asyncable](https://www.npmjs.com/package/svelte-asyncable) package:\n\n\n```javascript\nimport { streamable } from 'svelte-streamable';\nimport { syncable } from 'svelte-asyncable';\n\nconst postsAsync = streamable(...); // contains Promise\nconst posts = syncable(postsAsync, []); // contains value\n```\n\n## License\n\nMIT &copy; [PaulMaly](https://github.com/PaulMaly)\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 29],
		[3603, 35],
		[3610, 18],
		[3617, 30],
		[3624, 16],
		[3631, 11],
		[3638, 24],
		[3645, 22],
		[3652, 18],
		[3659, 32],
		[3666, 47],
		[3673, 19],
		[3680, 37],
		[3687, 24],
		[3694, 26],
		[3701, 30],
		[3708, 22],
		[3715, 21],
		[3722, 14],
		[3729, 28],
		[3736, 26],
		[3743, 17],
		[3750, 28],
		[3757, 34],
		[3764, 14],
		[3771, 25],
		[3778, 19],
		[3785, 22],
		[3792, 21],
		[3799, 9],
		[3806, 29],
		[3813, 19],
		[3820, 22],
		[3827, 25],
		[3834, 8],
		[3841, 30],
		[3848, 24],
		[3855, 47],
		[3862, 21],
		[3869, 33],
		[3876, 19],
		[3883, 12],
		[3890, 71],
		[3897, 32],
		[3904, 10],
		[3911, 30],
		[3918, 37],
		[3925, 25],
		[3932, 16],
		[3939, 26],
		[3946, 5],
		[3953, 6],
		[3960, 21],
		[3967, 4],
		[3974, 31],
		[3981, 22],
		[3988, 19],
		[3995, 9],
		[4002, 14],
		[4009, 3],
		[4016, 20],
		[4023, 14],
		[4030, 32],
		[4037, 77],
		[4044, 21],
		[4051, 30],
		[4058, 17],
		[4065, 19],
		[4072, 72],
		[4079, 37],
		[4086, 33],
		[4093, 12],
		[4100, 30],
		[4107, 34],
		[4114, 28],
		[4121, 44],
		[4128, 24],
		[4135, 12]
	]
}
