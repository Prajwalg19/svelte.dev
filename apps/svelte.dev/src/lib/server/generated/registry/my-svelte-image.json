{
	"name": "my-svelte-image",
	"description": "Base for building shareable Svelte components.",
	"repo_url": "",
	"authors": ["woahitsraj"],
	"downloads": 6,
	"updated": "2020-11-12T19:50:22.134Z",
	"tags": ["tooling"],
	"typescript": true,
	"version": "0.1.3",
	"svelte_range": "^3.24.0",
	"last_rune_check_version": "0.1.3",
	"github_stars": 0,
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "my-svelte-image",
				"version": "0.1.3",
				"size": 183673
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# svelte-typescript-component-template\n\nA base for building shareable Svelte components written in Typescript.\n\nThis is based on [sveltejs/component-template](https://github.com/sveltejs/component-template) and allows consumers to import the .svelte components without requiring Typescript (see [\"Consuming Components\"](#consuming-components) below).\n\n```bash\nnpx degit mattjennings/svelte-typescript-component-template#main my-component\ncd my-component\nnpm install # or yarn\n```\n\nYour component's source code lives in `src/Component.svelte`.\n\nYou can create a package that exports multiple components by adding them to the `src` directory and editing `src/index.ts` to reexport them as named exports.\n\n## Setting Up\n\n- Run `npm init` (or `yarn init`)\n- Replace this README with your own\n\n## Consuming Components\n\nYour package.json has a `\"svelte\"` field pointing to `src/index.js`, which allows Svelte apps to import the source code directly, if they are using a bundler plugin like [rollup-plugin-svelte](https://github.com/sveltejs/rollup-plugin-svelte) or [svelte-loader](https://github.com/sveltejs/svelte-loader) (where [`resolve.mainFields`](https://webpack.js.org/configuration/resolve/#resolve-mainfields) in your webpack config includes `\"svelte\"`). **This is recommended.**\n\nFor everyone else, `npm run build` will bundle your component's source code into a plain JavaScript module (`dist/index.mjs`) and a UMD script (`dist/index.js`). This will happen automatically when you publish your component to npm, courtesy of the `prepublishOnly` hook in package.json.\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3596, 3],
		[3603, 4],
		[3617, 1],
		[3624, 1],
		[3645, 10],
		[3666, 4],
		[3673, 4],
		[3680, 1],
		[3701, 5],
		[3708, 3],
		[3722, 1],
		[3736, 1],
		[3743, 2],
		[3750, 1],
		[3771, 9],
		[3778, 4],
		[3792, 1],
		[3799, 2],
		[3806, 1],
		[3820, 1],
		[3827, 2],
		[3841, 1],
		[3848, 1],
		[3855, 20],
		[3876, 1],
		[3890, 4],
		[3897, 2],
		[3911, 6],
		[3918, 3],
		[3925, 1],
		[3946, 1],
		[3960, 1],
		[3974, 1],
		[3995, 1],
		[4016, 1],
		[4030, 7],
		[4037, 6],
		[4044, 7],
		[4051, 2],
		[4058, 2],
		[4065, 1],
		[4093, 12],
		[4100, 8],
		[4107, 3],
		[4114, 6],
		[4121, 6],
		[4128, 2]
	]
}
