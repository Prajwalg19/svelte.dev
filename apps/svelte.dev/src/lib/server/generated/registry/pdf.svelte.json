{
	"name": "pdf.svelte",
	"description": "Wraps pdf.js, providing a fancy Svelte PDF viewer component.",
	"repo_url": "https://github.com/timgblack/pdf.svelte",
	"authors": ["timgblack"],
	"homepage": "https://github.com/timgblack/pdf.svelte#readme",
	"downloads": 35,
	"updated": "2023-07-08T22:45:00.243Z",
	"tags": ["ui"],
	"github_stars": 5,
	"typescript": false,
	"version": "0.5.4",
	"svelte_range": "^3.59.2",
	"last_rune_check_version": "0.5.4",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "pdf.svelte",
				"version": "0.5.4",
				"size": 77163
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# pdf.svelte\nThe problem: native PDF viewers are great, but they sometimes have subtle bugs which make cross-platform sites unreliable.\n\nThe solution: pdf.js wrapped in a component to abstract away all the low-level setup.\n\n# Getting Started\n\n## Installation\nUsing NPM:\n```\nnpm install pdf.svelte\n```\n\n## Usage\n```svelte\n<script>\n  import PDFViewer from 'pdf.svelte';\n\n  // Required - the URL of your PDF, {data: pdfContents}, an ArrayBuffer or TypedArray (like Uint8Array), or a pdfjs DocumentInitParameters\n  // This is passed straight to pdfjs.getDocument\n  const pdf = \"https://www.w3.org/WAI/ER/tests/xhtml/testfiles/resources/pdf/dummy.pdf\";\n\n  // These classes are set on the various elements\n  const classes = {\n    overall: null,\n    controls: null,\n    container: null\n  };\n\n  const options = {\n    // paged - display a single page with controls\n    // all - display all pages\n    display: \"paged\",\n    // dark - grey on darkgrey\n    // light - grey on lightgrey\n    // your own theme name - whatever you like\n    theme: \"dark\",\n    // allow double click/tap to zoom between 1 and 1.5x\n    autoZoomEnabled: false,\n    // baseline superscale resolution to render\n    // larger means better zoom, but slower rendering\n    upscale: 8,\n    // horizontal - fit width\n    // vertical - fit height\n    // both - fit the smaller of width and height\n    fit: \"both\"\n  };\n\n  // Control over the zoom level of the document\n  // Zoom is > 0 and represents the zoom level (1 = 100% etc)\n  // zoomIn and zoomOut move zoom through the following levels:\n  // [0.1, 0.25, 0.5, 0.66, 0.8, 0.9, 1, 1.2, 1.5, 2, 3, 4, 5]\n  // If zoom is between two levels, it will align to the nearest:\n  // zoom >= 1 and < 2 will zoom in to 1.2\n  // zoom > 1 and <= 2 will zoom out to 1\n  let zoom = 1, zoomIn, zoomOut;\n\n  // The current page number\n  let currentPage;\n\n  // To override the text between the forward and back buttons\n  const pageNumberText = (currentPage, totalPages) => `${currentPage}/${totalPages}`;\n\n  // To set your own theme colours without writing your own theme\n  const borderColor = \"grey\";\n  const backgroundColor = \"darkgrey\";\n</script>\n\n<PDFViewer {pdf} {classes} {options} {zoom} bind:zoomIn bind:zoomOut {pageNumberText} bind:currentPage --border-color={borderColor} --background-color={backgroundColor}></PDFViewer>\n```\n\n## Theming\n### Just Border/Background\n```javascript\n<script>\n  const borderColor = \"green\";\n  const backgroundColor = \"red\";\n</script>\n<PDFViewer --border-color={borderColor} --background-color={backgroundColor}>\n```\n### Fully Custom\nIf we want to make a theme called `wacky`:\n```javascript\nconst options = {\n  theme: \"wacky\"\n};\n```\n\n```css\n.pdf-svelte.theme-wacky {\n  /* The main window */\n  --border-color: green;\n  --background-color: red;\n  /* existing styles: */\n  position: relative;\n  z-index: 1;\n  overflow-y: auto;\n  height: 100%;\n  width: 100%;\n}\n\n.pdf-svelte.theme-wacky .viewer {\n  /* The container for the pdf.js canvas(es) */\n  /* existing style: */\n  position: relative;\n  z-index: 1;\n  overflow-y: auto;\n  height: 100%;\n  width: 100%;\n}\n\n.pdf-svelte.theme-wacky .viewer canvas {\n  /* The pdf.js canvas(es) */\n  /* existing style: */\n  display: block;\n  margin: 0 auto;\n  border: 1px solid var(--border-color);\n}\n\n.pdf-svelte.theme-wacky .controls {\n  /* If you use the paged display mode, this is the controls */\n  /* existing style: */\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  text-align: center;\n  z-index: 2;\n  border-radius: 50%;\n}\n```\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 31],
		[3596, 78],
		[3603, 59],
		[3610, 61],
		[3617, 75],
		[3624, 43],
		[3631, 53],
		[3638, 38],
		[3645, 11],
		[3652, 31],
		[3659, 53],
		[3666, 74],
		[3673, 59],
		[3680, 34],
		[3687, 80],
		[3694, 18],
		[3701, 65],
		[3708, 38],
		[3715, 19],
		[3722, 19],
		[3729, 43],
		[3736, 58],
		[3743, 43],
		[3750, 76],
		[3757, 80],
		[3764, 44],
		[3771, 66],
		[3778, 52],
		[3785, 56],
		[3792, 67],
		[3799, 36],
		[3806, 60],
		[3813, 76],
		[3820, 59],
		[3827, 62],
		[3834, 47],
		[3841, 119],
		[3848, 39],
		[3855, 108],
		[3862, 55],
		[3869, 45],
		[3876, 42],
		[3883, 83],
		[3890, 63],
		[3897, 35],
		[3904, 44],
		[3911, 67],
		[3918, 47],
		[3925, 51],
		[3932, 71],
		[3939, 48],
		[3946, 82],
		[3953, 33],
		[3960, 37],
		[3967, 43],
		[3974, 46],
		[3981, 33],
		[3988, 46],
		[3995, 29],
		[4002, 74],
		[4009, 15],
		[4016, 22],
		[4023, 135],
		[4030, 61],
		[4037, 97],
		[4044, 68],
		[4051, 61],
		[4058, 60],
		[4065, 77],
		[4072, 46],
		[4079, 56],
		[4086, 47],
		[4093, 50],
		[4100, 95],
		[4107, 58],
		[4114, 35],
		[4121, 27],
		[4128, 23]
	],
	"esm": true,
	"cjs": false
}
