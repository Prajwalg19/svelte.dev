{
	"name": "@whoisyeshua-svelte/modal-custom-element",
	"description": "Create modal custom elements with Svelte.",
	"repo_url": "https://github.com/whoisYeshua/svelte-modal-custom-element",
	"authors": ["whoisyeshua"],
	"homepage": "https://github.com/whoisYeshua/svelte-modal-custom-element#readme",
	"downloads": 11,
	"updated": "2023-10-26T18:23:44.013Z",
	"tags": ["ui"],
	"github_stars": 0,
	"typescript": true,
	"version": "1.0.3",
	"svelte_range": "^4.0.0",
	"last_rune_check_version": "1.0.3",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@whoisyeshua-svelte/modal-custom-element",
				"version": "1.0.3",
				"size": 29992
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# Svelte Modal Custom Element\n\nThis repository contains a project for a modal custom element created with Svelte.\n\n## Installation\n\n```bash\nnpm i @whoisyeshua-svelte/modal-custom-element\n```\n\n## Usage\n\n### Svelte Projects\n\nYou can import and use it as normal svelte component (don\\`t forget to add **`/svelte`** at the end of the package name):\n\n```svelte\n<script lang=\"ts\">\n  import { Modal } from '@whoisyeshua-svelte/modal-custom-element/svelte'\n\n  let open = false\n</script>\n\n<Modal {open} on:close={() => open = false}>\n  <h2 style=\"margin: 0\" slot=\"header\">Header</h2>\n  <p>Main content</p>\n</Modal>\n<button on:click={() => open = true}>Show</button>\n```\n\n### ESM projects\n\nYou can connect and use it like custom element (`<svelte-modal>` tag):\n\nyour `html`:\n\n```html\n<body>\n  <button id=\"open-modal\">Open modal</button>\n  <svelte-modal>\n    <h2 slot=\"header\" style=\"margin: 0\">Header</h2>\n    <p>This is some slotted content</p>\n  </svelte-modal>\n  <style>\n    /* hide while the script is loading and element is not defined */\n    svelte-modal:not(:defined) {\n      display: none;\n    }\n  </style>\n  <script type=\"module\" src=\"/src/main.ts\"></script>\n</body>\n```\n\nyour entrypoint `/src/main.ts` or `/src/main.js` file:\n\n```ts\nimport '@whoisyeshua-svelte/modal-custom-element/esm'\n\nconst modal = document.querySelector('svelte-modal')!\nconst openModalBtn = document.querySelector('#open-modal')!\n\nconst handleOpen = () => {\n  modal.open = true\n}\nconst handleClose = () => {\n  modal.open = false\n}\nopenModalBtn.addEventListener('click', handleOpen)\nmodal.addEventListener('close', handleClose) // or modal.onClose = handleClose\n```\n\n_`@whoisyeshua-svelte/modal-custom-element` under the hood define custom component (`<svelte-modal>`), so you could use it from start_\n\nor like regular svelte component construcotr:\n\n```ts\nimport { Modal } from '@whoisyeshua-svelte/modal-custom-element/esm'\n\nlet open = false\n\nnew Modal({\n  target: document.body,\n  props: {\n    // component props go here\n    open,\n    onClose: () => (open = true)\n  }\n})\n```\n\n- Note that this esm build relies on your bundler (vite, rollup, webpack and etc), it comes without the `svelte` package built in, so your builder will have to add it. For this purpose we set `svelte@^4.0.0` to `peerDependencies`.\n\n### Vanila HTML / JS (through `<script>` tag)\n\nCDN URL - https://cdn.jsdelivr.net/npm/@whoisyeshua-svelte/modal-custom-element@1.0.3\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/@whoisyeshua-svelte/modal-custom-element@1.0.3\"></script>\n```\n\nfull code example:\n\n```html\n<body>\n  <button id=\"open-modal\">Open modal</button>\n  <svelte-modal>\n    <h2 slot=\"header\" style=\"margin: 0\">Header</h2>\n    <p>This is some slotted content</p>\n  </svelte-modal>\n  <style>\n    /* hide while the script is loading and element is not defined */\n    svelte-modal:not(:defined) {\n      display: none;\n    }\n  </style>\n  <script src=\"https://cdn.jsdelivr.net/npm/@whoisyeshua-svelte/modal-custom-element@1.0.3\"></script>\n  <script>\n    const modal = document.querySelector('svelte-modal')\n    const openModalBtn = document.querySelector('#open-modal')\n\n    const handleOpen = () => {\n      modal.open = true\n    }\n    const handleClose = () => {\n      modal.open = false\n    }\n    openModalBtn.addEventListener('click', handleOpen)\n    modal.addEventListener('close', handleClose)\n  </script>\n</body>\n```\n\n## Customizing\n\n**Customizing svelte-modal CSS**:\nYou can override the CSS custom properties within a parent component or your project's main CSS file to customize the appearance of the `svelte-modal` web component. Here's an example of how to override some of the custom properties:\n\n```css\nsvelte-modal {\n  --svelte-modal-dialog-w: 40em;\n  --svelte-modal-dialog-br: 2em;\n  --svelte-modal-dialog-backdrop-bg: rgba(0, 0, 0, 0.5);\n}\n```\n\n**List of CSS Custom Properties**:\n\n- `--svelte-modal-dialog-w`: Controls the width of the dialog. Default value is `clamp(20em, 33vw, 32em)`.\n- `--svelte-modal-dialog-br`: Controls the border radius of the dialog. Default value is `1em`.\n- `--svelte-modal-dialog-backdrop-bg`: Controls the background of the dialog's backdrop. Default value is `hsla(0 0% var(--lightness) / 30%)`.\n- `--svelte-modal-dialog-backdrop-filter`: Controls the filter of the dialog's backdrop. Default value is `blur(10px)`.\n- `--svelte-modal-dialog-padding`: Controls the padding inside the dialog's div. Default value is `1em`.\n- `--svelte-modal-header-container-gap`: Controls the gap between items in the header container. Default value is `1em`.\n- `--svelte-modal-button-w`: Controls the width of the close button. Default value is `32px`.\n- `--svelte-modal-button-h`: Controls the height of the close button. Default value is `32px`.\n- `--svelte-modal-button-br`: Controls the border radius of the close button. Default value is `100px`.\n- `--svelte-modal-button-hover-bg`: Controls the background color of the close button on hover. Default value is `hsla(0 0% var(--lightness) / 10%)`.\n- `--svelte-modal-button-active-bg`: Controls the background color of the close button on active. Default value is `hsla(0 0% var(--lightness) / 25%)`.\n\nEach custom property provides a way to customize a specific aspect of the `svelte-modal` component's appearance. By overriding these custom properties, you can tailor the modal's look to better fit your project's design requirements.\n\n## Contributing\n\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\nClone this repository to your local machine:\n\n```bash\ngit clone https://github.com/whoisYeshua/svelte-modal-custom-element.git\n```\n\nNavigate to the project directory:\n\n```bash\ncd svelte-modal-custom-element\n```\n\nInstall the necessary dependencies:\n\n```bash\nnpm install\n```\n\nBuild package:\n\n```bash\nnpm run package\n```\n\nPublish package:\n\n```bash\nnpm publish\n```\n\n## License\n\nThis project is licensed under the MIT License.\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3624, 2],
		[3631, 1],
		[3638, 1],
		[3659, 1],
		[3680, 1],
		[3708, 1],
		[3729, 1],
		[3757, 1],
		[3771, 2],
		[3785, 1],
		[3806, 1],
		[3813, 2],
		[3834, 1],
		[3855, 1],
		[3883, 1],
		[3904, 1],
		[3932, 1],
		[3960, 1],
		[3974, 1],
		[3981, 1],
		[4030, 2],
		[4065, 3],
		[4072, 2],
		[4079, 1],
		[4093, 29],
		[4100, 16],
		[4107, 3],
		[4114, 11],
		[4121, 7],
		[4128, 7],
		[4135, 6]
	]
}
