{
	"name": "svelte-dark-mode",
	"description": "Implement dark mode support in Svelte apps.",
	"repo_url": "https://github.com/metonym/svelte-dark-mode",
	"authors": ["metonym"],
	"homepage": "https://github.com/metonym/svelte-dark-mode",
	"downloads": 28,
	"updated": "2022-01-23T18:38:25.259Z",
	"tags": ["ui"],
	"github_stars": 42,
	"typescript": true,
	"version": "2.1.0",
	"svelte_range": "^3.46.2",
	"last_rune_check_version": "2.1.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-dark-mode",
				"version": "2.1.0",
				"size": 31954
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# svelte-dark-mode\n\n[![NPM][npm]][npm-url]\n\n> Support dark mode in your Svelte apps.\n\n<!-- REPO_URL -->\n\nThis component sets the theme based on the user’s preferred color scheme using [window.matchMedia](https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia).\n\nThe preferred theme is persisted using the [window.localStorage API](https://developer.mozilla.org/en-US/docs/Web/API/Window/localStorage).\n\n---\n\n<!-- TOC -->\n\n## Installation\n\n**Yarn**\n\n```bash\nyarn add -D svelte-dark-mode\n```\n\n**NPM**\n\n```bash\nnpm i -D svelte-dark-mode\n```\n\n**pnpm**\n\n```bash\npnpm i -D svelte-dark-mode\n```\n\n## Usage\n\n### Basic\n\nThe `theme` is set to either `\"dark\"` or `\"light\"` based on the user’s system preference.\n\n```svelte\n<script>\n  import DarkMode from \"svelte-dark-mode\";\n\n  let theme;\n\n  $: switchTheme = theme === \"dark\" ? \"light\" : \"dark\";\n  $: document.body.className = theme;\n</script>\n\n<DarkMode bind:theme />\n\n<h1>This is {theme} mode.</h1>\n<p>Change the theme and reload the page.</p>\n\n<button on:click={() => (theme = switchTheme)}>\n  Switch to {switchTheme} mode\n</button>\n\n<style>\n  :global(.dark) {\n    background: #032f62;\n    color: #f1f8ff;\n  }\n</style>\n```\n\n### Server-side rendering (SSR)\n\nWhen using server-side rendering (SSR), employ the `afterUpdate` lifecycle to access `document.body` or `document.documentElement`.\n\n```svelte no-eval\n<script>\n  import DarkMode from \"svelte-dark-mode\";\n  import { afterUpdate } from \"svelte\";\n\n  let theme;\n\n  afterUpdate(() => {\n    document.body.className = theme; // \"dark\" or \"light\"\n  });\n</script>\n\n<DarkMode bind:theme />\n```\n\nAn alternative to the `afterUpdate` lifecycle hook is to check if the type of `window` is undefined.\n\n```js no-eval\n$: if (typeof window !== \"undefined\") {\n  document.body.className = theme;\n}\n```\n\n### System preference change\n\nThe theme will automatically be updated if the user changes their color scheme preference at the system level.\n\n### Custom `localStorage` key\n\nUse the `key` prop to customize the local storage key used to track the persisted theme.\n\nBy default, the key is `\"theme\"`.\n\n```svelte no-eval\n<DarkMode key=\"custom-theme-key\" />\n```\n\nUse the `localStorage.getItem` API to programmatically access the stored value.\n\n```js\nlocalStorage.getItem(\"custom-theme-key\"); // \"dark\" || \"light\"\n```\n\n## API\n\n### Props\n\n| Name  | Type                  | Default value |\n| :---- | :-------------------- | :------------ |\n| theme | `\"dark\"` or `\"light\"` | `\"dark\"`      |\n| key   | `string`              | `\"theme\"`     |\n\n### Dispatched events\n\n- **on:change**: dispatched when `theme` is updated\n\n```svelte no-eval\n<DarkMode\n  on:change={(e) => {\n    console.log(e.detail); // \"dark\" | \"light\"\n  }}\n/>\n```\n\n## TypeScript\n\n`svelte` version 3.31 or greater is required to use this component with TypeScript.\n\nTypeScript definitions are located in the [types folder](./types).\n\n## Changelog\n\n[CHANGELOG.md](CHANGELOG.md)\n\n## License\n\n[MIT](LICENSE)\n\n[npm]: https://img.shields.io/npm/v/svelte-dark-mode.svg?color=%23ff3e00&style=for-the-badge\n[npm-url]: https://npmjs.com/package/svelte-dark-mode\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 17],
		[3596, 29],
		[3603, 18],
		[3610, 23],
		[3617, 13],
		[3624, 13],
		[3631, 13],
		[3638, 15],
		[3645, 27],
		[3652, 56],
		[3659, 65],
		[3666, 53],
		[3673, 213],
		[3680, 72],
		[3687, 121],
		[3694, 88],
		[3701, 81],
		[3708, 73],
		[3715, 281],
		[3722, 72],
		[3729, 65],
		[3736, 32],
		[3743, 24],
		[3750, 15],
		[3757, 28],
		[3764, 24],
		[3771, 17],
		[3778, 13],
		[3785, 10],
		[3792, 7],
		[3799, 14],
		[3806, 33],
		[3813, 47],
		[3820, 36],
		[3827, 42],
		[3834, 61],
		[3841, 63],
		[3848, 37],
		[3855, 62],
		[3862, 53],
		[3869, 42],
		[3876, 60],
		[3883, 28],
		[3890, 47],
		[3897, 39],
		[3904, 58],
		[3911, 37],
		[3918, 24],
		[3925, 11],
		[3932, 13],
		[3939, 10],
		[3946, 83],
		[3953, 39],
		[3960, 13],
		[3967, 51],
		[3974, 13],
		[3981, 11],
		[3988, 17],
		[3995, 23],
		[4002, 12],
		[4009, 8],
		[4016, 6],
		[4023, 16],
		[4030, 18],
		[4037, 22],
		[4044, 26],
		[4051, 15],
		[4058, 11],
		[4065, 23],
		[4072, 7],
		[4079, 37],
		[4086, 5],
		[4093, 62],
		[4100, 53],
		[4107, 42],
		[4114, 28],
		[4121, 31],
		[4128, 13]
	]
}
