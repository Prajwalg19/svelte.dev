{
	"name": "sveltekit-preview-mode",
	"description": "Enable CMS preview mode for SvelteKit applications.",
	"repo_url": "https://github.com/darbymanning/sveltekit-preview-mode",
	"authors": ["darbymanning"],
	"homepage": "https://github.com/darbymanning/sveltekit-preview-mode#readme",
	"downloads": 16,
	"updated": "2024-12-12T15:36:20.703Z",
	"tags": ["tooling"],
	"github_stars": 21,
	"typescript": true,
	"version": "1.0.0",
	"svelte_range": ">=5.0.0",
	"kit_range": ">=2.0.0",
	"last_rune_check_version": "1.0.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "sveltekit-preview-mode",
				"version": "1.0.0",
				"size": 11299
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# SvelteKit Preview Mode\n\nSvelteKit Preview Mode is a library for [SvelteKit](https://svelte.dev/docs#sveltekit) that helps you easily enable preview mode for content management systems (CMSs). With this library, you can preview draft or unpublished content without any hassle. This is intended to be a SvelteKit equivelant of the [Next.js Preview Mode](https://nextjs.org/docs/advanced-features/preview-mode).\n\n## Demo (using Hygraph)\n\n- [Live](https://sveltekit-preview-mode.vercel.app/)\n- [Preview Mode](https://sveltekit-preview-mode.vercel.app/?secret=quiet-as-a-mouse)\n\n## Installation\n\nTo install SvelteKit Preview Mode, run the following command:\n\n```bash\npnpm add sveltekit-preview-mode -D\n```\n\n## Usage\n\nTo use SvelteKit Preview Mode, simply import it in your SvelteKit application:\n\n```ts\n// src/hooks.server.ts\nimport type { Handle } from '@sveltejs/kit';\nimport { PREVIEW_SECRET } from '$env/static/private';\nimport previewMode from 'sveltekit-preview-mode';\n\nexport const handle: Handle = previewMode({\n\tpreviewSecret: PREVIEW_SECRET\n});\n```\n\nDon't forget to set the `PREVIEW_SECRET` [environment variable](https://kit.svelte.dev/docs/modules#$env-static-private). This can be any string you'd like. If you need to add additional handlers, you can do so using the [sequence helper function](https://kit.svelte.dev/docs/modules#sveltejs-kit-hooks-sequence).\n\nIn order to share the preview status in the client, you'll need to add this to `+layout.server.ts`:\n\n```ts\n// src/routes/+layout.server.ts\n/**\n * Return the `exitPreviewQueryParam` and `isPreview` values so that they can be referenced in client-side code.\n */\nexport async function load({ locals }) {\n\treturn {\n\t\texitPreviewQueryParam: locals.exitPreviewQueryParam,\n\t\tisPreview: locals.isPreview\n\t};\n}\n```\n\n### Displaying Preview Status\n\nTo display a banner when preview mode is enabled, import the `PreviewMode` banner component into `+layout.svelte`:\n\n```svelte\n<!-- src/routes/+layout.svelte -->\n<script lang=\"ts\">\n\timport { PreviewBanner } from 'sveltekit-preview-mode';\n</script>\n\n<PreviewBanner />\n```\n\nYou can retrieve the preview status by checking the global page store. `$page.data.isPreview`\n\n### Enabling Preview Mode\n\nTo enable preview mode, add the query parameter `?secret=PREVIEW_SECRET` to any route. This will then check for a matching secret, and update the `isPreview` value, and set a cookie to securely persist preview mode between sessions.\n\n### Disabling Preview Mode\n\nTo disable preview mode, add the query parameter `?exit-preview` to any route. This will then update the `isPreview` value, and update the cookie value.\n\n## Examples\n\n- [Hygraph](https://github.com/darbymanning/sveltekit-preview-mode/blob/main/examples/hygraph)\n- [Contentful](https://github.com/darbymanning/sveltekit-preview-mode/blob/main/examples/contentful)\n\n## Options\n\nThe `previewMode` handle function has a few options that can be set:\n\n```ts\ninterface PreviewModeOptions {\n\tpreviewSecret: string;\n\tcookieName?: string;\n\tcookieOpts?: CookieSerializeOptions;\n\texitPreviewQueryParam?: string;\n\tsecretTokenQueryParam?: string;\n}\n```\n\n<!-- prettier-ignore -->\n| Property | Type | Default | Description |\n| --- | --- | --- | --- |\n| `previewSecret` | `string` | N/A | This is the query parameter value, which needs to match in order to enable preview mode. |\n| `cookieName?` | `string` | `__preview_mode` | The name of the cookie that is created to store the preview mode state. |\n| `cookieOpts?` | [CookieSerializeOptions](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/98fc6ab64752d9227eeb75b0b5a6f645b1db587b/types/cookie/index.d.ts#L14-L111) | [ðŸ”—](https://github.com/darbymanning/sveltekit-preview-mode/blob/main/packages/sveltekit-preview-mode/src/lib/index.ts#L32-L38) | Options for the cookie we create. |\n| `exitPreviewQueryParam?` | `string` | `exit-preview` | The query param that should be present to exit preview mode. |\n| `secretTokenQueryParam?` | `string` | `secret` | The query param that should be used to enter preview mode. |\n\n## Static Site Generation (SSG)\n\n`sveltekit-preview-mode` mode is reliant on having a server to analyze the request and serve different content based on query params and cookies of the incoming request. Sveltekit does not support static site generation on pages that access cookies or url query params. Due to this, during build `sveltekit-preview-mode` is turned off.\n\nIf you would like to take advantage of prerendering while still using `sveltekit-preview-mode` I would suggest creating a copy of the prerendered route with a new routeId `/preview/[slug]` that is dynamic and redirecting back to the static route if not in preview mode.\n\n```ts\n// src/routes/preview/[slug]/+page.server.ts\nimport { redirect } from '@sveltejs/kit';\n\nexport const prerender = false;\n/**\n * Return the `exitPreviewQueryParam` and `isPreview` values so that they can be referenced in client-side code.\n */\nexport async function load({ params, locals: { isPreview } }) {\n\tif (!isPreview) redirect(302, `/${params.slug}`);\n\n\treturn {\n\t\tisPreview\n\t};\n}\n```\n\n## Contributing\n\nIf you'd like to contribute to SvelteKit Preview Mode, feel free to open an issue or pull request on our [GitHub repository](https://github.com/darbymanning/sveltekit-preview-mode).\n\n## Credits\n\nThis project is inspired by the Vercel Next.js team's approach in providing [Preview Mode functionality](https://nextjs.org/docs/advanced-features/preview-mode). Thanks for their hard work! ðŸ–¤\n\n## License\n\nSvelteKit Preview Mode is released under the [ISC License](https://github.com/darbymanning/sveltekit-preview-mode/blob/main/LICENSE).\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 12],
		[3603, 110],
		[3610, 28],
		[3617, 7],
		[3624, 8],
		[3631, 7],
		[3638, 3],
		[3645, 3],
		[3652, 9],
		[3659, 2],
		[3666, 14],
		[3673, 2],
		[3680, 3],
		[3687, 1],
		[3694, 26],
		[3701, 13],
		[3708, 10],
		[3715, 16],
		[3722, 84],
		[3729, 3],
		[3736, 3],
		[3743, 7],
		[3750, 1],
		[3757, 2],
		[3764, 19],
		[3771, 10],
		[3778, 5],
		[3785, 3],
		[3792, 8],
		[3806, 4],
		[3813, 3],
		[3820, 1],
		[3827, 1],
		[3834, 8],
		[3841, 44],
		[3848, 3],
		[3855, 2],
		[3862, 8],
		[3869, 1],
		[3876, 2],
		[3883, 3],
		[3890, 14],
		[3897, 11],
		[3904, 9],
		[3911, 6],
		[3918, 3],
		[3925, 4],
		[3932, 4],
		[3939, 1],
		[3946, 3],
		[3953, 1],
		[3960, 53],
		[3967, 76],
		[3974, 60],
		[3981, 50],
		[3988, 33],
		[3995, 73],
		[4002, 7],
		[4009, 14],
		[4016, 32],
		[4023, 6],
		[4030, 12],
		[4037, 18],
		[4044, 14],
		[4051, 9],
		[4058, 6],
		[4065, 49],
		[4072, 16],
		[4079, 37],
		[4086, 4],
		[4093, 29],
		[4100, 60],
		[4107, 64],
		[4114, 16],
		[4121, 45],
		[4128, 15],
		[4135, 6]
	],
	"esm": true,
	"cjs": false
}
