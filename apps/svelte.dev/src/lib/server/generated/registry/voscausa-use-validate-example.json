{
	"name": "@voscausa/use-validate-example",
	"description": "Validate forms in Svelte applications.",
	"repo_url": "https://github.com/voscausa/use-validate-example",
	"authors": ["voscausa"],
	"homepage": "https://github.com/voscausa/use-validate-example#readme",
	"downloads": 4,
	"updated": "2024-01-18T12:11:11.130Z",
	"tags": ["miscellaneous"],
	"typescript": true,
	"version": "1.2.5",
	"svelte_range": "^3.59.2",
	"last_rune_check_version": "1.2.5",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@voscausa/use-validate-example",
				"version": "1.2.5",
				"size": 43510
			},
			{
				"name": "@voscausa/svelte-use-validate",
				"version": "1.4.8"
			}
		],
		"dependencies": [[0, 1]],
		"circular": []
	},
	"readme": "# use-validate example\r\n\r\nA Svelte-Vite SPA to validate an example form  \r\nExample use of : [@voscausa/svelte-use-validate](https://github.com/voscausa/svelte-use-validate)\r\n\r\n![example](./example%20form.png)\r\n\r\n### <b>Example config rules</b>\r\n\r\n```js\r\nconst rulesConfig = {\r\n  day: [\"required\", { range: { min: 1, max: 31 } }, \"dayOk\"],\r\n  month: [\"required\", { range: { min: 1, max: 12 } }],\r\n  name: [\r\n    \"required\",\r\n    { len: { operator: \">=\", len: 5, msg: \"length must be at least 5 characters\" } },\r\n  ],\r\n  experience: \"required\",\r\n  html: \"get\", // if html we require css\r\n  css: \"get\", // get bool\r\n  jsSkills: \"get\",\r\n  js: \"updateJsSkillRules\", // if js we require jsSkills\r\n  other: { wordCount: { count: 5, msg: \"include at least 5 other skills\" } },\r\n};\r\n```\r\n### <b>Validate instance config</b>\r\n\r\n```js\r\nconst notValidMarkers = {}; // not used\r\n// initialize the validation instance with node.name as the default id\r\nconst { field, OK, addValidator, fieldValues, runRuleChain, setNotValid } = validate(\r\n  // markDefault 0: no-border and no-text, 1: red-border 2: text 3: red-border and text\r\n  { rulesConfig, lazy: true, markDefault: 3, alertBelow: 0 },\r\n  // callback not used\r\n  (id, notValid, value) => {\r\n    // callback to update bindings or signal notValid components\r\n    if (id in notValidMarkers) notValidMarkers[id] = notValid;\r\n  }\r\n);\r\n```\r\n\r\n### <b>Custom validators</b>\r\n\r\n```js\r\n// add a basic validator with setNotValid marker\r\naddValidator(\"wordCount\", function (obj) {\r\n  let { count = 2, msg = `number of words min ${count}` } = obj;\r\n  const valid = this.value.split(\" \").length >= count;\r\n  return setNotValid(this, !valid, msg);\r\n});\r\n```\r\nToggle between \"required\" and \"get\" rules controlled by \"js\" field value.\r\n```js\r\n// add a validator which updates jsSkill rules based on js bool\r\naddValidator(\"updateJsSkillRules\", function () {\r\n  if (\"jsSkills\" in runRuleChain)\r\n    runRuleChain.jsSkills(\r\n      // require skill for js\r\n      this.value ? \"required\" : \"get\"\r\n    );\r\n  // this section validator is always OK, so return false\r\n  return false;\r\n});\r\n```\r\n### <b>Example \"date\" HTML snippet</b>\r\n\r\n```html\r\n<div class=\"formgrid\">\r\n  <div class=\"bar-inputs\">\r\n    <input\r\n      class=\"center\"\r\n      id=\"day\"\r\n      size=\"1\"\r\n      name=\"day\"\r\n      type=\"text\"\r\n      use:field={{ value: day, controls: [year, month] }}\r\n      bind:value={day}\r\n      placeholder=\"dd\" />\r\n    -\r\n    <input\r\n      class=\"center\"\r\n      id=\"month\"\r\n      size=\"1\"\r\n      name=\"month\"\r\n      type=\"text\"\r\n      use:field={month}\r\n      bind:value={month}\r\n      placeholder=\"mm\" />\r\n    - {year}\r\n  </div>\r\n  <div class=\"label\">date</div>\r\n  ...\r\n</div>  \r\n```",
	"legacy_svelte": true,
	"downloads_history": [
		[3596, 4],
		[3603, 3],
		[3610, 2],
		[3638, 1],
		[3645, 6],
		[3652, 3],
		[3659, 3],
		[3666, 59],
		[3673, 5],
		[3687, 2],
		[3694, 3],
		[3701, 1],
		[3708, 1],
		[3715, 2],
		[3722, 2],
		[3743, 2],
		[3750, 1],
		[3764, 1],
		[3771, 3],
		[3778, 1],
		[3792, 1],
		[3806, 1],
		[3813, 2],
		[3834, 6],
		[3841, 16],
		[3848, 1],
		[3862, 5],
		[3869, 1],
		[3876, 2],
		[3883, 1],
		[3890, 2],
		[3897, 5],
		[3911, 1],
		[3918, 1],
		[3932, 2],
		[3939, 2],
		[3946, 1],
		[3967, 6],
		[3988, 1],
		[3995, 1],
		[4016, 4],
		[4023, 1],
		[4037, 14],
		[4044, 11],
		[4051, 2],
		[4058, 1],
		[4065, 1],
		[4072, 1],
		[4093, 5],
		[4100, 8],
		[4107, 1],
		[4114, 4],
		[4121, 10],
		[4128, 3],
		[4135, 3]
	]
}
