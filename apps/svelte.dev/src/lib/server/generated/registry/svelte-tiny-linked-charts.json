{
	"name": "svelte-tiny-linked-charts",
	"description": "Display tiny bar charts in Svelte applications.",
	"repo_url": "https://github.com/Mitcheljager/svelte-tiny-linked-charts",
	"authors": ["mitcheljager"],
	"homepage": "https://mitcheljager.github.io/svelte-tiny-linked-charts/",
	"downloads": 1492,
	"updated": "2025-01-26T22:06:14.054Z",
	"tags": ["ui"],
	"github_stars": 93,
	"typescript": true,
	"version": "2.2.0",
	"svelte_range": ">=5.0.0",
	"kit_range": "^2.5.27",
	"last_rune_check_version": "2.2.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-tiny-linked-charts",
				"version": "2.2.0",
				"size": 34371
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# Tiny Linked Charts for Svelte\r\n\r\n[![tests passing](https://github.com/MitchelJager/svelte-tiny-linked-charts/actions/workflows/node.js.yml/badge.svg)](https://github.com/Mitcheljager/svelte-tiny-linked-charts/actions/workflows/node.js.yml)\r\n[![npm version](https://badgen.net/npm/v/svelte-tiny-linked-charts)](https://www.npmjs.com/package/svelte-tiny-linked-charts)\r\n[![npm downloads](https://badgen.net/npm/dt/svelte-tiny-linked-charts)](https://www.npmjs.com/package/svelte-tiny-linked-charts)\r\n[![MadeWithSvelte.com shield](https://madewithsvelte.com/storage/repo-shields/3278-shield.svg)](https://madewithsvelte.com/p/tiny-linked-charts/shield-link)\r\n[![bundle size](https://img.shields.io/bundlephobia/minzip/svelte-tiny-linked-charts)](https://bundlephobia.com/package/svelte-tiny-linked-charts)\r\n\r\nThis is a library to display tiny bar charts. These charts are more so meant for graphic aids, rather than scientific representations. There's no axis labels, no extensive data visualisation, just bars.\r\n\r\n**Demo and Docs**: https://mitcheljager.github.io/svelte-tiny-linked-charts/\r\n\r\n### Installation\r\n\r\nInstall using Yarn or NPM.\r\n```js\r\nyarn add svelte-tiny-linked-charts --dev\r\n```\r\n```js\r\nnpm install svelte-tiny-linked-charts --save-dev\r\n```\r\n\r\nIf you are using Svelte 4, use version ^1.0.0. Version 2 is reserved for Svelte 5.\r\n\r\nInclude the chart in your app.\r\n```js\r\nimport { LinkedChart, LinkedLabel, LinkedValue } from \"svelte-tiny-linked-charts\"\r\n```\r\n```svelte\r\n<LinkedChart />\r\n<LinkedLabel />\r\n<LinkedValue />\r\n```\r\n\r\nSupply your data in a simple key:value object:\r\n```js\r\nlet data = {\r\n  \"2005-01-01\": 25,\r\n  \"2005-01-02\": 20,\r\n  \"2005-01-03\": 18,\r\n  \"2005-01-04\": 17,\r\n  \"2005-01-05\": 21\r\n}\r\n```\r\n```svelte\r\n<LinkedChart { data } />\r\n```\r\n\r\nOr if you prefer supply the labels and values separately:\r\n```js\r\nlet labels = [\r\n  \"2005-01-01\",\r\n  \"2005-01-02\",\r\n  \"2005-01-03\",\r\n  \"2005-01-04\",\r\n  \"2005-01-05\"\r\n]\r\nlet values = [\r\n  25,\r\n  20,\r\n  18,\r\n  17,\r\n  21\r\n]\r\n```\r\n```svelte\r\n<LinkedChart { labels } { values } />\r\n```\r\n\r\n## Usage\r\n\r\nFor detailed documentation on every property check out: [https://mitcheljager.github.io/svelte-tiny-linked-charts/](https://mitcheljager.github.io/svelte-tiny-linked-charts/)\r\n\r\n### Configuration\r\n\r\n`<LinkedChart />` component.\r\n| Property | Default | Description |\r\n---|---|---\r\ndata | {} | Data that will be displayed in the chart supplied in key:value object.\r\nlabels | [] | Labels supplied separately, to be used together with \"values\" property.\r\nvalues | [] | Values supplied separately, to be used together with \"labels\" property.\r\nlinked| | Key to link this chart to other charts with the same key.\r\nuid | | Unique ID to link this chart to a LinkedValue component with the same uid.\r\nheight | 40 | Height of the chart in pixels.\r\nwidth | 150 | Width of the chart in pixels.\r\nbarMinWidth | 4 | Width of the bars in the chart in pixels.\r\nbarMinHeight | 0 | Minimum height of the bars in the chart in pixels.\r\nhideBarBelow | 0 | Bars below this value will be hidden, showing as 0 height.\r\ngrow | false | Whether or not the bar should grow to fill out the full width of the chart.\r\nalign | right | The side the bars should align to when they do not completely fill out the chart.\r\ngap | 1 | Gap between the bars in pixels.\r\nfill | #ff3e00 | Color of the bars, can be any valid CSS color.\r\nfillArray | [] | Array of colors for each individual bar.\r\nfadeOpacity | 0.5 | The opacity the faded out bars should display in.\r\nhover | true | Boolean whether or not this chart can be hovered at all.\r\ntransition | 0 | Transition the chart between different stats. Value is time in milliseconds.\r\nshowValue | false | Boolean whether or not a value will be shown.\r\nvalueDefault | \"\\&nbsp;\" | Default value when not hovering.\r\nvalueUndefined | 0 | For when the hovering value returns undefined.\r\nvaluePrepend | | String to prepend the value.\r\nvalueAppend | | String to append to the value.\r\nvaluePosition | static | Can be set to \"floating\" to follow the position of the hover.\r\nscaleMax | 0 | Use this to overwrite the automatic scale set to the highest value in your array.\r\nscaleMax | 0 | Use this to overwrite the default value floor of 0.\r\ntype | bar | Can be set to \"line\" to display a line chart instead.\r\nlineColor | fill | Color of the line if used with type=\"line\".\r\npreserveAspectRatio | false | Sets whether or not the SVG will preserve it's aspect ratio.\r\ntabindex | -1 | Sets the tabindex of each bar. When a tabindex of 0 is given, each bar will contain a title that describes the bar's label and value.\r\ntitle | \"\" | Title that describes the chart for screen readers.\r\ndescription | \"\" | Description that describes the chart for screen readers.\r\nonclick | null | Function that executes on click and returns the key and index for the clicked data.\r\nonhover | null | Function that executes on hover of each bar.\r\nonblur | null | Function that executes when focus leaves the chart.\r\n\r\n`<LinkedLabel />` component.\r\nProperty | Default | Description\r\n--- | --- | ---\r\nlinked | | Key to link this label to charts with the same key.\r\nempty | \\&nbsp; | String that will be displayed when no bar is being hovered.\r\ntransform | (label) => label | Transform the given label to format it differently from how it was supplied.\r\n\r\n`<LinkedValue />` component.\r\nProperty | Default | Description\r\n--- | --- | ---\r\nuid | | Unique ID to link this value to a chart with the same uid.\r\nempty | \\&nbsp; | String that will be displayed when no bar is being hovered.\r\nvalueUndefined | 0 | For when the hovering value returns undefined.\r\ntransform | (value) => value | Transform the given value to format it differently from how it was supplied.\r\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 4700],
		[3603, 4543],
		[3610, 5256],
		[3617, 6506],
		[3624, 4930],
		[3631, 5631],
		[3638, 4904],
		[3645, 2300],
		[3652, 3466],
		[3659, 4572],
		[3666, 7583],
		[3673, 7869],
		[3680, 7786],
		[3687, 9555],
		[3694, 6770],
		[3701, 9606],
		[3708, 6860],
		[3715, 4896],
		[3722, 4467],
		[3729, 4532],
		[3736, 5671],
		[3743, 5749],
		[3750, 7246],
		[3757, 7851],
		[3764, 6346],
		[3771, 4017],
		[3778, 4107],
		[3785, 5105],
		[3792, 4318],
		[3799, 7382],
		[3806, 4986],
		[3813, 4736],
		[3820, 4027],
		[3827, 5065],
		[3834, 4628],
		[3841, 4230],
		[3848, 4232],
		[3855, 5133],
		[3862, 4339],
		[3869, 4364],
		[3876, 4193],
		[3883, 5387],
		[3890, 4731],
		[3897, 3801],
		[3904, 9266],
		[3911, 10074],
		[3918, 6501],
		[3925, 9824],
		[3932, 9176],
		[3939, 11085],
		[3946, 9827],
		[3953, 5690],
		[3960, 4398],
		[3967, 1589],
		[3974, 1835],
		[3981, 3028],
		[3988, 1811],
		[3995, 1580],
		[4002, 1384],
		[4009, 894],
		[4016, 2370],
		[4023, 3695],
		[4030, 2814],
		[4037, 2656],
		[4044, 2447],
		[4051, 2727],
		[4058, 6840],
		[4065, 1965],
		[4072, 2548],
		[4079, 1586],
		[4086, 2528],
		[4093, 1732],
		[4100, 1601],
		[4107, 1426],
		[4114, 1492],
		[4121, 1598],
		[4128, 1064],
		[4135, 1321]
	]
}
