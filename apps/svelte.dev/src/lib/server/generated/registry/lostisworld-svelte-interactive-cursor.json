{
	"name": "@lostisworld/svelte-interactive-cursor",
	"description": "Create interactive custom cursors in Svelte.",
	"repo_url": "https://github.com/LoStis-World/svelte-interactive-cursor",
	"authors": ["lostisworld"],
	"homepage": "https://github.com/LoStis-World/svelte-interactive-cursor#readme",
	"downloads": 99,
	"updated": "2025-01-11T14:52:12.488Z",
	"tags": ["ui"],
	"github_stars": 11,
	"typescript": true,
	"version": "0.3.2",
	"svelte_range": "^5.0.0",
	"kit_range": "^2.15.1",
	"last_rune_check_version": "0.3.2",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@lostisworld/svelte-interactive-cursor",
				"version": "0.3.2",
				"size": 23355
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# InteractiveCursor Component\n\nThe `InteractiveCursor` is a Svelte 5 component that provides a customizable, interactive cursor effect. It dynamically changes its position and size based on user interactions within specified trigger areas. This component is ideal for enhancing user experiences with visually engaging cursor animations.\n\n### [Live Demo](https://lostis-world.github.io/svelte-interactive-cursor/)\n\n[CHANGELOG](./CHANGELOG.md)\n\n![](./static/images/interactive-cursor-preview.gif)\n\n---\n\n## Installation\n\nYou can install the `InteractiveCursor` component using npm or pnpm:\n\n### Using npm\n\n```bash\nnpm install @lostisworld/svelte-interactive-cursor\n```\n\n### Using pnpm\n\n```bash\npnpm add @lostisworld/svelte-interactive-cursor\n```\n\n---\n\n## Features\n\n1. **Dynamic Resizing**: The cursor adjusts its size and position dynamically when hovering over elements specified in the `useDataElementRect` property.\n2. **Scaling on Interaction**: Scale transformations can be applied to the cursor when hovering over specified elements using `scaleOnActive`.\n3. **Animation Control**: Smooth animations with customizable duration using CSS transitions and `KeyframeAnimationOptions`.\n4. **Custom Icons**: Allows custom rendering inside the cursor element using the `children` property.\n5. **State Exposure**: Exposes `activeDataValue` to track the active interactive element and its name dynamically.\n6. **Responsive Design**: Automatically disables the interactive cursor for small screens or when reduced motion is preferred.\n\n---\n\n### Types\n\n#### `ScaleOnActiveElement`\n\n```ts\ntype ScaleOnActiveElement = {\n\telement: string; // The name of the element (value of `data-interactive-cursor`).\n\tscaleMultiplicator?: number; // Scale factor to apply when the element is active.\n};\n```\n\n#### `InteractiveCursorOptions`\n\n```ts\ninterface InteractiveCursorOptions {\n\tdefaultSize?: number; // Default cursor size in pixels.\n\tscaleOnActive?: ScaleOnActiveElement[]; // Elements with scale factors.\n\tduration?: number; // Animation duration in milliseconds.\n\tuseDataElementRect?: string[]; // Elements that trigger cursor resizing.\n}\n```\n\n---\n\n## Usage\n\n### Basic Setup\n\nImport the `InteractiveCursor` component and include it in your Svelte application:\n\n```svelte\n<script lang=\"ts\">\n\timport InteractiveCursor from '@lostisworld/svelte-interactive-cursor';\n</script>\n\n<div data-interactive-cursor-area>\n\t<button data-interactive-cursor=\"btn\">Hover me!</button>\n</div>\n\n<InteractiveCursor\n\tdefaultSize={40}\n\tduration={300}\n\tscaleOnActive={[{ element: 'btn', scaleMultiplicator: 2 }]}\n\tuseDataElementRect={['btn']}\n/>\n```\n\n### Advanced Example\n\nHere is an example with custom cursor behavior and styles:\n\n```svelte\n<script lang=\"ts\">\n\timport InteractiveCursor, {\n\t\ttype ScaleOnActiveElement\n\t} from '@lostisworld/svelte-interactive-cursor';\n\n\tlet currentCursorState = $state({ activeDataName: '', activeDataElement: null });\n\n\t// Custom cursor props\n\tconst scaleOnActive: ScaleOnActiveElement[] = [\n\t\t{ element: 'image' },\n\t\t{ element: 'video', scaleMultiplicator: 4 },\n\t\t{ element: 'link' },\n\t\t{ element: 'mixblend', scaleMultiplicator: 8 },\n\t\t{ element: 'prevslide', scaleMultiplicator: 5 },\n\t\t{ element: 'nextslide', scaleMultiplicator: 5 }\n\t];\n\n\tconst customCursorProps = [\n\t\t{ data: 'image', icon: '<svg>...</svg>' },\n\t\t{ data: 'video', icon: '<svg>...</svg>', cursorClass: 'bg-red-500 text-white' },\n\t\t{ data: 'link', icon: '<svg>...</svg>', cursorClass: 'bg-sky-500 text-white' },\n\t\t{ data: 'tablist', cursorClass: 'rounded-none outline outline-2 outline-purple-500' }\n\t];\n</script>\n\n<div>\n\t<!-- Interactive Cursor Target Areas -->\n\t<section data-interactive-cursor-area>\n\t\t<div data-interactive-cursor=\"image\">Image</div>\n\t\t<div data-interactive-cursor=\"video\">Video</div>\n\t\t<div data-interactive-cursor=\"link\">Link</div>\n\t\t<ul data-interactive-cursor=\"tablist\">\n\t\t\t<li>Tab 1</li>\n\t\t\t<li>Tab 2</li>\n\t\t</ul>\n\t</section>\n\n\t<!-- Interactive Cursor Component -->\n\t<InteractiveCursor\n\t\tbind:activeDataValue={currentCursorState}\n\t\t{scaleOnActive}\n\t\tuseDataElementRect={['tablist']}\n\t\tclass=\"rounded-full flex items-center justify-center {currentCursorState.activeDataName === ''\n\t\t\t? 'bg-white text-black'\n\t\t\t: customCursorProps.find((state) => state.data === currentCursorState.activeDataName)\n\t\t\t\t\t?.cursorClass || 'bg-white text-black'}\"\n\t>\n\t\t{#each customCursorProps as { icon, data }}\n\t\t\t{#if data === currentCursorState.activeDataName && icon}\n\t\t\t\t{@html icon}\n\t\t\t{/if}\n\t\t{/each}\n\t</InteractiveCursor>\n</div>\n```\n\n---\n\n## Component Props\n\n| **Property**         | **Type**                                                     | **Default**                                       | **Description**                                                                                                                                |\n| -------------------- | ------------------------------------------------------------ | ------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------- |\n| `defaultSize`        | `number`                                                     | `32`                                              | The default size (in pixels) of the cursor.                                                                                                    |\n| `scaleOnActive`      | `ScaleOnActiveElement[]`                                     | `[]`                                              | Array of objects specifying elements and their respective scaling factors.                                                                     |\n| `duration`           | `number`                                                     | `500`                                             | Duration of the cursor's animation in milliseconds.                                                                                            |\n| `useDataElementRect` | `string[]`                                                   | `[]`                                              | Array of element names (matched by `data-interactive-cursor`) for which the cursor dynamically resizes and aligns to their bounding rectangle. |\n| `class`              | `string`                                                     | `''`                                              | Additional classes to apply to the cursor element.                                                                                             |\n| `children`           | `Snippet`                                                    | `undefined`                                       | Custom content to render inside the cursor.                                                                                                    |\n| `activeDataValue`    | `{ activeDataName: string; activeDataElement: HTMLElement }` | `{ activeDataName: '', activeDataElement: null }` | Tracks the currently active interactive element's name and DOM reference.                                                                      |\n\n---\n\n## Data Attributes\n\n### Cursor Areas\n\n- Add `data-interactive-cursor-area` to define areas where the cursor can interact.\n- Add `data-interactive-cursor=\"value\"` to target specific elements and associate them with custom cursor behaviors.\n\nExample:\n\n```html\n<div data-interactive-cursor-area>\n\t<div data-interactive-cursor=\"image\">Image Element</div>\n\t<div data-interactive-cursor=\"video\">Video Element</div>\n</div>\n```\n\n### Scaling on Specific Elements\n\nTo make the cursor scale when hovering over specific elements, define those elements using the `data-interactive-cursor` attribute.\n\n```svelte\n<main data-interactive-cursor-area>\n\t<button data-interactive-cursor=\"button\">Hover Me</button>\n\t<InteractiveCursor\n\t\tdefaultSize={50}\n\t\tscaleOnActive={[{ element: 'button', scaleMultiplicator: 2 }]}\n\t/>\n</main>\n```\n\n---\n\n### Adapting to Element Size\n\nEnable the cursor to adapt its size and position to match specific elements.\n\n```svelte\n<main data-interactive-cursor-area>\n\t<div class=\"card\" data-interactive-cursor=\"card\">Hover me!</div>\n\t<InteractiveCursor useDataElementRect={['card']} />\n</main>\n```\n\n---\n\n## Styling\n\nThe `InteractiveCursor` component includes default styles that can be customized using the `class` prop or overriding CSS variables.\n\n### Default Classes\n\n- `.lw-interactive-cursor`: Base cursor styles.\n- `.lw-interactive-cursor.active`: Active state styles.\n\n### Example Custom Styles\n\n```css\n.lw-interactive-cursor {\n\tbackground-color: white;\n\tcolor: black;\n}\n.lw-interactive-cursor.active {\n\tbackground-color: blue;\n\tcolor: white;\n}\n```\n\n---\n\n### Helper Function: `interactiveCursor`\n\nFor advanced customization, you can use the `interactiveCursor` function to programmatically control the cursor.\n\n#### Parameters\n\n| Parameter | Type                       | Description                                             |\n| --------- | -------------------------- | ------------------------------------------------------- |\n| `cursor`  | `HTMLElement`              | Reference to the cursor DOM element.                    |\n| `options` | `InteractiveCursorOptions` | Configuration options for the cursor (see table below). |\n\n#### Configuration Options\n\n| Option               | Type                     | Default | Description                                            |\n| -------------------- | ------------------------ | ------- | ------------------------------------------------------ |\n| `defaultSize`        | `number`                 | `32`    | Default cursor size in pixels.                         |\n| `scaleOnActive`      | `ScaleOnActiveElement[]` | `[]`    | Elements that trigger scaling when hovered over.       |\n| `duration`           | `number`                 | `500`   | Animation duration in milliseconds.                    |\n| `useDataElementRect` | `string[]`               | `[]`    | Elements for which bounding rect sizes should be used. |\n\n---\n\n## Events and Methods\n\n### Properties\n\n- `isActive`: Boolean indicating whether the cursor is currently active.\n- `activeDataValue`: Tracks the current `data-interactive-cursor` name and element.\n\n### Methods\n\n- `init()`: Initializes event listeners and cursor tracking.\n- `destroy()`: Cleans up event listeners and animations.\n\n---\n\n## Notes\n\n- **Reduced Motion**: Automatically disables animations for users with reduced motion preferences.\n- **Responsive Design**: Disables the interactive cursor on smaller screens (e.g., mobile devices).\n- Always ensure the `data-interactive-cursor-area` attribute is present on interactive parent elements.\n\nThis documentation provides clear guidance on integrating and customizing the `InteractiveCursor` component for a variety of use cases. Let me know if you'd like further refinements!\n\n---\n\n## Contributing\n\nContributions are welcome! Please ensure all changes are well-documented and tested.\n\n1. Fork the repository.\n2. Create a new branch for your feature or bugfix.\n3. Commit your changes with clear and descriptive messages.\n4. Submit a pull request.\n\n---\n\n## License\n\nThis project is licensed under the [MIT License](https://github.com/LoStis-World/svelte-interactive-cursor/blob/main/LICENCE).\n\nHere’s the updated documentation for your `InteractiveCursor` component based on the provided code:\n",
	"legacy_svelte": false,
	"downloads_history": [
		[4009, 961],
		[4016, 89],
		[4023, 493],
		[4030, 68],
		[4037, 47],
		[4044, 26],
		[4051, 24],
		[4058, 9],
		[4065, 6],
		[4072, 19],
		[4079, 55],
		[4086, 17],
		[4093, 32],
		[4100, 29],
		[4107, 33],
		[4114, 99],
		[4121, 98],
		[4128, 222]
	],
	"esm": true,
	"cjs": false
}
