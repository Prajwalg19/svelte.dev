{
	"name": "svelte-keydown",
	"description": "Listen for keyboard events in Svelte applications.",
	"repo_url": "https://github.com/metonym/svelte-keydown",
	"authors": ["metonym"],
	"homepage": "https://github.com/metonym/svelte-keydown",
	"downloads": 445,
	"updated": "2024-03-15T02:20:40.717Z",
	"tags": ["miscellaneous"],
	"github_stars": 44,
	"typescript": true,
	"version": "0.7.0",
	"svelte_range": "^4.2.12",
	"last_rune_check_version": "0.7.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-keydown",
				"version": "0.7.0",
				"size": 8129
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# svelte-keydown\n\n[![NPM][npm]][npm-url]\n\n> Utility to listen for keyboard events.\n\n<!-- REPO_URL -->\n\nUtility component leveraging the [svelte:body API](https://svelte.dev/docs#svelte_body) to listen for [keydown](https://developer.mozilla.org/en-US/docs/Web/API/Document/keydown_event) events.\n\n[Try it in the Svelte REPL](https://svelte.dev/repl/f22827a1e3c94a018a685fec6346db6c).\n\n**Use Cases**\n\n- toggle modals\n- capture a combination of keys (i.e., \"Meta-s\")\n\n---\n\n<!-- TOC -->\n\n## Installation\n\n**Yarn**\n\n```bash\nyarn add -D svelte-keydown\n```\n\n**NPM**\n\n```bash\nnpm i -D svelte-keydown\n```\n\n**pnpm**\n\n```bash\npnpm i -D svelte-keydown\n```\n\n## Usage\n\n### Basic\n\n```svelte\n<script>\n  import Keydown from \"svelte-keydown\";\n\n  let events = [];\n</script>\n\n<Keydown\n  on:Enter={() => {\n    events = [...events, \"enter\"];\n  }}\n/>\n\nPress \"enter\": {events.join(\", \")}\n```\n\n### Pause on input\n\nSet `pauseOnInput` to prevent the utility from capturing keydown events on input events.\n\n```svelte\n<script>\n  import Keydown from \"svelte-keydown\";\n\n  let evt = [];\n</script>\n\n<Keydown\n  pauseOnInput\n  on:key={(e) => {\n    evt = [...evt, e.detail];\n  }}\n/>\n\n<input placeholder=\"Type here...\" />\n\n{evt.join(\"\")}\n```\n\n### Preventing the default behavior\n\nThis component forward the `on:keyup` and `on:keydown` events.\n\nYou can use `on:keydown` to prevent the default behavior for certain keys.\n\nIn the following example, pressing \"Space\" should not cause the browser page to scroll.\n\n```svelte\n<Keydown\n  on:keydown={(e) => {\n    if (e.key === \" \") e.preventDefault();\n  }}\n  on:Space={(e) => {\n    console.log(\"key\", \"Space\");\n  }}\n/>\n```\n\n## Examples\n\n### Escape to close a modal\n\nIn this use case, keydown events are paused if the modal is not open.\n\n```svelte\n<script>\n  import Keydown from \"svelte-keydown\";\n\n  let showModal = true;\n</script>\n\n<Keydown paused={!showModal} on:Escape={() => (showModal = false)} />\n\n<button on:click={() => (showModal = !showModal)}>Toggled? {showModal}</button>\n```\n\n### `on:combo`\n\nUse the `combo` dispatched event to listen for a combination of keys.\n\n```svelte\n<script>\n  import Keydown from \"svelte-keydown\";\n\n  let combo = [];\n</script>\n\n<Keydown on:combo={(e) => (combo = [...combo, e.detail])} />\n\n{combo.join(\", \")}\n```\n\n#### `separator`\n\nUse the `separator` property to customize the separating key between multiple keys.\n\n```svelte\n<script>\n  import Keydown from \"svelte-keydown\";\n\n  let combo = [];\n</script>\n\n<Keydown separator=\"+\" on:combo={(e) => (combo = [...combo, e.detail])} />\n\n{combo.join(\", \")}\n```\n\n## API\n\n| Prop         | Type      | Default value |\n| :----------- | :-------- | :------------ |\n| paused       | `boolean` | `false`       |\n| pauseOnInput | `boolean` | `false`       |\n| separator    | `string`  | `-`           |\n\n### Forwarded events\n\n- `on:keyup`\n- `on:keydown`\n\n### Dispatched events\n\n#### `on:[Key]`\n\nExample:\n\n```svelte no-eval\n<Keydown on:Enter />\n<Keydown on:Escape />\n<Keydown on:Space />\n```\n\n#### `on:key`\n\nAlternative API to `on:[Key]`.\n\nExample:\n\n```svelte\n<script>\n  import Keydown from \"svelte-keydown\";\n\n  let keys = [];\n</script>\n\n<Keydown on:key={({ detail }) => (keys = [...keys, detail])} />\n\n<pre>{JSON.stringify(keys, null, 2)}</pre>\n```\n\n#### `on:combo`\n\nTriggered when a sequence of keys are pressed and cleared when a keyup event is fired.\n\nExamples:\n\n- \"Shift-S\"\n- \"Meta-c\" (Copy)\n- \"Meta-v\" (Paste)\n\n```svelte\n<script>\n  import Keydown from \"svelte-keydown\";\n\n  let combos = [];\n</script>\n\n<Keydown on:combo={({ detail }) => (combos = [...combos, detail])} />\n\n<pre>{JSON.stringify(combos, null, 2)}</pre>\n```\n\n## TypeScript\n\nSvelte version 3.31 or greater is required to use this component with TypeScript.\n\nTypeScript definitions are located in the [types folder](./types).\n\n## Changelog\n\n[CHANGELOG.md](CHANGELOG.md)\n\n## License\n\n[MIT](LICENSE)\n\n[npm]: https://img.shields.io/npm/v/svelte-keydown.svg?color=%23ff3e00&style=for-the-badge\n[npm-url]: https://npmjs.com/package/svelte-keydown\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 312],
		[3596, 273],
		[3603, 346],
		[3610, 414],
		[3617, 700],
		[3624, 487],
		[3631, 548],
		[3638, 421],
		[3645, 379],
		[3652, 365],
		[3659, 503],
		[3666, 503],
		[3673, 378],
		[3680, 382],
		[3687, 441],
		[3694, 531],
		[3701, 514],
		[3708, 448],
		[3715, 450],
		[3722, 480],
		[3729, 309],
		[3736, 133],
		[3743, 213],
		[3750, 237],
		[3757, 214],
		[3764, 256],
		[3771, 192],
		[3778, 188],
		[3785, 297],
		[3792, 192],
		[3799, 246],
		[3806, 194],
		[3813, 174],
		[3820, 199],
		[3827, 142],
		[3834, 135],
		[3841, 206],
		[3848, 353],
		[3855, 259],
		[3862, 243],
		[3869, 402],
		[3876, 390],
		[3883, 418],
		[3890, 434],
		[3897, 398],
		[3904, 389],
		[3911, 283],
		[3918, 298],
		[3925, 418],
		[3932, 472],
		[3939, 426],
		[3946, 404],
		[3953, 542],
		[3960, 472],
		[3967, 372],
		[3974, 501],
		[3981, 335],
		[3988, 378],
		[3995, 425],
		[4002, 236],
		[4009, 124],
		[4016, 173],
		[4023, 269],
		[4030, 299],
		[4037, 321],
		[4044, 524],
		[4051, 386],
		[4058, 596],
		[4065, 592],
		[4072, 751],
		[4079, 468],
		[4086, 379],
		[4093, 477],
		[4100, 479],
		[4107, 461],
		[4114, 445],
		[4121, 445],
		[4128, 459]
	]
}
