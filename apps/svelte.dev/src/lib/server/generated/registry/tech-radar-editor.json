{
	"name": "tech-radar-editor",
	"description": "Create and edit Tech Radars with an easy-to-use Svelte component.",
	"repo_url": "https://github.com/jcreek/Tech-Radar-Editor",
	"authors": ["jcreek"],
	"homepage": "https://github.com/jcreek/Tech-Radar-Editor#readme",
	"downloads": 7,
	"updated": "2025-03-28T16:39:40.942Z",
	"tags": ["tooling"],
	"github_stars": 1,
	"typescript": true,
	"version": "1.1.0",
	"svelte_range": "^4.2.18",
	"last_rune_check_version": "1.1.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "tech-radar-editor",
				"version": "1.1.0",
				"size": 141137
			},
			{
				"name": "svelte",
				"version": "4.2.19",
				"size": 2633608
			},
			{
				"name": "acorn",
				"version": "8.14.1",
				"size": 547473
			},
			{
				"name": "code-red",
				"version": "1.0.4",
				"size": 55185
			},
			{
				"name": "@jridgewell/sourcemap-codec",
				"version": "1.5.0",
				"size": 112815
			},
			{
				"name": "@types/estree",
				"version": "1.0.7",
				"size": 26147
			},
			{
				"name": "estree-walker",
				"version": "3.0.3",
				"size": 17599
			},
			{
				"name": "periscopic",
				"version": "3.1.0",
				"size": 11219
			},
			{
				"name": "is-reference",
				"version": "3.0.3",
				"size": 3953
			},
			{
				"name": "css-tree",
				"version": "2.3.1",
				"size": 1190591
			},
			{
				"name": "mdn-data",
				"version": "2.0.30",
				"size": 602138
			},
			{
				"name": "source-map-js",
				"version": "1.2.1",
				"size": 139872
			},
			{
				"name": "aria-query",
				"version": "5.3.2",
				"size": 176114
			},
			{
				"name": "magic-string",
				"version": "0.30.17",
				"size": 467464
			},
			{
				"name": "axobject-query",
				"version": "4.1.0",
				"size": 110878
			},
			{
				"name": "locate-character",
				"version": "3.0.0",
				"size": 5325
			},
			{
				"name": "@ampproject/remapping",
				"version": "2.3.0",
				"size": 78946
			},
			{
				"name": "@jridgewell/gen-mapping",
				"version": "0.3.8",
				"size": 81596
			},
			{
				"name": "@jridgewell/set-array",
				"version": "1.2.1",
				"size": 17945
			},
			{
				"name": "@jridgewell/trace-mapping",
				"version": "0.3.25",
				"size": 169330
			},
			{
				"name": "@jridgewell/resolve-uri",
				"version": "3.1.2",
				"size": 53153
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[1, 3],
			[3, 4],
			[3, 5],
			[3, 2],
			[3, 6],
			[6, 5],
			[3, 7],
			[7, 5],
			[7, 6],
			[7, 8],
			[8, 5],
			[1, 9],
			[9, 10],
			[9, 11],
			[1, 12],
			[1, 7],
			[1, 8],
			[1, 13],
			[13, 4],
			[1, 5],
			[1, 6],
			[1, 14],
			[1, 15],
			[1, 16],
			[16, 17],
			[17, 18],
			[17, 4],
			[17, 19],
			[19, 20],
			[19, 4],
			[16, 19],
			[1, 19],
			[1, 4]
		],
		"circular": []
	},
	"readme": "# Tech Radar Editor\n\n![NPM Version](https://img.shields.io/npm/v/tech-radar-editor)\n![NPM Downloads](https://img.shields.io/npm/dy/tech-radar-editor)\n\nA web component providing an easy-to-use UI that allows users to easily create and edit a Tech Radar without having to directly modify a JSON file. It also adds validation to ensure that your Tech Radar is always in a valid state.\n\n![Screenshot](./screenshot.png)\n\n## Who created the Tech Radar?\n\n[ThoughtWorks](https://thoughtworks.com/radar) created the Tech Radar concept, and [Zalando created the visualization](https://opensource.zalando.com/tech-radar/) that is popular today.\n\n### Purpose\n\nZalando has a fantastic description [on their website](https://opensource.zalando.com/tech-radar/):\n\n> The Tech Radar is a tool to inspire and support engineering teams at Zalando to pick the best technologies for new projects; it provides a platform to share knowledge and experience in technologies, to reflect on technology decisions and continuously evolve our technology landscape. Based on the pioneering work of ThoughtWorks, our Tech Radar sets out the changes in technologies that are interesting in software development — changes that we think our engineering teams should pay attention to and consider using in their projects.\n\nIt serves and scales well for teams and companies of all sizes that want to have alignment across dozens of technologies and visualize it in a simple way.\n\n## Include the Component in Spotify Backstage\n\n### Install\n\nFor either simple or advanced installations, you'll need to add the dependency using Yarn:\n\nFrom your Backstage root directory:\n\n```bash\nyarn --cwd packages/app add tech-radar-editor\n```\n\n### Configuration\n\nModify your app routes to include the Router component exported from the tech radar, for example:\n\n```tsx\n// In packages/app/src/App.tsx\nimport 'tech-radar-editor';\n\nconst routes = (\n  <FlatRoutes>\n    {/* ...other routes */}\n    <Route\n      path=\"/tech-radar-editor\"\n      element={<tech-radar-editor></tech-radar-editor>}\n    />\n```\n\n#### How to Use This Component in Backstage with a Config-Based URL\n\n##### Configure the URL in app-config.yaml\n\nIn your Backstage `app-config.yaml`, add a config key for the editor’s JSON URL. For example:\n\n```yaml\ntechRadar:\n  url: \"https://example.org/path/to/tech-radar.json\"\n```\n\nAdjust the key and value to suit your environment.\n\n##### Create a small React wrapper in your Backstage app\n\nSomewhere in your Backstage app (for example, in `App.tsx` or in a separate `TechRadarEditorWrapper.tsx` file), create a tiny wrapper component to read the config and pass that URL to the `<tech-radar-editor>` web component as an attribute:\n\n```tsx\nimport React from \"react\";\nimport { useApi, configApiRef } from \"@backstage/core-plugin-api\";\n\n// Import the custom element so that React recognizes <tech-radar-editor>\nimport \"tech-radar-editor\";\n\nexport const TechRadarEditorWrapper = () => {\n  const configApi = useApi(configApiRef);\n  const dataUrl = configApi.getOptionalString(\"techRadar.url\") ?? \"\";\n\n  return <tech-radar-editor data-url={dataUrl} />;\n};\n```\n\n##### Add a route for your Tech Radar Editor\n\nIn your Backstage `App.tsx` (or wherever you define your routes), import that wrapper and point a route to it:\n\n```tsx\n<Route path=\"/tech-radar-editor\" element={<TechRadarEditorWrapper />} />\n```\n\nNow when you visit `<your-backstage-host>/tech-radar-editor`, the `<tech-radar-editor>` component will automatically fetch the JSON from your configured URL.\n\n## Consume the Component in Plain JavaScript\n\nInclude the component in an HTML file:\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <title>Tech Radar Editor</title>\n    <script type=\"module\" src=\"./tech-radar-editor.es.js\"></script>\n  </head>\n  <body>\n    <tech-radar-editor></tech-radar-editor>\n  </body>\n</html>\n```\n\n## Consume the Component in React\n\nIn a React project, you can use the web component as you would use any custom HTML element.\n\nFirst, ensure that the component is imported or included:\n\n```js\n// index.js\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\n// Import the component\nimport \"tech-radar-editor\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <tech-radar-editor></tech-radar-editor>\n    </div>\n  );\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n```\n\nNote: In React, you might need to instruct TypeScript about the custom element. Create a react-app-env.d.ts or a global.d.ts file:\n\n```ts\n// react-app-env.d.ts\ndeclare namespace JSX {\n  interface IntrinsicElements {\n    \"tech-radar-editor\": any;\n  }\n}\n```\n\n## Building the Component\n\nTo build the component, you need to have Node.js installed. Clone the repository and run the following commands:\n\n```bash\npnpm install\npnpm build\n```\n\nTo get it ready to add to NPM or a CDN, run:\n\n```bash\npnpm build\npnpm pack\n```\n\nYou can then test the package locally.\n\nTo publish the component to NPM, run:\n\n```bash\nnpm login\nnpm publish\n```\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3918, 144],
		[3925, 13],
		[3939, 7],
		[3946, 3],
		[3953, 1],
		[3960, 3],
		[3967, 2],
		[3974, 1],
		[3981, 3],
		[3988, 4],
		[3995, 5],
		[4009, 1],
		[4016, 2],
		[4023, 4],
		[4030, 2],
		[4037, 5],
		[4044, 6],
		[4051, 3],
		[4058, 2],
		[4065, 2],
		[4079, 1],
		[4086, 1],
		[4093, 2],
		[4100, 68],
		[4107, 14],
		[4114, 7],
		[4121, 8],
		[4128, 7],
		[4135, 10]
	],
	"esm": true,
	"cjs": false
}
