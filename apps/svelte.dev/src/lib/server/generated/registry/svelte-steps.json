{
	"name": "svelte-steps",
	"description": "Create customizable step components in Svelte.",
	"repo_url": "https://github.com/shaozi/svelte-steps",
	"authors": ["shaozi"],
	"homepage": "https://svelte-steps.web.app",
	"downloads": 3945,
	"updated": "2022-12-21T15:49:56.086Z",
	"tags": ["ui"],
	"github_stars": 106,
	"typescript": true,
	"version": "2.4.1",
	"svelte_range": "^3.55.0",
	"kit_range": "^1.0.1",
	"last_rune_check_version": "2.4.1",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-steps",
				"version": "2.4.1",
				"size": 24796
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# üêæ Svelte steps component üêæ\n\nA customizable step component written in Svelte!\n\n- [x] Bootstrap color theme\n- [x] Icons\n- [x] Animate progress\n- [x] Horizontal and vertical\n- [x] Dumpbells and bar\n- [x] Custom size\n- [x] Custom color\n- [x] Custom font\n- [x] Circle, square and between\n- [x] Left and right\n\n![demo](static/demo.png)\n\n## Installation\n\n```sh\nnpm install --saveDev svelte-steps\n```\n\n## Example Usages\n\nClone this project and run it. Itself is an example. Take a look at the homepage [here](https://svelte-steps.web.app).\nThe source file of the demo is at [src/routes/index.svelte](src/routes/index.svelte)\n\n### Basic Usage\n\n```javascript\n<script>\n    import { Steps } from 'svelte-steps';\n    let steps = [\n        { text: 'step one' },\n        { text: 'step two' },\n        { text: 'the last step' }\n    ];\n</script>\n\n<Steps {steps} />\n```\n\n### Vertical Steps\n\n> NOTE: needs svelte version 3.46.3 or newer\n\nAdd `vertical` props to `Steps` component.\n\n```javascript\n<Steps vertical {steps} />\n```\n\nYou can also use `reverse` to put text label to the left.\n\n```javascript\n<Steps vertical reverse {steps}>\n```\n\n### With Icons\n\n```javascript\nlet steps = [\n  { text: 'step one', icon: IconMoney },\n  { text: 'step two', icon: IconPaperClip },\n  { text: 'the last step', icon: IconPerson },\n]\n```\n\n### Square Steps\n\n```javascript\n<Steps {steps} borderRadius=\"0\"/>\n```\n\n### Custom Color\n\n```javascript\n<Steps {steps} primary=\"#ff0000\" secondary=\"#ffaaaa\"/>\n```\n\n### Custom Size\n\n```javascript\n<Steps {steps} size=\"2rem\" line=\"2px\"/>\n```\n\n### No Text\n\n```javascript\nlet steps = [{ icon: IconMoney }, { icon: IconPaperClip }, { icon: IconPerson }]\n```\n\n### Bar\n\n```javascript\n<Steps {steps} size=\"2rem\" line=\"2rem\"/>\n```\n\n### Use alert and customize icons (**NEW**)\n\n````javascript\nimport Escalation from './YourEscalation.svelt'\n<script>\n    let steps = [\n        { text: 'step one' , alert: true},\n        { text: 'step two' },\n        { text: 'the last step' }\n    ];\n</script>\n<Steps {steps} alertColor={'#ff00ff'} alertIcon={Escalation} checkIcon={null}>\n```\n\n### Events\n\n```javascript\n<Steps\n    {steps}\n    {current}\n    on:click={(e) => {\n        last = e.detail.last;\n        current = e.detail.current;\n    }}\n/>\n````\n\n## Use with Bootstrap\n\nIt by default uses `--bs-primary`, `--bs-secondary`, `--bs-danger`, `--bs-light`, and `--bs-dark` css variables if they are defined. These css vars are defined in bootstrap css:\n\n```html\n<!-- Include Bootstrap css in app.html <head></head> -->\n<link\n  href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css\"\n  rel=\"stylesheet\"\n  integrity=\"sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC\"\n  crossorigin=\"anonymous\"\n/>\n```\n\n## Props\n\n- `steps`:\n  - Array of object. Length has to be more than 1\n  - Required\n  - Each item is a step object that can have:\n    - `text`: The text displayed below each steps.\n    - `icon`: A svelte component displayed inside each steps.\n    - `iconProps`: An object that will be passed as props to the `icon` component.\n- `current`: current step index. Number. Default `0`\n- `size`: size of the step buttons. String. Default `\"3rem\"` (`\"2rem\"` for vertical steps)\n- `line`: thickness of the connecting lines between the step buttons. String. Default `\"0.3rem\"` (`\"0.15rem\"` for vertical steps)\n- `primary`: Primary color of passed and current steps. String. Default `'var(--bs-primary, #3a86ff)'`\n- `secondary`: Secondary color of future steps. String. Default `'var(--bs-secondary, #bbbbc0)'`\n- `light`: Primary color of text color in passed anc current steps. String. Default `'var(--bs-light, white)'`\n- `dark`: Secondary color of text color in future steps. String. Default `'var(--bs-dark, black)'`\n- `borderRadius`: Border radius of the step buttons. String. Default `'50%'` (circle)\n- `fontFamily`: Font family of the component. String. Default `\"'Helvetica Neue', Helvetica, Arial, sans-serif\"`\n- `vertical`: Vertical steps. Default `false`\n- `reverse`: For horizontal steps, reverse the step from right to the left; for vertical steps, reverse puts text labels to the left. Default `false`\n- `clickable`: When set to `false`, Clicking icons and labels will not change step. You have to change `current` to change step. Default `true`\n- `checkIcon`: User defined check icon for passed steps. If not specified, use the default check mark. Set to `null` if you don't want a check icon.\n- `alertIcon`: User defined alert icon for passed steps that has truthful `alert` property. If not specified, use the default alert icon. Set to `null` if you don't want an alert icon.\n- `alertColor`: User defined bg color for passed steps that has truthful `alert` property. Default 'var(--bs-danger, #dc3545)'\n\n## Events\n\n- `on:click(e)`: click event. Event detail object has two keys:\n  - `e.detail.current`: the index of current step\n  - `e.detail.last`: the index of last step\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3596, 928],
		[3603, 1151],
		[3610, 1005],
		[3617, 1241],
		[3624, 944],
		[3631, 914],
		[3638, 991],
		[3645, 552],
		[3652, 546],
		[3659, 948],
		[3666, 1018],
		[3673, 1234],
		[3680, 1065],
		[3687, 903],
		[3694, 1043],
		[3701, 912],
		[3708, 1063],
		[3715, 747],
		[3722, 940],
		[3729, 889],
		[3736, 869],
		[3743, 1235],
		[3750, 1440],
		[3757, 1338],
		[3764, 1253],
		[3771, 1052],
		[3778, 963],
		[3785, 851],
		[3792, 832],
		[3799, 978],
		[3806, 1580],
		[3813, 1550],
		[3820, 1985],
		[3827, 1416],
		[3834, 1901],
		[3841, 2040],
		[3848, 2039],
		[3855, 2179],
		[3862, 1601],
		[3869, 1978],
		[3876, 1653],
		[3883, 2171],
		[3890, 1966],
		[3897, 2207],
		[3904, 2799],
		[3911, 2540],
		[3918, 2912],
		[3925, 1988],
		[3932, 2776],
		[3939, 3100],
		[3946, 3219],
		[3953, 2254],
		[3960, 2363],
		[3967, 2456],
		[3974, 3395],
		[3981, 2272],
		[3988, 2894],
		[3995, 2253],
		[4002, 2661],
		[4009, 1240],
		[4016, 1747],
		[4023, 2059],
		[4030, 2720],
		[4037, 2670],
		[4044, 2577],
		[4051, 3064],
		[4058, 3095],
		[4065, 2585],
		[4072, 2913],
		[4079, 2932],
		[4086, 3413],
		[4093, 2920],
		[4100, 3167],
		[4107, 4038],
		[4114, 3945],
		[4121, 3947],
		[4128, 3601],
		[4135, 3165]
	],
	"esm": true,
	"cjs": false
}
