{
	"name": "@felte/validator-vest",
	"description": "Integrate Vest validation with Felte forms.",
	"repo_url": "https://github.com/pablo-abc/felte",
	"authors": ["pberganza"],
	"homepage": "https://github.com/pablo-abc/felte/tree/main/packages/validator-vest",
	"downloads": 471,
	"updated": "2024-10-29T22:05:22.422Z",
	"tags": ["miscellaneous"],
	"github_stars": 1050,
	"typescript": true,
	"version": "1.0.17",
	"svelte_range": "^3.46.4",
	"last_rune_check_version": "1.0.17",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@felte/validator-vest",
				"version": "1.0.17",
				"size": 15576
			},
			{
				"name": "@felte/common",
				"version": "1.1.9",
				"size": 285201
			}
		],
		"dependencies": [[0, 1]],
		"circular": []
	},
	"readme": "# @felte/validator-vest\n\n[![Tests](https://github.com/pablo-abc/felte/workflows/Tests/badge.svg)](https://github.com/pablo-abc/felte/actions/workflows/test.yml)\n[![Bundle size](https://img.shields.io/bundlephobia/min/@felte/validator-vest)](https://bundlephobia.com/result?p=@felte/validator-vest)\n[![NPM Version](https://img.shields.io/npm/v/@felte/validator-vest)](https://www.npmjs.com/package/@felte/validator-vest)\n[![codecov](https://codecov.io/gh/pablo-abc/felte/branch/main/graph/badge.svg?token=T73OJZ50LC)](https://codecov.io/gh/pablo-abc/felte)\n\nA package to help you handle validation with Vest in Felte.\n\n## Installation\n\n```sh\nnpm install --save @felte/validator-vest vest\n\n# Or, if you use yarn\n\nyarn add @felte/validator-vest vest\n```\n\n## Usage\n\nExtend Felte by calling `validator` and adding your suite to its `suite`.\n\n```javascript\nimport { validator } from '@felte/validator-vest';\nimport { create, enforce, test } from 'vest';\n\nconst suite = create('form', (data) => {\n  test('email', 'Email is required', () => {\n    enforce(data.email).isNotEmpty();\n  });\n  test('password', 'Password is required', () => {\n    enforce(data.password).isNotEmpty();\n  });\n});\n\nconst { form } = createForm({\n  // ...\n  extend: validator({ suite }), // or `extend: [validator({ suite })],`\n  // ...\n});\n```\n\nOR use the `validateSuite` function directly in the `validate` option of `createForm`. (No need to extend Felte).\n\n```javascript\nimport { validateSuite } from '@felte/validator-vest';\nimport { create, enforce, test } from 'vest';\n\nconst suite = create('form', (data) => {\n  test('email', 'Email is required', () => {\n    enforce(data.email).isNotEmpty();\n  });\n  test('password', 'Password is required', () => {\n    enforce(data.password).isNotEmpty();\n  });\n});\n\nconst { form } = createForm({\n  // ...\n  validate: validateSuite(suite),\n  // ...\n});\n```\n\n## Warnings\n\nThis validator will update the `warnings` store with the messages returned from any test marked with `warn()`:\n\n```javascript\nimport { validator } from '@felte/validator-vest';\nimport { create, enforce, test, warn } from 'vest';\n\nconst suite = create('form', (data) => {\n  test('email', 'Email is required', () => {\n    enforce(data.email).isNotEmpty();\n  });\n  test('password', 'Password is required', () => {\n    enforce(data.password).isNotEmpty();\n  });\n\n  test('password', 'Password not secure', () => {\n    warn();\n    // We only warn if the user has already started typing a value\n    if (!data.password) return;\n    enforce(data.password).longerThanOrEquals(8);\n  });\n});\n\nconst { form } = createForm({\n  // ...\n  extend: validator({ suite }), // or `extend: [validator({ suite })],`\n  // ...\n});\n```\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3589, 212],
		[3596, 224],
		[3603, 240],
		[3610, 199],
		[3617, 369],
		[3624, 286],
		[3631, 310],
		[3638, 231],
		[3645, 84],
		[3652, 231],
		[3659, 425],
		[3666, 349],
		[3673, 396],
		[3680, 414],
		[3687, 321],
		[3694, 308],
		[3701, 311],
		[3708, 362],
		[3715, 394],
		[3722, 318],
		[3729, 259],
		[3736, 183],
		[3743, 306],
		[3750, 311],
		[3757, 440],
		[3764, 311],
		[3771, 431],
		[3778, 282],
		[3785, 247],
		[3792, 330],
		[3799, 355],
		[3806, 359],
		[3813, 317],
		[3820, 366],
		[3827, 377],
		[3834, 223],
		[3841, 359],
		[3848, 206],
		[3855, 347],
		[3862, 322],
		[3869, 306],
		[3876, 237],
		[3883, 377],
		[3890, 314],
		[3897, 345],
		[3904, 316],
		[3911, 256],
		[3918, 288],
		[3925, 200],
		[3932, 153],
		[3939, 246],
		[3946, 192],
		[3953, 324],
		[3960, 251],
		[3967, 326],
		[3974, 314],
		[3981, 254],
		[3988, 308],
		[3995, 268],
		[4002, 250],
		[4009, 92],
		[4016, 108],
		[4023, 292],
		[4030, 585],
		[4037, 316],
		[4044, 618],
		[4051, 379],
		[4058, 352],
		[4065, 418],
		[4072, 427],
		[4079, 391],
		[4086, 339],
		[4093, 373],
		[4100, 321],
		[4107, 580],
		[4114, 471],
		[4121, 290],
		[4128, 201]
	],
	"esm": true,
	"cjs": true
}
