{
	"name": "@aredridel/svelte-damped-store",
	"description": "Create derived writable store that can suspend updates.",
	"repo_url": "https://github.com/aredridel/svelte-damped-store",
	"authors": ["aredridel"],
	"homepage": "https://github.com/aredridel/svelte-damped-store#readme",
	"downloads": 4,
	"updated": "2022-05-15T19:27:58.801Z",
	"tags": ["miscellaneous"],
	"github_stars": 6,
	"typescript": true,
	"version": "1.0.1",
	"svelte_range": "^3.48.0",
	"last_rune_check_version": "1.0.1",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@aredridel/svelte-damped-store",
				"version": "1.0.1",
				"size": 9210
			},
			{
				"name": "svelte",
				"version": "3.59.2",
				"size": 10624206
			}
		],
		"dependencies": [[0, 1]],
		"circular": []
	},
	"legacy_svelte": false,
	"readme": "\n# Svelte Damped Store\n\nThis module came about because I was binding an `<input type=\"range\">` to a numeric store, which would update and reflect the most recent server value back, while user input was ongoing. This gives a tidy interface to suspend updates while a user is interacting (at least with the mouse for now), and resume when they let go and a little tine has passed.\n\n## Use\n\n```svelte\n<script lang=\"ts\">\n\timport { damped, dampedAction } from \"@aredridel/svelte-damped-store\";\n\timport { writable } from \"svelte/store\";\n\n\tconst base = writable(0);\n\t// Simulate server roundtripping\n\tbase.subscribe(val => {\n\t\tsetTimeout(() => {\n\t\t\twritable.set(val);\n\t\t}, 80);\n\t});\n\n\n\tconst store = damped(base);\n</script>\n\n<input typ=e\"range\" bind:value={$store} use:dampedAction={{store, timeout: 100}} /> \n```\n",
	"downloads_history": [
		[3596, 5],
		[3603, 2],
		[3610, 1],
		[3631, 2],
		[3645, 2],
		[3659, 5],
		[3666, 2],
		[3680, 1],
		[3708, 3],
		[3722, 1],
		[3729, 2],
		[3757, 1],
		[3771, 2],
		[3778, 2],
		[3785, 1],
		[3799, 2],
		[3806, 3],
		[3820, 8],
		[3827, 1],
		[3834, 1],
		[3855, 11],
		[3862, 4],
		[3876, 6],
		[3883, 2],
		[3890, 2],
		[3897, 2],
		[3904, 5],
		[3911, 2],
		[3918, 2],
		[3932, 2],
		[3946, 1],
		[3953, 2],
		[3960, 1],
		[3974, 2],
		[3981, 3],
		[3995, 2],
		[4002, 2],
		[4009, 1],
		[4016, 2],
		[4030, 2],
		[4037, 3],
		[4044, 5],
		[4051, 3],
		[4058, 2],
		[4072, 1],
		[4086, 7],
		[4093, 10],
		[4100, 6],
		[4107, 1],
		[4114, 4],
		[4121, 7],
		[4128, 2]
	],
	"esm": true,
	"cjs": false
}
