{
	"name": "@untemps/svelte-palette",
	"description": "Displays customizable color picker component for Svelte.",
	"repo_url": "https://github.com/untemps/svelte-palette",
	"authors": ["untemps"],
	"homepage": "https://svelte-palette.vercel.app",
	"downloads": 141,
	"updated": "2024-02-29T10:00:11.025Z",
	"tags": ["ui"],
	"github_stars": 28,
	"typescript": true,
	"version": "4.1.0",
	"svelte_range": "^4.0.0",
	"kit_range": "^1.27.6",
	"last_rune_check_version": "4.1.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@untemps/svelte-palette",
				"version": "4.1.0",
				"size": 69890
			},
			{
				"name": "@untemps/svelte-use-drop-outside",
				"version": "1.6.0",
				"size": 224216
			},
			{
				"name": "@untemps/dom-observer",
				"version": "2.0.0",
				"size": 76324
			},
			{
				"name": "@untemps/utils",
				"version": "2.6.0",
				"size": 20540
			},
			{
				"name": "@babel/runtime",
				"version": "7.27.1",
				"size": 246647
			},
			{
				"name": "svelte",
				"version": "3.49.0",
				"size": 7247697
			},
			{
				"name": "@untemps/svelte-use-tooltip",
				"version": "2.8.0",
				"size": 246967
			},
			{
				"name": "@untemps/utils",
				"version": "3.0.0",
				"size": 15728
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[1, 3],
			[3, 4],
			[1, 5],
			[0, 6],
			[6, 5],
			[6, 3],
			[6, 2],
			[0, 7]
		],
		"circular": []
	},
	"readme": "<p align=\"center\">\n    <img src=\"assets/svelte-palette.gif\" alt=\"svelte-palette\" height=\"300\"/>\n</p>\n<p align=\"center\">\n    Svelte component to display a customisable color picker\n</p>\n\n---\n\n[![npm](https://img.shields.io/npm/v/@untemps/svelte-palette?style=for-the-badge)](https://www.npmjs.com/package/@untemps/svelte-palette)\n[![GitHub Workflow Status](https://img.shields.io/github/actions/workflow/status/untemps/svelte-palette/index.yml?style=for-the-badge)](https://github.com/untemps/svelte-palette/actions)\n[![Codecov](https://img.shields.io/codecov/c/github/untemps/svelte-palette?style=for-the-badge)](https://codecov.io/gh/untemps/svelte-palette)\n\n## Demo\n\n<p align=\"center\">\n    :red_circle:&nbsp;<big><a href=\"https://svelte-palette.vercel.app\" target=\"_blank\" rel=\"noopener\">LIVE\n    DEMO</a></big>&nbsp;:red_circle:\n</p>\n\n## Installation\n\n```bash\nyarn add @untemps/svelte-palette\n```\n\n## Usage\n\n### Basic Usage\n\n```html\n<script>\n    import { Palette } from '@untemps/svelte-palette'\n\n    const colors = [\n\t\t'#865C54',\n\t\t'#8F5447',\n\t\t'#A65846',\n\t\t'#A9715E',\n\t\t'#AD8C72',\n    ]\n\n\tlet bgColor = colors[0]\n</script>\n\n<main style=\"--bgColor:{bgColor}\">\n\t<Palette {colors} on:select={({ detail: { color } }) => (bgColor = color)} />\n</main>\n\n<style>\n\tmain {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\theight: 100%;\n\t\tbackground-color: var(--bgColor);\n\t}\n```\n\n## API\n\n| Props                    | Type                                                           | Default | Description                                                                                                                                                                                               |\n| ------------------------ | -------------------------------------------------------------- | ------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `colors`                 | string[] or Promise<string[]> or object[] or Promise<object[]> | []      | Array of colors to be displayed in the palette. See more about colors in the [Colors Setting](#colors-setting) section                                                                                    |\n| `selectedColor`          | string                                                         | null    | Default selected color. The color must be included in the `colors` prop.                                                                                                                                  |\n| `isCompact`              | boolean                                                        | false   | Flag to display the palette in compact mode.                                                                                                                                                              |\n| `compactColorIndices`    | number[]                                                       | []      | Array of indices to pick from the `colors` array to be displayed in the compacted palette (see [Compact Mode](#compact-mode)).                                                                            |\n| `allowDuplicates`        | boolean                                                        | false   | Flag to allow color duplication.                                                                                                                                                                          |\n| `deletionMode`           | string                                                         | \"none\"  | Mode of slot deletion, between `\"none\"` and `\"tooltip\"` and `\"drop\"` (see [Deletion Modes](#deletion-modes)).                                                                                             |\n| `tooltipClassName`       | string                                                         | null    | Class name to pass down to the deletion tooltip (see [Styles](#styles)).                                                                                                                                  |\n| `tooltipContentSelector` | string                                                         | null    | Selector of the deletion tooltip content (see [Customize the Content of the Deletion Tooltip](#customize-the-content-of-the-deletion-tooltip)).                                                           |\n| `showTransparentSlot`    | boolean                                                        | false   | Flag to display a transparent slot at the start of the slot list.                                                                                                                                         |\n| `maxColors`              | number                                                         | 30      | Maximum number of slots to be displayed in the palette. Set this value to `-1` to allow infinite number of slots.                                                                                         |\n| `showInput`              | boolean                                                        | false   | Flag to display the input within the footer slot.                                                                                                                                                         |\n| `inputType`              | string                                                         | \"text\"  | Type of the input within the footer slot. Only \"text\" and \"color\" are allowed. All other value will be replaced by \"text\".                                                                                |\n| `numColumns`             | number                                                         | 5       | Number of columns of the palette grid. This value can't exceed the number of maximum colors defined in `maxColors` and can't be lower than 1. Set this value to `0` to display the slots on a single row. |\n| `transition`             | object                                                         | null    | Animation when a slot is rendered (see [Transition](#transition)).                                                                                                                                        |\n\n## Events\n\n| Event    | Arguments | Type   | Description                                 |\n| -------- | --------- | ------ | ------------------------------------------- |\n| `select` |           |        | **Dispatched whenever a color is clicked.** |\n|          | `color`   | string | Selected color string.                      |\n\n## Slots\n\n| Slot               | Description                                                                           | Available Properties Props                                                |\n| ------------------ | ------------------------------------------------------------------------------------- | ------------------------------------------------------------------------- |\n| `header`           | Allow to add a header to the palette. By default, it is empty.                        | `selectedColor`                                                           |\n| `footer`           | Allow to add a footer to the palette. By default, it contains an input to add colors. | `selectedColor`                                                           |\n| `slot`             | Allow to replace the default color slots.                                             | `index`, `color`, `colorName`, `selectedColor`, `transition`, `isCompact` |\n| `transparent_slot` | Allow to replace the default transparent slot.                                        | -                                                                         |\n| `before_slot`      | Allow to add an element before the color slots.                                       | `selectedColor`, `transition`, `isCompact`                                |\n| `after_slot`       | Allow to add an element after the color slots.                                        | `selectedColor`, `transition`, `isCompact`                                |\n| `input`            | Allow to replace the input in the footer if the default footer slot is kept as it is. | `selectedColor`, `inputType`                                              |\n| `settings`         | Allow to replace the settings panel. See the demo to grab a usage example.            | `onClose`                                                                 |\n| `tools`            | Allow to replace the tools panel.                                                     | `isCompact`, `compactColorIndices`, `onSelect`                            |\n| `loader`           | Allow to replace the loader displayed during the colors async retrieving.             | -                                                                         |\n\n## Example\n\n```html\n<script>\n\timport { Palette } from '@untemps/svelte-palette'\n\n\tconst colors = ['#865C54', '#8F5447', '#A65846', '#A9715E', '#AD8C72']\n</script>\n\n<Palette {colors}>\n\t<div slot=\"header\" class=\"palette__header\">\n\t\t<h1>Pick a color</h1>\n\t</div>\n\t<button let:color slot=\"slot\" class=\"palette__slot\" style=\"--color:{color}\" />\n\t<div slot=\"footer\" class=\"palette__footer\">\n\t\t<a href=\"https://www.untemps.net\">@untemps</a>\n\t</div>\n</Palette>\n\n<style>\n\t.palette__header {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t}\n\n\t.palette__slot {\n\t\tcursor: pointer;\n\t\twidth: 2rem;\n\t\theight: 2rem;\n\t\tmargin: 0;\n\t\tbackground-color: var(--color);\n\t\tborder-radius: 20%;\n\t\tborder: 1px solid rgba(0, 0, 0, 0.2);\n\t\tbox-shadow: 0.1rem 0.1rem 0.3rem rgba(0, 0, 0, 0.2);\n\t}\n\n\t.palette__footer {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\tpadding: 0.5rem;\n\t}\n</style>\n```\n\n# Colors Setting\n\nColor can be set in several formats:\n\n## Array of Color Strings\n\n```\ncolors = ['#865C54', '#8F5447', '#A65846']\n```\n\n## Array of Color Objects\n\n```\ncolors = [\n\t{ name: 'Color #1', value: '#865C54' },\n\t{ name: 'Color #2', value: '#8F5447' },\n\t{ value: '#A65846' }\n]\n```\n\n## Promise\n\nA promise to be resolved with an array of color strings or objects can be passed as well (see [Use an API to fill the palette](#use-an-api-to-fill-the-palette))\n\n# Deletion Modes\n\nThe `deletionMode` prop allows to define the way users can delete (or not) the color slots:\n\n| Value     | Description                                                                                                                                                                                |\n| --------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| `none`    | (Default) Color slots cannot be deleted                                                                                                                                                    |\n| `tooltip` | A tooltip is displayed when hovering a color slot, a click within deletes the slot <br/>(You can control tooltip display though the `tooltipClassName` and `tooltipContentSelector` props) |\n| `drop`    | Colors slots are draggable, a drop outside the palette deletes the slot                                                                                                                    |\n\nAs an helper, deletion mode enums are exported in `PaletteDeletionMode`.\n\n# Compact Mode\n\nThe compact mode is a way to display a minimal version of the palette with a restricted selection of the original colors and downsized spaces.\n\nThe `compactColorIndices` prop allows to define the list of the colors to be picked from the `colors` array by their indices.  \nIf set a control is added to toggle the compact mode.\n\nYou may also specified whether the palette has to use the compact mode by default by setting `isCompact=true`.\n\n```html\n<script>\n\timport { Palette } from '@untemps/svelte-palette'\n\n\tconst colors = ['#865C54', '#8F5447', '#A65846', '#A9715E', '#AD8C72']\n\tconst compactColorIndices = [1, 3, 4]\n</script>\n\n<Palette {colors} {compactColorIndices} />\n```\n\n# Styles\n\n### Root Tag Class\n\nYou can style the component by passing a class down to the root tag (`div`).\n\n-   Flag the class as global to make it available in the Palette component\n-   Prefix your class with `.palette[role=\"main\"]` to give precedence over the default one or mark each style with `!important` (not recommanded)\n\n#### Example\n\n```html\n<script>\n\timport { Palette } from '@untemps/svelte-palette'\n\n\tconst colors = ['#865C54', '#8F5447', '#A65846', '#A9715E', '#AD8C72']\n</script>\n\n<Palette {colors} class=\"palette__custom\" />\n\n<style>\n\t:global(.palette[role='main'].palette__custom) {\n\t\tbackground: yellow;\n\t}\n</style>\n```\n\n### Deletion Tooltip Class\n\nIf you set `deletionMode` to `\"tooltip\"`, you can pass a class name that is set to the tooltip shown when hovering a slot.\n\nTo do so, set a **global** class name to the `tooltipClassName` prop.\n\n> As the tooltip is interactive, make sure you define a sufficient hover area that allow to access the content of the tooltip before the leave event is triggered.\n\nIf you ignore that prop, a default class is used.\n\n> Please note that the default class name is `__tooltip__default`.  \n> Provide a different class name otherwise the default class would have the precedence over the custom one.\n\n#### Example\n\n```html\n<script>\n\timport { Palette } from '@untemps/svelte-palette'\n\n\tconst colors = ['#865C54', '#8F5447', '#A65846', '#A9715E', '#AD8C72']\n</script>\n\n<Palette {colors} deletionMode=\"tooltip\" tooltipClassName=\"tooltip\" />\n\n<style>\n\t:global(.tooltip) {\n\t\tposition: absolute;\n\t\tz-index: 9999;\n\t\tmax-width: 120px;\n\t\tbackground-color: black;\n\t\tcolor: #fff;\n\t\ttext-align: center;\n\t\tborder-radius: 6px;\n\t\tpadding: 0.5rem;\n\t}\n</style>\n```\n\n## EyeDropper API Support\n\nIf supported by the browser, the default component within the `input` slot displays a button to trigger the [Web EyeDropper API](https://developer.mozilla.org/en-US/docs/Web/API/EyeDropper).  \nThe tool allows to pick a color from the screen.\n\n<img src=\"assets/eyedropper.gif\" alt=\"eyedropper\" width=\"250\"/>\n\nOnce selected, the color is inserted in the input waiting for the user to submit and adding it to the palette.\n\nIf the API is not available, nothing will be rendered.\n\n> The PaletteEyeDropper component can be used on its own anywhere within a slot or in an external component as it is exported from this lib.\n\n## Transition\n\n<img src=\"assets/svelte-palette-transition.gif\" alt=\"svelte-palette-transition\" height=\"300\"/>\n\nYou can customize the way slots appear into the palette by using the `transition` prop.\n\nThis prop works the same way as the [in/out directive](https://svelte.dev/docs#template-syntax-element-directives-in-fn-out-fn) and accepts an object with two properties :\n\n| Value  | Description                                                                                        |\n| ------ | -------------------------------------------------------------------------------------------------- |\n| `fn`   | Transition function (See [Svelte Transitions](https://svelte.dev/docs#run-time-svelte-transition)) |\n| `args` | Parameters to pass to the transition function                                                      |\n\n`fn` may be one of the [Svelte exported functions](https://svelte.dev/docs#run-time-svelte-transition) or a custom one as described in the [docs](https://svelte.dev/docs#template-syntax-element-directives-transition-fn-custom-transition-functions).\n\n### Example\n\n```html\n<script>\n\timport { Palette } from '@untemps/svelte-palette'\n\timport { elasticOut } from 'svelte/easing'\n\n\tconst colors = ['#865C54', '#8F5447', '#A65846', '#A9715E', '#AD8C72']\n\n\tconst whoosh = (node, params) => {\n\t\tconst existingTransform = getComputedStyle(node).transform.replace('none', '')\n\n\t\treturn {\n\t\t\tdelay: params.delay || 0,\n\t\t\tduration: params.duration || 400,\n\t\t\teasing: params.easing || elasticOut,\n\t\t\tcss: (t, u) => `transform: ${existingTransform} scale(${t})`,\n\t\t}\n\t}\n</script>\n\n<Palette {colors} transition={{ fn: whoosh, args: { duration: 3000 } }} />\n```\n\n## Recipes\n\n### Use an API to Fill the Palette\n\nIn case you want to call an API to fetch the palette colors, you may pass a promise to the `colors` prop.\n\nThe component displays a customizable loader waiting to the promise to be resolved. Be aware that the result of the promise must be an array of color strings as well.\n\n#### Example\n\n```html\n<script>\n\timport { Palette } from '@untemps/svelte-palette'\n\n\tconst colors = fetch('https://www.colr.org/json/colors/random/30')\n\t\t.then((result) => result.json())\n\t\t.then((result) => result.colors.filter((c) => c.hex?.length).map((c) => `#${c.hex}`))\n</script>\n\n<Palette {colors}>\n\t<p slot=\"loader\">Loading...</p>\n</Palette>\n```\n\n### Customize the Content of the Deletion Tooltip\n\nBy default, if `deletionMode` is set to `\"tooltip\"`, the tooltip displays a trash icon:\n\n<img src=\"assets/trash.png\" alt=\"trash\" height=\"90\"/>\n\nYou may want to display a different content for various purposes.  \nThat is possible by defining a DOM element selector to the `tooltipContentSelector` prop.\n\n> Note the piece of DOM used ad content is deeply cloned using [cloneNode()](https://developer.mozilla.org/fr/docs/Web/API/Node/cloneNode) before appending to the tooltip container.  \n> That means the original element stays as it is but depending on element some props or behaviours may be removed from the clone.\n\n#### Example\n\n```html\n<script>\n\timport { Palette } from '@untemps/svelte-palette'\n\n\tconst colors = ['#865C54', '#8F5447', '#A65846', '#A9715E', '#AD8C72']\n</script>\n\n<Palette {colors} deletionMode=\"tooltip\" tooltipContentSelector=\".palette__tooltip__button\" />\n\n<!-- The element used as tooltip content -->\n<button class=\"palette__tooltip__button\">Delete</button>\n```\n\n### Use a Color Input\n\nBy default, the input that allows to add a new slot in the palette is typed as \"text\".\n\nAlthough you may use the `ìnput` slot to display a custom component, it is possible to turn the input into color mode by setting the `inputType` prop to \"color\".  \nThat unlocks the color picker provided by the browser. Therefore the color spot and the eyedropper are hidden.\n\n<img src=\"assets/input-color.gif\" alt=\"input color\" width=\"250\"/>\n\n#### Example\n\n```html\n<script>\n\timport { Palette } from '@untemps/svelte-palette'\n\n\tconst colors = ['#865C54', '#8F5447', '#A65846', '#A9715E', '#AD8C72']\n</script>\n\n<Palette {colors} inputType=\"color\" />\n```\n\n### Customize the Tools Panel\n\nThe tools panel is a container for two actions:\n\n-   Display the settings panel (`\"settings\"`)\n-   Toggle the compact mode (`\"compact\"`)\n\nFor some use cases, you may want to provide your own controls by using the `tools` slot.\n\nTo access each tool behaviours, the Palette component exports a `onSelect` function that has to be called with the name of the tool (use the enums from the exported `PaletteTool`).\n\n#### Example\n\n```html\n<script>\n\timport { Palette, PaletteTool } from '@untemps/svelte-palette'\n\n\tconst colors = ['#865C54', '#8F5447', '#A65846', '#A9715E', '#AD8C72']\n</script>\n\n<Palette {colors}>\n\t<div slot=\"tools\" let:onSelect let:isCompact>\n\t\t<button on:click=\"{onSelect(PaletteTool.SETTINGS)}\">Settings</button>\n\t\t<button on:click=\"{onSelect(PaletteTool.COMPACT)}\">{isCompact ? 'Expand' : 'Compact'}</button>\n\t</div>\n</Palette>\n```\n\n## Development\n\nThe component can be served for development purpose on `http://localhost:5173/` running:\n\n```\nyarn dev\n```\n\n## Contributing\n\nContributions are warmly welcomed:\n\n-   Fork the repository\n-   Create a feature branch\n-   Develop the feature AND write the tests (or write the tests AND develop the feature)\n-   Commit your changes\n    using [Angular Git Commit Guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#-git-commit-guidelines)\n-   Submit a Pull Request\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 72],
		[3603, 103],
		[3610, 59],
		[3617, 108],
		[3624, 210],
		[3631, 136],
		[3638, 27],
		[3645, 22],
		[3652, 33],
		[3659, 73],
		[3666, 90],
		[3673, 60],
		[3680, 43],
		[3687, 34],
		[3694, 40],
		[3701, 47],
		[3708, 138],
		[3715, 93],
		[3722, 27],
		[3729, 23],
		[3736, 17],
		[3743, 14],
		[3750, 20],
		[3757, 55],
		[3764, 36],
		[3771, 123],
		[3778, 47],
		[3785, 59],
		[3792, 122],
		[3799, 67],
		[3806, 68],
		[3813, 47],
		[3820, 63],
		[3827, 93],
		[3834, 94],
		[3841, 137],
		[3848, 65],
		[3855, 192],
		[3862, 169],
		[3869, 197],
		[3876, 134],
		[3883, 57],
		[3890, 75],
		[3897, 139],
		[3904, 73],
		[3911, 81],
		[3918, 116],
		[3925, 60],
		[3932, 78],
		[3939, 74],
		[3946, 88],
		[3953, 87],
		[3960, 190],
		[3967, 288],
		[3974, 356],
		[3981, 384],
		[3988, 335],
		[3995, 368],
		[4002, 394],
		[4009, 270],
		[4016, 119],
		[4023, 211],
		[4030, 182],
		[4037, 208],
		[4044, 187],
		[4051, 196],
		[4058, 174],
		[4065, 219],
		[4072, 151],
		[4079, 237],
		[4086, 163],
		[4093, 310],
		[4100, 227],
		[4107, 134],
		[4114, 141],
		[4121, 132],
		[4128, 137],
		[4135, 66]
	],
	"esm": true,
	"cjs": false
}
