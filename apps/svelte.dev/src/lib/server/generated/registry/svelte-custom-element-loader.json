{
	"name": "svelte-custom-element-loader",
	"description": "Register Svelte components as custom elements using Webpack.",
	"repo_url": "https://github.com/performonkey/svelte-custom-element-loader",
	"authors": ["p10y"],
	"homepage": "https://github.com/performonkey/svelte-custom-element-loader",
	"downloads": 4,
	"updated": "2020-10-29T12:11:48.879Z",
	"tags": ["tooling"],
	"github_stars": 0,
	"typescript": false,
	"version": "1.2.0",
	"svelte_range": "^3.29.0",
	"last_rune_check_version": "1.2.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-custom-element-loader",
				"version": "1.2.0",
				"size": 6075
			},
			{
				"name": "loader-utils",
				"version": "2.0.4",
				"size": 36329
			},
			{
				"name": "json5",
				"version": "2.2.3",
				"size": 235198
			},
			{
				"name": "big.js",
				"version": "5.2.2",
				"size": 63868
			},
			{
				"name": "emojis-list",
				"version": "3.0.0",
				"size": 53575
			},
			{
				"name": "svelte",
				"version": "3.59.2",
				"size": 10624206
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[1, 3],
			[1, 4],
			[0, 5]
		],
		"circular": []
	},
	"readme": "# svelte-custom-element-loader\n\nauto register svelte component as custom element (not attach to shadow dom).\n\n## Getting Started\n\nTo begin, you'll need to install `svelte-custom-element-loader`:\n\n```console\n$ npm install svelte-custom-element-loader --save-dev\n```\n\nImport (or `require`) the target file(s) in one of the bundle's files:\n\n```html\n<script>\n\texport _customElementTagName_ = 'my-button';\n</script>\n\n<button>test</button>\n```\n\n```js\nimport './Button.svelte';\n```\n\nThen add the loader to your `webpack` config. For example:\n\n```js\n// webpack.config.js\nmodule.exports = {\n\tmodule: {\n\t\trules: [\n\t\t\t{\n\t\t\t\ttest: /\\.svelte$/,\n\t\t\t\tuse: [\n\t\t\t\t\t{\n\t\t\t\t\t\tloader: 'svelte-custom-element-loader',\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\tprefix: 'my',\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tloader: 'svelte-loader',\n\t\t\t\t\t\toptions: {\n\t\t\t\t\t\t\temitCss: true,\n\t\t\t\t\t\t\thotReload: process.env.NODE_ENV === 'development'\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t]\n\t\t\t},\n\t\t],\n\t}\n};\n```\n\nand then you can use `<my-button></my-button>`\n\n## Options\n\n### `prefix`\n\nType: `String`\n\nDefault: `my`\n\ncustom-element name prefix, only work with `registerAllFile` is `true`\n\n### `registerAllFile`\n\nType: `Boolean`\n\nDefault: `false`\n\nregister all imported svelte file as custom element.\n\n## Slot\n\n```\n<my-container>\n\t<div slot=\"a\">dsad</div>\n\t<div slot=\"b\">dsad</div>\n\t<div>default slot only have one Elment</div>\n</my-container>\n```\n\n## JSON attribute\n\nAttribute name starts with `json-` will auto parse to without prefix prop\n```\n<my-element json-data=\"{\\\"name\\\": \\\"value\"}\" />\n// will pass JSON.parse(json-data) to data\n```",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 2],
		[3603, 5],
		[3610, 7],
		[3617, 2],
		[3631, 1],
		[3645, 12],
		[3659, 1],
		[3666, 7],
		[3680, 1],
		[3701, 2],
		[3708, 4],
		[3729, 6],
		[3757, 2],
		[3764, 3],
		[3771, 2],
		[3778, 1],
		[3785, 1],
		[3792, 2],
		[3799, 7],
		[3806, 6],
		[3813, 1],
		[3827, 1],
		[3834, 3],
		[3841, 1],
		[3848, 1],
		[3855, 7],
		[3862, 21],
		[3869, 2],
		[3876, 2],
		[3883, 2],
		[3890, 7],
		[3904, 1],
		[3918, 1],
		[3932, 1],
		[3946, 1],
		[3960, 3],
		[3974, 1],
		[3981, 1],
		[4002, 1],
		[4016, 3],
		[4023, 1],
		[4030, 8],
		[4037, 14],
		[4044, 3],
		[4051, 1],
		[4058, 4],
		[4065, 2],
		[4072, 2],
		[4079, 1],
		[4086, 1],
		[4093, 11],
		[4100, 7],
		[4107, 3],
		[4114, 4],
		[4121, 7],
		[4128, 6]
	],
	"esm": false,
	"cjs": true
}
