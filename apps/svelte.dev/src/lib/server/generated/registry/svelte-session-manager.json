{
	"name": "svelte-session-manager",
	"description": "Manages JWT session data for Svelte apps, stores tokens.",
	"repo_url": "https://github.com/arlac77/svelte-session-manager",
	"authors": ["arlac77"],
	"homepage": "https://github.com/arlac77/svelte-session-manager#readme",
	"downloads": 465,
	"updated": "2025-04-24T21:20:45.218Z",
	"tags": ["miscellaneous", "auth"],
	"github_stars": 106,
	"typescript": false,
	"version": "3.0.39",
	"svelte_range": "^5.28.2",
	"last_rune_check_version": "3.0.39",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-session-manager",
				"version": "3.0.39",
				"size": 25188
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "[![Svelte v5](https://img.shields.io/badge/svelte-v5-orange.svg)](https://svelte.dev)\n[![npm](https://img.shields.io/npm/v/svelte-session-manager.svg)](https://www.npmjs.com/package/svelte-session-manager)\n[![License](https://img.shields.io/badge/License-0BSD-blue.svg)](https://spdx.org/licenses/0BSD.html)\n[![bundlejs](https://deno.bundlejs.com/?q=svelte-session-manager\\&badge=detailed)](https://bundlejs.com/?q=svelte-session-manager)\n[![downloads](http://img.shields.io/npm/dm/svelte-session-manager.svg?style=flat-square)](https://npmjs.org/package/svelte-session-manager)\n[![GitHub Issues](https://img.shields.io/github/issues/arlac77/svelte-session-manager.svg?style=flat-square)](https://github.com/arlac77/svelte-session-manager/issues)\n[![Build Status](https://img.shields.io/endpoint.svg?url=https%3A%2F%2Factions-badge.atrox.dev%2Farlac77%2Fsvelte-session-manager%2Fbadge\\&style=flat)](https://actions-badge.atrox.dev/arlac77/svelte-session-manager/goto)\n[![Styled with prettier](https://img.shields.io/badge/styled_with-prettier-ff69b4.svg)](https://github.com/prettier/prettier)\n[![Commitizen friendly](https://img.shields.io/badge/commitizen-friendly-brightgreen.svg)](http://commitizen.github.io/cz-cli/)\n[![Known Vulnerabilities](https://snyk.io/test/github/arlac77/svelte-session-manager/badge.svg)](https://snyk.io/test/github/arlac77/svelte-session-manager)\n[![Coverage Status](https://coveralls.io/repos/arlac77/svelte-session-manager/badge.svg)](https://coveralls.io/github/arlac77/svelte-session-manager)\n[![Tested with TestCafe](https://img.shields.io/badge/tested%20with-TestCafe-2fa4cf.svg)](https://github.com/DevExpress/testcafe)\n\n# svelte-session-manager\n\nSession store for svelte (currently only for JWT)\n\n# usage\n\n```js\nimport { derived } from 'svelte';\nimport { Session, login } from 'svelte-session-manager';\n\n// use localStorage as backing store\nlet session = new Session(localStorage);\n\n// session may still be valid\nif(!session.isValid) {\n  await login(session, 'https://mydomain.com/authenticate', 'a user', 'a secret');\n}\n\nsession.isValid; // true when auth was ok or localStorage token is still valid\n\n\nexport const values = derived(\n  session,\n  ($session, set) => {\n    if (!session.isValid) {\n      set([]); // session has expired no more data\n    } else {\n      fetch('https://mydomain.com/values', {\n        headers: {\n          ...session.authorizationHeader\n        }\n      }).then(async data => set(await data.json()));\n    }\n    return () => {};\n  }\n,[]);\n\n// $values contains fetch result as long as session has not expired\n```\n\n## run tests\n\n```sh\nexport BROWSER=safari|chrome|...\nnpm|yarn test\n```\n\nThe test runs the following requests against the server\n\n*   successful auth\n\n```sh\ncurl -X POST -d '{\"username\":\"user\",\"password\":\"secret\"}' 'http://[::]:5000/api/login'\n```\n\n    {\"access_token\":\"eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbnRpdGxlbWVudHMiOiJhLGIsYyIsImlhdCI6MTYwNDY2NDI0NywiZXhwIjoxNjA0NjY0MjYyfQ.qyjeoCuXO0iyYwSxM2sM02_BVhaZobRmEWam1M8Hzkx51nbsAuTR8G1rNgz1COo_KvbCU7LwZt7qnSEFB1tcwyDA1eBxwc2Wb7JxWgQ50m1IWkr2JCgY1seWRJRcwZBXiTRtiPqhzofP-l3S-CBluzU48cd4yzoPayczLkKuPK4\"}\n\n*   invalid credentials\n\n```sh\ncurl -X POST -d '{\"username\":\"user\",\"password\":\"wrong\"}' 'http://[::]:5000/api/login'\n```\n\n    {\"message\":\"Unauthorized\"}\n\n## Live Example\n\n[live example](https://svelte-session-manager.pages.dev/)\n\n# API\n\n<!-- Generated by documentation.js. Update this documentation by updating the source code. -->\n\n### Table of Contents\n\n*   [login](#login)\n    *   [Parameters](#parameters)\n*   [handleFailedResponse](#handlefailedresponse)\n    *   [Parameters](#parameters-1)\n*   [SessionData](#sessiondata)\n    *   [Properties](#properties)\n*   [msecsRequiredForRefresh](#msecsrequiredforrefresh)\n*   [supportedTokenTypes](#supportedtokentypes)\n*   [Session](#session)\n    *   [Parameters](#parameters-2)\n    *   [Properties](#properties-1)\n    *   [update](#update)\n        *   [Parameters](#parameters-3)\n    *   [refresh](#refresh)\n    *   [authorizationHeader](#authorizationheader)\n    *   [isValid](#isvalid)\n    *   [invalidate](#invalidate)\n    *   [hasEntitlement](#hasentitlement)\n        *   [Parameters](#parameters-4)\n    *   [subscribe](#subscribe)\n        *   [Parameters](#parameters-5)\n*   [decode](#decode)\n    *   [Parameters](#parameters-6)\n\n## login\n\nBring session into the valid state by calling the authorization endpoint\nand asking for a access\\_token.\nExecutes a POST on the endpoint url expecting username, and password as json\n\n### Parameters\n\n*   `session` **[Session](#session)** to be opened\n*   `endpoint` **[string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)** authorization url\n*   `username` **[string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)** id of the user\n*   `password` **[string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)** user credentials\n*   `tokenmap` **[Object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object)** token names in response to internal known values (optional, default `defaultTokenMap`)\n\nReturns **[Promise](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise)<([string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String) | [undefined](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/undefined))>** error message in case of failure or undefined on success\n\n## handleFailedResponse\n\nExtract error description from response.\n\n### Parameters\n\n*   `response` **[Response](https://developer.mozilla.org/docs/Web/Guide/HTML/HTML5)**&#x20;\n\nReturns **[Promise](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise)<[string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)>**&#x20;\n\n## SessionData\n\nData as preserved in the backing store.\n\nType: [Object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object)\n\n### Properties\n\n*   `username` **[string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)** user name (id)\n*   `access_token` **[string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)** JWT token\n*   `refresh_token` **[string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)** JWT token\n\n## msecsRequiredForRefresh\n\nTime required to execute a refresh\n\nType: [number](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number)\n\n## supportedTokenTypes\n\n## Session\n\nUser session.\nTo create as session backed by browser local storage.\n\n```js\nlet session = new Session(localStorage);\n```\n\nor by browser session storage\n\n```js\nlet session = new Session(sessionStorage);\n```\n\n### Parameters\n\n*   `store` **[SessionData](#sessiondata)**  (optional, default `localStorage`)\n\n### Properties\n\n*   `entitlements` **[Set](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Set)<[string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)>**&#x20;\n*   `subscriptions` **[Set](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Set)<[Object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object)>** store subscriptions\n*   `expirationDate` **[Date](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date)** when the access token expires\n*   `access_token` **[string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)** token itself\n*   `refresh_token` **[string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)** refresh token\n\n### update\n\nConsume auth response data and reflect internal state.\n\n#### Parameters\n\n*   `data` **[Object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object)**&#x20;\n\n### refresh\n\nRefresh with refresh\\_token.\n\nReturns **[Promise](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise)<[boolean](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean)>** true if refresh was succcessfull false otherwise\n\n### authorizationHeader\n\nHttp header suitable for fetch.\n\nReturns **[Object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object)** header The http header.\n\nReturns **[string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)** header.Authorization The Bearer access token.\n\n### isValid\n\nAs long as the expirationTimer is running we must be valid.\n\nReturns **[boolean](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean)** true if session is valid (not expired)\n\n### invalidate\n\nRemove all tokens from the session and the backing store.\n\n### hasEntitlement\n\nCheck presence of an entitlement.\n\n#### Parameters\n\n*   `name` **[string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)** of the entitlement\n\nReturns **[boolean](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean)** true if the named entitlement is present\n\n### subscribe\n\nFired when the session changes.\n\n#### Parameters\n\n*   `subscription` **[Function](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Statements/function)**&#x20;\n\n## decode\n\nExtract and decode the payload.\n\n### Parameters\n\n*   `token` **[string](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)**&#x20;\n\nReturns **[Object](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object)** payload object\n\n# install\n\nWith [npm](http://npmjs.org) do:\n\n```shell\nnpm install svelte-session-manager\n```\n\n# license\n\nBSD-2-Clause\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 590],
		[3603, 452],
		[3610, 393],
		[3617, 352],
		[3624, 422],
		[3631, 305],
		[3638, 237],
		[3645, 232],
		[3652, 320],
		[3659, 399],
		[3666, 487],
		[3673, 340],
		[3680, 625],
		[3687, 554],
		[3694, 652],
		[3701, 606],
		[3708, 390],
		[3715, 949],
		[3722, 734],
		[3729, 572],
		[3736, 578],
		[3743, 537],
		[3750, 516],
		[3757, 583],
		[3764, 693],
		[3771, 475],
		[3778, 571],
		[3785, 906],
		[3792, 739],
		[3799, 717],
		[3806, 730],
		[3813, 456],
		[3820, 514],
		[3827, 382],
		[3834, 647],
		[3841, 688],
		[3848, 457],
		[3855, 285],
		[3862, 788],
		[3869, 506],
		[3876, 769],
		[3883, 626],
		[3890, 488],
		[3897, 475],
		[3904, 374],
		[3911, 928],
		[3918, 919],
		[3925, 252],
		[3932, 301],
		[3939, 559],
		[3946, 456],
		[3953, 416],
		[3960, 860],
		[3967, 1067],
		[3974, 1201],
		[3981, 953],
		[3988, 692],
		[3995, 632],
		[4002, 794],
		[4009, 350],
		[4016, 299],
		[4023, 597],
		[4030, 446],
		[4037, 473],
		[4044, 507],
		[4051, 466],
		[4058, 531],
		[4065, 315],
		[4072, 313],
		[4079, 840],
		[4086, 512],
		[4093, 267],
		[4100, 318],
		[4107, 300],
		[4114, 465],
		[4121, 486],
		[4128, 548],
		[4135, 262]
	],
	"esm": true,
	"cjs": false
}
