{
	"name": "@maptiler/geocoding-control",
	"description": "Map Control component for MapTiler Geocoding service.",
	"repo_url": "https://github.com/maptiler/maptiler-geocoding-control",
	"authors": ["petrsloup", "klokan", "bolollo", "jachym-maptiler", "sysadmin_maptiler"],
	"homepage": "https://github.com/maptiler/maptiler-geocoding-control#readme",
	"downloads": 2111,
	"updated": "2025-02-05T07:29:54.024Z",
	"tags": ["integration"],
	"github_stars": 44,
	"typescript": true,
	"version": "2.1.6",
	"svelte_range": "^4.2",
	"last_rune_check_version": "2.1.6",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@maptiler/geocoding-control",
				"version": "2.1.6",
				"size": 10100285
			},
			{
				"name": "@turf/bbox",
				"version": "7.2.0",
				"size": 12422
			},
			{
				"name": "@turf/helpers",
				"version": "7.2.0",
				"size": 150590
			},
			{
				"name": "@types/geojson",
				"version": "7946.0.16",
				"size": 9514
			},
			{
				"name": "tslib",
				"version": "2.8.1",
				"size": 90359
			},
			{
				"name": "@turf/meta",
				"version": "7.2.0",
				"size": 216517
			},
			{
				"name": "@turf/clone",
				"version": "7.2.0",
				"size": 25559
			},
			{
				"name": "@turf/union",
				"version": "7.2.0",
				"size": 17384
			},
			{
				"name": "polyclip-ts",
				"version": "0.16.8",
				"size": 462878
			},
			{
				"name": "bignumber.js",
				"version": "9.3.0",
				"size": 351328
			},
			{
				"name": "splaytree-ts",
				"version": "1.0.2",
				"size": 169400
			},
			{
				"name": "@turf/flatten",
				"version": "7.2.0",
				"size": 13040
			},
			{
				"name": "@turf/difference",
				"version": "7.2.0",
				"size": 14697
			},
			{
				"name": "geo-coordinates-parser",
				"version": "1.7.4",
				"size": 115863
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[2, 3],
			[2, 4],
			[1, 5],
			[5, 2],
			[5, 3],
			[1, 3],
			[1, 4],
			[0, 6],
			[6, 2],
			[6, 3],
			[6, 4],
			[0, 7],
			[7, 2],
			[7, 5],
			[7, 3],
			[7, 8],
			[8, 9],
			[8, 10],
			[7, 4],
			[0, 11],
			[11, 2],
			[11, 5],
			[11, 3],
			[11, 4],
			[0, 12],
			[12, 2],
			[12, 5],
			[12, 3],
			[12, 8],
			[12, 4],
			[0, 13]
		],
		"circular": []
	},
	"readme": "<p align=\"center\">\n<a href=\"https://www.maptiler.com/cloud/geocoding/\">official page â†’</a><br>\n  <img src=\"images/maptiler-logo.svg\" width=\"350px\">\n</p>\n\n<p align=\"center\" style=\"color: #AAA\">\n  The Javascript & TypeScript Map Control component for <a href=\"https://www.maptiler.com/cloud/geocoding\">MapTiler Geocoding</a> service! Easy to be integrated into any JavaScript mapping application.\n</p>\n\n<p align=\"center\">\n  <img src=\"images/JS-logo.svg\" width=\"20px\">\n  <img src=\"images/TS-logo.svg\" width=\"20px\">\n  <img src=\"images/react-logo.svg\" width=\"20px\">\n  <img src=\"images/svelte-logo.svg\" width=\"20px\">\n  <img src=\"https://img.shields.io/npm/v/@maptiler/geocoding-control\"></img>\n  <img src=\"https://img.shields.io/twitter/follow/maptiler?style=social\"></img>\n</p>\n\n# MapTiler Geocoding control for MapTiler SDK, MapLibre GL JS, Leaflet and OpenLayers\n\n## About\n\nA _Geocoding control_ for [MapTiler SDK](https://github.com/maptiler/maptiler-sdk-js),\n[MapLibre GL JS](https://github.com/maplibre/maplibre-gl-js),\n[Leaflet](https://leafletjs.com) and [OpenLayers](https://openlayers.org) utilizes [MapTiler Cloud Geocoding\nAPI](https://www.maptiler.com/cloud/geocoding/). With this control, users of\nmapping application can find any place on Earth (States, Cities, Streets, Addresses, POIs, ...) down\nto the address level, restrict the search area to a specific country, highlight\nsearched results on the map, autocomplete words while typing, and much more.\n\nThe component can be used as an ES module or UMD module with or without bundler.\n\nGeocoding control is also provided as [React component](https://docs.maptiler.com/sdk-js/modules/geocoding/api/usage/react/) and [Svelte component](https://docs.maptiler.com/sdk-js/modules/geocoding/api/usage/svelte/) and [other libraries](#installation-and-more-usage-examples).\n\n## Quick start\n\nInstall the Geocoding control unsing `npm`:\n\n```shell\nnpm install --save @maptiler/geocoding-control @maptiler/sdk\n```\n\nUse the component in your mapping application:\n\n```js\nimport * as maptilersdk from \"@maptiler/sdk\";\nimport { GeocodingControl } from \"@maptiler/geocoding-control/maptilersdk\";\nimport \"@maptiler/sdk/dist/maptiler-sdk.css\";\nimport \"@maptiler/geocoding-control/style.css\";\n\nmaptilersdk.config.apiKey = \"YOUR_MAPTILER_API_KEY_HERE\";\n\nconst map = new maptilersdk.Map({\n  container: \"map\", // id of HTML container element\n});\n\nconst gc = new GeocodingControl();\n\nmap.addControl(gc);\n```\n\nNOTE: Get your personal [MapTiler API key](https://docs.maptiler.com/cloud/api/authentication-key/) in the [MapTiler Cloud](https://cloud.maptiler.com).\n\n## Installation and more usage examples\n\n- [With MapTiler SDK](https://docs.maptiler.com/sdk-js/modules/geocoding/api/usage/sdk-js/)\n- [With MapLibre GL](https://docs.maptiler.com/sdk-js/modules/geocoding/api/usage/maplibre-gl-js/)\n- [With Leaflet](https://docs.maptiler.com/sdk-js/modules/geocoding/api/usage/leaflet/)\n- [With OpenLayers](https://docs.maptiler.com/sdk-js/modules/geocoding/api/usage/openlayers/)\n- [As a React component](https://docs.maptiler.com/sdk-js/modules/geocoding/api/usage/react/)\n- [As Svelte component](https://docs.maptiler.com/sdk-js/modules/geocoding/api/usage/svelte/)\n- [As vanilla JavaScript module](https://docs.maptiler.com/sdk-js/modules/geocoding/api/usage/vanilla-js/)\n\n## API Documentation\n\nIn addition to the details and examples provided in this `README.md` and our documentation, check out\n\n- [The complete Geocoding service API documentation](https://docs.maptiler.com/cloud/api/geocoding/)\n- [The complete Geocoding control reference](https://docs.maptiler.com/sdk-js/modules/geocoding/api/api-reference/)\n- [UMD global variables](https://docs.maptiler.com/sdk-js/modules/geocoding/#umd-global-variables)\n\n## Development\n\n### Building\n\n```bash\nnpm install && npm run build\n```\n\nYou will find compilation result in the `dist` directory.\n\n### Running in dev mode\n\n```bash\nnpm install && VITE_API_KEY=YOUR_MAPTILER_API_KEY_HERE npm run dev\n```\n\n### POI icons and bundlers\n\nPOI icons are served from CDN per default. If there is an requirement to serve them from a different location and the control is used in the application which is built with Web Application bundler (like Webpack or Vite) then it is necessary to do some extra configuration. Icons are bundled in the library and you can find them in `node_modules/@maptiler/geocoding-control/icons`. Configure your bundler and/or provide `iconsBaseUrl` option for the icons to be properly resolved. You can also copy icons from that directory to your `public` directory.\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 1138],
		[3596, 1990],
		[3603, 1680],
		[3610, 1494],
		[3617, 2163],
		[3624, 2238],
		[3631, 1807],
		[3638, 1803],
		[3645, 1203],
		[3652, 1056],
		[3659, 1154],
		[3666, 1739],
		[3673, 1124],
		[3680, 1173],
		[3687, 1050],
		[3694, 1308],
		[3701, 1278],
		[3708, 1402],
		[3715, 997],
		[3722, 837],
		[3729, 738],
		[3736, 780],
		[3743, 1117],
		[3750, 1136],
		[3757, 1050],
		[3764, 1095],
		[3771, 997],
		[3778, 1194],
		[3785, 1534],
		[3792, 956],
		[3799, 1037],
		[3806, 1165],
		[3813, 1725],
		[3820, 1434],
		[3827, 1359],
		[3834, 1211],
		[3841, 1363],
		[3848, 881],
		[3855, 1224],
		[3862, 1231],
		[3869, 1157],
		[3876, 1383],
		[3883, 1054],
		[3890, 1135],
		[3897, 1078],
		[3904, 1085],
		[3911, 965],
		[3918, 1543],
		[3925, 1458],
		[3932, 1712],
		[3939, 1612],
		[3946, 1921],
		[3953, 1746],
		[3960, 1713],
		[3967, 1988],
		[3974, 2903],
		[3981, 2072],
		[3988, 1705],
		[3995, 1771],
		[4002, 1718],
		[4009, 815],
		[4016, 784],
		[4023, 1677],
		[4030, 1972],
		[4037, 1554],
		[4044, 1726],
		[4051, 1521],
		[4058, 1889],
		[4065, 1648],
		[4072, 2102],
		[4079, 1817],
		[4086, 1689],
		[4093, 1535],
		[4100, 1510],
		[4107, 1616],
		[4114, 2111],
		[4121, 1807],
		[4128, 1871]
	],
	"esm": true,
	"cjs": true
}
