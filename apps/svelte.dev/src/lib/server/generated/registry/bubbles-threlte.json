{
	"name": "bubbles-threlte",
	"description": "Generate customizable bubble effects for Svelte with Threlte.",
	"repo_url": "https://github.com/ZeroDelusions/Bubbles-Threlte",
	"authors": ["zero_delusions"],
	"homepage": "https://github.com/ZeroDelusions/Bubbles-Threlte",
	"downloads": 5,
	"updated": "2024-08-02T12:22:08.127Z",
	"tags": ["ui"],
	"github_stars": 0,
	"typescript": true,
	"version": "1.0.0",
	"svelte_range": "^4.2.7",
	"kit_range": "^2.0.0",
	"last_rune_check_version": "1.0.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "bubbles-threlte",
				"version": "1.0.0",
				"size": 35783
			},
			{
				"name": "@threlte/core",
				"version": "7.3.1",
				"size": 298303
			},
			{
				"name": "mitt",
				"version": "3.0.1",
				"size": 26444
			},
			{
				"name": "@types/three",
				"version": "0.167.2",
				"size": 1238495
			},
			{
				"name": "fflate",
				"version": "0.8.2",
				"size": 773398
			},
			{
				"name": "@types/webxr",
				"version": "0.5.22",
				"size": 43142
			},
			{
				"name": "meshoptimizer",
				"version": "0.18.1",
				"size": 163292
			},
			{
				"name": "@types/stats.js",
				"version": "0.17.3",
				"size": 4069
			},
			{
				"name": "@tweenjs/tween.js",
				"version": "23.1.3",
				"size": 161333
			},
			{
				"name": "three",
				"version": "0.167.1",
				"size": 24544740
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[0, 3],
			[3, 4],
			[3, 5],
			[3, 6],
			[3, 7],
			[3, 8],
			[0, 9]
		],
		"circular": []
	},
	"legacy_svelte": true,
	"readme": "# Bubbles-Threlte: Svelte Bubble Generator \n\nA highly customizable bubble generator component for Svelte applications using Threlte (Three.js for Svelte). Create stunning bubble effects with ease, perfect for interactive backgrounds, particle systems, and more.\n\n## Installation\n\n```bash\nnpm install bubbles-threlte\n```\n## Usage\n\nImport the BubbleEmitter component in your Svelte file:\n```ts\nimport BubbleEmitter from 'bubbles-threlte';\n```\nSet up your bubble and emitter configurations:\n```ts\n<script>\n  import { Vector3 } from 'three';\n  import type { BubbleEmitterParams, BubbleParams } from 'bubbles-threlte';\n  import { useFrame } from \"@threlte/core\";\n\n  const eventEmitter = new BubbleEventEmitter();\n\n  // Optionally, setup event listeners\n  onMount(() => {\n    eventEmitter.addListener('creationStarted', (event) => console.log(\"Bubble creation started\", event.bubble));\n    eventEmitter.addListener('creationFinished', (event) => console.log(\"Bubble creation finished\", event.bubble));\n    eventEmitter.addListener('removalStarted', (event) => console.log(\"Bubble removal started\", event.bubble));\n    eventEmitter.addListener('removalFinished', (event) => console.log(\"Bubble removal finished\", event.bubble));\n    eventEmitter.addListener('move', (event) => console.log(\"Bubble moved\", event.bubble));\n  });\n\n  const emitterParams: BubbleEmitterParams = {\n    // Your emitter configuration\n  };\n\n  const bubbleParams: BubbleParams = {\n    // Your bubble configuration\n  };\n\n  useFrame(() => {\n    // Update params of your emitterParams and/or bubbleParams to generate new bubbles with this new data\n  });\n</script>\n```\n\nUse the BubbleEmitter component in your Svelte template:\n\n```ts\n<BubbleEmitter {emitterParams} {bubbleParams} {eventEmitter} />\n```\n\n## Configuration Parameters\n\n<details>\n--------------------\n<br/><br/>\n<summary>BubbleParams</summary>\n\nThe `BubbleParams` interface provides extensive customization for individual bubbles: <br/><br/>\n\n| Parameter | Type | Description |\n|-----------|------|-------------|\n| `id` | `string` | Unique identifier for the bubble. |\n| `state` | `\"creating\" \\| \"active\" \\| \"removing\"` | Current state of the bubble in its lifecycle. |\n| `position` | `Vector3` | The bubble's position in 3D space. |\n| `origin` | `Vector3` | The original spawn position of the bubble. |\n| `velocity` | `Vector3` | The bubble's current velocity. |\n| `size` | `number` | The size of the bubble. |\n| `opacity` | `number` | The overall opacity of the bubble. |\n| `geometry` | `SphereGeometry` | The Three.js geometry used for the bubble. |\n| `animationSpeed` | `number` | Speed of the bubble's animation. |\n| `smoothDeformWaveSin` | `number` | Frequency of sinusoidal deformation. |\n| `smoothDeformWaveCos` | `number` | Frequency of cosinusoidal deformation. |\n| `smoothDeformSpeedSin` | `number` | Speed of sinusoidal deformation. |\n| `smoothDeformSpeedCos` | `number` | Speed of cosinusoidal deformation. |\n| `smoothDeformStrengthSin` | `number` | Strength of sinusoidal deformation. |\n| `smoothDeformStrengthCos` | `number` | Strength of cosinusoidal deformation. |\n| `baseColor` | `Vector3` | The base color of the bubble (RGB). |\n| `borderColor` | `Vector3` | The color of the bubble's border (RGB). |\n| `reflectionColor` | `Vector3` | The color of reflections on the bubble (RGB). |\n| `baseAlpha` | `number` | The base alpha (transparency) of the bubble. |\n| `borderAlpha` | `number` | The alpha (transparency) of the bubble's border. |\n| `glowStrength` | `number` | The strength of the bubble's glow effect. |\n| `gradientStrength` | `number` | The strength of the color gradient effect. |\n| `gradientSpeed` | `number` | The speed of the color gradient animation. |\n| `fresnel` | `Vector3` | Parameters for the Fresnel effect (edge highlighting). |\n| `fresnelStrength` | `number` | The strength of the Fresnel effect. |\n| `noiseFrequency` | `number` | The frequency of noise applied to the bubble's surface. |\n| `noiseAmplitude` | `number` | The amplitude of noise applied to the bubble's surface. |\n| `seed` | `number` | A random seed for consistent randomization. |\n| `bubbleFilter` | `(bubble: BubbleParams) => boolean` | A function to determine if a bubble should be removed. |\n| `bubbleModifier` | `(bubble: BubbleParams) => void` | A function to modify bubble properties on each frame. |\n| `createAnimation` | `BubbleAnimation` | Animation parameters for bubble creation. |\n| `removeAnimation` | `BubbleAnimation` | Animation parameters for bubble removal. |\n</details>\n\n<details>\n--------------------\n<br/><br/>\n<summary>BubbleAnimation</summary>\n\nThe `BubbleAnimation` interface is used for both `createAnimation` and `removeAnimation`: <br/><br/>\n\n| Parameter | Type | Description |\n|-----------|------|-------------|\n| `params` | `(bubble: BubbleParams) => void` | A function to update bubble parameters during the animation. |\n| `duration` | `number` | The duration of the animation in milliseconds. |\n\nThese parameters provide extensive control over both the emission of bubbles and the appearance and behavior of individual bubbles. By adjusting these values, you can create a wide range of effects, from realistic soap bubbles to abstract particle systems.\n</details>\n\n<details>\n--------------------\n<br/><br/>\n<summary>BubbleEmitterParams</summary>\nThe `BubbleEmitterParams` interface allows you to configure the behavior of the bubble emitter: <br/><br/>\n\n| Parameter | Type | Description |\n|-----------|------|-------------|\n| `spawnCondition` | `boolean` | Determines whether new bubbles should be spawned. |\n| `velocity` | `Vector3` | The initial velocity applied to newly spawned bubbles. |\n| `bubbleSize` | `{ min: number; max: number }` | Defines the size range for spawned bubbles. |\n| `scatterAngle` | `{ min: number; max: number }` | Sets the range of angles (in degrees) for random direction scatter upon spawn. |\n| `maxBubbles` | `number` | The maximum number of bubbles that can exist simultaneously. |\n</details>\n\n<details>\n--------------------\n<br/><br/>\n<summary>Event Emitter</summary>\nThe BubbleEventEmitter allows you to listen for various events during the lifecycle of bubbles. Available events include: <br/><br/>\n\n| Parameter | Description |\n|-----------|-------------|\n| `creationStarted` | Fired when a bubble starts its creation animation |\n| `creationFinished ` | Fired when a bubble completes its creation animation |\n| ` removalStarted ` | Fired when a bubble starts its removal animation |\n| ` removalFinished ` | Fired when a bubble completes its removal animation |\n| ` move ` | Fired on each frame update for active bubbles |\n\nThese events can be used to trigger custom behaviors or synchronize other elements of your application with the bubble animations.\n</details>\n\n## Examples\n\n<table>\n<tr>\n<td>\n\n### ShinyPop: Interactive Mouse-driven Bubbles\n\nThe ShinyPop example demonstrates how to create interactive bubbles that respond to mouse movement. \nKey features:\n\n- Bubbles spawn based on mouse velocity\n- Custom bubble physics for realistic movement\n- Smooth creation and removal animations\n\nThis example showcases the potential for creating engaging, interactive backgrounds or particle effects that respond to user input.\n\n</td>\n<td>\n  <img src=\"https://github.com/user-attachments/assets/fea2be35-5909-4810-8752-c45feae4c7c4\">\n</picture>\n</td>\n</tr>\n<tr>\n<td>\n\n### ScreenCover: Full-screen Bubble Animation\n\nThe ScreenCover example illustrates how to create a full-screen bubble animation. \nKey features:\n\n- Bubbles rise from the bottom of the screen\n- Subtle wave-like horizontal movement\n- Gradual size increase and opacity changes\n\nThis example is perfect for creating ambient background animations or loading screens with a soothing, aquatic feel.\n\n</td>\n<td>\n<picture>\n  <img src=\"https://github.com/user-attachments/assets/f3be3b7e-51ce-49d6-ba64-f4c2ad895202\">\n</picture>\n</td>\n</tr>\n<tr>\n<td>\n\n### VoidStar: Abstract Cosmic Effect\n\nThe VoidStar example creates an abstract, cosmic-like effect using a single, highly detailed bubble. \nKey features:\n\n- High-resolution sphere geometry\n- Subtle deformations for an organic feel\n\nThis example demonstrates how to use the bubble generator for creating unique, abstract visual effects beyond traditional bubble animations.\n\n\n</td>\n<td>\n<picture>\n  <img src=\"https://github.com/user-attachments/assets/8dc58de0-ad64-460b-a083-4298d8885325\">\n</picture>\n</td>\n</tr>\n<tr>\n<td>\n\n### Waves: Dynamic Wave Simulation\n\nThe Waves example showcases how to create a dynamic wave-like effect using a single, large bubble. \nKey features:\n\n- Custom deformation parameters for wave-like movement\n- High-frequency noise for detailed surface texture\n- Fresnel effect for light interaction\n\nThis example illustrates the potential for using the bubble generator to create more complex, fluid-like animations and effects.\n\n</td>\n<td>\n<picture>\n  <img src=\"https://github.com/user-attachments/assets/a869f540-2a04-4849-94c8-1bce3afbd8d3\">\n</picture>\n</td>\n</tr>\n</table>\n\n## Contributing\n\nContributions are welcome! Please feel free to submit a Pull Request.\n",
	"downloads_history": [
		[3890, 1],
		[3897, 1],
		[3904, 1],
		[3911, 3],
		[3918, 1],
		[3925, 1],
		[3932, 1],
		[3939, 3],
		[3946, 2],
		[3953, 1],
		[3960, 1],
		[3974, 1],
		[3988, 1],
		[3995, 1],
		[4009, 1],
		[4016, 2],
		[4023, 2],
		[4030, 1],
		[4037, 2],
		[4044, 4],
		[4051, 2],
		[4058, 1],
		[4072, 1],
		[4093, 1],
		[4107, 2],
		[4114, 5],
		[4121, 7],
		[4128, 5]
	],
	"esm": true,
	"cjs": true
}
