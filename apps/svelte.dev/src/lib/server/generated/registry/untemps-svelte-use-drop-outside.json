{
	"name": "@untemps/svelte-use-drop-outside",
	"description": "Provides a Svelte action to drop elements outside an area.",
	"repo_url": "https://github.com/untemps/svelte-use-drop-outside",
	"authors": ["untemps"],
	"homepage": "https://github.com/untemps/svelte-use-drop-outside#readme",
	"downloads": 109,
	"updated": "2022-09-12T18:38:52.366Z",
	"tags": ["miscellaneous"],
	"github_stars": 12,
	"typescript": false,
	"version": "1.6.0",
	"svelte_range": "3.49.0",
	"last_rune_check_version": "1.6.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@untemps/svelte-use-drop-outside",
				"version": "1.6.0",
				"size": 224216
			},
			{
				"name": "@untemps/dom-observer",
				"version": "2.0.0",
				"size": 76324
			},
			{
				"name": "@untemps/utils",
				"version": "2.6.0",
				"size": 20540
			},
			{
				"name": "@babel/runtime",
				"version": "7.27.1",
				"size": 246647
			},
			{
				"name": "svelte",
				"version": "3.49.0",
				"size": 7247697
			}
		],
		"dependencies": [
			[0, 1],
			[0, 2],
			[2, 3],
			[0, 4]
		],
		"circular": []
	},
	"readme": "<p align=\"center\">\n    <img src=\"assets/svelte-use-drop-outside.gif\" alt=\"Drop an element outside an area\"/>\n</p>\n<h1 align=\"center\">\n    svelte-use-drop-outside\n</h1>\n<p align=\"center\">\n    Svelte action to drop an element outside an area and more...\n</p>\n\n---\n\n[![npm](https://img.shields.io/npm/v/@untemps/svelte-use-drop-outside?style=for-the-badge)](https://www.npmjs.com/package/@untemps/svelte-use-drop-outside)\n[![GitHub Workflow Status](https://img.shields.io/github/workflow/status/untemps/svelte-use-drop-outside/deploy?style=for-the-badge)](https://github.com/untemps/svelte-use-drop-outside/actions)\n[![LGTM](https://img.shields.io/lgtm/grade/javascript/github/untemps/svelte-use-drop-outside?style=for-the-badge)](https://lgtm.com/projects/g/untemps/svelte-use-drop-outside/context:javascript)\n[![Codecov](https://img.shields.io/codecov/c/github/untemps/svelte-use-drop-outside?style=for-the-badge)](https://codecov.io/gh/untemps/svelte-use-drop-outside)\n\n## Demo\n\n<p align=\"center\">\n    :red_circle:&nbsp;<big><a href=\"https://svelte-use-drop-outside.vercel.app/\" target=\"_blank\" rel=\"noopener\">LIVE DEMO</a></big>&nbsp;:red_circle:\n</p>\n\n## Installation\n\n```bash\nyarn add @untemps/svelte-use-drop-outside\n```\n\n## Usage\n\n### Basic usage\n\n```svelte\n<script>\n    import { useDropOutside } from '@untemps/svelte-use-drop-outside'\n    \n    const _onDropOutside = (node) => {\n        console.log(`You\\'ve just dropped #${node.id} outside the area`)\n    }\n</script>\n\n<main>\n    <div class=\"container\">\n        <div class=\"area\">\n            <div\n                id=\"target\"\n                use:useDropOutside={{\n                    areaSelector: '.area',\n                    onDropOutside: _onDropOutside,\n                }}\n                class=\"target\"\n            >\n                Drag me outside the white area\n            </div>\n        </div>\n    </div>\n</main>\n\n<style>\n    main {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        height: 100%;\n        padding: 1rem;\n        background-color: #617899;\n    }\n    \n    .container {\n        max-width: 640px;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        row-gap: 3rem;\n    }\n    \n    .area {\n        width: 300px;\n        height: 300px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background-color: white;\n        box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.5);\n    }\n    \n    .target {\n        width: 10rem;\n        background-color: black;\n        color: white;\n        text-align: center;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding: 1rem;\n    }\n</style>\n```\n\n## API\n\n| Props                | Type                        | Default                                  | Description                                                                            |\n|----------------------|-----------------------------|------------------------------------------|----------------------------------------------------------------------------------------|\n| `areaSelector`       | string                      | null                                     | Selector of the element considered as the \"inside\" area.                               |\n| `dragImage`          | element or object or string | null                                     | The image used when the element is dragging.                                           |\n| `dragClassName`      | string                      | null                                     | A class name that will be assigned to the dragged element.                             |\n| `animate`            | boolean                     | false                                    | A flag to enable animation back.                                                       |\n| `animateOptions`     | object                      | { duration: .2, timingFunction: 'ease' } | Optional options for the animation back (see [Animation Options](#animation-options)). |\n| `dragHandleCentered` | boolean                     | false                                    | A flag to handle the dragged element by its center.                                    |\n| `onDropOutside`      | function                    | null                                     | Callback triggered when the dragged element is dropped outside the area.               |\n| `onDropInside`       | function                    | null                                     | Callback triggered when the dragged element is dropped inside the area                 |\n| `onDragCancel`       | function                    | null                                     | Callback triggered when the drag is cancelled (Esc key)                                |\n\n### Area Selector\n\nYou can define the DOM element which will be treated as the \"inside\" area by passing the [selector](https://developer.mozilla.org/fr/docs/Web/API/Document/querySelector) of this element.\n\nWhen dropping the dragged element, the action reconciles the boundaries of this element with the boundaries of the area to assert inside/outside stuff.\n\nWhen pressing the `Escape` key, wherever the dragged element is, it is put back to its original position.\n\n### Drag Image\n\nBy default, the action clones the target element and sets its opacity to `0.7`.\n\nAlternately, you may use the `dragImage` prop to customize the image displayed during the drag.\n\nThe `dragImage` prop may be:\n\n#### A DOM element such a `<img>` or a `<template>`:\n\n```svelte\n<main>\n    <div class=\"container\">\n        <div class=\"area\">\n            <div\n                id=\"target\"\n                use:useDropOutside={{\n                    areaSelector: '.area',\n                    dragImage: document.querySelector('#drag-image'),\n                }}\n                class=\"target\"\n            >\n                Drag me outside the white area\n            </div>\n        </div>\n    </div>\n</main>\n<img id=\"drag-image\" src=\"./assets/drag-image.png\" alt=\"Dragging image\" width=\"48\" height=\"48\"/>\n```\n\n#### An object with 3 properties:\n\n| Props    | Description                     |\n|----------|---------------------------------|\n| `src`    | Path of the image.              |\n| `width`  | Width of the image (optional).  |\n| `height` | Height of the image (optional). |\n\n```svelte\n<main>\n    <div class=\"container\">\n        <div class=\"area\">\n            <div\n                id=\"target\"\n                use:useDropOutside={{\n                    areaSelector: '.area',\n                    dragImage: {\n                        src: './assets/drag-image.png',\n                        width: 48,\n                        height: 48\n                    },\n                }}\n                class=\"target\"\n            >\n                Drag me outside the white area\n            </div>\n        </div>\n    </div>\n</main>\n```\n\n#### A string as path of the image:\n\n```svelte\n<main>\n    <div class=\"container\">\n        <div class=\"area\">\n            <div\n                id=\"target\"\n                use:useDropOutside={{\n                    areaSelector: '.area',\n                    dragImage: './assets/drag-image.png',\n                }}\n                class=\"target\"\n            >\n                Drag me outside the white area\n            </div>\n        </div>\n    </div>\n</main>\n```\n\n### Drag styles\n\nYou may assign a class to the dragged element to customize its display, whether it is a clone of the target element or it is an image, by using the `dragClassName` prop.\n\nThe class declaration will be parsed and set to the `style` attribute of the dragged element to avoid priority issues. Thus, you are guaranteed your custom styles override the previous values.\n\n> Please note the class has to be global\n\n```svelte\n<main>\n    <div class=\"container\">\n        <div class=\"area\">\n            <div\n                id=\"target\"\n                use:useDropOutside={{\n                    areaSelector: '.area',\n                    dragClassName: 'custom-drag',\n                }}\n                class=\"target\"\n            >\n                Drag me outside the white area\n            </div>\n        </div>\n    </div>\n</main>\n\n<style>\n    .target {\n        background-color: black;\n    }\n    \n    :global(.custom-drag) {\n        opacity: .5;\n        background-color: red;\n    }\n</style>\n```\n\n### Animation\n\nBy default, when the dragged element is dropped inside the area or if the drag is cancelled, the dragged element is plainly removed.\n\nWhen setting the `animate` to `true`, when those events happen, the dragged element is smoothly moved back to its original position.\n\n#### Animation Options\n\nThe animation can be configured through the `animateOptions` prop:\n\n| Argument       | Type   | Default | Description                                                                                                                                               |\n|----------------|--------|---------|-----------------------------------------------------------------------------------------------------------------------------------------------------------|\n| duration       | number | .2      | Duration of the animation (in seconds).                                                                                                                   |\n| timingFunction | string | 'ease'  | Function that defines the animation effect (see [animation-timing-function](https://developer.mozilla.org/en-US/docs/Web/CSS/animation-timing-function)). |\n\n### Center Drag Handle\n\nIn some cases, usually when you customize the dragged element, through the `dragImage` or the `dragClassName` prop, you may want to center the dragged element under the pointer when moving to avoid weird behaviours.  \nSame regarding the position the dragged element has to move back when it is dropped.\n\nThe `dragHandleCentered` prop allows to control the way the dragged element is handled:\n\n- If `true`, the center point the dragged element will be used.\n- If `false`, the top left point of the dragged element will be used.\n\n### Callbacks\n\nAll callbacks are triggered with the following arguments:\n\n| Argument | Description                              |\n|----------|------------------------------------------|\n| [0]      | Dragged element.                         |\n| [1]      | Element considered as the \"inside\" area. |\n\n```javascript\nconst _onDropOutside = (node, area) => {\n  console.log(`You\\'ve just dropped #${node.id} outside the #${area.id}`)\n}\n\nconst _onDropInside = (node, area) => {\n  console.log(`You\\'ve just dropped #${node.id} inside the #${area.id}`)\n}\n\nconst _onDragCancel = (node, area) => {\n  console.log(`You\\'ve just cancelled the drag of #${node.id} against #${area.id} boundaries`)\n}\n```\n\n## Recipes\n\n### Switching Container\n\nYou may use the action to implement a classic drag and drop container switch using the `onDropInside` callback:\n\n<p align=\"center\">\n    <img src=\"assets/container-switch.gif\" alt=\"Drag element into another container\"/>\n</p>\n\n```svelte\n<script>\n    import { useDropOutside } from '@untemps/svelte-use-drop-outside'\n    \n    const _onDropInside = (node, area) => {\n        area.appendChild(node)\n    }\n</script>\n\n<main>\n    <div class=\"container\">\n        <div id=\"origin-area\" class=\"area\">\n          <div\n            id=\"target\"\n            use:useDropOutside={{\n                areaSelector: '#destination-area',\n                onDropInside: _onDropInside,\n            }}\n            class=\"target\"\n          >\n            Drag me into the second area\n          </div>\n        </div>\n        <div id=\"destination-area\" class=\"area\"></div>\n    </div>\n</main>\n\n<style>\n    main {\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        height: 100%;\n        padding: 1rem;\n        background-color: #617899;\n    }\n    \n    .container {\n        max-width: 640px;\n        display: flex;\n        flex-direction: row;\n        align-items: center;\n        gap: 3rem;\n    }\n    \n    .area {\n        width: 300px;\n        height: 300px;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        background-color: white;\n        box-shadow: 0 0 5px 0 rgba(0, 0, 0, 0.5);\n    }\n    \n    .target {\n        width: 10rem;\n        background-color: black;\n        color: white;\n        text-align: center;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        padding: 1rem;\n    }\n</style>\n\n```\n\n## Development\n\nThe action can be served for development purpose on `http://localhost:5000/` running:\n\n```bash\nyarn dev\n```\n\n## Contributing\n\nContributions are warmly welcomed:\n\n-   Fork the repository\n-   Create a feature branch\n-   Develop the feature AND write the tests (or write the tests AND develop the feature)\n-   Commit your changes\n    using [Angular Git Commit Guidelines](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#-git-commit-guidelines)\n-   Submit a Pull Request",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 33],
		[3603, 65],
		[3610, 24],
		[3617, 46],
		[3624, 55],
		[3631, 71],
		[3638, 26],
		[3645, 11],
		[3652, 21],
		[3659, 19],
		[3666, 37],
		[3673, 14],
		[3680, 33],
		[3687, 5],
		[3694, 4],
		[3701, 7],
		[3708, 27],
		[3715, 39],
		[3722, 18],
		[3729, 30],
		[3736, 12],
		[3743, 18],
		[3750, 20],
		[3757, 53],
		[3764, 33],
		[3771, 87],
		[3778, 42],
		[3785, 62],
		[3792, 122],
		[3799, 71],
		[3806, 80],
		[3813, 44],
		[3820, 76],
		[3827, 95],
		[3834, 89],
		[3841, 118],
		[3848, 67],
		[3855, 98],
		[3862, 184],
		[3869, 184],
		[3876, 132],
		[3883, 59],
		[3890, 85],
		[3897, 132],
		[3904, 68],
		[3911, 86],
		[3918, 76],
		[3925, 57],
		[3932, 73],
		[3939, 71],
		[3946, 84],
		[3953, 81],
		[3960, 188],
		[3967, 288],
		[3974, 363],
		[3981, 382],
		[3988, 334],
		[3995, 362],
		[4002, 395],
		[4009, 269],
		[4016, 96],
		[4023, 209],
		[4030, 156],
		[4037, 170],
		[4044, 176],
		[4051, 227],
		[4058, 203],
		[4065, 221],
		[4072, 161],
		[4079, 239],
		[4086, 165],
		[4093, 267],
		[4100, 168],
		[4107, 130],
		[4114, 109],
		[4121, 118],
		[4128, 130],
		[4135, 60]
	],
	"esm": false,
	"cjs": true
}
