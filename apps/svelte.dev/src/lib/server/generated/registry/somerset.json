{
	"name": "somerset",
	"description": "Adds SEO meta tags, Open Graph, and JSON-LD to SvelteKit pages.",
	"repo_url": "https://github.com/realgoatish/somerset",
	"authors": ["realgoatish"],
	"homepage": "https://github.com/realgoatish/somerset#readme",
	"downloads": 74,
	"updated": "2024-01-06T04:44:00.504Z",
	"tags": ["seo"],
	"github_stars": 21,
	"typescript": true,
	"version": "0.0.6",
	"svelte_range": "^4.0.0",
	"kit_range": "^2.0.0",
	"last_rune_check_version": "0.0.6",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "somerset",
				"version": "0.0.6",
				"size": 261308
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# Somerset\n\nLiterally just [Next SEO](https://github.com/garmeeh/next-seo) for SvelteKit.\n\n### Table of Contents\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n- [Usage](#usage)\n  - [Setup](#setup)\n  - [Add SEO to Page](#add-seo-to-page)\n  - [Handling Global SEO Data](#handling-global-seo-data)\n  - [Somerset Options](#somerset-options)\n    - [Title Template](#title-template)\n    - [Default Title](#default-title)\n    - [No Index](#no-index)\n    - [No Follow](#no-follow)\n    - [robotsProps](#robotsprops)\n    - [Twitter](#twitter)\n    - [facebook](#facebook)\n    - [Canonical URL](#canonical-url)\n    - [Alternate](#alternate)\n    - [Additional Meta Tags](#additional-meta-tags)\n    - [Additional Link Tags](#additional-link-tags)\n- [Open Graph](#open-graph)\n  - [Open Graph Examples](#open-graph-examples)\n    - [Basic](#basic)\n    - [Video](#video)\n    - [Audio](#audio)\n    - [Article](#article)\n    - [Book](#book)\n    - [Profile](#profile)\n- [JSON-LD](#json-ld)\n    - [JSON-LD Security](#json-ld-security)\n    - [Handling multiple instances](#handling-multiple-instances)\n  - [Article](#article-1)\n  - [Breadcrumb](#breadcrumb)\n  - [Blog](#blog)\n  - [Recipe](#recipe)\n  - [Sitelinks Search Box](#sitelinks-search-box)\n  - [Course](#course)\n  - [Dataset](#dataset)\n  - [Corporate Contact](#corporate-contact)\n  - [FAQ Page](#faq-page)\n  - [How-to](#how-to)\n  - [Job Posting](#job-posting)\n  - [Local Business](#local-business)\n  - [Logo](#logo)\n  - [Product](#product)\n  - [Social Profile](#social-profile)\n  - [News Article](#news-article)\n  - [Video](#video-1)\n  - [VideoGame](#videogame)\n  - [Event](#event)\n  - [Q&A](#qa)\n  - [Collection Page](#collection-page)\n  - [Profile page](#profile-page)\n  - [Carousel](#carousel)\n    - [Default (Summary List)](#default-summary-list)\n    - [Course](#course-1)\n    - [Movie](#movie)\n    - [Recipe](#recipe-1)\n  - [Software App](#software-app)\n  - [Organization](#organization)\n  - [Brand](#brand)\n  - [WebPage](#webpage)\n  - [Image Metadata](#image-metadata)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Usage\n\n`Somerset` works by including it on pages where you would like SEO attributes to be added and passing it props to render OpenGraph/Meta tags. It also offers components for rendering JSON-LD.\n\n### Setup\n\nFirst, install it:\n\n```bash\nnpm install somerset\n```\n\nor\n\n```bash\nyarn add somerset\n```\n\n### Add SEO to Page\n\nThen you need to import `Somerset` and add the desired properties. This will render out the tags in the `<head>` for SEO. At a bare minimum, you should add a title and description.\n\n**Example with just title and description:**\n\n```svelte\n<script>\n\n  import { Somerset } from 'somerset';\n\n</script>\n\n<Somerset\n  title=\"Simple Usage Example\"\n  description=\"A short description goes here.\"\n/>\n<p>Simple Usage</p>\n\n```\n\nBut `Somerset` gives you many more options that you can add. See below for a typical example of a page.\n\n**Typical page example:**\n\n```svelte\n<script>\n\n  import { Somerset } from 'somerset';\n\n</script>\n\n<Somerset\n  title=\"Using More of Config\"\n  description=\"This example uses more of the available config options.\"\n  canonical=\"https://www.canonical.ie/\"\n  openGraph={{\n    url: 'https://www.url.ie/a',\n    title: 'Open Graph Title',\n    description: 'Open Graph Description',\n    images: [\n      {\n        url: 'https://www.example.ie/og-image-01.jpg',\n        width: 800,\n        height: 600,\n        alt: 'Og Image Alt',\n        type: 'image/jpeg',\n      },\n      {\n        url: 'https://www.example.ie/og-image-02.jpg',\n        width: 900,\n        height: 800,\n        alt: 'Og Image Alt Second',\n        type: 'image/jpeg',\n      },\n      { url: 'https://www.example.ie/og-image-03.jpg' },\n      { url: 'https://www.example.ie/og-image-04.jpg' },\n    ],\n    siteName: 'SiteName',\n  }}\n  twitter={{\n    handle: '@handle',\n    site: '@site',\n    cardType: 'summary_large_image',\n  }}\n/>\n<p>SEO Added to Page</p>\n```\n\n**A note on Twitter Tags**\n\nProps `cardType`, `site`, `handle` are equivalent to `twitter:card`, `twitter:site`, `twitter:creator`. Documentation can be found [here](https://developer.twitter.com/en/docs/twitter-for-websites/cards/overview/summary).\n\nTwitter will read the `og:title`, `og:image` and `og:description` tags for their card. `somerset` omits `twitter:title`, `twitter:image` and `twitter:description` to avoid duplication.\n\nSome tools may report this an error. If you want to add these tags, you can do so via the `additionalMetaTags` [prop](#additional-meta-tags)\n\n### Handling Global SEO Data\n\n`somerset` doesn't offer something equivalent to `next-seo`'s `DefaultSeo` component. `somerset` uses simple JavaScript template strings to render `<head>` tags, so it can't currently do per-page overrides of global defaults. I recommend using the `Somerset` component to set all the meta & openGraph tags you want on each page. \n\nYou can still centrally manage your global SEO data by passing it \"downward\" from a `+layout.svelte` page & feeding it to the `Somerset` component on each page. Here's an example of how this might look with data coming from a CMS:\n\n```svelte\n<!-- MyPage.svelte -->\n<script>\n\n  import { Somerset } from 'somerset'\n\n  export let data;\n\n  const { pageSeo, globalSeo } = data;\n\n</script>\n\n<Somerset\n  title={pageSeo.title}\n  description={pageSeo.description}\n  canonical={`${globalSeo.url}${data.slug}`}\n  openGraph={{\n    type: 'website',\n    url: `${globalSeo.url}${data.slug}`,\n    title: pageSeo.openGraph.title,\n    description: pageSeo.openGraph.description,\n    locale: 'en_US',\n    siteName: globalSeo.name,\n    images: [\n      {\n        url: pageSeo.openGraph.image.url,\n        width: 1200,\n        height: 630,\n\talt: pageSeo.openGraph.image.alt\n      }\n    ]\n  }}\n/>\n```\n\n### Somerset Options\n\n| Property                           | Type                    | Description                                                                                                                                                                          |\n| ---------------------------------- | ----------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |\n| `titleTemplate`                    | string                  | Allows you to set default title template that will be added to your title [More Info](#title-template)                                                                               |\n| `title`                            | string                  | Set the meta title of the page                                                                                                                                                       |\n| `defaultTitle`                     | string                  | If no title is set on a page, this string will be used instead of an empty `titleTemplate` [More Info](#default-title)                                                               |\n| `noindex`                          | boolean (default false) | Sets whether page should be indexed or not [More Info](#no-index)                                                                                                                    |\n| `nofollow`                         | boolean (default false) | Sets whether page should be followed or not [More Info](#no-follow)                                                                                                                  |\n| `robotsProps`                      | Object                  | Set the more meta information for the `X-Robots-Tag` [More Info](#robotsprops)                                                                                                       |\n| `description`                      | string                  | Set the page meta description                                                                                                                                                        |\n| `canonical`                        | string                  | Set the page canonical url                                                                                                                                                           |\n| `mobileAlternate.media`            | string                  | Set what screen size the mobile website should be served from                                                                                                                        |\n| `mobileAlternate.href`             | string                  | Set the mobile page alternate url                                                                                                                                                    |\n| `languageAlternates`               | array                   | Set the language of the alternate urls. Expects array of objects with the shape: `{ hrefLang: string, href: string }`                                                                |\n| `themeColor`                       | string                  | Indicates a suggested color that user agents should use to customize the display of the page or of the surrounding user interface. Must contain a valid CSS color                    |\n| `additionalMetaTags`               | array                   | Allows you to add a meta tag that is not documented here. [More Info](#additional-meta-tags)                                                                                         |\n| `additionalLinkTags`               | array                   | Allows you to add a link tag that is not documented here. [More Info](#additional-link-tags)                                                                                         |\n| `twitter.cardType`                 | string                  | The card type, which will be one of `summary`, `summary_large_image`, `app`, or `player`                                                                                             |\n| `twitter.site`                     | string                  | @username for the website used in the card footer                                                                                                                                    |\n| `twitter.handle`                   | string                  | @username for the content creator / author (outputs as `twitter:creator`)                                                                                                            |\n| `facebook.appId`                   | string                  | Used for Facebook Insights, you must add a facebook app ID to your page to for it [More Info](#facebook)                                                                             |\n| `openGraph.url`                    | string                  | The canonical URL of your object that will be used as its permanent ID in the graph                                                                                                  |\n| `openGraph.type`                   | string                  | The type of your object. Depending on the type you specify, other properties may also be required [More Info](#open-graph)                                                           |\n| `openGraph.title`                  | string                  | The open graph title, this can be different than your meta title.                                                                                                                    |\n| `openGraph.description`            | string                  | The open graph description, this can be different than your meta description.                                                                                                        |\n| `openGraph.images`                 | array                   | An array of images (object) to be used by social media platforms, slack etc as a preview. If multiple supplied you can choose one when sharing. [See Examples](#open-graph-examples) |\n| `openGraph.videos`                 | array                   | An array of videos (object)                                                                                                                                                          |\n| `openGraph.locale`                 | string                  | The locale the open graph tags are marked up in. Of the format language_TERRITORY. Default is en_US.                                                                                 |\n| `openGraph.siteName`               | string                  | If your object is part of a larger web site, the name which should be displayed for the overall site.                                                                                |\n| `openGraph.profile.firstName`      | string                  | Person's first name.                                                                                                                                                                 |\n| `openGraph.profile.lastName`       | string                  | Person's last name.                                                                                                                                                                  |\n| `openGraph.profile.username`       | string                  | Person's username.                                                                                                                                                                   |\n| `openGraph.profile.gender`         | string                  | Person's gender.                                                                                                                                                                     |\n| `openGraph.book.authors`           | string[]                | Writers of the article. [See Examples](#open-graph-examples)                                                                                                                         |\n| `openGraph.book.isbn`              | string                  | The [ISBN](https://en.wikipedia.org/wiki/International_Standard_Book_Number)                                                                                                         |\n| `openGraph.book.releaseDate`       | datetime                | The date the book was released.                                                                                                                                                      |\n| `openGraph.book.tags`              | string[]                | Tag words associated with this book.                                                                                                                                                 |\n| `openGraph.article.publishedTime`  | datetime                | When the article was first published. [See Examples](#open-graph-examples)                                                                                                           |\n| `openGraph.article.modifiedTime`   | datetime                | When the article was last changed.                                                                                                                                                   |\n| `openGraph.article.expirationTime` | datetime                | When the article is out of date after.                                                                                                                                               |\n| `openGraph.article.authors`        | string[]                | Writers of the article.                                                                                                                                                              |\n| `openGraph.article.section`        | string                  | A high-level section name. E.g. Technology                                                                                                                                           |\n| `openGraph.article.tags`           | string[]                | Tag words associated with this article.                                                                                                                                              |\n\n#### Title Template\n\nReplaces `%s` with your title string\n\n```js\ntitle = 'This is my title';\ntitleTemplate = 'Somerset | %s';\n// outputs: Somerset | This is my title\n```\n\n```js\ntitle = 'This is my title';\ntitleTemplate = '%s | Somerset';\n// outputs: This is my title | Somerset\n```\n\n#### Default Title\n\n```js\ntitle = undefined;\ntitleTemplate = 'Somerset | %s';\ndefaultTitle = 'Somerset';\n// outputs: Somerset\n```\n\n#### No Index\n\nSetting this to `true` will set `noindex,follow` (to set `nofollow`, please refer to [`nofollow`](#no-follow)). This works on a page by page basis. This property works in tandem with the `nofollow` property and together they populate the `robots` meta tag.\n\n**Note:** If you want to set all pages to `noindex`, do so in your `+layout.svelte`. Just be aware that you can not override this at the page level (it would only produce another `robots` tag). \n\n**Example No Index on a single page:**\n\nIf you have a single page that you want no indexed you can achieve this by:\n\n```svelte\n<script>\n\n  import { Somerset } from 'somerset';\n\n</script>\n\n<Somerset noindex={true} />\n<p>This page is no indexed</p>\n\n<!-- \n<meta name=\"robots\" content=\"noindex,follow\"> \n-->\n\n```\n\n#### No Follow\n\nSetting this to `true` will set `index,nofollow` (to set `noindex`, please refer to [`noindex`](#no-index)). This works on a page by page basis. This property works in tandem with the `noindex` property and together they populate the `robots` meta tag.\n\n**Note:** If you want to set all pages to `nofollow`, do so in your `+layout.svelte`. Just be aware that you can not override this at the page level (it would only produce another `robots` tag). \n\n**Example No Follow on a single page:**\n\nIf you have a single page that you want no followed you can achieve this by:\n\n```svelte\n<script>\n\n  import { Somerset } from 'somerset';\n\n</script>\n\n<Somerset nofollow={true} />\n<p>This page is no followed</p>\n\n<!-- \n<meta name=\"robots\" content=\"index,nofollow\"> \n-->\n```\n\n| `noindex` | `nofollow` | `meta` content of `robots` |\n| --------- | ---------- | -------------------------- |\n| --        | --         | `index,follow` (default)   |\n| false     | false      | `index,follow`             |\n| true      | --         | `noindex,follow`           |\n| true      | false      | `noindex,follow`           |\n| --        | true       | `index,nofollow`           |\n| false     | true       | `index,nofollow`           |\n| true      | true       | `noindex,nofollow`         |\n\n#### robotsProps\n\nIn addition to `index, follow` the `robots` meta tag accepts more properties to archive a more accurate crawling and serve better snippets for SEO bots that crawl your page.\n\nExample:\n\n```svelte\n<script>\n\nimport { Somerset } from 'somerset';\n\n</script>\n\n<Somerset\n  robotsProps={{\n    nosnippet: true,\n    notranslate: true,\n    noimageindex: true,\n    noarchive: true,\n    maxSnippet: -1,\n    maxImagePreview: 'none',\n    maxVideoPreview: -1,\n  }}\n/>\n<p>Additional robots props in Somerset!!</p>\n\n<!--\n<meta name=\"robots\" content=\"index,follow,nosnippet,max-snippet:-1,max-image-preview:none,noarchive,noimageindex,max-video-preview:-1,notranslate\">\n-->\n```\n\n**Available properties**\n\n| Property            | Type                      | Description                                                                                                                                                                                     |\n| ------------------- | ------------------------- | ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `noarchive`         | boolean                   | Do not show a [cached link](https://support.google.com/websearch/answer/1687222) in search results.                                                                                             |\n| `nosnippet`         | boolean                   | Do not show a text snippet or video preview in the search results for this page.                                                                                                                |\n| `max-snippet`       | number                    | Use a maximum of [number] characters as a textual snippet for this search result. [Read more](https://developers.google.com/search/reference/robots_meta_tag?hl=en-GB#directives)               |\n| `max-image-preview` | 'none','standard','large' | Set the maximum size of an image preview for this page in a search results.                                                                                                                     |\n| `max-video-preview` | number                    | Use a maximum of [number] seconds as a video snippet for videos on this page in search results. [Read more](https://developers.google.com/search/reference/robots_meta_tag?hl=en-GB#directives) |\n| `notranslate`       | boolean                   | Do not offer translation of this page in search results.                                                                                                                                        |\n| `noimageindex`      | boolean                   | Do not index images on this page.                                                                                                                                                               |\n| `unavailable_after` | string                    | Do not show this page in search results after the specified date/time. The date/time must be specified in a widely adopted format including, but not limited to RFC 822, RFC 850, and ISO 8601. |\n\nFor more reference about the `X-Robots-Tag` visit [Google Search Central - Control Crawling and Indexing](https://developers.google.com/search/reference/robots_meta_tag?hl=en-GB#directives)\n\n#### Twitter\n\nTwitter will read the `og:title`, `og:image` and `og:description` tags for their card, this is why `somerset` omits `twitter:title`, `twitter:image` and `twitter:description` so not to duplicate.\n\nSome tools may report this an error. If you want to add these tags, you can do so via the `additionalMetaTags` [prop](#additional-meta-tags)\n\n#### facebook\n\n```jsx\nfacebook={{\n  appId: '1234567890',\n}}\n```\n\nAdd this to your `facebook` prop object to include the fb:app_id meta if you need to enable Facebook insights for your site. Information regarding this can be found in facebook's documentation\n\n#### Canonical URL\n\nAdd this on a page per page basis when you want to consolidate duplicate URLs.\n\n```js\ncanonical = 'https://www.canonical.ie/';\n```\n\n#### Alternate\n\nThis link relation is used to indicate a relation between a desktop and a mobile website to search engines.\n\nExample:\n\n```jsx\nmobileAlternate={{\n  media: 'only screen and (max-width: 640px)',\n  href: 'https://m.canonical.ie',\n}}\n```\n\n```jsx\nlanguageAlternates={[{\n  hrefLang: 'de-AT',\n  href: 'https://www.canonical.ie/de',\n}]}\n```\n\n#### Additional Meta Tags\n\nThis allows you to add any other meta tags that are not covered in the `config` and\nshould be used instead of `children` prop.\n\n`content` is required. Then either `name`, `property` or `httpEquiv`. (Only one on each)\n\nExample:\n\n```js\nadditionalMetaTags={[{\n  property: 'dc:creator',\n  content: 'Jane Doe'\n}, {\n  name: 'application-name',\n  content: 'Somerset'\n}, {\n  httpEquiv: 'x-ua-compatible',\n  content: 'IE=edge; chrome=1'\n}]}\n```\n\nInvalid Examples:\n\nThese are invalid as they contain more than one of `name`, `property` and `httpEquiv` on the same entry.\n\n```js\nadditionalMetaTags={[{\n  property: 'dc:creator',\n  name: 'dc:creator',\n  content: 'Jane Doe'\n}, {\n  property: 'application-name',\n  httpEquiv: 'application-name',\n  content: 'Somerset'\n}]}\n```\n\n#### Additional Link Tags\n\nThis allows you to add any other link tags that are not covered in the `config`.\n\n`rel` and `href` is required.\n\nExample:\n\n```js\nadditionalLinkTags={[\n  {\n    rel: 'icon',\n    href: 'https://www.test.ie/favicon.ico',\n  },\n  {\n    rel: 'apple-touch-icon',\n    href: 'https://www.test.ie/touch-icon-ipad.jpg',\n    sizes: '76x76'\n  },\n  {\n    rel: 'manifest',\n    href: '/manifest.json'\n  },\n  {\n    rel: 'preload',\n    href: 'https://www.test.ie/font/sample-font.woof2',\n    as: 'font',\n    type: 'font/woff2',\n    crossOrigin: 'anonymous'\n  }\n]}\n```\n\nit will result in this being rendered:\n\n```html\n<link rel=\"icon\" href=\"https://www.test.ie/favicon.ico\" />\n<link\n  rel=\"apple-touch-icon\"\n  href=\"https://www.test.ie/touch-icon-ipad.jpg\"\n  sizes=\"76x76\"\n/>\n<link rel=\"manifest\" href=\"/manifest.json\" />\n<link\n  rel=\"preload\"\n  href=\"https://www.test.ie/font/sample-font.woof2\"\n  as=\"font\"\n  type=\"font/woff2\"\n  crossorigin=\"anonymous\"\n/>\n```\n\n## Open Graph\n\nFor the full specification please check out <http://ogp.me/>\n\nSomerset currently supports:\n\n- [basic](#basic)\n- [video](#video)\n- [article](#article)\n- [book](#book)\n- [profile](#profile)\n\n### Open Graph Examples\n\n#### Basic\n\n```svelte\n<script>\n\n  import { Somerset } from 'somerset';\n\n</script>\n\n<Somerset\n  openGraph={{\n    type: 'website',\n    url: 'https://www.example.com/page',\n    title: 'Open Graph Title',\n    description: 'Open Graph Description',\n    images: [\n      {\n        url: 'https://www.example.ie/og-image.jpg',\n        width: 800,\n        height: 600,\n        alt: 'Og Image Alt',\n      },\n      {\n        url: 'https://www.example.ie/og-image-2.jpg',\n        width: 800,\n        height: 600,\n        alt: 'Og Image Alt 2',\n      },\n    ],\n  }}\n/>\n<p>Basic</p>\n```\n\n#### Video\n\nFull info on [http://ogp.me/](http://ogp.me/#type_video)\n\n```svelte\n<script>\n\n  import { Somerset } from 'somerset';\n\n</script>\n\n<Somerset\n  title=\"Video Page Title\"\n  description=\"Description of video page\"\n  openGraph={{\n    title: 'Open Graph Video Title',\n    description: 'Description of open graph video',\n    url: 'https://www.example.com/videos/video-title',\n    type: 'video.movie',\n    video: {\n      actors: [\n        {\n          profile: 'https://www.example.com/actors/@firstnameA-lastnameA',\n          role: 'Protagonist',\n        },\n        {\n          profile: 'https://www.example.com/actors/@firstnameB-lastnameB',\n          role: 'Antagonist',\n        },\n      ],\n      directors: [\n        'https://www.example.com/directors/@firstnameA-lastnameA',\n        'https://www.example.com/directors/@firstnameB-lastnameB',\n      ],\n      writers: [\n        'https://www.example.com/writers/@firstnameA-lastnameA',\n        'https://www.example.com/writers/@firstnameB-lastnameB',\n      ],\n      duration: 680000,\n      releaseDate: '2022-12-21T22:04:11Z',\n      tags: ['Tag A', 'Tag B', 'Tag C'],\n    },\n    siteName: 'SiteName',\n  }}\n/>\n<h1>Video Page SEO</h1>\n```\n\n#### Audio\n\nFull info on [http://ogp.me/](https://ogp.me/#structured)\n\n```svelte\n<script>\n\n  import { Somerset } from 'somerset';\n\n</script>\n\n<Somerset\n  title=\"Audio Page Title\"\n  description=\"Description of audio page\"\n  openGraph={{\n    title: 'Open Graph Audio',\n    description: 'Description of open graph audio',\n    url: 'https://www.example.com/audio/audio',\n    audio: [\n      {\n        url: 'http://examples.opengraphprotocol.us/media/audio/1khz.mp3',\n        secureUrl: 'https://d72cgtgi6hvvl.cloudfront.net/media/audio/1khz.mp3',\n        type: \"audio/mpeg\"\n      },\n      {\n        url: 'http://examples.opengraphprotocol.us/media/audio/250hz.mp3',\n        secureUrl: 'https://d72cgtgi6hvvl.cloudfront.net/media/audio/250hz.mp3',\n        type: \"audio/mpeg\"\n      },\n    ]\n    site_name: 'SiteName',\n  }}\n/>\n<h1>Audio Page SEO</h1>\n```\n\n#### Article\n\n```svelte\n<script>\n\n  import { Somerset } from 'somerset';\n\n</script>\n\n<Somerset\n  openGraph={{\n    title: 'Open Graph Article Title',\n    description: 'Description of open graph article',\n    url: 'https://www.example.com/articles/article-title',\n    type: 'article',\n    article: {\n      publishedTime: '2017-06-21T23:04:13Z',\n      modifiedTime: '2018-01-21T18:04:43Z',\n      expirationTime: '2022-12-21T22:04:11Z',\n      section: 'Section II',\n      authors: [\n        'https://www.example.com/authors/@firstnameA-lastnameA',\n        'https://www.example.com/authors/@firstnameB-lastnameB',\n      ],\n      tags: ['Tag A', 'Tag B', 'Tag C'],\n    },\n    images: [\n      {\n        url: 'https://www.test.ie/images/cover.jpg',\n        width: 850,\n        height: 650,\n        alt: 'Photo of text',\n      },\n    ],\n  }}\n/>\n<p>Article</p>\n```\n\n#### Book\n\n```svelte\n<script>\n\n  import { Somerset } from 'somerset';\n\n</script>\n\n<Somerset\n  openGraph={{\n    title: 'Open Graph Book Title',\n    description: 'Description of open graph book',\n    url: 'https://www.example.com/books/book-title',\n    type: 'book',\n    book: {\n      releaseDate: '2018-09-17T11:08:13Z',\n      isbn: '978-3-16-148410-0',\n      authors: [\n        'https://www.example.com/authors/@firstnameA-lastnameA',\n        'https://www.example.com/authors/@firstnameB-lastnameB',\n      ],\n      tags: ['Tag A', 'Tag B', 'Tag C'],\n    },\n    images: [\n      {\n        url: 'https://www.test.ie/images/book.jpg',\n        width: 850,\n        height: 650,\n        alt: 'Cover of the book',\n      },\n    ],\n  }}\n/>\n<p>Book</p>\n```\n\n#### Profile\n\n```svelte\n<script>\n\n  import { Somerset } from 'somerset';\n\n</script>\n\n<Somerset\n  openGraph={{\n    title: 'Open Graph Profile Title',\n    description: 'Description of open graph profile',\n    url: 'https://www.example.com/@firstlast123',\n    type: 'profile',\n    profile: {\n      firstName: 'First',\n      lastName: 'Last',\n      username: 'firstlast123',\n      gender: 'female',\n    },\n    images: [\n      {\n        url: 'https://www.test.ie/images/profile.jpg',\n        width: 850,\n        height: 650,\n        alt: 'Profile Photo',\n      },\n    ],\n  }}\n/>\n<p>Profile</p>\n```\n\n## JSON-LD\n\nSomerset has the ability to set JSON-LD a form of structured data. Structured data is a standardised format for providing information about a page and classifying the page content.\n\nGoogle has excellent content on JSON-LD -> [HERE](https://developers.google.com/search/docs/data-types/article)\n\nBelow you will find a very basic page implementing each of the available JSON-LD types:\n\n- [Article](#article-1)\n- [Breadcrumb](#breadcrumb)\n- [Blog](#blog)\n- [Recipe](#recipe)\n- [Sitelinks Search Box](#sitelinks-search-box)\n- [Course](#course)\n- [Dataset](#dataset)\n- [Corporate Contact](#corporate-contact)\n- [FAQ Page](#faq-page)\n- [How-to](#how-to)\n- [Job Posting](#job-posting)\n- [Local Business](#local-business)\n- [Product](#product)\n- [Social Profile](#social-profile)\n- [News Article](#news-article)\n\nPull request very welcome to add any from the list [found on here](https://developers.google.com/search/docs/data-types/article)\n\n#### JSON-LD Security\n\nJust a quick note on security. To get JSON-LD onto the page it needs to be in a script tag. `somerset` achieves this by using a JavaScript template strings.\n\nSo if passing anything directly from a URL to one of the components below please ensure you sanitize it first if needed.\n\nView `toJson.tsx` for implementation detail.\n\n#### Handling multiple instances\n\nIf your page requires multiple instances of a given JSON-LD component, you can specify unique `keyOverride` properties, and `somerset` will handle the rest.\n\nThis comes in handy for blog rolls, search results, and overview pages.\n\nPlease fully research when you should and shouldn't add multiple instances of JSON-LD.\n\n```jsx\n<ExampleJsonLd keyOverride=\"my-new-key\" />\n```\n\n### Article\n\n```svelte\n<script>\n\n  import { ArticleJsonLd } from 'somerset';\n\n</script>\n\n<h1>Article JSON-LD</h1>\n<ArticleJsonLd\n  useAppDir={false}\n  url=\"https://example.com/article\"\n  title=\"Article headline\"\n  images={[\n    'https://example.com/photos/1x1/photo.jpg',\n    'https://example.com/photos/4x3/photo.jpg',\n    'https://example.com/photos/16x9/photo.jpg',\n  ]}\n  datePublished=\"2015-02-05T08:00:00+08:00\"\n  dateModified=\"2015-02-05T09:00:00+08:00\"\n  authorName={[\n    {\n      name: 'Jane Blogs',\n      url: 'https://example.com',\n    },\n    {\n      name: 'Mary Stone',\n      url: 'https://example.com',\n    },\n  ]}\n  publisherName=\"Gary Meehan\"\n  publisherLogo=\"https://www.example.com/photos/logo.jpg\"\n  description=\"This is a mighty good description of this article.\"\n  isAccessibleForFree={true}\n/>\n```\n\n### Breadcrumb\n\n```svelte\n<script>\n\n  import { BreadcrumbJsonLd } from 'somerset';\n\n</script>\n\n<h1>Breadcrumb JSON-LD</h1>\n<BreadcrumbJsonLd\n  itemListElements={[\n    {\n      position: 1,\n      name: 'Books',\n      item: 'https://example.com/books',\n    },\n    {\n      position: 2,\n      name: 'Authors',\n      item: 'https://example.com/books/authors',\n    },\n    {\n      position: 3,\n      name: 'Ann Leckie',\n      item: 'https://example.com/books/authors/annleckie',\n    },\n    {\n      position: 4,\n      name: 'Ancillary Justice',\n      item: 'https://example.com/books/authors/ancillaryjustice',\n    },\n  ]}\n/>\n```\n\n**Required properties**\n\n| Property                    | Info                                                                                                     |\n| --------------------------- | -------------------------------------------------------------------------------------------------------- |\n| `itemListElements`          |                                                                                                          |\n| `itemListElements.position` | The position of the breadcrumb in the breadcrumb trail. Position 1 signifies the beginning of the trail. |\n| `itemListElements.name`     | The title of the breadcrumb displayed for the user.                                                      |\n| `itemListElements.item`     | The URL to the webpage that represents the breadcrumb.                                                 |\n\n### Blog\n\n```svelte\n<script>\n\n  import { ArticleJsonLd } from 'somerset';\n\n</script>\n\n<h1>Blog JSON-LD</h1>\n<ArticleJsonLd\n  type=\"BlogPosting\"\n  url=\"https://example.com/blog\"\n  title=\"Blog headline\"\n  images={[\n    'https://example.com/photos/1x1/photo.jpg',\n    'https://example.com/photos/4x3/photo.jpg',\n    'https://example.com/photos/16x9/photo.jpg',\n  ]}\n  datePublished=\"2015-02-05T08:00:00+08:00\"\n  dateModified=\"2015-02-05T09:00:00+08:00\"\n  authorName=\"Jane Blogs\"\n  description=\"This is a mighty good description of this blog.\"\n/>\n```\n\n### Recipe\n\n```svelte\n<script>\n\n  import { RecipeJsonLd } from 'somerset';\n\n</script>\n\n<h1>Recipe JSON-LD</h1>\n<RecipeJsonLd\n  name=\"Party Coffee Cake\"\n  description=\"This coffee cake is awesome and perfect for parties.\"\n  datePublished=\"2018-03-10\"\n  authorName={['Jane Blogs', 'Mary Stone']}\n  prepTime=\"PT20M\"\n  cookTime=\"PT30M\"\n  totalTime=\"PT50M\"\n  keywords=\"cake for a party, coffee\"\n  yields=\"10\"\n  category=\"Dessert\"\n  cuisine=\"American\"\n  calories={270}\n  images={[\n    'https://example.com/photos/1x1/photo.jpg',\n    'https://example.com/photos/4x3/photo.jpg',\n    'https://example.com/photos/16x9/photo.jpg',\n  ]}\n  ingredients={[\n    '2 cups of flour',\n    '3/4 cup white sugar',\n    '2 teaspoons baking powder',\n    '1/2 teaspoon salt',\n    '1/2 cup butter',\n    '2 eggs',\n    '3/4 cup milk',\n  ]}\n  instructions={[\n    {\n      name: 'Preheat',\n      text: 'Preheat the oven to 350 degrees F. Grease and flour a 9x9 inch pan.',\n      url: 'https://example.com/party-coffee-cake#step1',\n      image: 'https://example.com/photos/party-coffee-cake/step1.jpg',\n    },\n  ]}\n  aggregateRating={{\n    ratingValue: '5',\n    ratingCount: '18',\n  }}\n  video={{\n    name: 'How to make a Party Coffee Cake',\n    description: 'This is how you make a Party Coffee Cake.',\n    contentUrl: 'http://www.example.com/video123.mp4',\n    embedUrl: 'http://www.example.com/videoplayer?video=123',\n    uploadDate: '2018-02-05T08:00:00+08:00',\n    duration: 'PT1M33S',\n    thumbnailUrls: [\n      'https://example.com/photos/1x1/photo.jpg',\n      'https://example.com/photos/4x3/photo.jpg',\n      'https://example.com/photos/16x9/photo.jpg',\n    ],\n    expires: '2019-02-05T08:00:00+08:00',\n    hasPart: {\n      '@type': 'Clip',\n      name: 'Preheat oven',\n      startOffset: 30,\n      url: 'http://www.example.com/example?t=30',\n    },\n    watchCount: 2347,\n    publication: {\n      '@type': 'BroadcastEvent',\n      isLiveBroadcast: true,\n      startDate: '2020-10-24T14:00:00+00:00',\n      endDate: '2020-10-24T14:37:14+00:00',\n    },\n    regionsAllowed: ['IT', 'NL'],\n  }}\n/>\n```\n\n**Required properties**\n\n| Property            | Info                                                                |\n| ------------------- | ------------------------------------------------------------------- |\n| `name`              | The name of the recipe                                              |\n| `description`       | A description of the recipe                                         |\n| `authorName`        | The name of the recipe author. Can be a string or array of strings. |\n| `ingredients`       | A list of ingredient strings                                        |\n| `instructions`      | -                                                                   |\n| `instructions.name` | The name of the instruction step.                                   |\n| `instructions.text` | The directions of the instruction step.                             |\n\n### Sitelinks Search Box\n\n```svelte\n<script>\n\n  import { SiteLinksSearchBoxJsonLd } from 'somerset';\n\n</script>\n\n<h1>Sitelinks Search Box JSON-LD</h1>\n<SiteLinksSearchBoxJsonLd\n  url=\"https://www.example.com\"\n  potentialActions={[\n    {\n      target: 'https://query.example.com/search?q',\n      queryInput: 'search_term_string',\n    },\n    {\n      target: 'android-app://com.example/https/query.example.com/search/?q',\n      queryInput: 'search_term_string',\n    },\n  ]}\n/>\n```\n\n**Required properties**\n\n| Property                      | Info                                                                                                                                                                            |\n| ----------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `url`                         | URL of the website associated with the sitelinks searchbox                                                                                                                      |\n| `potentialActions`            | Array of one or two SearchAction objects. Describes the URI to send the query to, and the syntax of the request that is sent                                                    |\n| `potentialActions.target`     | For websites, the URL of the handler that should receive and handle the search query; for apps, the URI of the intent handler for your search engine that should handle queries |\n| `potentialActions.queryInput` | Placeholder used in target, gets substituted for user given query                                                                                                               |\n\nRead the [documentation](https://developers.google.com/search/docs/appearance/structured-data/sitelinks-searchbox)\n\n### Course\n\n```svelte\n<script>\n\n  import { CourseJsonLd } from 'somerset';\n\n</script>\n\n<h1>Course JSON-LD</h1>\n<CourseJsonLd\n  courseName=\"Course Name\"\n  description=\"Introductory CS course laying out the basics.\"\n  provider={{\n    name: 'Course Provider',\n    url: 'https//www.example.com/provider',\n  }}\n/>\n```\n\n**Required properties**\n\n| Property        | Info                                                         |\n| --------------- | ------------------------------------------------------------ |\n| `courseName`    | The title of the course.                                     |\n| `description`   | A description of the course. Display limit of 60 characters. |\n| `provider.name` | The course provider name.                                    |\n| `provider.url`  | The course provider name url.                                |\n\n**Recommended properties**\n\n| Property      | Info                            |\n| ------------- | ------------------------------- |\n| `providerUrl` | The url to the course provider. |\n\n### Dataset\n\n```svelte\n<script>\n\n  import { DatasetJsonLd } from 'somerset';\n\n</script>\n\n<h1>Dataset JSON-LD</h1>\n<DatasetJsonLd\n  description=\"The description needs to be at least 50 characters long\"\n  name=\"name of the dataset\"\n  license=\"https//www.example.com\"\n/>\n```\n\n**Required properties**\n\n| Property      | Info                                                                              |\n| ------------- | --------------------------------------------------------------------------------- |\n| `description` | A short summary describing a dataset. Needs to be between 50 and 5000 characters. |\n| `name`        | A license under which the dataset is distributed.                                 |\n\n**Recommended properties**\n\n| Property  | Info                            |\n| --------- | ------------------------------- |\n| `license` | The url to the course provider. |\n\n### Corporate Contact\n\n```svelte\n<script>\n\n  import { CorporateContactJsonLd } from 'somerset';\n\n</script>\n\n<h1>Corporate Contact JSON-LD</h1>\n<CorporateContactJsonLd\n  url=\"http://www.your-company-site.com\"\n  logo=\"http://www.example.com/logo.png\"\n  contactPoint={[\n    {\n      telephone: '+1-401-555-1212',\n      contactType: 'customer service',\n      email: 'customerservice@email.com',\n      areaServed: 'US',\n      availableLanguage: ['English', 'Spanish', 'French'],\n    },\n    {\n      telephone: '+1-877-746-0909',\n      contactType: 'customer service',\n      email: 'servicecustomer@email.com',\n      contactOption: 'TollFree',\n      availableLanguage: 'English',\n    },\n    {\n      telephone: '+1-877-453-1304',\n      contactType: 'technical support',\n      contactOption: 'TollFree',\n      areaServed: ['US', 'CA'],\n      availableLanguage: ['English', 'French'],\n    },\n  ]}\n/>\n```\n\n**Required properties**\n\n| Property                   | Info                                                                                            |\n| -------------------------- | ----------------------------------------------------------------------------------------------- |\n| `url`                      | Url to the home page of the company's official site.                                            |\n| `contactPoint`             |                                                                                                 |\n| `contactPoint.telephone`   | An internationalized version of the phone number, starting with the \"+\" symbol and country code |\n| `contactPoint.contactType` | Description of the purpose of the phone number i.e. `Technical Support`.                        |\n\n**Recommended ContactPoint properties**\n\n| Property                         | Info                                                                                                       |\n| -------------------------------- | ---------------------------------------------------------------------------------------------------------- |\n| `contactPoint.areaServed`        | `String` or `Array` of geographical regions served by the business. Example `\"US\"` or `[\"US\", \"CA\", \"MX\"]` |\n| `contactPoint.availableLanguage` | Details about the language spoken. Example `\"English\"` or `[\"English\", \"French\"]`                          |\n| `contactPoint.email`             | Email asscosiated with the business`                                                                       |\n| `gecontactPointo.contactOption`  | Details about the phone number. Example `\"TollFree\"`                                                       |\n\n### FAQ Page\n\n```svelte\n<script>\n\n  import { FAQPageJsonLd } from 'somerset';\n\n</script>\n\n<h1>FAQ Page JSON-LD</h1>\n<FAQPageJsonLd\n  mainEntity={[\n    {\n      questionName: 'How long is the delivery time?',\n      acceptedAnswerText: '3-5 business days.',\n    },\n    {\n      questionName: 'Where can I find information about product recalls?',\n      acceptedAnswerText: 'Read more on under information.',\n    },\n  ]}\n/>\n```\n\n**Required properties**\n\n| Property                        | Info                                                                          |\n| ------------------------------- | ----------------------------------------------------------------------------- |\n| `mainEntity`                    |                                                                               |\n| `mainEntity.questionName`       | The full text of the question. For example, \"How long is the delivery time?\". |\n| `mainEntity.acceptedAnswerText` | The full answer to the question.                                              |\n\n### How-to\n\n```svelte\n<script>\n\n  import { HowToJsonLd } from 'somerset';\n\n</script>\n\n<h1>How-to JSON-LD</h1>\n<HowToJsonLd\n  name=\"How to tile a kitchen backsplash\"\n  image=\"https://example.com/photos/1x1/photo.jpg\"\n  estimatedCost={{ currency: 'USD', value: '100' }}\n  supply={['tiles', 'thin-set', 'mortar', 'tile grout', 'grout sealer']}\n  tool={['notched trowel', 'bucket', 'large sponge']}\n  step={[\n    {\n      url: 'https://example.com/kitchen#step1',\n      name: 'Prepare the surfaces',\n      itemListElement: [\n        {\n          type: 'HowToTip',\n          text: 'Turn off the power to the kitchen and then remove everything that is on the wall, such as outlet covers, switchplates, and any other item in the area that is to be tiled.',\n        },\n        {\n          type: 'HowToDirection',\n          text: 'Then clean the surface thoroughly to remove any grease or other debris and tape off the area.',\n        },\n      ],\n      image: 'https://example.com/photos/1x1/photo-step1.jpg',\n    },\n  ]}\n  totalTime=\"P2D\"\n/>\n```\n\n**Required properties**\n\n| Property | Info                                                                               |\n| -------- | ---------------------------------------------------------------------------------- |\n| `name`   | Name of the HowTo                                                                  |\n| `step`   | An array of HowToStep elements which comprise the full instructions of the how-to. |\n\n**Supported properties**\n\n| Property        | Info                                                                                                                                     |\n| --------------- | ---------------------------------------------------------------------------------------------------------------------------------------- |\n| `estimatedCost` | The estimated cost of the supplies consumed when performing instructions.                                                                |\n| `image`         | Image of the completed how-to.                                                                                                           |\n| `supply`        | A supply consumed when performing instructions or a direction.                                                                           |\n| `tool`          | An object used (but not consumed) when performing instructions or a direction.                                                           |\n| `totalTime`     | The total time required to perform all instructions or directions (including time to prepare the supplies), in ISO 8601 duration format. |\n\n### Job Posting\n\n```svelte\n<script>\n\n  import { JobPostingJsonLd } from 'somerset';\n\n</script>\n\n<h1>Job Posting JSON-LD</h1>\n<JobPostingJsonLd\n  datePosted=\"2020-01-06T03:37:40Z\"\n  description=\"Company is looking for a software developer....\"\n  hiringOrganization={{\n    name: 'company name',\n    sameAs: 'www.company-website-url.dev',\n  }}\n  jobLocation={{\n    streetAddress: '17 street address',\n    addressLocality: 'Paris',\n    addressRegion: 'Ile-de-France',\n    postalCode: '75001',\n    addressCountry: 'France',\n  }}\n  title=\"Job Title\"\n  baseSalary={{\n    currency: 'EUR',\n    value: 40, // Can also be a salary range, like [40, 50]\n    unitText: 'HOUR',\n  }}\n  employmentType=\"FULL_TIME\"\n  jobLocationType=\"TELECOMMUTE\"\n  validThrough=\"2020-01-06\"\n  applicantLocationRequirements=\"FR\"\n  experienceRequirements={{\n    occupational: {\n      minimumMonthsOfExperience: 12,\n    },\n    educational: {\n      credentialCategory: 'high school',\n    },\n    experienceInPlaceOfEducation: true,\n  }}\n/>\n```\n\n**Required properties**\n\n| Property                    | Info                                                                                                                                       |\n| --------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------ |\n| `datePosted`                | The original date that employer posted the job in ISO 8601 format                                                                          |\n| `description`               | The full description of the job in HTML format                                                                                             |\n| `hiringOrganization`        | An object containing information about the company hiring with the following fields or the string `'confidential'` when hiring anonymously |\n| `hiringOrganization.name`   | Name of the company offering the job position                                                                                              |\n| `hiringOrganization.sameAs` | URL of a reference Web page                                                                                                                |\n| `title`                     | The title of the job (not the title of the posting)                                                                                        |\n| `validThrough`              | The date when the job posting will expire in [ISO 8601 format](https://en.wikipedia.org/wiki/ISO_8601)                                     |\n\n**Supported properties**\n\n| Property                                                        | Info                                                                                                                                                                                                                                                    |\n| --------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `applicantLocationRequirements`                                 | The geographic location(s) in which employees may be located for to be eligible for the remote job                                                                                                                                                      |\n| `baseSalary`                                                    |                                                                                                                                                                                                                                                         |\n| `baseSalary.currency`                                           | The currency in which the monetary amount is expressed                                                                                                                                                                                                  |\n| `baseSalary.value`                                              | The value of the quantitative value. You can also provide an array of minimum and maximum salaries. .                                                                                                                                                   |\n| `baseSalary.unitText`                                           | A string indicating the unit of measurement [Base salary guideline](https://developers.google.com/search/docs/data-types/job-posting#basesalary)                                                                                                        |\n| `employmentType`                                                | Type of employment [Employement type guideline](https://developers.google.com/search/docs/data-types/job-posting#basesalary)                                                                                                                            |\n| `jobLocation`                                                   | The physical location(s) of the business where the employee will report to work (such as an office or worksite), not the location where the job was posted.                                                                                             |\n| `jobLocation.streetAddress`                                     | The street address. For example, 1600 Amphitheatre Pkwy                                                                                                                                                                                                 |\n| `jobLocation.addressLocality`                                   | The locality. For example, Mountain View.                                                                                                                                                                                                               |\n| `jobLocation.addressRegion`                                     | The region. For example, CA.                                                                                                                                                                                                                            |\n| `jobLocation.postalCode`                                        | The postal code. For example, 94043                                                                                                                                                                                                                     |\n| `jobLocation.addressCountry`                                    | The country. For example, USA. You can also provide the two-letter ISO 3166-1 alpha-2 country code.                                                                                                                                                     |\n| `jobLocationType`                                               | A description of the job location [Job Location type guideline](https://developers.google.com/search/docs/data-types/job-posting#job-location-type)                                                                                                     |\n| `hiringOrganization.logo`                                       | Logos on third-party job sites [Hiring Organization guideline](https://developers.google.com/search/docs/data-types/job-posting#hiring)                                                                                                                 |\n| `experienceRequirements.occupational.minimumMonthsOfExperience` | The minimum number of months of experience that are required for the job posting. [Experience and Education Requirements](https://developers.google.com/search/docs/appearance/structured-data/job-posting#education-and-experience-properties-beta)    |\n| `experienceRequirements.educational.credentialCategory`         | The level of education that's required for the job posting. Use one of the following: `high school`, `associate degree`, `bachelor degree`, `professional certificate`, `postgraduate degree`                                                           |\n| `experienceRequirements.experienceInPlaceOfEducation`           | Boolean: If set to true, this property indicates whether a job posting will accept experience in place of its formal educational qualifications. If set to true, you must include both the experienceRequirements and educationRequirements properties. |\n\n### Local Business\n\nLocal business is supported with a sub-set of properties.\n\n```jsx\n<LocalBusinessJsonLd\n  type=\"Store\"\n  id=\"http://davesdeptstore.example.com\"\n  name=\"Dave's Department Store\"\n  description=\"Dave's latest department store in San Jose, now open\"\n  url=\"http://www.example.com/store-locator/sl/San-Jose-Westgate-Store/1427\"\n  telephone=\"+14088717984\"\n  address={{\n    streetAddress: '1600 Saratoga Ave',\n    addressLocality: 'San Jose',\n    addressRegion: 'CA',\n    postalCode: '95129',\n    addressCountry: 'US',\n  }}\n  geo={{\n    latitude: '37.293058',\n    longitude: '-121.988331',\n  }}\n  images={[\n    'https://example.com/photos/1x1/photo.jpg',\n    'https://example.com/photos/4x3/photo.jpg',\n    'https://example.com/photos/16x9/photo.jpg',\n  ]}\n  sameAs={[\n    'www.company-website-url1.dev',\n    'www.company-website-url2.dev',\n    'www.company-website-url3.dev',\n  ]}\n  openingHours={[\n    {\n      opens: '08:00',\n      closes: '23:59',\n      dayOfWeek: [\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday',\n      ],\n      validFrom: '2019-12-23',\n      validThrough: '2020-04-02',\n    },\n    {\n      opens: '14:00',\n      closes: '20:00',\n      dayOfWeek: 'Sunday',\n      validFrom: '2019-12-23',\n      validThrough: '2020-04-02',\n    },\n  ]}\n  rating={{\n    ratingValue: '4.5',\n    ratingCount: '2',\n  }}\n  review={[\n    {\n      author: 'John Doe',\n      datePublished: '2006-05-04',\n      name: 'A masterpiece of literature',\n      reviewBody:\n        'I really enjoyed this book. It captures the essential challenge people face as they try make sense of their lives and grow to adulthood.',\n      reviewRating: {\n        bestRating: '5',\n        worstRating: '1',\n        reviewAspect: 'Ambiance',\n        ratingValue: '4',\n      },\n    },\n    {\n      author: 'Bob Smith',\n      datePublished: '2006-06-15',\n      name: 'A good read.',\n      reviewBody: \"Catcher in the Rye is a fun book. It's a good book to read.\",\n      reviewRating: {\n        ratingValue: '4',\n      },\n    },\n  ]}\n  makesOffer={[\n    {\n      priceSpecification: {\n        type: 'UnitPriceSpecification',\n        priceCurrency: 'EUR',\n        price: '1000-10000',\n      },\n      itemOffered: {\n        name: 'Motion Design Services',\n        description:\n          'We are the expert of animation and motion design productions.',\n      },\n    },\n    {\n      priceSpecification: {\n        type: 'UnitPriceSpecification',\n        priceCurrency: 'EUR',\n        price: '2000-10000',\n      },\n      itemOffered: {\n        name: 'Branding Services',\n        description:\n          'Real footage is a powerful tool when it comes to show what the business is about. Can be used to present your company, show your factory, promote a product packshot, or just tell any story. It can help create emotional links with your audience by showing punchy images.',\n      },\n    },\n  ]}\n  areaServed={[\n    {\n      geoMidpoint: {\n        latitude: '41.108237',\n        longitude: '-80.642982',\n      },\n      geoRadius: '1000',\n    },\n    {\n      geoMidpoint: {\n        latitude: '51.108237',\n        longitude: '-80.642982',\n      },\n      geoRadius: '1000',\n    },\n  ]}\n  action={{\n    actionName: 'potentialAction',\n    actionType: 'ReviewAction',\n    target: 'https://www.example.com/review/this/business',\n  }}\n/>\n```\n\n**Required properties**\n\n| Property                  | Info                                                                       |\n| ------------------------- | -------------------------------------------------------------------------- |\n| `@id`                     | Globally unique ID of the specific business location in the form of a URL. |\n| `type`                    | LocalBusiness or any sub-type                                              |\n| `address`                 | Address of the specific business location                                  |\n| `address.addressCountry`  | The 2-letter ISO 3166-1 alpha-2 country code                               |\n| `address.addressLocality` | City                                                                       |\n| `address.addressRegion`   | State or province, if applicable.                                          |\n| `address.postalCode`      | Postal or zip code.                                                        |\n| `address.streetAddress`   | Street number, street name, and unit number.                               |\n| `name`                    | Business name.                                                             |\n\n**Supported properties**\n\n| Property                                            | Info                                                                                                                                                 |\n| --------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------- |\n| `description`                                       | Description of the business location                                                                                                                 |\n| `geo`                                               | Geographic coordinates of the business.                                                                                                              |\n| `geo.latitude`                                      | The latitude of the business location                                                                                                                |\n| `geo.longitude`                                     | The longitude of the business location                                                                                                               |\n| `rating`                                            | The average rating of business based on multiple ratings or reviews.                                                                                 |\n| `rating.ratingValue`                                | The rating for the content.                                                                                                                          |\n| `rating.ratingCount`                                | The count of total number of ratings.                                                                                                                |\n| `priceRange`                                        | The relative price range of the business.                                                                                                            |\n| `servesCuisine`                                     | The type of cuisine the restaurant serves.                                                                                                           |\n| `images`                                            | An image or images of the business. Required for valid markup depending on the type                                                                  |\n| `telephone`                                         | A business phone number meant to be the primary contact method for customers.                                                                        |\n| `url`                                               | The fully-qualified URL of the specific business location.                                                                                           |\n| `sameAs`                                            | An array of URLs that represent this business                                                                                                        |\n| `openingHours`                                      | Opening hour specification of business. You can provide this as a single object, or an array of objects with the properties below.                   |\n| `openingHours.opens`                                | The opening hour of the place or service on the given day(s) of the week.                                                                            |\n| `openingHours.closes`                               | The closing hour of the place or service on the given day(s) of the week.                                                                            |\n| `openingHours.dayOfWeek`                            | The day of the week for which these opening hours are valid. Can be a string or array of strings. Refer to [DayOfWeek](https://schema.org/DayOfWeek) |\n| `openingHours.validFrom`                            | The date when the item becomes valid.                                                                                                                |\n| `openingHours.validThrough`                         | The date after when the item is not valid.                                                                                                           |\n| `review`                                            | A review of the local business.                                                                                                                      |\n| `review.author`                                     | The author of this content or rating.                                           ",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 10],
		[3596, 22],
		[3603, 35],
		[3610, 13],
		[3617, 1],
		[3624, 4],
		[3631, 7],
		[3638, 16],
		[3645, 6],
		[3652, 124],
		[3659, 21],
		[3666, 7],
		[3673, 12],
		[3680, 1],
		[3687, 4],
		[3694, 3],
		[3701, 6],
		[3708, 5],
		[3715, 4],
		[3722, 43],
		[3729, 10],
		[3736, 8],
		[3743, 2],
		[3750, 5],
		[3757, 6],
		[3764, 1],
		[3771, 3],
		[3778, 4],
		[3792, 6],
		[3806, 8],
		[3813, 4],
		[3820, 1],
		[3827, 1],
		[3834, 11],
		[3841, 24],
		[3848, 2],
		[3855, 1],
		[3862, 7],
		[3869, 2],
		[3876, 1],
		[3890, 6],
		[3897, 2],
		[3904, 2],
		[3918, 2],
		[3925, 6],
		[3932, 1],
		[3939, 2],
		[3953, 2],
		[3974, 7],
		[3981, 2],
		[3995, 2],
		[4002, 1],
		[4009, 1],
		[4016, 9],
		[4023, 3],
		[4030, 3],
		[4037, 12],
		[4044, 12],
		[4051, 6],
		[4058, 9],
		[4065, 10],
		[4079, 17],
		[4093, 1],
		[4100, 18],
		[4107, 2],
		[4114, 74],
		[4121, 37],
		[4128, 5]
	],
	"esm": true,
	"cjs": false
}
