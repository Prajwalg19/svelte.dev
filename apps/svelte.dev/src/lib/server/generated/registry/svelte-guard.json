{
	"name": "svelte-guard",
	"description": "Simplify route guarding in SvelteKit applications.",
	"repo_url": "https://github.com/mehdikhody/svelte-guard",
	"authors": ["mehdikhody"],
	"homepage": "https://github.com/mehdikhody/svelte-guard#readme",
	"downloads": 84,
	"updated": "2025-02-22T13:41:50.551Z",
	"tags": ["auth", "router"],
	"github_stars": 18,
	"typescript": true,
	"version": "1.0.0",
	"svelte_range": "^5.0.0",
	"kit_range": "^2.5.27",
	"last_rune_check_version": "1.0.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-guard",
				"version": "1.0.0",
				"size": 10896
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# SvelteGuard: Route Guards for SvelteKit\r\n\r\n`svelte-guard` is a lightweight and flexible package designed to make route guarding in SvelteKit applications easy and efficient. It ensures that only authorized users can access specific routes, enhancing your app’s security. With `svelte-guard`, you can manage route guards seamlessly, avoiding redundant code across your project.\r\n\r\n## Features\r\n\r\n- **✅ Simple Setup:** Easily define route guards by adding individual guard files to your routes.\r\n- **✅ Flexible Guards:** Supports both synchronous and asynchronous guard functions. Guards can redirect users to another route if access is denied.\r\n- **✅ Inherited Guards:** Guards can be inherited from parent routes, minimizing duplication of guard logic.\r\n- **✅ Extensible:** You can extend existing guards to add extra logic for specific routes or groups of routes.\r\n\r\n### Directory Structure Example\r\n\r\n```plaintext\r\napp/\r\n│-- routes/\r\n│   │-- login/\r\n│   │   ├── -guard.ts          # Guard for login route\r\n│   │   └── +page.svelte\r\n│   │-- admin/\r\n│   │   ├── settings/\r\n│   │   │   ├── -guard.ts      # Extends admin guard\r\n│   │   │   └── +page.svelte\r\n│   │   ├── -guard.ts          # Admin guard for all sub-routes\r\n│   │   └── +page.svelte\r\n│   └── +layout.svelte\r\n│-- hooks.server.ts            # Register guards here\r\n```\r\n\r\n## Installation\r\n\r\nInstall `svelte-guard` via npm:\r\n\r\n```bash\r\nnpm install svelte-guard\r\n```\r\n\r\n## Getting Started\r\n\r\nTo use `svelte-guard`, you need to define guard files for your routes and register them.\r\n\r\n### 1. Create Guard Files\r\n\r\nDefine guards in \\`-guard.ts\\` (or \\`.js\\`) files inside your route directories. Each guard file controls access to its associated route and its children.\r\n\r\nExample:\r\n\r\n```typescript\r\n// routes/admin/-guard.ts\r\nimport type { Guard } from 'svelte-guard';\r\nimport { redirect } from '@sveltejs/kit';\r\n\r\nexport const guard: Guard = async ({ locals }) => {\r\n\t// Example: Check if the user is an admin\r\n\tif (!locals.user.isAdmin) {\r\n\t\treturn false; // Access denied\r\n\t\t// or redirect the request in here:\r\n\t\t// return redirect(307, '/');\r\n\t}\r\n\treturn true;\r\n};\r\n\r\n// Optional redirect for unauthorized users\r\n// this will be the default for nested sub-routes\r\nexport const reroute = '/';\r\n```\r\n\r\n### 2. Register Guards\r\n\r\nIn \\`hooks.server.ts\\`, register your route guards using the \\`createGuardHook\\` function from \\`svelte-guard\\`:\r\n\r\n```typescript\r\n// hooks.server.ts\r\nimport { createGuardHook } from 'svelte-guard';\r\n\r\nconst guards = import.meta.glob('./routes/**/-guard.*');\r\nexport const handle = createGuardHook(guards);\r\n// Optional: Specify a default redirect route if a guard fails\r\n// export const handle = createGuardHook(guards, '/login');\r\n```\r\n\r\n## Example Guards\r\n\r\n### Basic Route Guard\r\n\r\n```typescript\r\n// src/routes/dashboard/-guard.ts\r\nimport type { Guard } from 'svelte-guard';\r\n\r\nexport const guard: Guard = async ({ locals }) => {\r\n\treturn locals.session === undefined;\r\n};\r\n\r\n// Redirect if the guard fails\r\nexport const reroute = '/login';\r\n```\r\n\r\n### API Endpoint Guard\r\n\r\n```typescript\r\n// src/routes/api/-guard.ts\r\nimport type { Guard } from 'svelte-guard';\r\n\r\nexport const guard: Guard = async ({ request }) => {\r\n\tconst header = request.headers.get('Authorization');\r\n\tconst token = 'xxxxxxxxxxxxxxxx';\r\n\tif (!header || header !== `Bearer ${token}`) {\r\n\t\treturn false;\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\n// No reroute specified = 403 Forbidden on failure\r\n```\r\n\r\n## Advanced Configuration\r\n\r\nYou can chain multiple hooks together using SvelteKit’s \\`sequence\\` function:\r\n\r\n```typescript\r\n// hooks.server.ts\r\nimport { sequence } from '@sveltejs/kit/hooks';\r\nimport { createGuardHook } from 'svelte-guard';\r\n\r\nconst guards = import.meta.glob('./routes/**/-guard.*');\r\nconst GuardHook = createGuardHook(guards);\r\n\r\nexport const handle = sequence(OtherHook, GuardHook);\r\n```\r\n\r\n## VSCode Settings\r\n\r\nTo help you easily identify guard files in VSCode, you can enable custom labels for tabs. Add the following to your \\`settings.json\\`:\r\n\r\n```json\r\n\"workbench.editor.customLabels.enabled\": true,\r\n\"workbench.editor.customLabels.patterns\": {\r\n  \"**/src/routes/**/-guard.{ts,js}\": \"${dirname} - Guard\"\r\n}\r\n```\r\n\r\n## Contributing\r\n\r\nWe welcome contributions to \\`svelte-guard\\`! Whether it's fixing bugs, adding new features, or suggesting improvements, feel free to open issues or submit pull requests on [GitHub](https://github.com/mehdikhody/svelte-guard).\r\n\r\n## License\r\n\r\nThis project is licensed under the MIT License. See the [LICENSE](https://github.com/mehdikhody/svelte-guard/blob/master/LICENSE) file for details.\r\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3743, 6],
		[3750, 5],
		[3757, 23],
		[3764, 7],
		[3771, 13],
		[3778, 33],
		[3785, 43],
		[3792, 39],
		[3799, 20],
		[3806, 26],
		[3813, 35],
		[3820, 37],
		[3827, 35],
		[3834, 44],
		[3841, 10],
		[3848, 36],
		[3855, 40],
		[3862, 66],
		[3869, 73],
		[3876, 13],
		[3883, 51],
		[3890, 44],
		[3897, 84],
		[3904, 77],
		[3911, 234],
		[3918, 155],
		[3925, 94],
		[3932, 84],
		[3939, 50],
		[3946, 80],
		[3953, 126],
		[3960, 37],
		[3967, 32],
		[3974, 49],
		[3981, 28],
		[3988, 90],
		[3995, 44],
		[4002, 35],
		[4009, 25],
		[4016, 10],
		[4023, 45],
		[4030, 53],
		[4037, 53],
		[4044, 57],
		[4051, 48],
		[4058, 40],
		[4065, 82],
		[4072, 45],
		[4079, 17],
		[4086, 125],
		[4093, 112],
		[4100, 171],
		[4107, 90],
		[4114, 84],
		[4121, 100],
		[4128, 91]
	],
	"esm": true,
	"cjs": false
}
