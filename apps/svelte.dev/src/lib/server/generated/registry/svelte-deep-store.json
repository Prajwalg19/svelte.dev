{
	"name": "svelte-deep-store",
	"description": "Creates deep stores that react only to specific property changes.",
	"repo_url": "https://github.com/neuronetio/svelte-deep-store",
	"authors": ["neuronet.io"],
	"homepage": "https://github.com/neuronetio/svelte-deep-store#readme",
	"downloads": 7,
	"updated": "2019-08-27T21:19:20.342Z",
	"tags": ["miscellaneous"],
	"github_stars": 1,
	"typescript": true,
	"version": "1.1.5",
	"svelte_range": "^3.8.0",
	"last_rune_check_version": "1.1.5",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-deep-store",
				"version": "1.1.5",
				"size": 140749
			},
			{
				"name": "fast-copy",
				"version": "2.1.7",
				"size": 118523
			},
			{
				"name": "ramda",
				"version": "0.26.1",
				"size": 1039889
			}
		],
		"dependencies": [
			[0, 1],
			[0, 2]
		],
		"circular": []
	},
	"readme": "[![GitHub license](https://img.shields.io/github/license/neuronetio/svelte-deep-store?style=flat-square)](https://github.com/neuronetio/svelte-deep-store/blob/master/LICENSE)\n[![GitHub issues](https://img.shields.io/github/issues/neuronetio/svelte-deep-store)](https://github.com/neuronetio/svelte-deep-store/issues)\n[![Twitter](https://img.shields.io/twitter/url/https/github.com/neuronetio/svelte-deep-store)](https://twitter.com/intent/tweet?text=Wow:&url=https%3A%2F%2Fgithub.com%2Fneuronetio%2Fsvelte-deep-store)\n\n# svelte-deep-store\n\nSvelte deep store - react only when specified property of the object was changed.\n\n# Usage\n\n```javascript\nimport { onDestroy } from 'svelte';\nimport Store from 'svelte-deep-store';\n\nconst state = new Store({ some: 'value', someOther: { nested: 'value' } });\n\nlet nestedValue;\nonDestroy(\n  state.subscribe('someOther.nested', (value) => {\n    nestedValue = value;\n  })\n);\n\nlet some;\nonDestroy(\n  state.subscribeAll(['some', 'someOther'], (which, value) => {\n    if (which === 'some') {\n      some = value;\n    } else if (which === 'someOther') {\n      nestedValue = value.nested;\n    }\n  })\n);\n\nstate.update('someOther.nested', (currentValue) => {\n  return 'new value';\n});\n\nonDestroy(\n  state.subscribe('some', (value) => {\n    state.update('someOther.nested', (oldValue) => {\n      return 'nested changed after some changed';\n    });\n  })\n);\n\nlet currentState = state.get();\nconsole.log(currentState.some);\n\nonDestroy(state.destroy);\n```\n\nThere are also `watch` and `watchAll` methods instead of `subscribe` and `subscribeAll` which do the same thing.\nAnd `set` is equivalent of `update`;\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 3],
		[3603, 11],
		[3610, 13],
		[3617, 4],
		[3624, 2],
		[3631, 4],
		[3638, 3],
		[3645, 7],
		[3652, 7],
		[3659, 5],
		[3666, 10],
		[3673, 2],
		[3680, 2],
		[3687, 2],
		[3694, 1],
		[3701, 1],
		[3708, 2],
		[3715, 1],
		[3722, 11],
		[3729, 10],
		[3743, 1],
		[3750, 2],
		[3757, 5],
		[3764, 7],
		[3771, 5],
		[3778, 2],
		[3785, 2],
		[3792, 2],
		[3799, 4],
		[3806, 4],
		[3813, 5],
		[3820, 5],
		[3834, 9],
		[3841, 1],
		[3848, 2],
		[3855, 1],
		[3862, 46],
		[3876, 4],
		[3883, 2],
		[3890, 12],
		[3897, 2],
		[3904, 4],
		[3911, 3],
		[3918, 4],
		[3925, 1],
		[3932, 2],
		[3939, 3],
		[3946, 2],
		[3960, 2],
		[3967, 3],
		[3974, 2],
		[3981, 3],
		[3988, 1],
		[3995, 2],
		[4009, 1],
		[4016, 1],
		[4023, 4],
		[4030, 16],
		[4037, 13],
		[4044, 7],
		[4051, 1],
		[4065, 1],
		[4072, 8],
		[4079, 1],
		[4086, 3],
		[4093, 12],
		[4100, 10],
		[4107, 9],
		[4114, 7],
		[4121, 7],
		[4128, 8]
	],
	"esm": false,
	"cjs": true
}
