{
	"name": "svelte-forge-ui",
	"description": "Provides lightweight, flexible UI components for Svelte applications.",
	"repo_url": "https://github.com/jorgeluis2000/svelte-forge-ui",
	"authors": ["jorgeluis2000"],
	"homepage": "https://github.com/jorgeluis2000/svelte-forge-ui",
	"downloads": 7,
	"updated": "2024-05-23T13:10:34.130Z",
	"tags": ["design-system"],
	"github_stars": 0,
	"typescript": true,
	"version": "0.5.5-alpha",
	"svelte_range": "^4.0.0",
	"kit_range": "^2.5.10",
	"last_rune_check_version": "0.5.5-alpha",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-forge-ui",
				"version": "0.5.5-alpha",
				"size": 239871
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "<!-- markdownlint-disable -->\r\n<div align=\"center\">\r\n    <h1>ðŸ”¥ svelte-forge-ui ðŸ”¥</h1>\r\n<p>It's a component library for Svelte. These component designs are lightweight and flexible.</p>\r\n</div>\r\n<hr />\r\n<!-- markdownlint-restore -->\r\n\r\n> [!WARNING]\r\n> This library is currently in the creation phase and it is not recommended to implement it in productive environments, but we will soon release our version 1.0.0 which will be the stable version. Likewise, we appreciate that you use our lib for testing while our stable version is available..\r\n\r\n## Table of Contents\r\n\r\n- [Table of Contents](#table-of-contents)\r\n- [The Problem](#the-problem)\r\n- [This Solution](#this-solution)\r\n- [Installation](#installation)\r\n- [Example How to use](#example-how-to-use)\r\n- [LICENSE](#license)\r\n\r\n## The Problem\r\n\r\nWe require a collection of simple components that have flexibility to be modified. We require this to avoid always creating several components of the same thing, avoiding duplicating code, in addition to already having different style formats for each component.\r\n\r\n## This Solution\r\n\r\n**`svelte-forge-ui`** is a lightweight and easy-to-use solution, which seeks to give its users the different components that exist with different style formats, in addition to allowing flexibility when modifying certain parameters of the components.\r\n\r\n> [!NOTE]\r\n> These collections of components below use tailwind to help with a much faster design to implement.\r\n\r\n## Installation\r\n\r\nThe component package is distributed through **npm**, which is included with **node**. You should install it as a `dependencies`.\r\n\r\nnpm:\r\n\r\n```bash\r\nnpm install svelte-forge-ui\r\n```\r\n\r\nYarn:\r\n\r\n```bash\r\nyarn add svelte-forge-ui\r\n```\r\n\r\n## Example How to use\r\n\r\nWe import the library into the `<script></script>` tags and create a variable that will take the data from **InputFloat**.\r\n\r\n<!-- markdownlint-disable -->\r\n\r\n```typescript\r\nimport { InputFloat } from 'svelte-forge-ui';\r\nlet inputFloat = '';\r\n```\r\n\r\n<!-- markdownlint-restore -->\r\n\r\nNow let's call the `<InputFloat/>` component and set the required properties **_nameInput_**, **_labelText_** and **_valueInput_**.\r\n\r\n<!-- markdownlint-disable -->\r\n\r\n```svelte\r\n<InputFloat\r\n\ttype=\"text\"\r\n\tclassName=\"\"\r\n\tnameInput=\"input-float\"\r\n\tlabelText=\"Input Float\"\r\n\ttextSize=\"sm\"\r\n\trounded=\"none\"\r\n\tcolorHex={'#2980B9'}\r\n\tbind:valueInput={inputFloat}\r\n/>\r\n```\r\n\r\n<!-- markdownlint-restore -->\r\n\r\nYou can also use CSS variables to place your own colors. The first thing will be to create the name of your theme, by default it is called **`primary`** but you can change it with the **`theme`** property.\r\n\r\nAfter choosing the name or thinking about whether to leave it as default, you will have to create the css variables in `:root` so that your components have colors. The format that should be used for these variables should be the **name of the topic** that you chose **followed by a hyphen** and the **numbers from 100 to 900 of 100 in 100**. Below we will see an example taking into account that our theme is called **`primary`**:\r\n\r\n<!-- markdownlint-disable -->\r\n\r\n```css\r\n:root {\r\n\t--primary-100: #d0dde2;\r\n\t--primary-200: #a0bbc5;\r\n\t--primary-300: #7199a8;\r\n\t--primary-400: #41778b;\r\n\t--primary-500: #12556e;\r\n\t--primary-600: #0e4458;\r\n\t--primary-700: #0b3342;\r\n\t--primary-800: #07222c;\r\n\t--primary-900: #041116;\r\n}\r\n```\r\n\r\n<!-- markdownlint-restore -->\r\n\r\nNow in the component to activate the CSS variables you must use the **`useCss`** property and the component would look like this:\r\n\r\n<!-- markdownlint-disable -->\r\n\r\n```svelte\r\n<InputFloat\r\n\ttype=\"text\"\r\n\tclassName=\"\"\r\n\tnameInput=\"input-float\"\r\n\tlabelText=\"Input Float\"\r\n\ttextSize=\"sm\"\r\n\trounded=\"none\"\r\n\tuseCss\r\n\tbind:valueInput={inputFloat}\r\n/>\r\n```\r\n\r\n<!-- markdownlint-restore -->\r\n\r\nThe other properties found are not mandatory but are properties that allow you to modify the style of the component.\r\n\r\n## LICENSE\r\n\r\n[MIT](LICENSE)\r\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3764, 620],
		[3771, 205],
		[3778, 313],
		[3785, 123],
		[3792, 152],
		[3799, 43],
		[3806, 17],
		[3813, 3],
		[3820, 1],
		[3827, 1],
		[3834, 5],
		[3841, 8],
		[3848, 11],
		[3855, 2],
		[3862, 5],
		[3869, 9],
		[3876, 1],
		[3890, 28],
		[3904, 6],
		[3918, 31],
		[3925, 2],
		[3932, 5],
		[3939, 3],
		[3953, 6],
		[3967, 1],
		[3974, 5],
		[3981, 26],
		[3995, 9],
		[4002, 2],
		[4009, 3],
		[4016, 3],
		[4023, 6],
		[4030, 6],
		[4037, 8],
		[4044, 17],
		[4051, 15],
		[4065, 2],
		[4079, 2],
		[4100, 52],
		[4107, 55],
		[4114, 7],
		[4121, 25],
		[4128, 14]
	]
}
