{
	"name": "svelte-svg-transform",
	"description": "Transform and customize SVG files in Svelte.",
	"repo_url": "",
	"authors": ["bartektelec"],
	"homepage": "https://github.com/bartektelec/svelte-svg-transform",
	"downloads": 9,
	"updated": "2023-08-03T19:04:35.261Z",
	"tags": ["ui"],
	"typescript": true,
	"version": "1.0.1",
	"svelte_range": "^3.54.0 || ^4.0.0",
	"kit_range": "1.22.4",
	"last_rune_check_version": "1.0.1",
	"github_stars": 0,
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-svg-transform",
				"version": "1.0.1",
				"size": 9016
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "<div align=\"center\">\n\n# üñçÔ∏èsvelte-svg-transform\n\n[Live Demo](https://bartektelec.github.io/svelte-svg-transform/)\n\nA tiny library that makes it easier for you to add SVGs and tranform them in your svelte project.\nYou won't need to rename your `.svg` files to `.svelte` and manually edit them.\nIndependent from DOMParser, so it works just fine during server-side rendering.\n\n[![release version](https://img.shields.io/npm/v/svelte-svg-transform)](https://www.npmjs.com/package/svelte-svg-transform) [![weekly download count](https://img.shields.io/npm/dm/svelte-svg-transform)](https://npmcharts.com/compare/svelte-svg-transform?interval=30&minimal=true) ![primary language procentage](https://img.shields.io/github/languages/top/bartektelec/svelte-svg-transform) ![workflow build status](https://img.shields.io/github/actions/workflow/status/bartektelec/svelte-svg-transform/npm-publish.yml) ![last commit badge](https://img.shields.io/github/last-commit/bartektelec/svelte-svg-transform) [![licence badge](https://img.shields.io/npm/l/svelte-svg-transform)](https://github.com/bartektelec/svelte-svg-transform/blob/main/LICENSE)\n\n</div>\n<hr />\n\n## Requirements\n\n```\n\"vite\": \"^4.3.0\",\n\"svelte\": \"^3.54.0\",\n```\n\n## Install\n\n```sh\nnpm install svelte-svg-transform\n```\n\n## Usage\n\n- Import in your component and pass it your SVG\n- Import your Icon's raw markup\n- Pass the icon to the component and transform it using props\n\n```tsx\n// important! include the ?raw at the end of your SVG import\nimport MyIcon from '../path/to/icon.svg?raw';\n// component is default exported so you can call it whatever you want!\nimport SvgTransform from 'svelte-svg-transform';\n\n<span class=\"text-red-500\">\n\t<SvgTransform\n\t\tsvg={MyIcon}\n\t\twidth={32}\n\t\tstrokeWidth={3}\n\t\tstroke=\"currentColor\"\n\t/>\n</span>;\n// => outputs a 32px x 32px INLINE svg\n// => with 3px thick stroke of same color as parent's text\n```\n\n## Props\n\nThe component exposes some props that make it easier to manipulate SVG type files.\nMake sure to pass your SVG's **raw** markup to the component like so:\n\n```tsx\nimport SvgIcon from 'svelte-svg-transform';\nimport MyIcon from '../path/to/icon.svg?raw';\n\n<SvgIcon svg={MyIcon} />;\n```\n\nFrom there you can use these props on the component:\n\n### svg\n\nType: `string (svg markup)`\nRequired\n\nAccepts only raw svg markup that you want to transform.\n\n### width\n\nType: `number`\nDefault: 20\n\nSets svg's width to desired pixels.\n\n### height\n\nType: `number`\nDefault: Same as width\n\nSets svg's height to desired pixels, if not passed will use the same as width.\n\n### fill\n\nType: `string`\n\nOverride any hard-coded fill colors _except none_\n\n### stroke\n\nType: `string`\n\nOverride any hard-coded stroke colors _except none_\n\n#### fillOpacity\n\nType: `number`\nRange: 0-1\nOptional\n\nChange svg's internal fill-opacity properties (except none) to any value you want.\n\n#### strokeWidth\n\nType: `number`\nOptional\n\nChange svg's internal stroke-width properties (except none) to any value you want.\n\n#### strokeLineCap\n\nType: `string`\nOptional\n\nChange svg's internal stroke-line-cap properties (except none) to any value you want.\n\n#### strokeOpacity\n\nType: `number`\nRange: 0-1\nOptional\n\nChange svg's internal stroke-opacity properties (except none) to any value you want.\n\n## Licence\n\n[MIT](https://opensource.org/licenses/MIT)\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3596, 125],
		[3603, 114],
		[3610, 70],
		[3617, 93],
		[3624, 70],
		[3631, 128],
		[3638, 169],
		[3645, 62],
		[3652, 60],
		[3659, 61],
		[3666, 127],
		[3673, 106],
		[3680, 60],
		[3687, 44],
		[3694, 49],
		[3701, 52],
		[3708, 45],
		[3715, 26],
		[3722, 41],
		[3729, 67],
		[3736, 31],
		[3743, 41],
		[3750, 132],
		[3757, 122],
		[3764, 35],
		[3771, 32],
		[3778, 47],
		[3785, 29],
		[3792, 13],
		[3799, 35],
		[3806, 30],
		[3813, 59],
		[3820, 39],
		[3827, 42],
		[3834, 16],
		[3841, 62],
		[3848, 33],
		[3855, 46],
		[3862, 32],
		[3869, 9],
		[3876, 24],
		[3883, 20],
		[3890, 34],
		[3897, 34],
		[3904, 31],
		[3911, 20],
		[3918, 26],
		[3925, 34],
		[3932, 34],
		[3939, 29],
		[3946, 29],
		[3953, 26],
		[3960, 27],
		[3967, 20],
		[3974, 33],
		[3981, 30],
		[3988, 19],
		[3995, 19],
		[4002, 16],
		[4009, 16],
		[4016, 30],
		[4023, 32],
		[4030, 21],
		[4037, 37],
		[4044, 37],
		[4051, 18],
		[4058, 38],
		[4065, 27],
		[4072, 46],
		[4079, 51],
		[4086, 31],
		[4093, 45],
		[4100, 27],
		[4107, 6],
		[4114, 9],
		[4121, 13],
		[4128, 4],
		[4135, 4]
	],
	"esm": true,
	"cjs": false
}
