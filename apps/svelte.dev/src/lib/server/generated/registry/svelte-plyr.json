{
	"name": "svelte-plyr",
	"description": "Create video/audio players using Plyr.js in Svelte.",
	"repo_url": "https://github.com/benwoodward/svelte-plyr",
	"authors": ["benwoodward"],
	"homepage": "https://github.com/benwoodward/svelte-plyr#readme",
	"downloads": 96,
	"updated": "2020-01-24T21:43:21.714Z",
	"tags": ["media"],
	"github_stars": 21,
	"typescript": false,
	"version": "0.1.3",
	"svelte_range": "3.16.7",
	"last_rune_check_version": "0.1.3",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-plyr",
				"version": "0.1.3",
				"size": 973811
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "[![Known Vulnerabilities](https://snyk.io/test/github/benwoodward/svelte-plyr/badge.svg)](https://snyk.io/test/github/benwoodward/svelte-plyr)\n[![install size](https://badgen.net/packagephobia/install/svelte-plyr)](https://packagephobia.now.sh/result?p=svelte-plyr)\n[![npm package version](https://badgen.net/npm/v/svelte-plyr)](https://npm.im/svelte-plyr)\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](http://makeapullrequest.com)\n\n# svelte-plyr\n\n## A Svelte 3 component-wrapper for [Plyr.js](https://plyr.io)\n\nThis component is released under a MIT license.\n\nExamples: [https://github.com/benwoodward/svelte-plyr/blob/master/src/App.svelte](App.svelte)\n\n```bash\nnpm install --save svelte-plyr plyr rollup-plugin-postcss node-sass\n```\n\nYou may then begin to write a parent component that leverages the `<Plyr>` component:\n\n`components/YoutubePlyr.svelte`\n\n```html\n<script>\n  import { Plyr } from \"svelte-plyr\";\n  export let videoId;\n\n  function logEvent(event) {\n    console.log(event)\n  }\n\n  let player\n</script>\n\n<div class=\"youtube-plyr\">\n  <button on:click={() => player.play()}>PLAY</button>\n  <button on:click={() => player.pause()}>PAUSE</button>\n  <Plyr on:timeupdate={logEvent} bind:player={player}>\n    <div class=\"plyr__video-embed\">\n      <iframe\n        src=\"https://www.youtube.com/embed/{videoId}?iv_load_policy=3&modestbranding=1&playsinline=1&showinfo=0&rel=0&enablejsapi=1\"\n        allowfullscreen allowtransparency allow=\"autoplay\">\n      </iframe>\n    </div>\n  </Plyr>\n</div>\n\n<style>\n.youtube-plyr {\n  max-width: 800px;\n}\n</style>\n```\n\n## Props\n\nThe `<Plyr>` component is equipped with [all of Plyr's options](https://github.com/sampotts/plyr#options)! Just pass them in as props. Example:\n\n```html\n<Plyr autoplay=true muted=false />\n```\n\n## Events\n\nThe `<Plyr />` component can be configured to emit specified events. In this example, the `logEvent` function is called whenever the `plyr.js` emits the [timeupdate](https://github.com/sampotts/plyr#standard-media-events) `logEvent` event.\n\n```html\n<script>\n  import { Plyr } from \"svelte-plyr\";\n\n  function logEvent(event) {\n    console.log(event)\n  }\n\n  let player\n  let eventsToEmit = ['timeupdate']\n</script>\n\n<Plyr on:timeupdate={logEvent} eventsToEmit={eventsToEmit} bind:player={player}>\n  // video embed code omitted\n</Plyr>\n```\n\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 163],
		[3596, 338],
		[3603, 353],
		[3610, 264],
		[3617, 469],
		[3624, 245],
		[3631, 81],
		[3638, 78],
		[3645, 48],
		[3652, 59],
		[3659, 42],
		[3666, 124],
		[3673, 125],
		[3680, 99],
		[3687, 77],
		[3694, 80],
		[3701, 90],
		[3708, 57],
		[3715, 116],
		[3722, 40],
		[3729, 125],
		[3736, 63],
		[3743, 70],
		[3750, 149],
		[3757, 200],
		[3764, 167],
		[3771, 69],
		[3778, 107],
		[3785, 242],
		[3792, 178],
		[3799, 306],
		[3806, 176],
		[3813, 179],
		[3820, 130],
		[3827, 197],
		[3834, 180],
		[3841, 126],
		[3848, 95],
		[3855, 95],
		[3862, 86],
		[3869, 55],
		[3876, 41],
		[3883, 41],
		[3890, 42],
		[3897, 32],
		[3904, 67],
		[3911, 80],
		[3918, 121],
		[3925, 73],
		[3932, 89],
		[3939, 54],
		[3946, 34],
		[3953, 31],
		[3960, 39],
		[3967, 54],
		[3974, 99],
		[3981, 38],
		[3988, 44],
		[3995, 30],
		[4002, 19],
		[4009, 13],
		[4016, 19],
		[4023, 18],
		[4030, 35],
		[4037, 49],
		[4044, 38],
		[4051, 24],
		[4058, 52],
		[4065, 39],
		[4072, 29],
		[4079, 27],
		[4086, 53],
		[4093, 35],
		[4100, 27],
		[4107, 101],
		[4114, 96],
		[4121, 71],
		[4128, 89]
	]
}
