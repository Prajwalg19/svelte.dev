{
	"name": "@sveltestack/svelte-query",
	"description": "Manage, cache, and sync asynchronous data in Svelte.",
	"repo_url": "",
	"authors": ["amen-souissi"],
	"homepage": "https://github.com/SvelteStack/svelte-query",
	"downloads": 2874,
	"updated": "2022-01-22T21:30:04.205Z",
	"tags": ["server"],
	"typescript": true,
	"version": "1.6.0",
	"svelte_range": "^3.29.0",
	"last_rune_check_version": "1.6.0",
	"github_stars": 0,
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@sveltestack/svelte-query",
				"version": "1.6.0",
				"size": 717852
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "<img src=\"./docs/src/images/svelte-query-og.png\" />\n\nHooks for managing, caching and syncing asynchronous and remote data in Svelte\n\n## Visit [sveltequery.vercel.app](https://sveltequery.vercel.app) for docs, guides, API and more!\n\n## Quick Features\n\n- Transport/protocol/backend agnostic data fetching (REST, GraphQL, promises, whatever!)\n- Auto Caching + Refetching (stale-while-revalidate, Window Refocus, Polling/Realtime)\n- Parallel + Dependent Queries\n- Mutations + Reactive Query Refetching\n- Multi-layer Cache + Automatic Garbage Collection\n- Paginated + Cursor-based Queries\n- Load-More + Infinite Scroll Queries w/ Scroll Recovery\n- Request Cancellation\n\n\n## Contributing\n\n**PRs are welcome!**\nYou noticed a bug, a possible improvement or whatever?\nAny help is always appreciated, so don't hesitate opening one!\n\nBe sure to check out the [contributing guidelines](CONTRIBUTING.md) to fasten up the merging process.\n\n**Get started (Devs)**\n\n```bash\ngit clone git@github.com:SvelteStack/svelte-query.git\ncd svelte-query\nyarn\nyarn storybook\n```\n\n**Running Storybook**\n\n```bash\ncd storybook\nyarn\nyarn start\n```\n\n**Running the tests**\n\n```bash\nyarn test\n```\n\n**Running the Docs**\n\n```bash\ncd docs\nyarn\nyarn build\nyarn start\n```\nhttp://localhost:3000\n\n**Build**\n\n```bash\nyarn build\n```\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3596, 2831],
		[3603, 2700],
		[3610, 2798],
		[3617, 3174],
		[3624, 3011],
		[3631, 2341],
		[3638, 2191],
		[3645, 1827],
		[3652, 2181],
		[3659, 2506],
		[3666, 2633],
		[3673, 3276],
		[3680, 3639],
		[3687, 3227],
		[3694, 2637],
		[3701, 2397],
		[3708, 2648],
		[3715, 2284],
		[3722, 2308],
		[3729, 2567],
		[3736, 2900],
		[3743, 2415],
		[3750, 2812],
		[3757, 2567],
		[3764, 2275],
		[3771, 2282],
		[3778, 1928],
		[3785, 2008],
		[3792, 1930],
		[3799, 1948],
		[3806, 1965],
		[3813, 2269],
		[3820, 1795],
		[3827, 1859],
		[3834, 1537],
		[3841, 1930],
		[3848, 1808],
		[3855, 1911],
		[3862, 1758],
		[3869, 1460],
		[3876, 1967],
		[3883, 1710],
		[3890, 1973],
		[3897, 1501],
		[3904, 1575],
		[3911, 1682],
		[3918, 1176],
		[3925, 1694],
		[3932, 1483],
		[3939, 1543],
		[3946, 1809],
		[3953, 1857],
		[3960, 1307],
		[3967, 1115],
		[3974, 1662],
		[3981, 1748],
		[3988, 1804],
		[3995, 1849],
		[4002, 1505],
		[4009, 829],
		[4016, 813],
		[4023, 2034],
		[4030, 1744],
		[4037, 1547],
		[4044, 2114],
		[4051, 1930],
		[4058, 1533],
		[4065, 1344],
		[4072, 2024],
		[4079, 1765],
		[4086, 1751],
		[4093, 1771],
		[4100, 2403],
		[4107, 2687],
		[4114, 2874],
		[4121, 2542],
		[4128, 5752],
		[4135, 1821]
	],
	"esm": true,
	"cjs": false
}
