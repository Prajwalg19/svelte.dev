{
	"name": "svelte-stores",
	"description": "Provide safe stores for SvelteKit, preventing SSR state leaks.",
	"repo_url": "https://github.com/devunt/svelte-stores",
	"authors": ["devunt"],
	"homepage": "https://github.com/devunt/svelte-stores#readme",
	"downloads": 5,
	"updated": "2023-04-17T17:02:03.568Z",
	"tags": ["miscellaneous"],
	"github_stars": 43,
	"typescript": true,
	"version": "0.1.1",
	"svelte_range": "^3.0.0",
	"kit_range": "^1.0.0",
	"last_rune_check_version": "0.1.1",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-stores",
				"version": "0.1.1",
				"size": 6982
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# Svelte Stores\n\nA drop-in replacement for Svelte stores, safe to use with [SvelteKit](https://kit.svelte.dev/) SSR.\nThis library exposes the same API as `svelte/store`, but with modified stores that are safe to use with SvelteKit SSR.\n\nThis library has `svelte` and `@sveltejs/kit` as peer dependencies, so it cannot be used without SvelteKit.\n\n\n## Installation\n\nInstall `svelte-stores` with your favorite package manager.\n\n```bash\n$ npm install -D svelte-stores\n$ yarn add -D svelte-stores\n$ pnpm add -D svelte-stores\n```\n\n\n## Usage/Examples\n\nSince `svelte-stores` is a drop-in replacement, just replace `svelte/store` with `svelte-stores` in your code.\nAll of the original svelte stores are available, and the API is identical.\n\nSome of the stores are modified to be safe to use with SvelteKit SSR.\n`svelte-stores` re-exports the rest of unmodified stores and types from `svelte/store` for convenience.\n\n```diff\n- import { get, writable, derived, type Updater } from \"svelte/store\";\n+ import { get, writable, derived, type Updater } from \"svelte-stores\";\n  \n  export const count = writable(0); // Safe to use with SSR!\n```\n\n\n## Why?\nShared stores are a great way to share state between components, but they can be tricky to use with SvelteKit SSR.\nSince shared stores are global, if they are used in a long-running environment like a server, they can leak state between requests. \n\nSvelteKit explicitly documents that storing global variable [should be avoided](https://kit.svelte.dev/docs/state-management#avoid-shared-state-on-the-server), and there is active discussion ongoing about [the dangerous behavior of stores with SSR](https://github.com/sveltejs/kit/discussions/4339).\n\nThis library provides a drop-in replacement for Svelte stores that are safe to use with SvelteKit SSR, by providing a new set of stores that are isolated to each request.\nWith `svelte-stores`, you can safely use shared stores in your SvelteKit app in the same manner as before, without keeping them in context manually or worrying about leaking state between requests.\n\nCurrently only the `writable` store is modified since it is the only store that is not safe to use with SSR. Other stores does not save any state within them, so they are fundamentally safe to use with SSR (unless you kept a state in a global variable somewhere else in your code. please don't to that).\n\n\n## Implementation detail\n\nSince it is relatively simple, you can have a look at [code](https://github.com/devunt/svelte-stores/blob/main/src/lib/writable.ts).\n\n\n## Authors\n\n- [@devunt](https://github.com/devunt)\n\n\n## Contributing\n\nContributions are always welcome!\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 1],
		[3603, 4],
		[3610, 2],
		[3617, 3],
		[3624, 5],
		[3631, 1],
		[3645, 3],
		[3666, 5],
		[3673, 1],
		[3694, 1],
		[3708, 1],
		[3715, 1],
		[3722, 2],
		[3736, 1],
		[3743, 2],
		[3757, 1],
		[3764, 3],
		[3771, 2],
		[3778, 1],
		[3785, 1],
		[3792, 3],
		[3806, 3],
		[3813, 1],
		[3820, 1],
		[3841, 12],
		[3848, 1],
		[3855, 4],
		[3862, 1],
		[3869, 1],
		[3890, 3],
		[3897, 3],
		[3911, 2],
		[3918, 2],
		[3939, 1],
		[3967, 1],
		[3974, 1],
		[3995, 2],
		[4016, 1],
		[4030, 2],
		[4037, 7],
		[4044, 7],
		[4051, 2],
		[4065, 1],
		[4100, 8],
		[4114, 5],
		[4121, 6],
		[4128, 5],
		[4135, 6]
	]
}
