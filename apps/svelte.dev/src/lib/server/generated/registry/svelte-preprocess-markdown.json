{
	"name": "svelte-preprocess-markdown",
	"description": "Use Markdown in Svelte components.",
	"repo_url": "https://github.com/AlexxNB/svelte-preprocess-markdown",
	"authors": ["alexxnb"],
	"homepage": "https://github.com/AlexxNB/svelte-preprocess-markdown#readme",
	"downloads": 102,
	"updated": "2020-08-14T05:06:27.368Z",
	"tags": ["content"],
	"github_stars": 139,
	"typescript": false,
	"version": "2.7.3",
	"last_rune_check_version": "2.7.3",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-preprocess-markdown",
				"version": "2.7.3",
				"size": 16115
			},
			{
				"name": "front-matter",
				"version": "3.2.1",
				"size": 10597
			},
			{
				"name": "js-yaml",
				"version": "3.14.1",
				"size": 291327
			},
			{
				"name": "argparse",
				"version": "1.0.10",
				"size": 116446
			},
			{
				"name": "sprintf-js",
				"version": "1.0.3"
			},
			{
				"name": "esprima",
				"version": "4.0.1",
				"size": 314361
			},
			{
				"name": "marked",
				"version": "1.2.9",
				"size": 267216
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[2, 3],
			[3, 4],
			[2, 5],
			[0, 6]
		],
		"circular": []
	},
	"readme": "# svelte-preprocess-markdown\nAllows to import `*.md` files as Svelte component. Very useful when your components have a lot of formatted texts and you doesn't want to write it in HTML. It is based on superfast [Marked](https://www.npmjs.com/package/marked) markdown parser.\n\n[![npm](https://img.shields.io/npm/v/svelte-preprocess-markdown)](https://www.npmjs.com/package/svelte-preprocess-markdown)   [![npm](https://img.shields.io/npm/dt/svelte-preprocess-markdown)](https://www.npmjs.com/package/svelte-preprocess-markdown)    [![](https://github.com/AlexxNB/svelte-preprocess-markdown/workflows/Publish%20on%20NPM/badge.svg)](https://github.com/AlexxNB/svelte-preprocess-markdown/actions?workflow=Publish+on+NPM)\n\n# Documentaton\n\n* Please, see the [Docs](https://alexxnb.github.io/svelte-preprocess-markdown) for more info\n* Or try yourself in the our [Playground](https://alexxnb.github.io/svelte-preprocess-markdown/playground)\n\n# Installation\n\nInstall package:\n\n```bash\nnpm i -D svelte-preprocess-markdown\n```\n\nThen, edit `rollup.config.js` file:\n\n```js\n\n// 1. import package\nconst {markdown} = require('svelte-preprocess-markdown');\n\nexport default {\n  // ...\n  plugins: [\n    svelte({\n      // 2. add '.md', to the extensions  \n      extensions: ['.svelte','.md'],\n      // 3. add markdown preprocessor\n      preprocess: markdown()\n    })\n  ]\n}\n```\n\n# Usage\n\n## Common usage\n\n```markdown\n<script>\n    import Child from './Child.svelte';\n    let name = 'world';\n</script>\n\n# Hello {name}!\n\nThis is text in `markdown` **notation**\n\n<Child />\n\n<style>\n    h1{\n        color:red\n    }\n</style>\n```\n## MDSv usage\n\nThe `MDSv` format is [MDX](https://mdxjs.com/)-like way to write documents using imported Svelte-components.\n\n```markdown\nimport Block from './Block.svelte';\nimport { data } from './my_data.js';\n\n# The MDSv example\n\nYou can use *components* and a *logic* inside doc:\n\n<Block color=\"red\">\n  My `data` list:\n  {#each data as item}\n    {item}\n  {/each}\n</Block>\n```\n\n\n# Options\n\nYou can pass any [options](https://marked.js.org/#/USING_ADVANCED.md#options) that are accepted by [Marked](https://www.npmjs.com/package/marked).\n\n```js\n...\nplugins: [\n    svelte({\n      ...\n      preprocess: markdown({\n          headerIds: false\n      })\n      ...\n    })\n  ]\n...\n```\n\n## Renderer\nIf you need `renderer` object for options, you can get it from the package:\n\n```js\nconst {Renderer} = require('svelte-preprocess-markdown');\n\nconst renderer = Renderer();\n\nrenderer.heading = function (text, level) {\n    ...\n};\n\nconst options = {renderer};\n```\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3589, 60],
		[3596, 167],
		[3603, 157],
		[3610, 113],
		[3617, 39],
		[3624, 51],
		[3631, 31],
		[3638, 62],
		[3645, 27],
		[3652, 101],
		[3659, 65],
		[3666, 196],
		[3673, 118],
		[3680, 72],
		[3687, 123],
		[3694, 75],
		[3701, 101],
		[3708, 79],
		[3715, 94],
		[3722, 143],
		[3729, 165],
		[3736, 54],
		[3743, 128],
		[3750, 65],
		[3757, 73],
		[3764, 151],
		[3771, 163],
		[3778, 64],
		[3785, 36],
		[3792, 58],
		[3799, 60],
		[3806, 72],
		[3813, 53],
		[3820, 70],
		[3827, 200],
		[3834, 89],
		[3841, 111],
		[3848, 50],
		[3855, 58],
		[3862, 316],
		[3869, 71],
		[3876, 32],
		[3883, 64],
		[3890, 119],
		[3897, 34],
		[3904, 50],
		[3911, 49],
		[3918, 38],
		[3925, 53],
		[3932, 102],
		[3939, 85],
		[3946, 122],
		[3953, 136],
		[3960, 94],
		[3967, 106],
		[3974, 32],
		[3981, 25],
		[3988, 31],
		[3995, 54],
		[4002, 36],
		[4009, 76],
		[4016, 16],
		[4023, 36],
		[4030, 152],
		[4037, 77],
		[4044, 49],
		[4051, 61],
		[4058, 36],
		[4065, 56],
		[4072, 71],
		[4079, 51],
		[4086, 33],
		[4093, 43],
		[4100, 88],
		[4107, 50],
		[4114, 102],
		[4121, 69],
		[4128, 116]
	],
	"esm": true,
	"cjs": false
}
