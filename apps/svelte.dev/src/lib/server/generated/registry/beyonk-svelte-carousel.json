{
	"name": "@beyonk/svelte-carousel",
	"description": "Create carousel/slider components in Svelte apps.",
	"repo_url": "https://github.com/beyonk-adventures/svelte-carousel",
	"authors": ["antony", "adampond", "alex.dilley", "jedwoodcock", "leandro.silva", "tomlewis0"],
	"homepage": "https://github.com/beyonk-adventures/svelte-carousel#readme",
	"downloads": 291,
	"updated": "2022-01-13T16:20:23.849Z",
	"tags": ["ui"],
	"github_stars": 213,
	"typescript": false,
	"version": "2.9.0",
	"svelte_range": "^3.6.1",
	"last_rune_check_version": "2.9.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@beyonk/svelte-carousel",
				"version": "2.9.0",
				"size": 85670
			},
			{
				"name": "siema",
				"version": "1.5.1",
				"size": 21889
			}
		],
		"dependencies": [[0, 1]],
		"circular": []
	},
	"legacy_svelte": true,
	"readme": "<a href=\"https://beyonk.com\">\n  <img src=\"https://user-images.githubusercontent.com/218949/144224348-1b3a20d5-d68e-4a7a-b6ac-6946f19f4a86.png\" width=\"198\" />\n</a>\n\n## Svelte Carousel\n\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com) [![CircleCI](https://circleci.com/gh/beyonk-adventures/svelte-carousel.svg?style=shield)](https://circleci.com/gh/beyonk-adventures/svelte-carousel) [![svelte-v2](https://img.shields.io/badge/svelte-v2-orange.svg)](https://v2.svelte.dev) [![svelte-v3](https://img.shields.io/badge/svelte-v3-blueviolet.svg)](https://svelte.dev)\n\nSvelte Carousel / Slider\n\nThis is a ground-up rewrite of the original Svelte Carousel/Slider using Svelte v3, and [Siema](https://github.com/pawelgrzybek/siema), the goal being a fully working carousel with a tiny size.\n\n## Usage\n\nThis library is pure javascript, so can be used with any framework you like.\n\n### Demo\n\nThe [simplest possible demo](https://svelte.dev/repl/3953567d530b41d087ab7eaa8e7e632a?version=3.22.3)\n\n```\nnpm install\nnpm run dev # http://localhost:12001\n```\n\n### To use within a Svelte application:\n\n```bash\nnpm i -D @beyonk/svelte-carousel\n```\n\n## Usage\n\n```jsx\n<Carousel>\n  <div class=\"slide-content\">Slide 1</div>\n  <div class=\"slide-content\">Slide 2</div>\n  <div class=\"slide-content\">Slide 3</div>\n  <div class=\"slide-content\">Slide 4</div>\n</Carousel>\n\n<script>\n\timport Carousel from '@beyonk/svelte-carousel'\n\timport { ChevronLeftIcon, ChevronRightIcon } from 'svelte-feather-icons'\n</script>\n```\n\n### Options\n\n#### Controls\n\nYou can set the controls to be anything you like, though the default height and width are set to 40px. Just use the slots available to insert your own content.\n\n```bash\nnpm i -D svelte-feather-icons\n```\n\n```jsx\n<Carousel>\n  <span class=\"control\" slot=\"left-control\">\n    <ChevronLeftIcon />\n  </span>\n  <div class=\"slide-content\">Slide 1</div>\n  ...\n  <div class=\"slide-content\">Slide n</div>\n  <span class=\"control\" slot=\"right-control\">\n    <ChevronRightIcon />\n  </span>\n</Carousel>\n\n<script>\n\timport Carousel from './Carousel.svelte'\n\timport { ChevronLeftIcon, ChevronRightIcon } from 'svelte-feather-icons'\n</script>\n```\n\nIf you need to override height and width, you can use CSS:\n\n```css\n\t.control :global(svg) {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tcolor: #fff;\n\t\tborder: 2px solid #fff;\n\t\tborder-radius: 32px;\n\t}\n```\n\n#### Attributes\n\nYou can pass the following attributes:\n\n| Attribute | Type    | Default Value | Description                                                                                                                  |\n|-----------|---------|---------------|------------------------------------------------------------------------------------------------------------------------------|\n| loop      | boolean | true          | At the end of the carousel, loop through to the first slide again, seamlessly                                                |\n| perPage   | integer | 3             | Number of slides on a single page. Note that this needs to be greater than or equal to the number of slides in your carousel |\n| autoplay  | integer | 0             | Auto-change slide at an interval (in milliseconds). 0 means don't autoplay.                                                  |\n| duration  | number  | 200           | Slide transition duration in milliseconds.                                                \t\t\t\t    |\n| easing    | string  | 'ease-out'    | It is like a CSS transition-timing-function â€” describes acceleration curve.                                                  |\n| startIndex | number | 0\t      | Index (zero-based) of the starting slide.                                                 \t\t\t\t     |\n| draggable | boolean | true\t      | Use dragging and touch swiping.                                                 \t\t\t\t       |\n| multipleDrag | boolean | true\t      | Allow dragging to move multiple slides.                                                 \t\t\t\t     |\n| dots | boolean | true\t      | Toggles visibility of slider dots.\n| controls | boolean | true\t      | Toggles visibility of slider controls. dots.                                                 \t\t\t\t  \t       |\n| threshold | number | 20\t      | Touch and mouse dragging threshold (in px).                                                 \t\t\t\t     |\n| rtl | boolean | false\t      | Enables layout for languages written from right to left (like Hebrew or Arabic).                                                |\n\nperPage can also be set to a responsive object, to change the number of slides based on screen width:\n\n```jsx\n<Carousel perPage={{ 800: 3, 500: 2 }}>\n// will show 1 slide below 500px width, 2 at 500, 3 at 800.\n```\n\n### Events\n\nThe Carousel components emits the following events:\n\n| Name     | Data                           | Description                                                                    |\n|----------|--------------------------------|--------------------------------------------------------------------------------|\n| `change` | `{ currentSlide, slideCount }` | `currentSlide`: The current slide index. Can be a positive or negative integer. `slideCount`: The number of slides. |\n\n\n### Actions\n\n  You can call left, right, go(slideNumber), pause and resume functions on the slider. For example, for pausing the autoslide while the mouse is hover the carousel \n  \n  ```jsx\n<Carousel bind:this={carousel} on:mouseenter={enter} on:mouseleave={leave}>\n  <div class=\"slide-content\">Slide 1</div>\n  ...\n  <div class=\"slide-content\">Slide n</div>\n</Carousel>\n\n<script>\n  import Carousel from './Carousel.svelte'\n  let carousel;\n  \n  function enter() {\n    carousel.pause();\n  }\n  \n  function leave() {\n    carousel.resume();\n  }\n</script>\n```\n\n  \n",
	"downloads_history": [
		[3589, 224],
		[3596, 405],
		[3603, 253],
		[3610, 285],
		[3617, 353],
		[3624, 335],
		[3631, 417],
		[3638, 457],
		[3645, 311],
		[3652, 404],
		[3659, 594],
		[3666, 547],
		[3673, 395],
		[3680, 300],
		[3687, 315],
		[3694, 396],
		[3701, 348],
		[3708, 313],
		[3715, 251],
		[3722, 337],
		[3729, 262],
		[3736, 284],
		[3743, 322],
		[3750, 377],
		[3757, 333],
		[3764, 249],
		[3771, 256],
		[3778, 358],
		[3785, 368],
		[3792, 242],
		[3799, 275],
		[3806, 293],
		[3813, 217],
		[3820, 336],
		[3827, 291],
		[3834, 271],
		[3841, 226],
		[3848, 256],
		[3855, 261],
		[3862, 371],
		[3869, 208],
		[3876, 203],
		[3883, 249],
		[3890, 235],
		[3897, 200],
		[3904, 273],
		[3911, 195],
		[3918, 236],
		[3925, 281],
		[3932, 132],
		[3939, 208],
		[3946, 233],
		[3953, 188],
		[3960, 354],
		[3967, 219],
		[3974, 178],
		[3981, 203],
		[3988, 235],
		[3995, 250],
		[4002, 355],
		[4009, 158],
		[4016, 175],
		[4023, 267],
		[4030, 284],
		[4037, 276],
		[4044, 213],
		[4051, 300],
		[4058, 302],
		[4065, 232],
		[4072, 226],
		[4079, 155],
		[4086, 264],
		[4093, 223],
		[4100, 212],
		[4107, 300],
		[4114, 291],
		[4121, 271],
		[4128, 228]
	]
}
