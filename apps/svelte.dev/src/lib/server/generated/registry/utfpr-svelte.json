{
	"name": "utfpr-svelte",
	"description": "Create UI components for Svelte, following UTFPR Design System.",
	"repo_url": "git@gitlab.utfpr.edu.br:desis/utfpr-svelte",
	"authors": ["edujed"],
	"downloads": 7,
	"updated": "2022-12-01T19:07:38.938Z",
	"tags": ["ui", "design-system"],
	"typescript": true,
	"version": "1.0.2-f2",
	"svelte_range": "^3.53.1",
	"last_rune_check_version": "1.0.2-f2",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "utfpr-svelte",
				"version": "1.0.2-f2",
				"size": 109586
			},
			{
				"name": "svelte-select",
				"version": "4.4.7",
				"size": 168208
			}
		],
		"dependencies": [[0, 1]],
		"circular": []
	},
	"readme": "# Creating a new project for Svelte + UTFPR\n\n    $ npm create vite@latest my-project -- --template svelte-ts\n    $ cd my-project\n\n    $ npm i utfpr-svelte\n\n    $ npm run dev\n\n## Require import utfpr.css in your app.css\nWarning: This library require **FontAwesome 4.6 ou 4.7** for some purposes (it will be removed in future).\n\n    @import \"utfpr-svelte/lib/utfpr.css\";\n\n#### for theming, set css variables after this import (current values are):\n      --bg-primary: #edeff1;\n      --bg-secondary: #E0EEF0;\n\n      --bg-hover: #d0e5f5;\n      --bg-disabled: #c5dbec;\n      --bg-active: #f5f8f9;\n      --bg-content: #fcfdfd;\n      --bg-aside: #ddd;\n\n      --border-default: #a6c9e2;\n      --border-focus: #2e6e9e;\n      --border-highlight: #1659bf;\n      --border-active: #79b7e7;\n\n      --cell-hover: rgba(208, 229, 245, 0.8);\n\n      --text-active: #1d5987;\n      --font-active: #e17009;\n\n      --placeholder: rgba(46, 110, 158, 0.5);\n\n      --shadow: rgba(64, 64, 64, .35);\n      --shadow-lt: rgba(128, 128, 128, .3);\n      --warning: #700;\n\n# Disponible Components:\n\n## Router\n  - **UHashRouter** (router that uses Location.Hash 'without storage' - goot for share or link externally / or inside some IFrame)\n\n## Containers:\n - **UPanel** (a collapsable panel - inspired from PrimeUi Panel)\n - **UTabs** (a tab component like jQueryUI Tabs - hide unselected inner TabPanels for keep they states)\n - **UDialog** (under construction - a Modal/Dialog container)\n - ~~Accordion~~ (you can do it stacking some UPanels like UHashRouter does)\n## Notification:\n - **UToast** (upper-right-sided messages)\n - **tooltip** (internally used to show onHover messages)\n\n## Visual:\n  - **UTitle** (create a simple title bar)\n  - **UStaticText** (apresentation text with aspect of any 'input')\n  - **UButtonSet** (grouped buttons - a kind of radioGroup)\n\n## Form:\n  - **UForm** (form container - you can choose Panel or Dialog - with some 'pre-defined' buttons - and auto-validate/Serialize on submit)\n## FormElements:\n  - Specialized inputs to Text, Integer, Date, Time and DateTime - inspired from MaterialUI) - form validations ready\n  - **USearchCombo** (_Deprecated_)\n  - **ULookUpCombo** - uses internally: *svelte-select*\n\n## Table\n   - **UTable** (a table with caption, align, sort, filter, and CSV download) \n   - Specialized TableColumn components to show (and format) text, integer, currency, date/time, **buttons**\n\n# Example:\n### App.svelte\n    <script>\n      import UHashRouter from \"utfpr-svelte/lib/hashRouter/UHashRouter.svelte\";\n      import URoute from \"utfpr-svelte/lib/hashRouter/URoute.svelte\";\n      import UTitle from \"utfpr-svelte/lib/visualElements/UTitle.svelte\";\n      import UToast from \"utfpr-svelte/lib/tooltip/UToast.svelte\";\n      import BasicExample from './pages/BasicExample.svelte';\n      import TableExample from './pages/TableExample.svelte';\n    </script>\n    <UTitle title=\"My 1st Utfpr-Svelte\" />\n    <UHashRouter defaultRoute=\"#\">\n      <URoute\n        group=\"Examples\"\n        label=\"basic example\"\n        route=\"#example\"\n        component={BasicExample}\n      />\n      <URoute\n        group=\"Examples\"\n        label=\"table example\"\n        route=\"#example\"\n        component={TableExample}\n      />\n    </UHashRouter>\n    <UToast />\n### BasicExample.svelte\n    <script>\n      // imports\n      let options = [\n        { id: 1, label: \"1st\", hint: \"see my hint\" },\n        { id: 2, label: \"2nd\", hint: \"another hint\" },\n        { id: 3, label: \"3rd\", hint: \"greatest hint ever!\" },\n      ];\n      let ButtonSetValue = 1;\n    </script>\n    <UPanel title=\"UButtonSet\">\n      <UButtonSet\n        label=\"Selecione:\"\n        name=\"btset\"\n        options={options}\n        bind:value={ButtonSetValue}\n        on:change={(e) => (console.log( e.detail.selected.label ) )}\n      />\n    </UPanel>\n    <UTabs>\n       <UTabPanel label=\"my tab\" hint=\"the slot is correctly rendered!\">\n         <p>This is my Tab!</p>\n       </UTabPanel>\n       <UTabPanel label=\"another tab\" hint=\"can you see me ?\">\n         <p>This is the another Tab!</p>\n       </UTabPanel>\n    </UTabs>\n\n\n### TableExample.svelte\nwhen sorter is ZERO or Empty - then data is 'un-ordered'.\nColumn position was not zero based, so the 1st column is 1, 2nd is 2... \nPositive values are **ASC** and Negatives are **DESC**, so **[-4,2]** is ordered by *Salary Desc + Name Asc*\n\n    <script>\n      // imports\n      const name = \"Table Example\";      \n      let tableData = [\n        {id: \"101\", name: \"Rick\", sal: 85200, day: new Date(), position: \"Boss\"},\n        {id: \"246\", name: \"John\", sal: 72500, position: \"Manager\"},\n        {id: \"375\", name: \"Marty\", sal: 64321.75, position: \"Chief\"},\n      ];\n      \n    </script>\n    <UTable data={tableData} caption={name} sorter={[-2, 3]}>\n      <UTableCounterCol />\n      <UTableCol key=\"name\" title=\"Name\" isStrong hintKey=\"position\" />\n      <UTableIntegerCol key=\"id\" title=\"ID Code\" />\n      <UTableCurrencyCol key=\"sal\" title=\"Salary\" symbol=\"USD\" />\n      <UTableDateCol key=\"day\" title=\"Date\" format=\"date\" align=\"center\"/>\n      <UTableButton\n        title=\"detail\"\n        hint=\"show this line on console\"\n        on:click={(ev) => console.log(ev.detail)}}\n      />      \n    </UTable>\n\n# Notes:\n- the initial version is set as 1.0.0 wrongly (as all 1.0.0-? versions), please ignore them!\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3596, 27],
		[3603, 2],
		[3610, 22],
		[3624, 6],
		[3631, 1],
		[3652, 6],
		[3659, 1],
		[3666, 23],
		[3673, 1],
		[3680, 1],
		[3687, 5],
		[3701, 1],
		[3722, 1],
		[3729, 23],
		[3736, 2],
		[3743, 1],
		[3750, 2],
		[3771, 3],
		[3778, 2],
		[3792, 2],
		[3806, 7],
		[3813, 2],
		[3820, 1],
		[3827, 1],
		[3841, 15],
		[3848, 1],
		[3855, 3],
		[3869, 2],
		[3876, 6],
		[3890, 22],
		[3897, 22],
		[3904, 2],
		[3911, 1],
		[3918, 1],
		[3925, 4],
		[3932, 3],
		[3939, 12],
		[3946, 1],
		[3953, 2],
		[3960, 4],
		[3974, 2],
		[3981, 3],
		[3988, 22],
		[4009, 1],
		[4016, 1],
		[4037, 10],
		[4044, 23],
		[4051, 6],
		[4058, 1],
		[4065, 1],
		[4086, 1],
		[4100, 67],
		[4107, 3],
		[4114, 7],
		[4121, 21],
		[4128, 8],
		[4135, 2]
	],
	"esm": false,
	"cjs": true
}
