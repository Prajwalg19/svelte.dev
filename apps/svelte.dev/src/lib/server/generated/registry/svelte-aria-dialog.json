{
	"name": "svelte-aria-dialog",
	"description": "Create accessible modal dialogs in Svelte applications.",
	"repo_url": "https://github.com/tropix126/svelte-aria-dialog",
	"authors": ["tropix126"],
	"homepage": "https://github.com/tropix126/svelte-aria-dialog",
	"downloads": 87,
	"updated": "2021-12-16T21:03:16.468Z",
	"tags": ["ui"],
	"github_stars": 14,
	"typescript": true,
	"version": "1.0.0",
	"svelte_range": "^3.42.6",
	"kit_range": "next",
	"last_rune_check_version": "1.0.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-aria-dialog",
				"version": "1.0.0",
				"size": 11888
			},
			{
				"name": "focus-trap",
				"version": "6.9.4",
				"size": 447877
			},
			{
				"name": "tabbable",
				"version": "5.3.3",
				"size": 320397
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2]
		],
		"circular": []
	},
	"readme": "# svelte-aria-dialog\n\nYet another Svelte dialog component.\n\n![Dialog example](https://i.imgur.com/J4UiO0a.png)\n\n## Why?\nWhile there are plenty of packages out there that provide modals or dialogs in Svelte, most fall short in at least one these aspects:\n\n- They are not accessible to users of assistive technologies, or are not [ARIA-compliant](https://www.w3.org/TR/wai-aria-practices/#dialog_modal).\n- Their APIs are overengineered and not especially intuitive. Some are not declarative, others abuse the Context API for showing/hiding.\n- They take opinions on styling and layout, making them difficult to adapt to the needs of a particular project.\n\nThis project aims to fill these gaps. `svelte-aria-dialog` is a tiny svelte component that provides a mostly unstyled, WAI-ARIA accessible modal dialog with a few simple options.\n\n> Focus trapping is provided by the lightweight [focus-trap](https://github.com/focus-trap/focus-trap) module.\n\n## Installation\n\n#### npm\n```bash\nnpm install svelte-aria-dialog\n```\n\n#### pnpm\n```bash\npnpm install svelte-aria-dialog\n```\n\n#### yarn\n```bash\nyarn add svelte-aria-dialog\n```\n\n## Usage\n\nTo open a dialog, bind the `open` prop to a boolean value.\n\n#### Basic 2-Button Dialog\n```tsx\n<script>\n    import { Dialog } from \"svelte-aria-dialog\";\n\n    let open = false;\n\n    function save() {\n        alert(\"Saved\");\n        open = false;\n    }\n</script>\n\n<button on:click={() => open = true}>Open Dialog</button>\n\n<Dialog bind:open title=\"Title\">\n    This is a simple Dialog.\n    <svelte:fragment slot=\"footer\">\n        <button on:click={save}>Save</button>\n        <button on:click={() => open = false}>Close</button>\n    </svelte:fragment>\n</Dialog>\n```\n\n#### Non-closable Dialog\n```tsx\n<script>\n    import { Dialog } from \"svelte-aria-dialog\";\n\n    let open = false;\n</script>\n\n<button on:click={() => open = true}>Open Dialog</button>\n\n<Dialog bind:open closable={false} title=\"Title\">\n    I can't be closed!\n</Dialog>\n```\n\n#### Custom DOM Target (Portal)\n```tsx\n<script>\n    import { Dialog } from \"svelte-aria-dialog\";\n\n    let open = false;\n</script>\n\n<button on:click={() => open = true}>Open Dialog</button>\n\n<Dialog bind:open title=\"Title\" append={document.body}>\n    This dialog will be appended to <body>.\n</Dialog>\n```\n\n#### Dialog Events - `on:open` and `on:close`\n```tsx\n<script>\n    import { Dialog } from \"svelte-aria-dialog\";\n\n    let open = false;\n\n    function handleOpen() {\n        alert(\"Opened!\");\n    }\n\n    function handleClose() {\n        alert(\"Closed!\");\n    }\n</script>\n\n<button on:click={() => open = true}>Open Dialog</button>\n\n<Dialog bind:open title=\"Title\" on:open={handleOpen} on:close={handleClose}>\n    This dialog will emit events when opened and closed.\n      <button slot=\"footer\" on:click={() => open = false}>Close</button>\n</Dialog>\n```\n\n## API\n\nAll unused props are passed to the inner dialog element through [$$restProps](https://svelte.dev/docs#template-syntax-attributes-and-props).\n\n#### Props\n| Property   | Type          | Default     | Description                                                                                      |\n| ---------- | ------------- | ----------- | ------------------------------------------------------------------------------------------------ |\n| `open`     | `boolean`     | `false`     | Determines whether the dialog is open or not                                                     |\n| `title`    | `string`      | `\"\"`        | Title text displayed as the dialog header                                                        |\n| `closable` | `boolean`     | `true`      | Determines whether the dialog can be conventially closed using the escape key or backdrop click. |\n| `append`   | `HTMLElement` | `undefined` | Determines the node the dialog should be appended to                                             |\n| `class`    | `string`      | `\"\"`        | Specifies a custom class name for the dialog                                                     |\n\n#### Slots\n| Name      | Description                                                  |\n| --------- | ------------------------------------------------------------ |\n| `default` | Content of the dialog.                                       |\n| `footer`  | Elements inserted at the bottom of the dialog in the footer. |\n| `outer`   | Elements inserted outside of the inner dialog.               |\n\n#### Events (Dispatched)\n| Name    | Description                                         |\n| ------- | --------------------------------------------------- |\n| `open`  | Dispatched when the dialog is mounted into the DOM. |\n| `close` | Dispatched when the dialog is removed from the DOM. |",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 102],
		[3596, 88],
		[3603, 102],
		[3610, 73],
		[3617, 108],
		[3624, 143],
		[3631, 102],
		[3638, 123],
		[3645, 21],
		[3652, 52],
		[3659, 70],
		[3666, 948],
		[3673, 1913],
		[3680, 130],
		[3687, 169],
		[3694, 162],
		[3701, 114],
		[3708, 134],
		[3715, 92],
		[3722, 168],
		[3729, 220],
		[3736, 74],
		[3743, 143],
		[3750, 124],
		[3757, 89],
		[3764, 126],
		[3771, 129],
		[3778, 89],
		[3785, 140],
		[3792, 123],
		[3799, 48],
		[3806, 58],
		[3813, 109],
		[3820, 16],
		[3827, 107],
		[3834, 58],
		[3841, 96],
		[3848, 69],
		[3855, 64],
		[3862, 72],
		[3869, 78],
		[3876, 122],
		[3883, 140],
		[3890, 47],
		[3897, 76],
		[3904, 186],
		[3911, 128],
		[3918, 164],
		[3925, 170],
		[3932, 76],
		[3939, 59],
		[3946, 130],
		[3953, 111],
		[3960, 79],
		[3967, 1790],
		[3974, 529],
		[3981, 25],
		[3988, 72],
		[3995, 49],
		[4002, 78],
		[4009, 3],
		[4016, 27],
		[4023, 108],
		[4030, 132],
		[4037, 75],
		[4044, 130],
		[4051, 94],
		[4058, 152],
		[4065, 85],
		[4072, 116],
		[4079, 183],
		[4086, 163],
		[4093, 83],
		[4100, 72],
		[4107, 32],
		[4114, 87],
		[4121, 70],
		[4128, 83]
	]
}
