{
	"name": "yasp-modals",
	"description": "Modal wrapper component for Svelte, easy to open and close.",
	"repo_url": "",
	"authors": ["dievardump"],
	"downloads": 5,
	"updated": "2021-06-25T07:56:57.895Z",
	"tags": ["ui"],
	"typescript": false,
	"version": "1.0.7",
	"svelte_range": "^3.38.2",
	"last_rune_check_version": "1.0.7",
	"github_stars": 0,
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "yasp-modals",
				"version": "1.0.7",
				"size": 12899
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# Yet Another Svelte Package: Modals\n\nModals wrapper for Svelte3\n\n## Features\n\n- No top-level Modals context\n- open and close modals easily with a function\n- No crazy boilerplate\n\n## Installing\n\n> npm install --save-dev yasp-modals\n\n## Very quick example\n\nView live there : https://svelte.dev/repl/1dde32baa79d4d80a9d30937c5cf48f8?version=3.20.1\n\n```html\n<!-- App.svelte -->\n<script>\n  import { Modals, openModal, closeModal } from 'yasp-modals';\n  import MySimpleModal from 'MySimpleModal.svelte';\n\n  function onClick() {\n    openModal(MySimpleModal, {\n      title: 'My Modal',\n    });\n  }\n</script>\n\n<div>\n  <a class=\"back\" href=\"/\">&lt; Back to examples</a>\n</div>\n\n<main>Main content Blablabl</main>\n<button on:click=\"{onClick}\">Open Modal !</button>\n<Modals />\n\n<!-- MySimpleModal.svelte -->\n<script>\n  import { fly } from \"svelte/transition\";\n  export let title = \"My Modal Title\";\n\n  export let closeModal;\n  let props = {};\n  let classname = \"\";\n  $: {\n    props = $$props;\n    if (props.class) {\n      classname = props.class;\n    }\n\n    delete props.class;\n  }\n</script>\n\n<style>\n  .modal {\n    min-width: 400px;\n    min-height: 400px;\n    background-color: white;\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n  }\n\n  .modal__header,\n  .modal__footer {\n    background-color: darkcyan;\n    color: white;\n    padding: 20px;\n  }\n\n  h1 {\n    margin: 0;\n  }\n\n  .modal__body {\n    padding-top: 40px;\n    flex: 1 1 0;\n  }\n</style>\n\n<section\n  class={`modal ${classname}`}\n  {...props}\n  transition:fly={{ y: 100, duration: 400 }}>\n  <header class=\"modal__header\">\n    <h1>{title}</h1>\n  </header>\n  <div class=\"modal__body\">My modal content !</div>\n  <header class=\"modal__footer\">\n    <button on:click={() => closeModal()}>Cancel</button>\n  </header>\n</section>\n```\n\n## Components & methods\n\nThis package provides 1 Component and 2 methods, an event emitter and one store to use\n\nComponents :\n\n- Modals\n\nMethods:\n\n- openModal\n- closeModal\n\nemitter\n\n\\$modals\n\n### `<Modals {options?:object}>`\n\n#### Parameters\n\n| Parameter | Optional | Description                               |\n| --------- | -------- | ----------------------------------------- |\n| `options` | optional | Options for the modal layout and behavior |\n\n- `options`\n  - `close`\n    - `showBtn`: boolean (default: true) - if a button to close the modal wrapper is added to the layout. Will have `modals__close` for classname\n    - `btnText`: string (default: 'close') - the text to show in the close button\n    - `onClickOutside`: boolean (default: true) - if the modals wrapper closes when clicking outside a modal content\n    - `onEscKey`: boolean (default true) - if the modals wrapper closes when the esc key is pressed\n  - `transition`\n    - `type`: svelte/transition (default: fade) - the transition type for wrapper appearance\n    - `props`: object (default: {}) - the transition properties\n  - `props`: object\n    - `style`: string (default: see `src/components/Modals.svelte`) - the style to apply to the wrapper\n    -  all properties in this object will be passed as attributes using `{...props}` to the wrapper element\n\n\n\n### `openModal(component:SvelteComponent, props?:object)`\n\nOpens a Modal\n\n- `component` - the component to add to the Modal wrapper\n- `props`: object (default: {}) - props to pass to the component\n\n> When a component is rendered, it will also have openModal and closeModal as properties\n\n### `closeModal()`\n\nCloses the current modal\n\n### emitter\n\nemitter is an EventEmitter.\n\nEvents:\n\n- `open` ({component, props}) - emitted when a Modal is opened\n- `beforeClose` - emitted before closing a Modal\n- `close` - emitted when a modal closes\n\n### modals\n\nModals is a custom store.\nIt contains a reference to `openModal`, `closeModal` and the `emitter`.\n\nWhen the no modal is opened, `$modals` as for value `null`\nWhen a modal is opened, `$modals` as for value `{component, props}`\n\n## Other examples Shipped with this package\n\nThe directory `examples` contains examples of different usage of this package.\n\n- the most basic way to open a modal\n\nThe best way to test the example(s) is to clone this repository and launch the examples quick server shipped within\n\n```\ngit clone git@gitlab.com:dievardump/yasp-modals.git\ncd yasp-modals/examples\nnpm install\nnpm run dev\n```\n\nThis should create a local server accessible to http://localhost:3333 (if you kept the default port)\n\n## Author\n\nSimon Fremaux / dievardump (dievardump@gmail.com)\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3596, 17],
		[3603, 2],
		[3610, 11],
		[3617, 1],
		[3638, 1],
		[3666, 12],
		[3673, 3],
		[3687, 3],
		[3694, 1],
		[3708, 3],
		[3715, 3],
		[3722, 7],
		[3736, 1],
		[3743, 1],
		[3764, 4],
		[3771, 11],
		[3778, 4],
		[3785, 1],
		[3792, 1],
		[3799, 2],
		[3806, 2],
		[3813, 1],
		[3820, 2],
		[3841, 3],
		[3848, 6],
		[3855, 37],
		[3862, 21],
		[3876, 2],
		[3890, 11],
		[3897, 1],
		[3904, 1],
		[3911, 1],
		[3932, 9],
		[3939, 2],
		[3946, 7],
		[3953, 2],
		[3960, 1],
		[3974, 2],
		[3981, 4],
		[3988, 2],
		[3995, 3],
		[4002, 1],
		[4009, 4],
		[4016, 10],
		[4023, 7],
		[4030, 14],
		[4037, 7],
		[4044, 11],
		[4051, 5],
		[4058, 2],
		[4065, 1],
		[4072, 1],
		[4093, 12],
		[4100, 13],
		[4107, 2],
		[4114, 5],
		[4121, 10],
		[4128, 9],
		[4135, 8]
	]
}
