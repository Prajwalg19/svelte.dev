{
	"name": "@soyao/ldui",
	"description": "Develop Svelte and TypeScript applications with Vite.",
	"repo_url": "",
	"authors": ["soyao"],
	"downloads": 14,
	"updated": "2022-01-19T01:45:10.548Z",
	"tags": ["ui"],
	"typescript": false,
	"version": "0.0.8",
	"svelte_range": "^3.44.0",
	"last_rune_check_version": "0.0.8",
	"github_stars": 0,
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@soyao/ldui",
				"version": "0.0.8",
				"size": 36226
			},
			{
				"name": "less",
				"version": "4.3.0",
				"size": 2940538
			},
			{
				"name": "copy-anything",
				"version": "2.0.6",
				"size": 11901
			},
			{
				"name": "is-what",
				"version": "3.14.1",
				"size": 62310
			},
			{
				"name": "parse-node-version",
				"version": "1.0.1",
				"size": 4499
			},
			{
				"name": "tslib",
				"version": "2.8.1",
				"size": 90359
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[2, 3],
			[1, 4],
			[1, 5]
		],
		"circular": []
	},
	"readme": "# Svelte + TS + Vite\n\nThis template should help get you started developing with Svelte and TypeScript in Vite.\n\n## Recommended IDE Setup\n\n[VSCode](https://code.visualstudio.com/) + [Svelte](https://marketplace.visualstudio.com/items?itemName=svelte.svelte-vscode).\n\n## Need an official Svelte framework?\n\nCheck out [SvelteKit](https://github.com/sveltejs/kit#readme), which is also powered by Vite. Deploy anywhere with its serverless-first approach and adapt to various platforms, with out of the box support for TypeScript, SCSS, and Less, and easily-added support for mdsvex, GraphQL, PostCSS, Tailwind CSS, and more.\n\n## Technical considerations\n\n**Why use this over SvelteKit?**\n\n- It brings its own routing solution which might not be preferable for some users.\n- It is first and foremost a framework that just happens to use Vite under the hood, not a Vite app.\n  `vite dev` and `vite build` wouldn't work in a SvelteKit environment, for example.\n\nThis template contains as little as possible to get started with Vite + TypeScript + Svelte, while taking into account the developer experience with regards to HMR and intellisense. It demonstrates capabilities on par with the other `create-vite` templates and is a good starting point for beginners dipping their toes into a Vite + Svelte project.\n\nShould you later need the extended capabilities and extensibility provided by SvelteKit, the template has been structured similarly to SvelteKit so that it is easy to migrate.\n\n**Why `global.d.ts` instead of `compilerOptions.types` inside `jsconfig.json` or `tsconfig.json`?**\n\nSetting `compilerOptions.types` shuts out all other types not explicitly listed in the configuration. Using triple-slash references keeps the default TypeScript setting of accepting type information from the entire workspace, while also adding `svelte` and `vite/client` type information.\n\n**Why include `.vscode/extensions.json`?**\n\nOther templates indirectly recommend extensions via the README, but this file allows VS Code to prompt the user to install the recommended extension upon opening the project.\n\n**Why enable `allowJs` in the TS template?**\n\nWhile `allowJs: false` would indeed prevent the use of `.js` files in the project, it does not prevent the use of JavaScript syntax in `.svelte` files. In addition, it would force `checkJs: false`, bringing the worst of both worlds: not being able to guarantee the entire codebase is TypeScript, and also having worse typechecking for the existing JavaScript. In addition, there are valid use cases in which a mixed codebase may be relevant.\n\n**Why is HMR not preserving my local component state?**\n\nHMR state preservation comes with a number of gotchas! It has been disabled by default in both `svelte-hmr` and `@sveltejs/vite-plugin-svelte` due to its often surprising behavior. You can read the details [here](https://github.com/rixo/svelte-hmr#svelte-hmr).\n\nIf you have state that's important to retain within a component, consider creating an external store which would not be replaced by HMR.\n\n```ts\n// store.ts\n// An extremely simple external store\nimport { writable } from 'svelte/store'\nexport default writable(0)\n```\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3589, 1],
		[3596, 3],
		[3603, 8],
		[3617, 1],
		[3645, 10],
		[3652, 8],
		[3659, 1],
		[3666, 9],
		[3673, 8],
		[3694, 1],
		[3701, 1],
		[3708, 9],
		[3715, 1],
		[3743, 1],
		[3750, 1],
		[3764, 1],
		[3771, 8],
		[3778, 9],
		[3785, 1],
		[3792, 1],
		[3799, 1],
		[3806, 8],
		[3820, 1],
		[3827, 1],
		[3834, 1],
		[3841, 1],
		[3855, 41],
		[3862, 17],
		[3869, 1],
		[3876, 1],
		[3883, 9],
		[3890, 10],
		[3897, 2],
		[3904, 9],
		[3911, 2],
		[3918, 5],
		[3925, 1],
		[3939, 3],
		[3946, 2],
		[3960, 1],
		[3967, 1],
		[3981, 1],
		[3988, 1],
		[3995, 1],
		[4016, 3],
		[4023, 13],
		[4030, 1],
		[4037, 5],
		[4044, 15],
		[4051, 1],
		[4058, 2],
		[4065, 1],
		[4072, 1],
		[4093, 35],
		[4100, 5],
		[4107, 4],
		[4114, 14],
		[4121, 6],
		[4128, 5]
	],
	"esm": true,
	"cjs": false
}
