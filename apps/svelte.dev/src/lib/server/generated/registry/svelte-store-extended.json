{
	"name": "svelte-store-extended",
	"description": "Extend Svelte stores with additional functionalities.",
	"repo_url": "https://github.com/chainlist/svelte-store-extended",
	"authors": ["chainlist"],
	"homepage": "https://github.com/chainlist/svelte-store-extended#readme",
	"downloads": 5,
	"updated": "2021-04-04T14:18:30.388Z",
	"tags": ["miscellaneous"],
	"typescript": true,
	"version": "0.0.2",
	"svelte_range": "^3.0.0",
	"last_rune_check_version": "0.0.2",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-store-extended",
				"version": "0.0.2",
				"size": 48797
			},
			{
				"name": "svelte",
				"version": "3.59.2",
				"size": 10624206
			}
		],
		"dependencies": [[0, 1]],
		"circular": []
	},
	"readme": "> svelte-store-extended is still in beta, use with caution\r\n\r\n# svelte-store-extended\r\n\r\n`Svelte store extended` has been created to ease quite a bit your state management within your application by provinding 3 usefull new methods:\r\n\r\n```typescript\r\nfunction action(name: string, a: ActionHook<T>): Function {}\r\n\r\nfunction selector(name: string | ((strValue: T) => any)): Readable<any> {}\r\n\r\nfunction on<R>(action: Action, hook: (actionState: R, storeState: T) => T\r\n```\r\n\r\nIt is really easy to use and straightforward\r\n\r\n### App.svelte\r\n\r\n```html\r\n<script lang=\"ts\">\r\n  import { darkMode, toggleDarkMode } from './store/settings';\r\n</script>\r\n\r\n<main>\r\n  DarkMode: {$darkMode}\r\n\r\n  <button on:click=\"{toggleDarkMode}\">Toggle dark mode</button>\r\n</main>\r\n\r\n<style>\r\n  main {\r\n    text-align: center;\r\n    padding: 1em;\r\n    max-width: 240px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  @media (min-width: 640px) {\r\n    main {\r\n      max-width: none;\r\n    }\r\n  }\r\n</style>\r\n```\r\n\r\n### settings.ts\r\n\r\n```typescript\r\nimport { store } from 'svelte-store-extended';\r\n\r\nexport const settings = store({ darkMode: false });\r\n\r\nexport const darkMode = settings.selector((state) => state.darkMode);\r\n// or you can do the following\r\nexport const darkModeBis = settings.selector('darkMode');\r\n\r\nexport const toggleDarkMode = settings.action(\r\n  '[Settings] Toggle dark mode',\r\n  (state) => {\r\n    state.darkMode = !state.darkMode;\r\n    return state;\r\n  }\r\n);\r\n\r\nsettings.on(toggleDarkMode, () => {\r\n  console.log('Dark mode changed');\r\n});\r\n```\r\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 2],
		[3603, 3],
		[3610, 4],
		[3624, 1],
		[3631, 1],
		[3645, 3],
		[3652, 1],
		[3659, 1],
		[3666, 5],
		[3673, 1],
		[3680, 1],
		[3701, 3],
		[3708, 1],
		[3722, 1],
		[3729, 5],
		[3757, 2],
		[3764, 2],
		[3771, 1],
		[3778, 1],
		[3785, 1],
		[3792, 2],
		[3799, 1],
		[3806, 3],
		[3834, 2],
		[3848, 1],
		[3855, 16],
		[3883, 1],
		[3890, 7],
		[3897, 2],
		[3904, 1],
		[3911, 2],
		[3932, 1],
		[3960, 1],
		[3974, 1],
		[3981, 1],
		[4023, 1],
		[4030, 6],
		[4037, 5],
		[4044, 5],
		[4051, 2],
		[4058, 1],
		[4065, 1],
		[4079, 1],
		[4093, 8],
		[4100, 4],
		[4107, 2],
		[4114, 5],
		[4121, 6],
		[4128, 5],
		[4135, 6]
	]
}
