{
	"name": "@aztemi/svelte-on-solana-wallet-adapter-anchor",
	"description": "Integrate Solana wallets with Svelte and Anchor.",
	"repo_url": "https://github.com/aztemi/wallet-adapter",
	"authors": ["t4top"],
	"homepage": "https://github.com/aztemi/wallet-adapter#readme",
	"downloads": 6,
	"updated": "2024-04-15T19:39:00.167Z",
	"tags": ["integration"],
	"github_stars": 14,
	"typescript": true,
	"version": "1.1.5",
	"svelte_range": "^3.46.2",
	"kit_range": "next",
	"last_rune_check_version": "1.1.5",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@aztemi/svelte-on-solana-wallet-adapter-anchor",
				"version": "1.1.5",
				"size": 19663
			},
			{
				"name": "eventemitter3",
				"version": "4.0.7",
				"size": 37967
			}
		],
		"dependencies": [[0, 1]],
		"circular": []
	},
	"legacy_svelte": true,
	"readme": "# `@svelte-on-solana/wallet-adapter-anchor`\n\n`AnchorConnectionProvider` component and `workSpace` for Solana wallets using Svelte\n\n## Installing\n\nYou have already installed the core package to run the wallet Svelte Store [@svelte-on-solana/wallet-adapter-core](https://github.com/svelte-on-solana/wallet-adapter/blob/master/packages/core/README.md) and the UI components to use the wallet [@svelte-on-solana/wallet-adapter-ui](https://github.com/svelte-on-solana/wallet-adapter/blob/master/packages/ui/README.md/). Then install the `AnchorConnectionProvider` component and `workSpace` file contained in this package.\n\n```shell\nnpm i @svelte-on-solana/wallet-adapter-anchor\n```\n\n## Set Up\n\nAdd `@project-serum/anchor` to `optimizeDeps` inside `vite.config.js`. This pre-bundles the `@project-serum/anchor` package. This steps converts CommonJS dependencies into ESM ( Vite's dev server serves all code as native ESM ).\n\n```javascript\nimport { sveltekit } from '@sveltejs/kit/vite'\n\n/** @type {import('vite').UserConfig} */\nconst config = {\n\tplugins: [sveltekit()],\n\t// ... use the same implementation from the SvelteKit ui\n\toptimizeDeps: {\n\t\tinclude: ['@project-serum/anchor', '@solana/web3.js', 'buffer'],\n\t\t// ... use the same implementation from the SvelteKit ui\n\t}\n\t// ... use the same implementation from the SvelteKit ui\n}\n\nexport default config\n```\n\nThe `AnchorConnectionProvider` for Anchor Dapps accepts the next props.\n\n| prop    | type     | default |\n| ------- | -------- | ------- |\n| network | `string` |         |\n| idl     | `Idl`    |         |\n\nIt is automatically connected to the `workSpace` defining all the parameters to share among the components in your Anchor Dapp **(baseAccount, connection, provider, program, systemProgram and network)**.\n\n## SvelteKit\n\nIn the **\\_\\_layout.svelte** component you can import the wallets and setup the UI components.\n\n```html\n<script lang=\"ts\">\n\timport { walletStore } from '@svelte-on-solana/wallet-adapter-core';\n\timport { WalletProvider, WalletMultiButton } from '@svelte-on-solana/wallet-adapter-ui';\n\timport { AnchorConnectionProvider, workSpace } from '@svelte-on-solana/wallet-adapter-anchor';\n\timport { clusterApiUrl } from '@solana/web3.js';\n\timport idl from '../../../target/idl/<my-anchor-project>.json';\n\n\tconst localStorageKey = 'walletAdapter';\n\tconst network = clusterApiUrl('devnet'); // localhost or mainnet\n\n\tlet wallets;\n\n\tonMount(async () => {\n\t\tconst {\n\t\tPhantomWalletAdapter,\n\t\tSlopeWalletAdapter,\n\t\tSolflareWalletAdapter,\n\t\tSolletExtensionWalletAdapter,\n\t\tTorusWalletAdapter,\n\t\t} = await import('@solana/wallet-adapter-wallets');\n\n\t\tconst walletsMap = [\n\t\t\tnew PhantomWalletAdapter(),\n\t\t\tnew SlopeWalletAdapter(),\n\t\t\tnew SolflareWalletAdapter(),\n\t\t\tnew SolletExtensionWalletAdapter(),\n\t\t\tnew TorusWalletAdapter(),\n\t\t];\n\n\t\twallets = walletsMap;\n\t});\n</script>\n\n<WalletProvider {localStorageKey} {wallets} autoConnect />\n<AnchorConnectionProvider {network} {idl} />\n<div>\n\t<slot />\n</div>\n<WalletMultiButton />\n```\n\n## Svelte Template\n\nIn `App.svelte` or the entry point of your SPA, you can setup the wallet and components like this.\n\n```html\n<script lang=\"ts\">\n\timport { walletStore } from '@svelte-on-solana/wallet-adapter-core';\n\timport { WalletProvider, WalletMultiButton } from '@svelte-on-solana/wallet-adapter-ui';\n\timport { AnchorConnectionProvider, workSpace } from '@svelte-on-solana/wallet-adapter-anchor';\n\timport { clusterApiUrl } from '@solana/web3.js';\n\timport idl from '../../../target/idl/<my-anchor-project>.json';\n\timport { PhantomWalletAdapter, SolflareWalletAdapter } from '@solana/wallet-adapter-wallets';\n\n\tconst localStorageKey = 'walletAdapter';\n\tconst network = clusterApiUrl('devnet'); // localhost or mainnet\n\n\tlet wallets = [new PhantomWalletAdapter(), new SolflareWalletAdapter()];\n</script>\n\n<WalletProvider {localStorageKey} {wallets} autoConnect />\n<AnchorConnectionProvider {network} {idl} />\n<WalletMultiButton />\n\n{#if $walletStore?.connected}\n<div>My wallet is connected</div>\n{/if}\n```\n\n## Example Implementation\n\nSee example implementations of the `@svelte-on-solana/wallet-adapter-ui` library.\n\n-   [Demo site][1]\n\n[1]: https://github.com/silvestrevivo/solana-svelte-counter/tree/master/app\n",
	"downloads_history": [
		[3589, 4],
		[3596, 10],
		[3603, 3],
		[3617, 2],
		[3624, 8],
		[3631, 4],
		[3638, 1],
		[3645, 3],
		[3652, 9],
		[3659, 4],
		[3666, 5],
		[3673, 9],
		[3680, 1],
		[3694, 1],
		[3701, 1],
		[3715, 116],
		[3722, 14],
		[3729, 4],
		[3736, 9],
		[3743, 10],
		[3750, 49],
		[3757, 207],
		[3764, 103],
		[3771, 120],
		[3778, 179],
		[3785, 208],
		[3792, 146],
		[3799, 149],
		[3806, 145],
		[3813, 192],
		[3820, 152],
		[3827, 137],
		[3834, 112],
		[3841, 96],
		[3848, 153],
		[3855, 84],
		[3862, 89],
		[3869, 136],
		[3876, 106],
		[3883, 103],
		[3890, 48],
		[3897, 71],
		[3904, 7],
		[3911, 7],
		[3918, 44],
		[3925, 24],
		[3932, 98],
		[3939, 111],
		[3946, 31],
		[3953, 83],
		[3960, 57],
		[3967, 184],
		[3974, 139],
		[3981, 144],
		[3988, 105],
		[3995, 133],
		[4002, 46],
		[4009, 51],
		[4016, 87],
		[4023, 130],
		[4030, 65],
		[4037, 66],
		[4044, 42],
		[4051, 62],
		[4058, 23],
		[4065, 16],
		[4072, 26],
		[4079, 21],
		[4086, 30],
		[4100, 40],
		[4107, 7],
		[4114, 6],
		[4121, 13],
		[4128, 5]
	]
}
