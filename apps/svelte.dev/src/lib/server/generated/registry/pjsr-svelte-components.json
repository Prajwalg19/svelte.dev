{
	"name": "@pjsr/svelte-components",
	"description": "Provides various Svelte components, including Icon and Markdown.",
	"repo_url": "https://github.com/pjsr1980/svelte-components",
	"authors": ["pjsr"],
	"homepage": "https://github.com/pjsr1980/svelte-components#readme",
	"downloads": 7,
	"updated": "2023-02-01T11:50:10.098Z",
	"tags": ["ui"],
	"github_stars": 0,
	"typescript": true,
	"version": "0.0.12",
	"svelte_range": "^3.44.0",
	"kit_range": "next",
	"last_rune_check_version": "0.0.12",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@pjsr/svelte-components",
				"version": "0.0.12",
				"size": 110432
			},
			{
				"name": "@lukeed/uuid",
				"version": "2.0.1",
				"size": 9770
			},
			{
				"name": "@lukeed/csprng",
				"version": "1.1.0",
				"size": 5968
			},
			{
				"name": "@types/ace",
				"version": "0.0.48",
				"size": 107717
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[0, 3]
		],
		"circular": []
	},
	"readme": "# @pjsr/svelte-components\n\n>\n> If you like this library, if it helps you solve a problem, you have possibility, **[offer a coffee](https://donate.stripe.com/eVadQX5swdoAc12bIK \"pjsr coffee\")**.\n>\n\n## Components\n\n\n### Icon\n\nIcon uses [Google Material Symbols](https://fonts.google.com/icons)\n\n```html\n<script>\n    import { Icon } from \"@pjsr/svelte-components\";\n</script>\n\n<Icon name=\"database\" size=\"2em\" />\n```\n\n### Splitter\n\n```html\n<script>\n    import { Splitter } from \"@pjsr/svelte-components\";\n\n    let size1=\"30%\";\n    let size2=\"70%\";\n    let isSwap = false;\n    let isVertical = false;\n</script>\n\n<Splitter isVertical={isVertical} isSwap={isSwap} bind:size1={size1} bind:size2={size2}>\n    <div slot=\"1\">Content 1</div>\n    <div slot=\"2\">Content 2</div>\n</Splitter>\n```\n\n### Markdown\n\nUses `markdown-it`, `markdown-it-emoji`, `markdown-it-footnote`, `highlight`, `mathjax` and the `.markdown-body` class, see the [repository's static](https://github.com/pjsr1980/svelte-components/tree/main/static) folder and the **app.html** file as an example of loading the libraries needed to use this component.\n\n```html\n<script>\n    import { Markdown } from \"@pjsr/svelte-components\";\n\n    let text = `\n## Hello World!\n\\`\\`\\`ts\nlet pow = function(num: number) {\n    return num * num;\n}\nconsole.log(\"pow(5)=\", pow(5));\n\\`\\`\\`\n\nThis is an example of how to create ;) a footnote[^1] in Markdown.\n[^1]: First Footnote\n\n\\`$ [ x^n + y^n = z^n ] $\\`\n\\`$ x^2 + y^3 = z^n $\\`\n`;\n</script>\n\n<Markdown text={text}></Markdown>\n```\n\n### AceEditor\n\nUses `ace editor`, see the [repository's static](https://github.com/pjsr1980/svelte-components/tree/main/static) folder and the **app.html** file as an example of loading the librarie needed to use this component.\n\n```html\n<script>\n    import { AceEditor } from \"@pjsr/svelte-components\";\n\n    let code = `console.log(\"Hello World!\");`;\n</script>\n\n<AceEditor bind:value={code} theme=\"chaos\" />\n```\n\n### TabCtrl\n\n```html\n<script>\n    import {TabCtrl, TabHeader, TabName, TabPane} from \"@pjsr/svelte-components\";\n</script>\n\n<TabCtrl>\n    <TabHeader>\n        <TabName tab=1>Tab 1</TabName>\n        <TabName tab=2>Tab 2</TabName>\n    </TabHeader>\n\n    <TabPane pane=1>\n        Content 1\n    </TabPane>\n\n    <TabPane pane=2>\n        Content 2\n    </TabPane>\n</TabCtrl>\n```\n\n### TreeCtrl and PropCtrl\n\n```html \n<script>\nimport { \n    Splitter, \n    TreeNode, \n    TreeCtrl, \n    PropNode, \n    PropCtrl, \n    AceThemes \n} from \"@pjsr/svelte-components\";\n\nlet root = TreeNode.newRoot();\nlet prop : NodeProp = root.prop;\nprop.data = {\n    \"text\": \"texto\",\n    \"password\": \"123\",\n    \"email\": \"pjsr1980@gmail.com\",\n    \"number\": 23, \n    \"color\": \"#aabbcc\",\n    \"checkbox\": false,\n    \"radio\": true,\n    \"range\": 27, \n    \"time\": \"10:23\",\n    \"date\": \"1980-04-24\",\n    \"month\": \"1980-04\",\n    \"week\": \"1980-W17\",\n    \"url\": \"www.pjsr.com\"\n};\n\nlet g1 = PropNode.newPropGroup(prop, \"Group 1\");\nlet g2 = PropNode.newPropGroup(prop, \"Group 2\");\n\nPropNode.newPropInput(g1, \"text\", {type: \"text\"},\n    () => root.prop.data.text, \n    (v) => { root.prop.data.text = v; }\n);\nPropNode.newPropInput(g1, \"password\", {type: \"password\"},\n    () => root.prop.data.password, \n    (v) => { root.prop.data.password = v; }\n);\nPropNode.newPropInput(g1, \"email\", {type: \"email\"},\n    () => root.prop.data.email, \n    (v) => { root.prop.data.email = v; }\n);\nPropNode.newPropInput(g1, \"number\", {type: \"number\"},\n    () => root.prop.data.number, \n    (v) => { root.prop.data.number = v; }\n);\nPropNode.newPropInput(g1, \"color\", {type: \"color\"},\n    () => root.prop.data.color, \n    (v) => { root.prop.data.color = v; }\n);\nPropNode.newPropInput(g1, \"checkbox\", {type: \"checkbox\"},\n    () => root.prop.data.checkbox, \n    (v) => { root.prop.data.checkbox = v; }\n);\nPropNode.newPropInput(g1, \"radio\", {type: \"radio\"},\n    () => root.prop.data.radio, \n    (v) => { root.prop.data.radio = v; }\n);\nPropNode.newPropInput(g1, \"range\", {type: \"range\"},\n    () => root.prop.data.range, \n    (v) => { root.prop.data.range = v; }\n);\nPropNode.newPropInput(g1, \"time\", {type: \"time\"},\n    () => root.prop.data.time, \n    (v) => { root.prop.data.time = v; }\n);\nPropNode.newPropInput(g1, \"date\", {type: \"date\"},\n    () => root.prop.data.date, \n    (v) => { root.prop.data.date = v; }\n);\nPropNode.newPropInput(g1, \"month\", {type: \"month\"},\n    () => root.prop.data.month, \n    (v) => { root.prop.data.month = v; }\n);\nPropNode.newPropInput(g1, \"week\", {type: \"week\"},\n    () => root.prop.data.week, \n    (v) => { root.prop.data.week = v; }\n);\nPropNode.newPropInput(g1, \"url\", {type: \"url\"},\n    () => root.prop.data.url, \n    (v) => { root.prop.data.url = v; }\n);\n\ng2.data = {\n    nome: \"1\",\n    options: [\n        {name: \"Pedro\",  value: \"1\"},\n        {name: \"Sandra\", value: \"2\"}\n    ]\n}\n\nPropNode.newPropSelect(g2, \"Nome:\", g2.data.options, \n()=> { return g2.data.nome; }, (v) => { g2.data.nome = v; })\n\nTreeNode.newField(root, \"Folder 1\", \"folder\", [\n    TreeNode.newField(null, \"Folder 1.1\", \"folder\", [], [\n        TreeNode.newFile(null, \"File 1.1\", \"txt\"),\n        TreeNode.newFile(null, \"File 1.2\", \"js\")    \n    ])\n], [\n    TreeNode.newFile(null, \"File 1\", \"txt\"),\n    TreeNode.newFile(null, \"File 2\", \"js\")\n]);\nroot.getItemMenu = (item: NodeBase) => {\n    let r: MenuItem[] = [\n        {\n            text: \"Command 1\",\n            icon: \"folder\",\n            cmd: \"cmd-1\"\n        },\n        { text: \"\" },\n        {\n            text: \"Command 2\",\n            icon: \"folder\",\n            cmd: \"cmd-1\"\n        }\n    ];\n    return r;\n}\n\nlet theme = AceThemes[3];\n</script>\n\n<Splitter slot=\"1\" isVertical={true} isSwap={false} >\n    <TreeCtrl slot=\"1\" title=\"Test Tree\" root={root}\n        colorBg={theme.colorBg}\n        colorHover={theme.colorHover}\n        colorTxt={theme.colorTxt}   \n        colorTxtSel={theme.colorTxtSel}\n        colorBgSel={theme.colorBgSel}\n    />\n    <PropCtrl slot=\"2\" prop={prop} \n        colorBg={theme.colorBg}\n        colorHover={theme.colorHover}\n        colorTxt={theme.colorTxt}   \n        colorTxtSel={theme.colorTxtSel}\n        colorBgSel={theme.colorBgSel}\n    />\n</Splitter>\n```\n\n> \n> **All the best and good luck!**\n>",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 2],
		[3596, 12],
		[3603, 11],
		[3617, 1],
		[3638, 3],
		[3645, 1],
		[3659, 1],
		[3666, 12],
		[3680, 2],
		[3694, 1],
		[3715, 2],
		[3743, 3],
		[3764, 2],
		[3771, 11],
		[3778, 3],
		[3785, 2],
		[3792, 1],
		[3806, 8],
		[3820, 1],
		[3834, 2],
		[3841, 59],
		[3848, 3],
		[3855, 1],
		[3862, 23],
		[3869, 1],
		[3883, 1],
		[3890, 1],
		[3897, 5],
		[3904, 12],
		[3911, 1],
		[3918, 3],
		[3932, 2],
		[3939, 2],
		[3946, 3],
		[3960, 1],
		[3967, 2],
		[3995, 1],
		[4016, 5],
		[4023, 3],
		[4030, 1],
		[4037, 18],
		[4044, 13],
		[4051, 4],
		[4058, 2],
		[4065, 2],
		[4086, 1],
		[4093, 11],
		[4100, 22],
		[4107, 4],
		[4114, 7],
		[4121, 18],
		[4128, 12]
	]
}
