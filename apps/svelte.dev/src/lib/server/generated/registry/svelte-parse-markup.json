{
	"name": "svelte-parse-markup",
	"description": "Parse Svelte markup without parsing script or style tags.",
	"repo_url": "https://github.com/bluwy/svelte-parse-markup",
	"authors": ["bluwy"],
	"homepage": "https://github.com/bluwy/svelte-parse-markup",
	"downloads": 26330,
	"updated": "2024-06-04T07:17:52.754Z",
	"tags": ["tooling"],
	"github_stars": 7,
	"typescript": true,
	"version": "0.1.5",
	"svelte_range": "^3.0.0 || ^4.0.0 || ^5.0.0-next.1",
	"last_rune_check_version": "0.1.5",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-parse-markup",
				"version": "0.1.5",
				"size": 8003
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# svelte-parse-markup\n\nParse Svelte markup without parsing the script or style tags.\n\n## Usage\n\n```js\nimport { parse } from 'svelte-parse-markup'\n\nconst ast = parse('some svelte code')\n\nconsole.log(ast.instance.content.body)\n// output:\n// [\n//   {\n//     type: 'Text',\n//     start: <num>,\n//     end: <num>,\n//     raw: 'instance script content',\n//     content: 'instance script content'\n//   }\n// ]\n\nconsole.log(ast.module.content.body)\n// output:\n// [\n//   {\n//     type: 'Text',\n//     start: <num>,\n//     end: <num>,\n//     raw: 'module script content',\n//     content: 'module script content'\n//   }\n// ]\n\nconsole.log(ast.css.content.styles)\nconsole.log(ast.css.children)\n// output:\n// 'css content'\n// [\n//   {\n//     type: 'Text',\n//     start: <num>,\n//     end: <num>,\n//     raw: 'css content',\n//     content: 'css content'\n//   }\n// ]\n```\n\n`svelte-parse-markup` skips parsing scripts and styles, and injects a `Text` node instead. Check out the [Svelte REPL](https://svelte.dev/repl) AST output tab to compare how the original AST would look like.\n\n## Sponsors\n\n<p align=\"center\">\n  <a href=\"https://bjornlu.com/sponsor\">\n    <img src=\"https://bjornlu.com/sponsors.svg\" alt=\"Sponsors\" />\n  </a>\n</p>\n\n## License\n\nMIT\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3589, 3354],
		[3596, 4551],
		[3603, 5002],
		[3610, 4672],
		[3617, 6266],
		[3624, 6220],
		[3631, 7324],
		[3638, 5789],
		[3645, 4311],
		[3652, 4215],
		[3659, 7736],
		[3666, 7310],
		[3673, 6143],
		[3680, 7041],
		[3687, 8071],
		[3694, 8360],
		[3701, 11064],
		[3708, 12138],
		[3715, 11788],
		[3722, 12220],
		[3729, 13555],
		[3736, 11743],
		[3743, 13174],
		[3750, 12543],
		[3757, 12579],
		[3764, 14742],
		[3771, 15457],
		[3778, 13736],
		[3785, 15562],
		[3792, 14885],
		[3799, 15724],
		[3806, 15178],
		[3813, 17535],
		[3820, 14492],
		[3827, 16210],
		[3834, 15933],
		[3841, 20151],
		[3848, 18411],
		[3855, 17987],
		[3862, 16824],
		[3869, 17534],
		[3876, 14126],
		[3883, 15430],
		[3890, 15122],
		[3897, 16835],
		[3904, 16739],
		[3911, 16281],
		[3918, 16664],
		[3925, 15915],
		[3932, 17354],
		[3939, 18975],
		[3946, 19793],
		[3953, 18043],
		[3960, 17478],
		[3967, 18155],
		[3974, 17583],
		[3981, 16636],
		[3988, 18215],
		[3995, 17152],
		[4002, 16749],
		[4009, 9301],
		[4016, 13751],
		[4023, 19620],
		[4030, 27646],
		[4037, 24203],
		[4044, 41353],
		[4051, 23098],
		[4058, 25527],
		[4065, 23727],
		[4072, 24101],
		[4079, 26183],
		[4086, 25019],
		[4093, 26692],
		[4100, 28115],
		[4107, 28864],
		[4114, 26330],
		[4121, 24810],
		[4128, 23234]
	]
}
