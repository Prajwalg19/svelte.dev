{
	"name": "@ryanatkn/eslint-config",
	"description": "ESLint config for TypeScript, Svelte, and Prettier.",
	"repo_url": "https://github.com/ryanatkn/eslint-config",
	"authors": ["ryanatkn"],
	"homepage": "https://github.com/ryanatkn/eslint-config",
	"downloads": 147,
	"updated": "2025-04-04T23:44:51.598Z",
	"tags": ["tooling"],
	"github_stars": 1,
	"typescript": true,
	"version": "0.8.0",
	"svelte_range": "^5",
	"last_rune_check_version": "0.8.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@ryanatkn/eslint-config",
				"version": "0.8.0",
				"size": 18369
			},
			{
				"name": "globals",
				"version": "16.0.0",
				"size": 187424
			}
		],
		"dependencies": [[0, 1]],
		"circular": []
	},
	"readme": "# @ryanatkn/eslint-config\n\n> an [ESLint](https://eslint.org/) config for TypeScript, Svelte, and Prettier\n\n```bash\nnpm i -D @ryanatkn/eslint-config # node >=22.11\n```\n\nI use this [ESLint](https://github.com/eslint/eslint/)\nconfig for TypeScript and Svelte in all of [my projects](https://github.com/ryanatkn).\nIt's fairly strict, adding many rules beyond the ESLint recommended config.\nIt extends the [`typescript-eslint`](https://github.com/typescript-eslint/typescript-eslint)\nstrict and stylistic typechecked configs,\nmodifying or removing some rules and adding others. See [index.js](index.js) for details.\n\nIt's designed to complement TypeScript and Prettier,\nso all redundant rules are omitted.\nIt doesn't use the Prettier ESLint plugin - you can add it yourself,\nI prefer running Prettier with `--check` separately.\n\nTo distinguish linting problems from type errors visually in your editor,\nall of the rules are set to warn, not error,\nand users are expected run `eslint --max-warnings 0`\nto treat them as errors when desired, like in CI.\n(my preference is to block CI on all linting problems)\nThis works well to get yellow squigglies in text editors for linting problems\nwhile reserving red for type errors, without losing other error behaviors.\n\nHave any questions or change requests?\nOpen issues or drop by [my Discord](https://discord.gg/YU5tyeK72X).\nI'm happy to discuss my choices - if something feels restrictive without fixing actual mistakes,\nit's likely to reduce cognitive load when reading code.\n\n> ⚠️ Some rules may be annoyingly strict and you should override to your preference.\n> Some rules require tsconfig options like `strictNullChecks`,\n> and more nags go way if you enable `noUncheckedIndexedAccess` and `exactOptionalPropertyTypes`.\n> (I personally don't use these yet, will revisit)\n> Some annoyances are caused by bugs or limitations in the implementations.\n> For example\n> [@typescript-eslint/no-unnecessary-condition](https://typescript-eslint.io/rules/no-unnecessary-condition/)\n> appears to have both bugs and limits, but it also catches many easy-to-make mistakes.\n> If anything is too cumbersome or lax for your taste,\n> see below for the simple way to change the global rules,\n> and maybe hop on [Discord](https://discord.gg/YU5tyeK72X) to discuss.\n\n## Usage\n\nInstall ESLint dev dependencies with\n[TypeScript](https://github.com/typescript-eslint/typescript-eslint)\nand [Svelte](https://github.com/sveltejs/eslint-plugin-svelte) plugins\nvia npm (here's [the package on npm](https://www.npmjs.com/package/@ryanatkn/eslint-config)):\n\n```bash\nnpm i -D eslint \\\n         typescript-eslint \\\n         eslint-plugin-svelte \\\n         @ryanatkn/eslint-config\n```\n\nThen add your\n[ESLint config file](https://eslint.org/docs/latest/use/configure/configuration-files):\n\n```js\n// eslint.config.js\nimport {configs} from '@ryanatkn/eslint-config';\n\nexport default configs;\n```\n\nTo override rules, you can map or modify `configs`\nor mutate the exported `ts_config` and `svelte_config`:\n\n```js\n// eslint.config.js\nimport {configs, ts_config, svelte_config} from '@ryanatkn/eslint-config';\n\nts_config.rules['no-console'] = 1;\n\nsvelte_config.rules['svelte/button-has-type'] = 0;\n\nexport default configs;\n```\n\nInstead of the values `'off'`, `'warn'`, and `'error'`,\nthis config uses `0` (off) and `1` (warn).\nBecause it doesn't use errors, this feels clearer, but you can use whichever you prefer.\nUsing numbers also makes it easy to distinguish this config's rules from the configs extended\nfrom `eslint`, `typescript-eslint`, and `eslint-plugin-svelte` when inspecting the data.\n\n> ⚠️ The dependencies do not provide appear to provide typed rules,\n> but missing rules do throw errors at runtime.\n\n## Features\n\nOne useful opt-in feature is implemented with the following:\n\n```js\n'no-warning-comments': [1, {terms: ['todo block']}],\n```\n\nThis can be used to leave notes to yourself while you develop a set of changes,\nand combined with CI, you'll be blocked from merging until they're all resolved.\nI use this constantly:\n\n```ts\n// TODO BLOCK\n// TODO BLOCK do the thing\n// todo block is case insensitive\n```\n\n### VSCode setup\n\nTo make [the VSCode ESLint plugin](https://github.com/microsoft/vscode-eslint) work with Svelte,\nadd the following to VSCode's `settings.json`:\n\n```jsonc\n{\n\t// ctrl+shift+P then `> Preferences: Open Settings (JSON)`\n\t// ...other config\n\t\"eslint.validate\": [\"svelte\", \"javascript\", \"javascriptreact\"],\n}\n```\n\nSee also\n[the `eslint-plugin-svelte` integrations docs](https://sveltejs.github.io/eslint-plugin-svelte/user-guide/#editor-integrations).\n\n## Develop\n\nEdit [index.js](index.js) and see the [ESLint docs](https://eslint.org/).\nRun `npm link ../eslint-config` from projects in sibling directories to test your changes.\n\n## Publish\n\nThis repo uses [changesets](https://github.com/changesets/changesets):\n\n```bash\nnpm i -g @changesets/cli # install yourself, it's not a dev dep, maybe it should be\nchangeset # add a changeset\ngit add .\ngit commit -am \"some message, maybe the same as the changeset\"\ngit push\nchangeset version # when ready to publish\nchangeset publish\ngit commit -am vX.Y.Z\ngit push\ngit push --tags\n```\n\nSee the official docs for [`npm version`](https://docs.npmjs.com/cli/v8/commands/npm-version)\nand [`npm publish`](https://docs.npmjs.com/cli/v8/commands/npm-publish).\n\n## Credits 🐢<sub>🐢</sub><sub><sub>🐢</sub></sub>\n\n[ESLint](https://github.com/eslint/eslint) ∙\n[typescript-eslint](https://github.com/typescript-eslint/typescript-eslint) ∙\n[eslint-plugin-svelte](https://github.com/sveltejs/eslint-plugin-svelte) ∙\n[TypeScript](https://github.com/microsoft/TypeScript) ∙\n[Svelte](https://github.com/sveltejs/svelte) ∙\n[Prettier](https://github.com/prettier/prettier)\n& [more](package.json)\n\n## License [🐦](https://wikipedia.org/wiki/Free_and_open-source_software)\n\npublic domain ⚘ [The Unlicense](license)\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3666, 142],
		[3673, 466],
		[3680, 130],
		[3687, 20],
		[3694, 206],
		[3701, 370],
		[3708, 289],
		[3715, 45],
		[3722, 10],
		[3729, 143],
		[3736, 117],
		[3743, 92],
		[3750, 380],
		[3757, 253],
		[3764, 59],
		[3771, 140],
		[3778, 12],
		[3785, 31],
		[3792, 70],
		[3799, 16],
		[3806, 90],
		[3813, 305],
		[3820, 297],
		[3827, 505],
		[3834, 960],
		[3841, 296],
		[3848, 575],
		[3855, 209],
		[3862, 36],
		[3869, 216],
		[3876, 205],
		[3883, 194],
		[3890, 196],
		[3897, 110],
		[3904, 316],
		[3911, 204],
		[3918, 235],
		[3925, 577],
		[3932, 707],
		[3939, 559],
		[3946, 172],
		[3953, 580],
		[3960, 181],
		[3967, 29],
		[3974, 415],
		[3981, 182],
		[3988, 169],
		[3995, 108],
		[4002, 130],
		[4009, 11],
		[4016, 42],
		[4023, 16],
		[4030, 5],
		[4037, 25],
		[4044, 22],
		[4051, 5],
		[4058, 49],
		[4065, 211],
		[4072, 448],
		[4079, 205],
		[4086, 67],
		[4093, 89],
		[4100, 47],
		[4107, 206],
		[4114, 147],
		[4121, 94],
		[4128, 55]
	],
	"esm": true,
	"cjs": false
}
