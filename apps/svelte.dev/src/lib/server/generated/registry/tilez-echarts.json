{
	"name": "tilez-echarts",
	"description": "Integrate Apache ECharts charts into Svelte applications.",
	"repo_url": "https://github.com/spren9er/tilez-echarts",
	"authors": ["spren9er"],
	"homepage": "https://github.com/spren9er/tilez-echarts#readme",
	"downloads": 4,
	"updated": "2024-10-24T20:02:25.243Z",
	"tags": ["ui"],
	"github_stars": 3,
	"typescript": true,
	"version": "1.0.0",
	"svelte_range": "^5.0.0",
	"kit_range": "^2.7.2",
	"last_rune_check_version": "1.0.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "tilez-echarts",
				"version": "1.0.0",
				"size": 19859
			},
			{
				"name": "apache-arrow",
				"version": "17.0.0",
				"size": 5308201
			},
			{
				"name": "tslib",
				"version": "2.8.1",
				"size": 90359
			},
			{
				"name": "@types/node",
				"version": "20.17.32",
				"size": 2231317
			},
			{
				"name": "undici-types",
				"version": "6.19.8",
				"size": 84225
			},
			{
				"name": "flatbuffers",
				"version": "24.12.23",
				"size": 288188
			},
			{
				"name": "json-bignum",
				"version": "0.0.3"
			},
			{
				"name": "@swc/helpers",
				"version": "0.5.17",
				"size": 248378
			},
			{
				"name": "command-line-args",
				"version": "5.2.1",
				"size": 116754
			},
			{
				"name": "typical",
				"version": "4.0.0",
				"size": 22508
			},
			{
				"name": "array-back",
				"version": "3.1.0",
				"size": 8954
			},
			{
				"name": "find-replace",
				"version": "3.0.0",
				"size": 12060
			},
			{
				"name": "lodash.camelcase",
				"version": "4.3.0"
			},
			{
				"name": "command-line-usage",
				"version": "7.0.3",
				"size": 122773
			},
			{
				"name": "array-back",
				"version": "6.2.2",
				"size": 10573
			},
			{
				"name": "chalk-template",
				"version": "0.4.0",
				"size": 9742
			},
			{
				"name": "chalk",
				"version": "4.1.2",
				"size": 35047
			},
			{
				"name": "ansi-styles",
				"version": "4.3.0",
				"size": 16978
			},
			{
				"name": "color-convert",
				"version": "2.0.1",
				"size": 27189
			},
			{
				"name": "color-name",
				"version": "1.1.4",
				"size": 6693
			},
			{
				"name": "supports-color",
				"version": "7.2.0",
				"size": 7035
			},
			{
				"name": "has-flag",
				"version": "4.0.0",
				"size": 4419
			},
			{
				"name": "table-layout",
				"version": "4.1.1",
				"size": 61993
			},
			{
				"name": "wordwrapjs",
				"version": "5.1.0",
				"size": 26666
			},
			{
				"name": "typical",
				"version": "7.3.0",
				"size": 29664
			},
			{
				"name": "@types/command-line-args",
				"version": "5.2.3",
				"size": 5871
			},
			{
				"name": "@types/command-line-usage",
				"version": "5.0.4",
				"size": 6898
			},
			{
				"name": "echarts",
				"version": "5.6.0",
				"size": 53164582
			},
			{
				"name": "tslib",
				"version": "2.3.0",
				"size": 39032
			},
			{
				"name": "zrender",
				"version": "5.6.1",
				"size": 4116415
			},
			{
				"name": "tilez",
				"version": "1.0.2",
				"size": 103215
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[1, 3],
			[3, 4],
			[1, 5],
			[1, 6],
			[1, 7],
			[7, 2],
			[1, 8],
			[8, 9],
			[8, 10],
			[8, 11],
			[11, 10],
			[8, 12],
			[1, 13],
			[13, 14],
			[13, 15],
			[15, 16],
			[16, 17],
			[17, 18],
			[18, 19],
			[16, 20],
			[20, 21],
			[13, 22],
			[22, 14],
			[22, 23],
			[13, 24],
			[1, 25],
			[1, 26],
			[0, 27],
			[27, 28],
			[27, 29],
			[29, 28],
			[0, 30]
		],
		"circular": []
	},
	"readme": "# ![Tilez-Logo](https://github.com/spren9er/tilez/blob/main/docs/images/tilez_logo.svg?raw=true) tilez - apache echarts\n\n_Apache ECharts_ tile for usage with Svelte layout engine [**_tilez_**](https://github.com/spren9er/tilez).\n\n## Installation\n\nInstall **_tilez-echarts_** as npm package via\n\n```\nnpm install tilez-echarts\n```\n\n## Usage\n\nYou can use _Apache ECharts_ tile for tile types `'html'` and `'svg'`. Component **EChartsTile** has following props:\n\n- **_options_** _Apache ECharts_ configuration\n- **_data_** JSON | _Apache Arrow_ table | Array of JSON or _Apache Arrow_ tables [optional]\n\n### HTML Tiles\n\nFor HTML tiles, there is a context necessary which specifies which components of _ECharts_ should be used (treeshaking support). Also, you can set up an _ECharts_ theme there.\n\n```html\n<script lang=\"ts\">\n  // +page.svelte\n  import { onMount, setContext } from 'svelte';\n  import { type Writable, writable } from 'svelte/store';\n\n  import { Tile } from 'tilez';\n  import { type ThemeOption, EChartsHTMLConfig, EChartsTile } from 'tilez-echarts';\n\n  import type { EChartsOption } from 'echarts';\n  import { GridComponent, TooltipComponent} from 'echarts/components';\n  import { BarChart } from 'echarts/charts';\n\n  // fetch `theme` in `+page.server.ts`\n  export let data: {theme: ThemeOption};\n\n  const option: EChartsOption = {\n    xAxis: {\n      type: 'category',\n      data: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I'],\n      axisTick: {\n        alignWithLabel: true\n      },\n    },\n    yAxis: {\n      type: 'value'\n    },\n    series: [\n      {\n        data: [28, 55, 43, 91, 81, 53, 19, 87, 52],\n        type: 'bar',\n        barWidth: '80%'\n      },\n    ],\n    tooltip: {\n      trigger: 'axis',\n      axisPointer: {\n        type: 'shadow'\n      }\n    }\n  };\n\n  // set up theme and minimal set of components, so that they can be shared across all ECharts tiles\n  const echarts: Writable<EChartsHTMLConfig | null> = writable(null);\n  setContext('echarts', echarts);\n\n  onMount(() => {\n    echarts.set(\n      new EChartsHTMLConfig(\n        data.theme,\n        { renderer: 'canvas' },\n        [\n          BarChart,\n          GridComponent,\n          TooltipComponent\n        ]\n      )\n    );\n  });\n</script>\n\n<Tile type=\"html\" width=\"800px\" height=\"600px\">\n  <EChartsTile {option} />\n</Tile>\n```\n\n### SVG Tiles\n\nFor SVG tiles you can also use **EChartsSVGConfig** class for theme configuration. It is optional, as SVG tiles use global `echarts` package (no treeshaking).\n\n```html\n<script lang=\"ts\">\n  import { Tile } from 'tilez';\n  import { EChartsTile } from 'tilez-echarts';\n\n  import type { EChartsOption } from 'echarts';\n\n  const option: EChartsOption = {\n    xAxis: {\n      type: 'category',\n      data: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I'],\n      axisTick: {\n        alignWithLabel: true\n      }\n    },\n    yAxis: {\n      type: 'value'\n    },\n    series: [\n      {\n        data: [28, 55, 43, 91, 81, 53, 19, 87, 52],\n        type: 'bar',\n        barWidth: '80%'\n      }\n    ]\n  };\n</script>\n\n<Tile type=\"svg\" width=\"800px\" height=\"600px\">\n  <EChartsTile {option} />\n</Tile>\n```\n\n## Support of Arrow Datasets\n\nBy default, you add inline data to `option` of **EChartsTile**.\nHowever, you can also pass JSON or Apache Arrow table(s) to **EChartsTile** via `data` props.\nArrow table(s) will be converted to ECharts dataset(s), which will be added to `option` automatically.\nSee `arrow` route for an example.\n\n## SSR\n\nUnderlying **EChartsSVGConfig** class can also be used for server side rendering without **_tilez_**, see `ssr` route in example app.\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 7],
		[3603, 1],
		[3610, 6],
		[3617, 1],
		[3624, 6],
		[3645, 1],
		[3652, 1],
		[3666, 9],
		[3687, 77],
		[3694, 4],
		[3701, 1],
		[3708, 3],
		[3715, 1],
		[3722, 2],
		[3729, 8],
		[3736, 1],
		[3743, 2],
		[3750, 1],
		[3764, 1],
		[3771, 6],
		[3778, 2],
		[3785, 1],
		[3792, 1],
		[3806, 6],
		[3813, 4],
		[3834, 6],
		[3841, 31],
		[3848, 1],
		[3855, 5],
		[3862, 3],
		[3869, 2],
		[3876, 2],
		[3883, 2],
		[3890, 7],
		[3897, 7],
		[3911, 1],
		[3932, 1],
		[3939, 2],
		[3946, 66],
		[3953, 17],
		[3960, 1],
		[3967, 8],
		[3974, 5],
		[3981, 2],
		[3988, 1],
		[3995, 2],
		[4002, 5],
		[4009, 5],
		[4016, 3],
		[4023, 17],
		[4030, 6],
		[4037, 8],
		[4044, 11],
		[4051, 5],
		[4058, 2],
		[4065, 3],
		[4079, 1],
		[4100, 16],
		[4107, 17],
		[4114, 4],
		[4121, 21],
		[4128, 7],
		[4135, 8]
	],
	"esm": true,
	"cjs": false
}
