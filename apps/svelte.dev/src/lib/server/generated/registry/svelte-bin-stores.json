{
	"name": "@svelte-bin/stores",
	"description": "Provide useful Svelte stores for local/session storage and query params.",
	"repo_url": "",
	"authors": ["binsarjr"],
	"downloads": 5,
	"updated": "2023-11-15T18:07:29.400Z",
	"tags": ["miscellaneous"],
	"typescript": true,
	"version": "0.3.2",
	"svelte_range": "^4.0.0",
	"kit_range": "^1.20.4",
	"last_rune_check_version": "0.3.2",
	"github_stars": 0,
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@svelte-bin/stores",
				"version": "0.3.2",
				"size": 25313
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# @svelte-bin/stores\n\nA collection of useful Svelte stores, such as localStorage, sessionStorage, query parameters, previous store, and more.\n\n## Installation\n\n```bash\nnpm i @svelte-bin/stores\n```\n\n## Usage\n\n### Persisted\n\nA Svelte store that persists to local storage and session storage.\n\ndefined the store (default using localStorage)\n\n```svelte\n<script>\n\timport { persisted } from '@svelte-bin/stores';\n\n\tconst preferences = persisted('preferences', {\n\t\ttheme: 'dark',\n\t\tlanguage: 'en'\n\t});\n</script>\n```\n\nas sessionStorage\n\n```svelte\n<script>\n\timport { persisted } from '@svelte-bin/stores';\n\n\tconst preferences = persisted(\n\t\t'preferences',\n\t\t{\n\t\t\ttheme: 'dark',\n\t\t\tlanguage: 'en'\n\t\t},\n\t\t{\n\t\t\tstorage: 'session'\n\t\t}\n\t);\n</script>\n```\n\n### Query String\n\nThe fastest way to read AND WRITE from query search params in svelte/sveltekit\n\n```svelte\n<script>\n\timport { queryParam, transform } from '@svelte-bin/stores';\n\n\tconst theme = queryParam('query', {\n\t\tdefaultValue: 'dark'\n\t});\n\n\t// using encode/decode\n\tconst counter = queryParam('counter', {\n\t\tdefaultValue: 0,\n\t\tencode: (value) => value.toString(),\n\t\tdecode: (value) => parseInt(value || '')\n\t});\n\n\t// using transform\n\n\tconst counter2 = queryParam('counter2', transform.number(0));\n</script>\n```\n\n### With Previous\n\nSvelte stores have the ability to retain past values, enabling us to execute actions that rely on historical data, such as facilitating transitions between earlier and current values.\n\n```svelte\n<script>\n\timport { withPrevious } from '@svelte-bin/stores';\n\n\texport let name = 'hello world';\n\t// current is writable, while previous is read-only.\n\tconst [currentName, previousName] = withPrevious('before ');\n\t// To update the values, assign to the writable store.\n\t$: $currentName = name;\n</script>\n\ntransition from {$previousName} to {$currentName}.\n```\n\n#### `numToTrack: number`\n\nBy default, `withPrevious` tracks one previous value.\n\n```svelte\n<script>\n\tconst [current, prev1, prev2] = withPrevious(0, { numToTrack: 2 });\n</script>\n\nfrom {$prev2} to {$prev1} to {$current}.\n```\n\n#### `initPrevious: T[]`\n\nTo initialize previous values with something besides `null`, pass an array of values from newest to oldest.\n\nMissing values will be filled with `null` and extra values will be ignored.\n\n```svelte\n<script>\n\tconst [current, prev1, prev2] = withPrevious(0, { numToTrack: 2, initPrevious: [1, 2, 3] });\n</script>\n\nfrom {$prev2} to {$prev1} to {$current}. <!-- from 2 to 1 to 0. -->\n```\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3603, 338],
		[3610, 21],
		[3617, 3],
		[3624, 3],
		[3638, 6],
		[3645, 9],
		[3652, 6],
		[3659, 9],
		[3666, 16],
		[3673, 10],
		[3680, 1],
		[3701, 1],
		[3715, 4],
		[3722, 6],
		[3729, 3],
		[3736, 1],
		[3743, 2],
		[3750, 1],
		[3757, 2],
		[3764, 1],
		[3771, 2],
		[3778, 15],
		[3799, 1],
		[3806, 1],
		[3813, 3],
		[3827, 1],
		[3834, 26],
		[3855, 1],
		[3862, 10],
		[3876, 1],
		[3883, 2],
		[3897, 5],
		[3904, 1],
		[3918, 1],
		[3925, 1],
		[3932, 5],
		[3939, 2],
		[3953, 2],
		[3960, 1],
		[3967, 6],
		[3974, 1],
		[3988, 5],
		[4016, 3],
		[4023, 3],
		[4037, 16],
		[4044, 15],
		[4051, 3],
		[4058, 1],
		[4072, 1],
		[4093, 6],
		[4100, 10],
		[4107, 1],
		[4114, 5],
		[4121, 6],
		[4128, 4]
	]
}
