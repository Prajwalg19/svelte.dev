{
	"name": "@babichjacob/svelte-localstorage",
	"description": "Synchronize Svelte stores with localStorage automatically.",
	"repo_url": "https://github.com/babichjacob/svelte-localstorage",
	"authors": ["babichjacob"],
	"homepage": "https://github.com/babichjacob/svelte-localstorage",
	"downloads": 19,
	"updated": "2024-10-16T23:42:18.061Z",
	"tags": ["miscellaneous"],
	"github_stars": 47,
	"typescript": false,
	"version": "1.1.2",
	"svelte_range": "^3.53.1 || ^4.2",
	"last_rune_check_version": "1.1.2",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@babichjacob/svelte-localstorage",
				"version": "1.1.2",
				"size": 10455
			},
			{
				"name": "svelte",
				"version": "4.2.19",
				"size": 2633608
			},
			{
				"name": "acorn",
				"version": "8.14.1",
				"size": 547473
			},
			{
				"name": "code-red",
				"version": "1.0.4",
				"size": 55185
			},
			{
				"name": "@jridgewell/sourcemap-codec",
				"version": "1.5.0",
				"size": 112815
			},
			{
				"name": "@types/estree",
				"version": "1.0.7",
				"size": 26147
			},
			{
				"name": "estree-walker",
				"version": "3.0.3",
				"size": 17599
			},
			{
				"name": "periscopic",
				"version": "3.1.0",
				"size": 11219
			},
			{
				"name": "is-reference",
				"version": "3.0.3",
				"size": 3953
			},
			{
				"name": "css-tree",
				"version": "2.3.1",
				"size": 1190591
			},
			{
				"name": "mdn-data",
				"version": "2.0.30",
				"size": 602138
			},
			{
				"name": "source-map-js",
				"version": "1.2.1",
				"size": 139872
			},
			{
				"name": "aria-query",
				"version": "5.3.2",
				"size": 176114
			},
			{
				"name": "magic-string",
				"version": "0.30.17",
				"size": 467464
			},
			{
				"name": "axobject-query",
				"version": "4.1.0",
				"size": 110878
			},
			{
				"name": "locate-character",
				"version": "3.0.0",
				"size": 5325
			},
			{
				"name": "@ampproject/remapping",
				"version": "2.3.0",
				"size": 78946
			},
			{
				"name": "@jridgewell/gen-mapping",
				"version": "0.3.8",
				"size": 81596
			},
			{
				"name": "@jridgewell/set-array",
				"version": "1.2.1",
				"size": 17945
			},
			{
				"name": "@jridgewell/trace-mapping",
				"version": "0.3.25",
				"size": 169330
			},
			{
				"name": "@jridgewell/resolve-uri",
				"version": "3.1.2",
				"size": 53153
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[1, 3],
			[3, 4],
			[3, 5],
			[3, 2],
			[3, 6],
			[6, 5],
			[3, 7],
			[7, 5],
			[7, 6],
			[7, 8],
			[8, 5],
			[1, 9],
			[9, 10],
			[9, 11],
			[1, 12],
			[1, 7],
			[1, 8],
			[1, 13],
			[13, 4],
			[1, 5],
			[1, 6],
			[1, 14],
			[1, 15],
			[1, 16],
			[16, 17],
			[17, 18],
			[17, 4],
			[17, 19],
			[19, 20],
			[19, 4],
			[16, 19],
			[1, 19],
			[1, 4]
		],
		"circular": []
	},
	"legacy_svelte": false,
	"readme": "<h1 align=\"center\">üóÑÔ∏è Svelte localStorage</h1>\n\nThis library for Svelte provides writable stores that automatically synchronize with `localStorage`.\n\nIt has been tested to work with Vite, with or without SvelteKit. It may also work with any other bundler that respects [`exports` maps](https://nodejs.org/api/packages.html#package-entry-points).\n\n## üíª Installation\n\n```sh\nnpm install --save-dev @babichjacob/svelte-localstorage\n```\n\n### ‚å®Ô∏è TypeScript\n\nThis package uses JSDoc for types and documentation, so an extra step is needed to use it in TypeScript projects [for now](https://github.com/babichjacob/svelte-localstorage/issues/22). Configure your `tsconfig.json` so that it has `compilerOptions.maxNodeModuleJsDepth` set to at least 1:\n\n```jsonc\n// tsconfig.json\n{\n  // When using SvelteKit: \"extends\": \"./.svelte-kit/tsconfig.json\",\n  \"compilerOptions\": {\n    // Other options...\n    \"maxNodeModuleJsDepth\": 1\n  }\n}\n```\n\n## üõ† Usage\n\nImport and use the writable store creator from `@babichjacob/svelte-localstorage`:\n\n```svelte\n<script>\n\timport { localStorageWritable } from \"@babichjacob/svelte-localstorage\";\n\tconst textInput = localStorageWritable(\"text-input\", \"Initial value\");\n</script>\n\n<input bind:value={$textInput} type=\"text\">\n```\n\nYou can create stores with `localStorageWritable` and read from them without having to check whether you're in the browser or on the server. You generally should only write while in the browser.\n\n### ‚öôÔ∏è Options\n\n- `key`: what key in `localStorage` to synchronize with\n- `initial`: the initial value of the writable store\n- `serde` (optional): how to serialize and deserialize the store value\n  - `serialize` (default `JSON.stringify`): how to create a string representation of the store value to put in `localStorage`\n  - `deserialize` (default `JSON.parse`): how to convert the string representation in `localStorage` to a value to put in the store\n\n### üí± Serialization and deserialization\n\nOnly strings can be put in `localStorage`, so whatever values you want this store to have must be representable as strings somehow. JSON is the default format used, since it supports common types. You can pass a custom `serialize` and `deserialize` function for objects that `JSON.stringify` and `JSON.parse` can't handle, like custom `class`es:\n\n```js\nimport { localStorageWritable } from \"@babichjacob/svelte-localstorage\";\n\nclass Point {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n}\n\nconst point = localStorageWritable(\"point\", new Point(0, 0), {\n  // You can still use JSON.stringify and JSON.parse to help, if you want\n  serialize: (pnt) => JSON.stringify([pnt.x, pnt.y]),\n  deserialize(str) {\n    const [x, y] = JSON.parse(str);\n    return new Point(x, y);\n  },\n});\n```\n\n### üóúÔ∏è Compression and decompression\n\nYou can further utilize `serialize` and `deserialize` to store the data compressed in `localStorage`, perhaps to stay under [the 5 MB limit](https://storage.spec.whatwg.org/#storage-endpoint-quota) your website / app has available.\n\nAny compression algorithm can be used, but [`lz-string`](https://www.npmjs.com/package/lz-string) is chosen for example:\n\n```js\n<script>\n  import { localStorageWritable } from \"@babichjacob/svelte-localstorage\";\n\n  import lzString from \"lz-string\";\n\n  const draft = localStorageWritable(\"blog-post-draft\", { time: new Date(), content: \"\" }, {\n    serialize: (obj) => {\n      const serialized = ...; // create a string representation somehow\n      const compressed = lzString.compressToUTF16(serialized);\n      return compressed;\n    },\n    deserialize: (text) => {\n      const decompressed = lzString.decompressFromUTF16(text);\n      const deserialized = ...; // convert the string representation to an object somehow\n      return deserialized;\n    },\n  });\n</script>\n\n<h1>Write a new blog post</h1>\n<h2>Draft started at {$draft.time}</h2>\n\n<textarea bind:value={$draft.content}></textarea>\n```\n\n## üòµ Help! I have a question\n\nCreate an issue and I'll try to help.\n\n## üò° Fix! There is something that needs improvement\n\nCreate an issue or pull request and I'll try to fix.\n\n## üìÑ License\n\nMIT\n\n## üôè Attribution\n\n_Repository preview image generated with [GitHub Social Preview](https://social-preview.pqt.dev/)_\n\n_This README was generated with ‚ù§Ô∏è by [readme-md-generator](https://github.com/kefranabg/readme-md-generator)_\n",
	"downloads_history": [
		[3589, 14],
		[3596, 45],
		[3603, 36],
		[3610, 6],
		[3617, 32],
		[3624, 52],
		[3631, 55],
		[3638, 16],
		[3645, 33],
		[3652, 22],
		[3659, 16],
		[3666, 50],
		[3673, 27],
		[3680, 25],
		[3687, 46],
		[3694, 43],
		[3701, 32],
		[3708, 23],
		[3715, 15],
		[3722, 16],
		[3729, 37],
		[3736, 11],
		[3743, 19],
		[3750, 19],
		[3757, 31],
		[3764, 22],
		[3771, 18],
		[3778, 27],
		[3785, 20],
		[3792, 23],
		[3799, 21],
		[3806, 20],
		[3813, 26],
		[3820, 42],
		[3827, 15],
		[3834, 39],
		[3841, 69],
		[3848, 21],
		[3855, 38],
		[3862, 31],
		[3869, 9],
		[3876, 24],
		[3883, 26],
		[3890, 2],
		[3897, 4],
		[3904, 14],
		[3911, 5],
		[3918, 4],
		[3925, 8],
		[3932, 15],
		[3939, 83],
		[3946, 34],
		[3953, 16],
		[3960, 6],
		[3967, 4],
		[3974, 3],
		[3981, 15],
		[3988, 12],
		[3995, 17],
		[4002, 18],
		[4009, 23],
		[4016, 37],
		[4023, 21],
		[4030, 6],
		[4037, 11],
		[4044, 23],
		[4051, 15],
		[4058, 7],
		[4065, 8],
		[4072, 36],
		[4079, 6],
		[4086, 44],
		[4093, 8],
		[4100, 27],
		[4107, 62],
		[4114, 19],
		[4121, 11],
		[4128, 18]
	]
}
