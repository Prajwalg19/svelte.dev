{
	"name": "svelte-tags-input",
	"description": "Fully customizable Svelte component to enter tags.",
	"repo_url": "https://github.com/agustinl/svelte-tags-input",
	"authors": ["agustinl"],
	"homepage": "https://svelte-tags-input.vercel.app/",
	"downloads": 1585,
	"updated": "2025-01-07T00:13:20.232Z",
	"tags": ["ui"],
	"github_stars": 316,
	"typescript": true,
	"version": "6.0.2",
	"svelte_range": "^3.37.0",
	"last_rune_check_version": "6.0.2",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-tags-input",
				"version": "6.0.2",
				"size": 121801
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "<p align=\"center\"><a href=\"https://svelte-tags-input.vercel.app\"><img src=\"https://svelte-tags-input.vercel.app/readme-image.png\" alt=\"Svelte Tags Input\"/></a></p>\r\n<h1 align=\"center\">\r\n    svelte-tags-input\r\n</h1>\r\n<div align=\"center\">Svelte tags input is a component to use with Svelte and easily enter tags and customize some options</div>\r\n<br />\r\n<p align=\"center\">\r\n<a href=\"https://www.npmjs.com/package/svelte-tags-input\"><img src=\"https://img.shields.io/npm/v/svelte-tags-input.svg\"/></a>\r\n<a href=\"https://opensource.org/licenses/MIT\"><img src=\"https://img.shields.io/badge/License-MIT-blue.svg\"/></a>\r\n<a href=\"https://madewithsvelte.com/p/svelte-tags-input/shield-link\"><img src=\"https://madewithsvelte.com/storage/repo-shields/2151-shield.svg\"/></a>\r\n</p>\r\n\r\n## [Live Demo](https://svelte-tags-input.vercel.app/)\r\n\r\n## Install & Usage\r\n\r\n```bash\r\nnpm install svelte-tags-input\r\n```\r\n\r\n```javascript\r\nimport Tags from \"svelte-tags-input\";\r\n\r\n<Tags />\r\n```\r\n\r\n## Options\r\n\r\n| Option | Type | Default | Description |\r\n| --- | --- | --- | --- |\r\n| bind:tags | `Array` | `[]` | To get the values |\r\n| addKeys | `Array` | <kbd>ENTER</kbd> 13 | Set which keys add new values |\r\n| removeKeys | `Array` | <kbd>BACKSPACE</kbd> 8 | Set which keys remove new values |\r\n| allowPaste | `Boolean` | `false` | Enable pasting of a tag or tag group |\r\n| allowDrop | `Boolean` | `false` | Enable drag and drop of a tag or tag group |\r\n| splitWith | `String` | <kbd>,</kbd> | Choose what character split you group of tags<br>_Work only if allowDrop or allowPaste are true_ |\r\n| maxTags | `Number` | `false` | Set maximum number of tags |\r\n| onlyUnique | `Boolean` | `false` | Set the entered tags to be unique |\r\n| placeholder | `String` | `false` | Set a placeholder |\r\n| autoComplete | `Array` or `fn()` | `false` | Set an array of elements to create a auto-complete dropdown |\r\n| autoCompleteKey | `String` | `false` | Set a key to search on `autoComplete` array of objects |\r\n| autoCompleteStartFocused | `Boolean` | `false` | Set the autocomplete focus to the first result without user input |\r\n| autoCompleteFilter | `Boolean` | `true` | If `false` disable auto complete filter and return endpoint response without filter |\r\n| onlyAutocomplete | `Boolean` | `false` | Only accept tags inside the auto complete list |\r\n| name | `String` | `svelte-tags-input` | Set a `name` attribute |\r\n| id | `String` | Random Unique ID | Set a `id` attribute |\r\n| allowBlur | `Boolean` | `false` | Enable add tag when input blur |\r\n| disable | `Boolean` | `false` | Disable input |\r\n| minChars | `Number` | `1` | Minimum length of search text to show autoComplete list. If 0, autoComplete list shows all results when click on input |\r\n| labelText | `String` | `svelte-tags-input` | Custom text for input label |\r\n| labelShow | `Boolean` | `false` | If `true` the label will be visible |\r\n| readonly | `Boolean` | `false` | If `true` the input show in display mode |\r\n| onTagClick | `Function` | `empty` | A function to fire when a tag is clicked |\r\n| autoCompleteShowKey | `String` | `autoCompleteKey` | A key string to show a different value from auto complete list object returned |\r\n| onTagAdded | `Function` | `empty` | Get a function to execute when tag added |\r\n| onTagRemoved | `Function` | `empty` | Get a function to execute when tag removed |\r\n| cleanOnBlur | `Boolean` | `false` | Clear input on blur (tags keeped) |\r\n| customValidation | `Function` | `empty` | Create a custom validation when tag is added |\r\n\r\n##### [A complete list of key codes](https://keycode.info/)\r\n\r\n## Full example\r\n### [Live Demo](https://svelte-tags-input.vercel.app/)  \r\n\r\n```javascript\r\nimport Tags from \"svelte-tags-input\";\r\n\r\nlet tags = [];\r\n\r\nconst countryList = [\r\n    \"Afghanistan\",\r\n    \"Albania\",\r\n    \"Algeria\",\r\n    \"American Samoa\",\r\n    \"Andorra\",\r\n    \"Angola\",\r\n    \"Anguilla\",\r\n    \"Antarctica\",\r\n    \"Antigua and Barbuda\",\r\n    \"Argentina\"\r\n    ...\r\n];\r\n\r\n<Tags\r\n    bind:tags={tags}\r\n    addKeys={[9]} // TAB Key\r\n    maxTags={3}\r\n    allowPaste={true}\r\n    allowDrop={true}\r\n    splitWith={\"/\"}\r\n    onlyUnique={true}\r\n    removeKeys={[27]} // ESC Key\r\n    placeholder={\"Svelte Tags Input full example\"}\r\n    autoComplete={countryList}\r\n    name={\"custom-name\"}\r\n    id={\"custom-id\"}\r\n    allowBlur={true}\r\n    disable={false} // Just to illustrate. No need to declare it if it's false.\r\n    readonly={false} // Just to illustrate. No need to declare it if it's false.\r\n    minChars={3}\r\n    onlyAutocomplete\r\n    labelText=\"Label\"\r\n    labelShow\r\n    onTagClick={tag => console.log(tag)}\r\n    onTagAdded={(tag, tags) => console.log(tag, tags)}\r\n    onTagRemoved={(tag, tags) => console.log(tag, tags)}\r\n\tcleanOnBlur={true}\r\n\tcustomValidation={(tag) => tag === \"Argentina\" ? true : false }\r\n/>\r\n```\r\n\r\n## Example with `autoComplete` function\r\n### [Live Demo](https://svelte-tags-input.vercel.app/)  \r\n\r\n```javascript\r\nimport Tags from \"svelte-tags-input\";\r\n\r\nlet tags = [];\r\n\r\nconst customAutocomplete = async () => {\r\n    const list = await fetch('https://restcountries.com/v2/all?fields=name,alpha3Code,flag');\r\n    const res = await list.json();\r\n\r\n    return res;\r\n}\r\n\r\n<Tags\r\n    bind:tags={tags}\r\n    autoComplete={customAutocomplete}\r\n    autoCompleteKey={\"name\"}\r\n    autoCompleteShowKey={\"alpha3Code\"}\r\n/>\r\n\r\n{#each tags as country, index}\r\n    <p>{index} - {country.name} - {country.alpha3Code} </p>\r\n    <img src={country.flag} />\r\n{/each}\r\n```\r\n\r\n## [FAQs](https://svelte-tags-input.vercel.app)\r\n\r\n## [CHANGELOG](CHANGELOG.md)\r\n\r\n## License\r\n\r\nThis project is open source and available under the [MIT License](LICENSE).\r\n\r\n## Author\r\n\r\n[Agust√≠n](https://twitter.com/agustinlautaro)\r\n\r\n##### 2024\r\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3596, 820],
		[3603, 731],
		[3610, 1093],
		[3617, 1063],
		[3624, 840],
		[3631, 856],
		[3638, 724],
		[3645, 395],
		[3652, 651],
		[3659, 923],
		[3666, 1075],
		[3673, 1149],
		[3680, 1016],
		[3687, 1089],
		[3694, 817],
		[3701, 1067],
		[3708, 1283],
		[3715, 1451],
		[3722, 1012],
		[3729, 1343],
		[3736, 1000],
		[3743, 962],
		[3750, 1040],
		[3757, 1136],
		[3764, 1050],
		[3771, 1219],
		[3778, 956],
		[3785, 1075],
		[3792, 941],
		[3799, 1008],
		[3806, 882],
		[3813, 980],
		[3820, 1334],
		[3827, 1610],
		[3834, 1264],
		[3841, 1264],
		[3848, 1414],
		[3855, 1348],
		[3862, 1225],
		[3869, 1072],
		[3876, 1054],
		[3883, 1362],
		[3890, 1082],
		[3897, 1422],
		[3904, 1157],
		[3911, 1522],
		[3918, 1032],
		[3925, 1183],
		[3932, 1177],
		[3939, 1302],
		[3946, 1325],
		[3953, 1398],
		[3960, 1108],
		[3967, 1126],
		[3974, 1088],
		[3981, 1036],
		[3988, 951],
		[3995, 1158],
		[4002, 1100],
		[4009, 452],
		[4016, 601],
		[4023, 1220],
		[4030, 1277],
		[4037, 1586],
		[4044, 1920],
		[4051, 2290],
		[4058, 2189],
		[4065, 1869],
		[4072, 2215],
		[4079, 1556],
		[4086, 1725],
		[4093, 1117],
		[4100, 1667],
		[4107, 1855],
		[4114, 1585],
		[4121, 1458],
		[4128, 1390],
		[4135, 1280]
	],
	"esm": true,
	"cjs": false
}
