{
	"name": "svelte-pivottable-bs5",
	"description": "Create pivot tables with drag-and-drop UI in Svelte.",
	"repo_url": "https://github.com/Julos14/svelte-pivottable-bs5",
	"authors": ["julos14"],
	"homepage": "https://github.com/Julos14/svelte-pivottable-bs5#readme",
	"downloads": 6,
	"updated": "2025-03-25T10:17:37.886Z",
	"tags": ["ui"],
	"github_stars": 0,
	"typescript": true,
	"version": "0.3.0",
	"svelte_range": "^3.55.1",
	"kit_range": "^1.5.5",
	"last_rune_check_version": "0.3.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-pivottable-bs5",
				"version": "0.3.0",
				"size": 151579
			},
			{
				"name": "sortablejs",
				"version": "1.15.6",
				"size": 640877
			},
			{
				"name": "svelte",
				"version": "3.59.2",
				"size": 10624206
			}
		],
		"dependencies": [
			[0, 1],
			[0, 2]
		],
		"circular": []
	},
	"readme": "# svelte-pivottable\r\n\r\nThis is a Svelte component implementation of [react-pivottable-grouping](https://github.com/jjagielka/react-pivottable-grouping) that is itself a fork of [react-pivottable](https://react-pivottable.js.org/) with added capacity of grouping and displaying subtotals.\r\n\r\n# svelte-pivottable\r\n\r\n`svelte-pivottable` is a Svelte-based pivot table library with drag'n'drop functionality.\r\n\r\nIt is based on the original work of [Nicolas Kruchten](https://github.com/nicolaskruchten) author of [react-pivottable](https://react-pivottable.js.org/) a React port of the jQuery-based\r\n[PivotTable.js](https://pivottable.js.org/) by the same author.\r\n\r\n## What does it do & where is the demo?\r\n\r\n`svelte-pivottable`'s function is to enable data exploration and analysis by\r\nsummarizing a data set into table or [Plotly.js](https://plot.ly/javascript/)\r\nchart with a true 2-d drag'n'drop UI, very similar to the one found in older\r\nversions of Microsoft Excel.\r\n\r\nA [live demo can be found here](https://jjagielka.github.io/svelte-pivottable-demo/).\r\n\r\n![screencap](https://raw.githubusercontent.com/jjagielka/react-pivottable-grouping/master/examples/basic.gif)\r\n\r\n## How can I use it in my project?\r\n\r\n### Drag'n'drop UI with Table output only\r\n\r\nInstallation is via NPM or Yarn:\r\n\r\n```\r\nnpm install --save svelte-pivottable\r\n\r\nyarn add svelte-pivottable\r\n```\r\n\r\nBasic usage is as follows. Note that `PivotTableUI` is a \"dumb component\" that\r\nmaintains essentially no state of its own.\r\n\r\n```svelte\r\n<script>\r\n    import { PivotTableUI } from \"svelte-pivottable/PivotTableUI\";\r\n\r\n    const options = {\r\n        // see documenation for supported options\r\n        };\r\n\r\n    // see documentation for supported input formats\r\n    const data = [\r\n        [\"attribute\", \"attribute2\"],\r\n        [\"value1\", \"value2\"],\r\n    ];\r\n</script>\r\n\r\n<PivotTableUI {...options} {data}>\r\n```\r\n\r\n### Drag'n'drop UI with Plotly charts as well as Table output\r\n\r\nThe Plotly `plotly.js` component can be passed in via dependency injection. \r\n\r\n**Important:** If you build your project using webpack, you'll have to follow\r\n[these instructions](https://github.com/plotly/plotly.js#building-plotlyjs-with-webpack)\r\nin order to successfully bundle `plotly.js`. See below for how to avoid having\r\nto bundle `plotly.js`.\r\n\r\n```\r\nnpm install --save plotly.js\r\n```\r\n\r\nTo add the Plotly renderers to your app, you can use the following pattern:\r\n\r\n```svelte\r\n<script>\r\n    import { PivotTableUI } from \"svelte-pivottable/PivotTableUI\";\r\n    import TableRenderers from \"svelte-pivottable/TableRenderers\";\r\n    import Plotly from \"plotly.js\";\r\n    import PlotlyRenderers from \"svelte-pivottable/PlotlyRenderers\";\r\n\r\n    // create Plotly renderers via dependency injection\r\n    const plotlyRenderers = PlotlyRenderers(Plotly);\r\n\r\n    // see documentation for supported input formats\r\n    const data = [\r\n        [\"attribute\", \"attribute2\"],\r\n        [\"value1\", \"value2\"],\r\n    ];\r\n</script>\r\n\r\n<PivotTableUI\r\n    data={data}\r\n    renderers={Object.assign({}, TableRenderers, plotlyRenderers)}\r\n/>\r\n```\r\n\r\n#### With external `plotly.js`\r\n\r\nIf you would rather not install and bundle `plotly.js` but rather get it into\r\nyour app via something like `<script>` tag, you can handle the dependency injection like this:\r\n\r\n```svelte\r\n<script>\r\n    import { PivotTableUI } from \"svelte-pivottable/PivotTableUI\";\r\n    import TableRenderers from \"svelte-pivottable/TableRenderers\";\r\n    import PlotlyRenderers from \"svelte-pivottable/PlotlyRenderers\";\r\n\r\n    // create Plotly renderers via dependency injection\r\n    const plotlyRenderers = PlotlyRenderers(window.Plotly);\r\n\r\n    // see documentation for supported input formats\r\n    const data = [\r\n        [\"attribute\", \"attribute2\"],\r\n        [\"value1\", \"value2\"],\r\n    ];\r\n</script>\r\n\r\n<PivotTableUI\r\n    data={data}\r\n    renderers={...TableRenderers, ...plotlyRenderers)}\r\n/>\r\n```\r\n\r\n## Properties and layered architecture\r\n\r\n-   `<PivotTableUI {...props} />`\r\n    -   `<PivotTable {...props} />`\r\n        -   `<Renderer {...props} />`\r\n            -   `PivotData(props)`\r\n\r\nThe interactive component provided by `svelte-pivottable` is `PivotTableUI`, but\r\noutput rendering is delegated to the non-interactive `PivotTable` component,\r\nwhich accepts a subset of its properties. `PivotTable` can be invoked directly\r\nand is useful for outputting non-interactive saved snapshots of `PivotTableUI`\r\nconfigurations. `PivotTable` in turn delegates to a specific renderer component,\r\nsuch as the default `TableRenderer`, which accepts a subset of the same\r\nproperties. Finally, most renderers will create `PivotData` object to\r\nhandle the actual computations, which also accepts a subset of the same props as\r\nthe rest of the stack.\r\n\r\nHere is a table of the properties accepted by this stack, including an\r\nindication of which layer consumes each, from the bottom up:\r\n\r\n| Layer          | Key & Type                                       | Default Value                 | Description                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   |\r\n| -------------- | ------------------------------------------------ | ----------------------------- ||\r\n| `PivotData`    | `data` <br /> see below for formats              | (none, required)              | data to be summarized|\r\n| `PivotData`    | `rows` <br /> array of strings                   | `[]`                          | attribute names to prepopulate in row area|\r\n| `PivotData`    | `cols` <br /> array of strings                   | `[]`                          | attribute names to prepopulate in cols area|\r\n| `PivotData`    | `vals` <br /> array of strings                   | `[]`                          | attribute names used as arguments to aggregator (gets passed to aggregator generating function)                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               |\r\n| `PivotData`    | `aggregators` <br /> object of functions         | `aggregators` from `Utilites` | dictionary of generators for aggregation functions in dropdown (see [original PivotTable.js documentation](https://github.com/nicolaskruchten/pivottable/wiki/Aggregators))                                                                                                                                                                                                                                                                                                                                                                                                                                   |\r\n| `PivotData`    | `aggregatorName` <br /> string                   | first key in `aggregators`    | key to `aggregators` object specifying the aggregator to use for computations|\r\n| `PivotData`    | `valueFilter` <br /> object of arrays of strings | `{}`                          | object whose keys are attribute names and values are objects of attribute value-boolean pairs which denote records to include or exclude from computation and rendering; used to prepopulate the filter menus that appear on double-click                                                                                                                                                                                                                                                                                                                                                                     |\r\n| `PivotData`    | `sorters` <br /> object or function              | `{}`                          | accessed or called with an attribute name and can return a [function which can be used as an argument to `array.sort`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Array/sort) for output purposes. If no function is returned, the default sorting mechanism is a built-in \"natural sort\" implementation. Useful for sorting attributes like month names, see [original PivotTable.js example 1](http://nicolas.kruchten.com/pivottable/examples/mps_agg.html) and [original PivotTable.js example 2](http://nicolas.kruchten.com/pivottable/examples/montreal_2014.html). |\r\n| `PivotData`    | `rowOrder` <br /> string                         | `\"key_a_to_z\"`                | the order in which row data is provided to the renderer, must be one of `\"key_a_to_z\"`, `\"value_a_to_z\"`, `\"value_z_to_a\"`, ordering by value orders by row total                                                                                                                                                                                                                                                                                                                                                                                                                                             |\r\n| `PivotData`    | `colOrder` <br /> string                         | `\"key_a_to_z\"`                | the order in which column data is provided to the renderer, must be one of `\"key_a_to_z\"`, `\"value_a_to_z\"`, `\"value_z_to_a\"`, ordering by value orders by column total                                                                                                                                                                                                                                                                                                                                                                                                                                       |\r\n| `PivotData`    | `derivedAttributes` <br /> object of functions   | `{}`                          | defines derived attributes (see [original PivotTable.js documentation](https://github.com/nicolaskruchten/pivottable/wiki/Derived-Attributes))                                                                                                                                                                                                                                                                                                                                                                                                                                                                |\r\n| `Renderer`     | `<any>`                                          | (none, optional)              | Renderers may accept any additional properties|\r\n| `PivotTable`   | `renderers` <br /> object of functions           | `TableRenderers`              | dictionary of renderer components                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             |\r\n| `PivotTable`   | `rendererName` <br /> string                     | first key in `renderers`      | key to `renderers` object specifying the renderer to use|\r\n| `PivotTableUI` | `onChange` <br /> function                       | (none, required)              | function called every time anything changes in the UI, with the new value of the properties needed to render the new state. This function must be hooked into a state-management system in order for the \"dumb\" `PivotTableUI` component to work.                                                                                                                                                                                                                                                                                                                                                             |\r\n| `PivotTableUI` | `hiddenAttributes` <br /> array of strings       | `[]`                          | contains attribute names to omit from the UI                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  |\r\n| `PivotTableUI` | `hiddenFromAggregators` <br /> array of strings  | `[]`                          | contains attribute names to omit from the aggregator arguments dropdowns                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      |\r\n| `PivotTableUI` | `hiddenFromDragDrop` <br /> array of strings     | `[]`                          | contains attribute names to omit from the drag'n'drop portion of the|\r\n| `PivotTableUI` | `menuLimit` <br /> integer                       | 500                           | maximum number of values to list in the double-click menu|\r\n| `PivotTableUI` | `unusedOrientationCutoff` <br /> integer         | 85                            | If the attributes' names' combined length in characters exceeds this value then the unused attributes area will be shown vertically to the left of the UI instead of horizontally above it. `0` therefore means 'always vertical', and `Infinity` means 'always horizontal'.                                                                                                                                                                                                                                                                                                                                  |\r\n\r\n### Accepted formats for `data`\r\n\r\n#### Arrays of objects\r\n\r\nOne object per record, the object's keys are the attribute names.\r\n\r\n_Note_: missing attributes or attributes with a value of `null` are treated as\r\nif the value was the string `\"null\"`.\r\n\r\n```js\r\nconst data = [\r\n    {\r\n        attr1: \"value1_attr1\",\r\n        attr2: \"value1_attr2\",\r\n        //...\r\n    },\r\n    {\r\n        attr1: \"value2_attr1\",\r\n        attr2: \"value2_attr2\",\r\n        //...\r\n    },\r\n    //...\r\n];\r\n```\r\n\r\n#### Arrays of arrays\r\n\r\nOne sub-array per record, the first sub-array contains the attribute names. If\r\nsubsequent sub-arrays are shorter than the first one, the trailing values are\r\ntreated as if they contained the string value `\"null\"`. If subsequent sub-arrays\r\nare longer than the first one, excess values are ignored. This format is\r\ncompatible with the output of CSV parsing libraries like PapaParse.\r\n\r\n```js\r\nconst data = [\r\n    [\"attr1\", \"attr2\"],\r\n    [\"value1_attr1\", \"value1_attr2\"],\r\n    [\"value2_attr1\", \"value2_attr2\"],\r\n    //...\r\n];\r\n```\r\n\r\n#### Functions that call back\r\n\r\nThe function will be called with a callback that takes an object as a parameter.\r\n\r\n_Note_: missing attributes or attributes with a value of `null` are treated as\r\nif the value was the string `\"null\"`.\r\n\r\n```js\r\nconst data = function(callback) {\r\n    callback({\r\n        \"attr1\": \"value1_attr1\",\r\n        \"attr2\": \"value1_attr2\",\r\n        //...\r\n    });\r\n    callback({\r\n        \"attr1\": \"value2_attr1\",\r\n        \"attr2\": \"value2_attr2\",\r\n        //...\r\n    };\r\n    //...\r\n};\r\n```\r\n",
	"legacy_svelte": false,
	"downloads_history": [
		[4100, 70],
		[4107, 1],
		[4114, 6],
		[4121, 6],
		[4128, 5]
	],
	"esm": true,
	"cjs": false
}
