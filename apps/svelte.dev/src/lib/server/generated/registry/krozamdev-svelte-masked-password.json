{
	"name": "@krozamdev/svelte-masked-password",
	"description": "Create masked password input component for Svelte.",
	"repo_url": "https://github.com/krozamdev/svelte-masked-password",
	"authors": ["krozamdev"],
	"homepage": "https://github.com/krozamdev/svelte-masked-password#readme",
	"downloads": 7,
	"updated": "2025-02-28T03:43:05.672Z",
	"tags": ["ui"],
	"github_stars": 12,
	"typescript": true,
	"version": "1.0.1",
	"svelte_range": "^4.0.0",
	"last_rune_check_version": "1.0.1",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@krozamdev/svelte-masked-password",
				"version": "1.0.1",
				"size": 10632
			},
			{
				"name": "@krozamdev/masked-password",
				"version": "1.1.5",
				"size": 82564
			}
		],
		"dependencies": [[0, 1]],
		"circular": []
	},
	"readme": "# @krozamdev/svelte-masked-password\n\nA lightweight, customizable masked password input component for Svelte. This component allows you to securely mask password input fields and provides a customizable approach to controlling password visibility.\n\nThe InputMaskingPassword component is a password input field that includes masking functionality (hiding characters as the user types) and allows toggling to show or hide the password. It uses the `@krozamdev/masked-password` library to apply the masking and supports custom mask characters. The component also handles password input changes by passing the raw (unmasked) value via a callback function.\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@krozamdev/svelte-masked-password\"><img src=\"https://img.shields.io/npm/v/@krozamdev/svelte-masked-password\" alt=\"Latest Version\"></a>\n  <a href=\"https://www.npmjs.com/package/@krozamdev/svelte-masked-password\"><img src=\"https://img.shields.io/npm/dt/@krozamdev/svelte-masked-password\" alt=\"Total Download\"></a>\n  <a href=\"https://www.npmjs.com/package/@krozamdev/svelte-masked-password\"><img src=\"https://img.shields.io/npm/l/@krozamdev/svelte-masked-password\" alt=\"License\"></a>\n</p>\n\n## Compatible Packages\n\n<ul style=\"list-style: none; padding: 0; text-align: left;\">\n  <li>\n    <a href=\"https://github.com/krozamdev/masked-password\">\n      <img src=\"https://img.shields.io/badge/vanillaJS-%40krozamdev%2Fmasked--password-F7DF1E?logo=javascript\" alt=\"VanillaJS\">\n    </a>\n  </li>\n  <li>\n    <a href=\"https://github.com/krozamdev/react-masked-password\">\n      <img src=\"https://img.shields.io/badge/React-%40krozamdev%2Freact--masked--password-61DAFB?logo=react\" alt=\"React\">\n    </a>\n  </li>\n  <li>\n    <a href=\"https://github.com/krozamdev/vue-masked-password\">\n      <img src=\"https://img.shields.io/badge/Vue-%40krozamdev%2Fvue--masked--password-42b883?logo=vuedotjs\" alt=\"Vue\">\n    </a>\n  </li>\n  <li>\n    <a href=\"https://github.com/krozamdev/svelte-masked-password\">\n      <img src=\"https://img.shields.io/badge/Svelte-%40krozamdev%2Fsvelte--masked--password-FF3E00?logo=svelte\" alt=\"Svelte\">\n    </a>\n  </li>\n</ul>\n\n## Features\n\n- **Masked Input**: Mask the entered password with a configurable mask character.\n- **Password Toggle**: Option to show or hide the password input.\n- **TypeScript Support**: Written in TypeScript for better type safety.\n- **Easy Integration**: Can be easily integrated into any Svelte form.\n- **Lightweight**: Minimal JavaScript bundle size for better performance.\n- **Cross-browser Compatibility**: Works across modern browsers.\n\n## Installation\n\nTo install the package, use either npm or yarn:\n\n- npm\n    ```bash\n    npm install @krozamdev/svelte-masked-password\n    ```\n- yarn\n    ```bash\n    yarn add @krozamdev/svelte-masked-password\n    ```\n- pnpm\n    ```bash\n    pnpm add @krozamdev/svelte-masked-password\n    ```\n- bun\n    ```bash\n    bun add @krozamdev/svelte-masked-password\n    ```\n\n## Usage\n\nHere’s an example of how to use the masked password input component in your Svelte project:\n\n```svelte\n<script lang=\"ts\">\n  import InputMaskingPassword from '@krozamdev/svelte-masked-password';\n  \n  let password = \"\";\n  let showPassword = false;\n\n  const handlePasswordChange = (newPassword: string) => {\n    password = newPassword;\n    console.log(\"Password changed: \", password);\n  };\n\n  const toggleShowPassword = () => {\n    showPassword = !showPassword;\n  };\n</script>\n\n<main>\n  <button on:click={toggleShowPassword}>\n    {showPassword ? \"Hide Password\" : \"Show Password\"}\n  </button>\n\n  <InputMaskingPassword\n    onChangeEvent={handlePasswordChange}\n    maskCharacter=\"•\"\n    showPassword={showPassword}\n    placeholder=\"Enter your password\"\n  />\n</main>\n```\n\n## Props\n\n| Prop             | Type                                    | Description                                                                                      |\n|------------------|-----------------------------------------|--------------------------------------------------------------------------------------------------|\n| `onChangeEvent`  | `(originalValue: string)`               | Callback that fires when the password value changes.                                              |\n| `maskCharacter`  | `string`                                | (Optional) The character used to mask the password. Defaults to `•`.                             |\n| `showPassword`   | `boolean`                               | (Optional) Show or hide the password input. Defaults to `false`.                                  |\n| `...props`        | `InputHTMLAttributes<HTMLInputElement>` | All other standard HTML input attributes are supported, such as `placeholder`, `class`, etc. |\n\n\n\n## Development\n\nTo build the project locally:\n\n1. Clone the repository:\n    ```bash\n    git clone https://github.com/krozamdev/svelte-masked-password.git\n    cd svelte-masked-password\n    ```\n2. Install dependencies:\n    ```bash\n    yarn install\n    ```\n3. Run the build:\n    ```bash\n    yarn build\n    ```\nThis will create the build output in the dist directory.\n\n## Contributing\n\n1. Fork the repository.\n2. Create your feature branch (git checkout -b feature/my-feature).\n3. Commit your changes (git commit -am 'Add new feature').\n4. Push to the branch (git push origin feature/my-feature).\n5. Create a new Pull Request.\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.\n\n## Contact\n\nFor support, please email [support@krozam.tech](mailto:support@krozam.tech).\n",
	"legacy_svelte": true,
	"downloads_history": [
		[4037, 13],
		[4044, 1],
		[4072, 78],
		[4079, 9],
		[4086, 7],
		[4093, 11],
		[4107, 2],
		[4114, 7],
		[4121, 8],
		[4128, 3]
	]
}
