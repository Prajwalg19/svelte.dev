{
	"name": "svrollbar",
	"description": "Custom scrollbar made by svelte.",
	"repo_url": "https://github.com/daylilyfield/svrollbar",
	"authors": ["daylilyfield"],
	"homepage": "https://github.com/daylilyfield/svrollbar#readme",
	"downloads": 1551,
	"updated": "2022-04-17T14:54:20.139Z",
	"tags": ["ui"],
	"github_stars": 85,
	"typescript": true,
	"version": "0.12.0",
	"svelte_range": "^3.46.4",
	"last_rune_check_version": "0.12.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svrollbar",
				"version": "0.12.0",
				"size": 299698
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/daylilyfield/svrollbar/main/docs/svrollbar.png\" />\n</p>\n\n<p align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/daylilyfield/svrollbar/main/docs/svrollbar-default.gif\" />\n  <img src=\"https://raw.githubusercontent.com/daylilyfield/svrollbar/main/docs/svrollbar-gradation-track.gif\" />\n  <img src=\"https://raw.githubusercontent.com/daylilyfield/svrollbar/main/docs/svrollbar-crossfade.gif\" />\n  <img src=\"https://raw.githubusercontent.com/daylilyfield/svrollbar/main/docs/svrollbar-fly.gif\" />\n</p>\n\n# svrollbar\n\n[![npm](https://badge.fury.io/js/svrollbar.svg)](https://badge.fury.io/js/svrollbar)\n[![license](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n[![actions](https://github.com/daylilyfield/svrollbar/workflows/build%20%26%20test/badge.svg)](https://github.com/daylilyfield/svrollbar/actions)\n[![coverall](https://coveralls.io/repos/github/daylilyfield/svrollbar/badge.svg?branch=main)](https://coveralls.io/github/daylilyfield/svrollbar?branch=main)\n\nsvrollbar is the custom scrollbar made by svelte.\n\n- [how to install](#how-to-install)\n- [examples](#examples)\n- [how to use](#how-to-use)\n  - [replace window scrollbar](#replace-window-scrollbar)\n  - [make scrollble area](#make-scrollable-area)\n  - [replace overflow-based scrollbar](#replace-overflow-based-scrollbar)\n  - [integrate 3rd party libraries](#integrate-3rd-party-libraries)\n- [components spec](#components-spec)\n- [how to customize transition](#how-to-customize-transition)\n- [how to customize style](#how-to-customize-style)\n- [how to customize scrollbar visibility](#how-to-customize-scrollbar-visibility)\n\n## how to install\n\n```bash\nnpm install svrollbar\n```\n\n## examples\n\nexample website is [here](https://daylilyfield.github.io/svrollbar/)\n\nexample svelte REPL is [here](https://svelte.dev/repl/d600db3bde4742ec8d9751e009d94159?version=3.35.0).\n\n## how to use\n\nsvrollbar has two components; `Svrollbar.svelte` and `Svroller.svelte`.\nsvrollbar is supposed to use with svelte,\nbut if you want, you can use svrollbar without svelte.\n\n### replace window scrollbar\n\nif you would like to customize your window scrollbar,\nyou simply write down `Svrollbar.svelte` with empty properties,\n\n```svelte\n<Svrollbar />\n```\n\nthis is equivalent to:\n\n```svelte\n<Svrollbar viewport={document.scrollingElement} contents={document.body} />\n```\n\nyes, you can see the customized scrollbar on the right side of your browser window.\nplease watch out [example website](https://daylilyfield.github.io/svrollbar/)\nto see the live example.\n\n### make scrollable area\n\nif you try to make scrollable area within a part of your web site,\nyou may prefer to use `Svroller.svelte`.\nthe below example shows you the list which has 50 rows\nin a 10rem x 10rem square scrollable area with the custom scrollbar.\n\n```svelte\n<script lang=\"ts\">\n  import { Svroller } from 'svrollbar'\n\n  const items = Array.from({ length: 50 }).map((_, i) => `item ${i}`)\n</script>\n\n<Svroller width=\"10rem\" height=\"10rem\">\n  {#each items as item (item)}\n    <div>{item}</div>\n  {/each}\n</Svroller>\n```\n\n### replace overflow-based scrollbar\n\non the other hand, it is better to use `Svrollbar.svelte`\nif you already have a kind of scrollable viewport or contents.\n\n```svelte\n<script lang=\"ts\">\n  import { Svrollbar } from 'svrollbar'\n\n  const items = Array.from({ length: 50 }).map((_, i) => `item ${i}`)\n\n  export let viewport: Element\n  export let contents: Element\n</script>\n\n<div class=\"wrapper\">\n  <div bind:this={viewport} class=\"viewport\">\n    <div bind:this={contents} class=\"contents\">\n      {#each items as item (item)}\n        <div>{item}</div>\n      {/each}\n    </div>\n  </div>\n  <Svrollbar {viewport} {contents} />\n</div>\n\n<style>\n  .wrapper {\n    position: relative;\n    width: 10rem;\n  }\n\n  .viewport {\n    position: relative;\n    width: 10rem;\n    height: 10rem;\n    overflow: scroll;\n    border: 1px solid gray;\n    box-sizing: border-box;\n\n    /* hide scrollbar */\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n  }\n\n  .viewport::-webkit-scrollbar {\n    /* hide scrollbar */\n    display: none;\n  }\n</style>\n```\n\nnotice, you do not need to specify fixed value to width or height of viewport.\nyou can set min-\\*, max-\\*, and any dynamic and reactive value because\nsvrollbar observes both viewport size and its content size by ResizeObserver.\n\n### integrate 3rd party libraries\n\nif you would like to integrate svrollbar into some kind of virtual list\nimplemenation such as\n[svelte-virtual-list](https://github.com/sveltejs/svelte-virtual-list)\nor\n[svelte-tiny-virtual-list](https://github.com/Skayo/svelte-tiny-virtual-list),\nyou can do that in the following way.\n\n```svelte\n<script lang=\"ts\">\n  import { onMount } from 'svelte'\n  import VirtualList from 'svelte-tiny-virtual-list'\n  import { Svrollbar } from 'svrollbar'\n\n  const items = Array.from({ length: 50 }).map((_, i) => `item ${i}`)\n\n  let viewport: Element\n  let contents: Element\n\n  onMount(() => {\n    viewport = document.querySelector('.virtual-list-wrapper')\n    contents = document.querySelector('.virtual-list-inner')\n  })\n</script>\n\n<div class=\"wrapper\">\n  <Svrollbar {viewport} {contents} />\n  <VirtualList width=\"10rem\" height={160} itemCount={items.length} itemSize={16}>\n    <div slot=\"item\" let:index let:style {style}>\n      {items[index]}\n    </div>\n  </VirtualList>\n</div>\n\n<style>\n  :global(.virtual-list-wrapper) {\n    /* hide scrollbar */\n    -ms-overflow-style: none !important;\n    scrollbar-width: none !important;\n  }\n\n  :global(.virtual-list-wrapper::-webkit-scrollbar) {\n    /* hide scrollbar */\n    display: none !important;\n  }\n\n  .wrapper {\n    position: relative;\n    width: 10rem;\n  }\n</style>\n```\n\n## components spec\n\nsee [here](./COMPONENT_INDEX.md).\n\n## how to customize transition\n\nsince the simple fade animation is really a bore,\nyou can replace the default fade (show/hide) animation with your one.\nthe transition function is compatible with the svelte transition.\n\n```svelte\n<script>\n  import { fly } from 'svelte/transition'\n  import { Svroller } from 'svrollbar'\n\n  const items = Array.from({ length: 50 }).map((_, i) => `item ${i}`)\n  const flyLeft = (node) => fly(node, { x: -160 })\n  const flyRight = (node) => fly(node, { x: 30 })\n</script>\n\n<Svroller\n  width=\"10rem\"\n  height=\"10rem\"\n  vTrackIn={flyLeft}\n  vTrackOut={flyLeft}\n  vThumbIn={flyRight}\n  vThumbOut={flyRight}>\n  {#each items as item (item)}\n    <div>{item}</div>\n  {/each}\n</Svroller>\n```\n\n## how to customize style\n\nyou can customize svrollbar style with css variables.\n\n| variable                     | default |\n| ---------------------------- | ------- |\n| --svrollbar-track-width      | 10px    |\n| --svrollbar-track-background | initial |\n| --svrollbar-track-radius     | initial |\n| --svrollbar-track-opacity    | 1       |\n| --svrollbar-track-shadow     | initial |\n| --svrollbar-thumb-width      | 6px     |\n| --svrollbar-thumb-background | gray    |\n| --svrollbar-thumb-radius     | 0.25rem |\n| --svrollbar-thumb-opacity    | 0.5     |\n| --svrollbar-thumb-shadow     | initial |\n\n```svelte\n<script lang=\"ts\">\n  import { Svroller } from 'svrollbar'\n\n  const items = Array.from({ length: 50 }).map((_, i) => `item ${i}`)\n</script>\n\n<div class=\"container\">\n  <Svroller width=\"10rem\" height=\"10rem\">\n    {#each items as item (item)}\n      <div>{item}</div>\n    {/each}\n  </Svroller>\n</div>\n\n<style>\n  .container {\n    border: 3px solid #5d7150;\n    width: 10rem;\n\n    --svrollbar-track-width: 20px;\n    --svrollbar-track-background: #85b4b9;\n    --svrollbar-track-opacity: 1;\n\n    --svrollbar-thumb-width: 10px;\n    --svrollbar-thumb-background: #d9ab55;\n    --svrollbar-thumb-opacity: 1;\n  }\n</style>\n```\n\n## how to customize scrollbar visibility\n\nyou can customize scrollbar visibility with `alwaysVisible` and `initiallyVisible` properties.\n\n| property         | default | description                          |\n| ---------------- | ------- | ------------------------------------ |\n| alwaysVisible    | false   | scrollbar is always visible          |\n| initiallyVisible | false   | scrollbar is visible until scrolling |\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3596, 567],
		[3603, 742],
		[3610, 777],
		[3617, 710],
		[3624, 687],
		[3631, 690],
		[3638, 752],
		[3645, 434],
		[3652, 758],
		[3659, 992],
		[3666, 792],
		[3673, 980],
		[3680, 926],
		[3687, 987],
		[3694, 950],
		[3701, 1085],
		[3708, 1052],
		[3715, 1122],
		[3722, 1061],
		[3729, 1007],
		[3736, 1043],
		[3743, 950],
		[3750, 815],
		[3757, 1146],
		[3764, 1200],
		[3771, 933],
		[3778, 1012],
		[3785, 1201],
		[3792, 1550],
		[3799, 1408],
		[3806, 1257],
		[3813, 1318],
		[3820, 1380],
		[3827, 1305],
		[3834, 867],
		[3841, 936],
		[3848, 1026],
		[3855, 1378],
		[3862, 1186],
		[3869, 1241],
		[3876, 1412],
		[3883, 1333],
		[3890, 1149],
		[3897, 1344],
		[3904, 1607],
		[3911, 1018],
		[3918, 833],
		[3925, 759],
		[3932, 897],
		[3939, 1125],
		[3946, 1044],
		[3953, 1057],
		[3960, 968],
		[3967, 1312],
		[3974, 1090],
		[3981, 1034],
		[3988, 1308],
		[3995, 1176],
		[4002, 905],
		[4009, 858],
		[4016, 1042],
		[4023, 1250],
		[4030, 1328],
		[4037, 1570],
		[4044, 1031],
		[4051, 984],
		[4058, 1072],
		[4065, 1104],
		[4072, 1508],
		[4079, 1502],
		[4086, 1541],
		[4093, 1468],
		[4100, 1420],
		[4107, 1187],
		[4114, 1551],
		[4121, 1549],
		[4128, 1104],
		[4135, 1611]
	],
	"esm": true,
	"cjs": false
}
