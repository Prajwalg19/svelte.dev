{
	"name": "svelte-hypercommands",
	"description": "Create command/navigation palettes for Svelte apps.",
	"repo_url": "https://github.com/josu-dev/svelte-hypercommands",
	"authors": ["j_josu"],
	"homepage": "https://github.com/josu-dev/svelte-hypercommands#readme",
	"downloads": 9,
	"updated": "2024-04-10T16:18:36.263Z",
	"tags": ["ui", "tooling"],
	"github_stars": 3,
	"typescript": true,
	"version": "0.1.5",
	"svelte_range": "3.x || 4.x",
	"kit_range": "^2.5.5",
	"last_rune_check_version": "0.1.5",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-hypercommands",
				"version": "0.1.5",
				"size": 146908
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# Hypercommands\r\n\r\n**svelte-hypercommands** is a dependancy free Headless Palette for creating command/navigation/search palettes for your [Svelte][svelte] and [SvelteKit][svelte-kit] app.\r\n\r\nThe main objetive is enabling complete customization and extensibility of a base Command Palette component while providing a default implementation that can be used out of the box.\r\n\r\nIts important to remark that the `headless logic` comes from [Melt-UI][melt-ui] and the `keybindings logic` is a modified version of [Tinykeys][tinykeys]. Each of these libraries deserve all the credit for their work.\r\n\r\n> [!IMPORTANT]\r\n> This library is still in early development and the API is subject to breaking changes.\r\n\r\n\r\n## Features\r\n\r\n- Actionable/Navigable/Searchable types\r\n- Default implementation (commmands/pages modes)\r\n- Dependency free\r\n- Dynamic registration\r\n- Fully typed\r\n- Headless logic\r\n- Keybindings support for actionables\r\n- SSR support\r\n\r\n\r\n## Installation\r\n\r\n```bash\r\nnpm install svelte-hypercommands\r\n# or\r\npnpm add svelte-hypercommands\r\n# or\r\nyarn add svelte-hypercommands\r\n```\r\n\r\n\r\n## Getting started\r\n\r\nThe library is composed of two main parts: the default implementation and the headless logic.\r\n\r\nThe default implementation is a standalone component that can be used out of the box, while the headless logic can be used to create your own implementation for different palettes.\r\n\r\n\r\n### Default implementation\r\n\r\nThe default implementation mimics the behavior of the VSCode Command Palette, with two modes: `commands` and `pages`.\r\n\r\nThe `commands` mode is used to display a list of actionable items, while the `pages` mode is used to display a list of routes to navigate to.\r\n\r\nIf you want the palette to be globally available, use it in your global layout or in a layout that is used in all your pages.\r\n\r\n```svelte\r\n<script>\r\n  import { navigablesFromRoutes } from 'svelte-hypercommands';\r\n  import HyperPalette, { defineCommand } from 'svelte-hypercommands/HyperPalette.svelte';\r\n\r\n  const globalCommands = defineCommand(\r\n    {\r\n      name: 'Copy Current URL',\r\n      description: 'Copy the current URL to your clipboard',\r\n      shortcut: ['$mod+Shift+C'],\r\n      onAction: () => {\r\n        navigator.clipboard.writeText(window.location.href);\r\n        alert('Copied URL to clipboard');\r\n      }\r\n    },\r\n    {\r\n      name: 'Reload Window',\r\n      description: 'Reload the current window',\r\n      shortcut: ['$mod+Shift+R'],\r\n      onAction: () => {\r\n        window.location.reload();\r\n      }\r\n    }\r\n  );\r\n\r\n  const globalPages = navigablesFromRoutes();\r\n</script>\r\n\r\n<HyperPalette commands={globalCommands} pages={globalPages} />\r\n\r\n<slot />\r\n\r\n<!-- or in svelte 5 -->\r\n\r\n{@render children()}\r\n```\r\n\r\nFor adding dynamic commands/pages you can use the helpers exported by the component:\r\n\r\n```svelte\r\n<script>\r\n  import { defineCommand, definePage, helpers } from 'svelte-hypercommands/HyperPalette.svelte';\r\n  import { onMount } from 'svelte';\r\n\r\n  onMount(() => {\r\n    const cleanupCommands = helpers.registerCommand(\r\n      defineCommand(\r\n        {\r\n          name: 'Say hello world',\r\n          description: 'Alerts hello world',\r\n          onAction: () => {\r\n            alert('Hello World');\r\n          },\r\n        }\r\n      )\r\n    );\r\n\r\n    const cleanupPages = helpers.registerPage(\r\n      definePage(\r\n        {\r\n          name: 'SvelteKit Docs',\r\n          description: 'Link to the Official SvelteKit documentation',\r\n          url: 'https://kit.svelte.dev/docs/introduction',\r\n        }\r\n      )\r\n    );\r\n\r\n    return () => {\r\n      cleanupCommands();\r\n      cleanupPages();\r\n    };\r\n  });\r\n</script>\r\n\r\n<main>\r\n  <h1>Home</h1>\r\n</main>\r\n```\r\n\r\n\r\n### Headless usage\r\n\r\nThe library exposes a `createPalette` function that can be used to create all the logic and state handling for a custom palette.\r\n\r\nFor an implementation reference, you can check the [HyperPalette.svelte](./src/lib/default/HyperPalette.svelte).\r\n\r\nWhen creating your own implementation the `createPalette` receives an options object to configure the behavior of the palette and the modes that it will handle of the shape:\r\n\r\n```ts\r\ntype PaletteOptions = {\r\n    /**\r\n     * Whether to close the palette when the user clicks outside of it.\r\n     * \r\n     * @default true\r\n     */\r\n    closeOnClickOutside?: boolean;\r\n    /**\r\n     * Whether to close the palette when the user presses the escape key.\r\n     * \r\n     * @default true\r\n     */\r\n    closeOnEscape?: boolean;\r\n    /**\r\n     * Debounce time for processing the search input in milliseconds.\r\n     * \r\n     * A value greater than 0 will debounce the input. Otherwise, the input will be processed immediately.\r\n     * \r\n     * @default 150\r\n     */\r\n    debounce?: number;\r\n    /**\r\n     * Default values for initializing the palette.\r\n     */\r\n    defaults?: PaletteDefaultsOptions<string>;\r\n    /**\r\n     * The configuration for the different modes of the palette.\r\n     * \r\n     * Each key is the name of the mode and the value is the configuration for that mode.\r\n     */\r\n    modes: PaletteModesOptions;\r\n    /**\r\n     * A `Writable` store to control the open state of the palette from outside.\r\n     */\r\n    open?: Writable<boolean>;\r\n    /**\r\n     * A `Writable` store to control the placeholder of the search input from outside.\r\n     */\r\n    placeholder?: Writable<string | undefined>;\r\n    /**\r\n     * The target element to append the palette to.\r\n     * \r\n     * - `false` portal is disabled.\r\n     * - `string` a css selector for the portal target.\r\n     * - `HTMLElement` the portal target.\r\n     * \r\n     * @default false\r\n     */\r\n    portal?: HTMLElement | string | false;\r\n    /**\r\n     * Whether to reset the palette state when it is opened.\r\n     * \r\n     * When set to `true` takes precedence over the `closeAction` of the modes.\r\n     * \r\n     * @default false\r\n     */\r\n    resetOnOpen?: boolean;\r\n};\r\n```\r\n\r\nThe function returns an object of the shape:\r\n\r\n```ts\r\ntype CreatePaletteReturn = {\r\n    elements: {\r\n        palette: BuilderPalette,\r\n        panel: BuilderPanel,\r\n        form: BuilderForm,\r\n        label: BuilderLabel,\r\n        input: BuilderInput,\r\n        item: BuilderItem,\r\n    },\r\n    helpers: {\r\n        registerItem: (mode: Mode, item: OneOrMany<AnyHyperItem>, override?: boolean, silent?: boolean) => Cleanup;\r\n        unregisterItem: (mode: Mode, item: OneOrMany<ItemMatcher<AnyHyperItem>>) => void;\r\n        search: (pattern: string) => void;\r\n        openPalette: (mode?: Modes) => void;\r\n        closePalette: () => void;\r\n        togglePalette: () => void;\r\n        registerPaletteShortcuts: () => void;\r\n        unregisterPaletteShortcuts: () => void;\r\n    };\r\n    states: {\r\n        open: Writable<boolean>;\r\n        error: Writable<PaletteError | undefined>;\r\n        mode: Writable<Modes>;\r\n        modes: {\r\n            [Mode in Modes] : {\r\n                items: Writable<AnyHyperItem[]>;\r\n                results: Writable<AnyHyperItem[]>;\r\n                history: Writable<HyperItemId[]>;\r\n                current: Writable<AnyHyperItem | undefined>;\r\n            };\r\n            placeholder: Writable<string | undefined>;\r\n            portal: Writable<HTMLElement | string | false>;\r\n            searchInput: Writable<string>;\r\n        };\r\n    };\r\n};\r\n```\r\n\r\nThe `elements` object contains the builders for the different elements needed to create the palette markup.\r\n\r\nThe `states` object contains the stores that hold the internal state of the palette.\r\n\r\nThe `helpers` object contains the functions to interact with the palette and its items.\r\n\r\n\r\n### Caution\r\n\r\nAltering the internal state of the palette directly with the stores of the `states` object isn't guaranteed to work as expected. The `helpers` object should be used to interact with the palette state and its items.\r\n\r\n\r\n## Acknowledgements\r\n\r\n- [Melt-UI][melt-ui]\r\n- [Tinykeys][tinykeys]\r\n\r\n\r\n## Contributing\r\n\r\nAny kind of contribution is welcome.\r\n\r\nIf you have any suggestions, feedback or issues, please [open an issue][issues] or submit a pull request with your fix or feature.\r\n\r\n\r\n## License\r\n\r\n[MIT](./LICENSE)\r\n\r\n\r\n[issues]: https://github.com/josu-dev/svelte-hypercommands/issues\r\n[melt-ui]: https://github.com/melt-ui/melt-ui\r\n[svelte]: https://svelte.dev/\r\n[svelte-kit]: https://github.com/sveltejs/kit\r\n[tinykeys]: https://github.com/jamiebuilds/tinykeys\r\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3673, 465],
		[3680, 85],
		[3687, 7],
		[3694, 102],
		[3701, 64],
		[3708, 60],
		[3715, 82],
		[3722, 203],
		[3729, 99],
		[3736, 28],
		[3743, 6],
		[3750, 63],
		[3757, 33],
		[3764, 2],
		[3771, 3],
		[3778, 21],
		[3785, 4],
		[3792, 2],
		[3799, 2],
		[3806, 10],
		[3813, 2],
		[3827, 2],
		[3834, 96],
		[3841, 1],
		[3848, 2],
		[3855, 13],
		[3862, 6],
		[3869, 3],
		[3876, 2],
		[3883, 2],
		[3890, 20],
		[3897, 2],
		[3904, 2],
		[3911, 20],
		[3918, 9],
		[3925, 1],
		[3946, 2],
		[3953, 4],
		[3960, 2],
		[3967, 1],
		[3974, 5],
		[3981, 1],
		[4002, 1],
		[4016, 17],
		[4023, 1],
		[4030, 1],
		[4037, 6],
		[4044, 18],
		[4051, 6],
		[4065, 1],
		[4072, 4],
		[4079, 1],
		[4093, 1],
		[4100, 51],
		[4107, 8],
		[4114, 9],
		[4121, 16],
		[4128, 7]
	],
	"esm": true,
	"cjs": false
}
