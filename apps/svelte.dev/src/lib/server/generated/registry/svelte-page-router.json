{
	"name": "svelte-page-router",
	"description": "Create config-based routing for Svelte apps using page.js.",
	"repo_url": "https://github.com/PaulMaly/svelte-page-router",
	"authors": ["paulmaly"],
	"homepage": "https://github.com/PaulMaly/svelte-page-router#readme",
	"downloads": 11,
	"updated": "2019-09-12T06:05:27.630Z",
	"tags": ["router"],
	"github_stars": 21,
	"typescript": false,
	"version": "1.1.0",
	"last_rune_check_version": "1.1.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-page-router",
				"version": "1.1.0",
				"size": 9167
			},
			{
				"name": "page",
				"version": "1.11.6",
				"size": 113746
			},
			{
				"name": "path-to-regexp",
				"version": "1.2.1"
			},
			{
				"name": "isarray",
				"version": "0.0.1"
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[2, 3]
		],
		"circular": []
	},
	"readme": "# svelte-page-router\n\nSimple wrapper based on pagejs to make DX similar to config-based router. Play well with [Svelte 3](https://v3.svelte.technology).\n\n## Usage\n\nInstall with npm or yarn:\n\n```bash\nnpm install --save svelte-page-router\n```\n\nThen import router to your `main.js` file:\n\n```javascript\nimport Router from 'svelte-page-router';\n\nimport App from './App.svelte';\n\nconst options = {\n\tclick: true,\n\tpopstate: true,\n\tdispatch: true,\n\thashbang: false,\n};\n\nconst router = new Router({\n\troutes: [{\n\t\tpath: '/static',\n\t\tcomponent: import('./pages/Static')\n\t},{\n\t\tpath: '/dynamic/:id/:type?',\n\t\tcomponent: ctx => import('~/pages/Dynamic') // for lazy-loaded routes\n\t},{\n\t\tpath: '/secure',\n\t\tcomponent: import('~/pages/Secure'),\n\t\tbefore(ctx, next) {\n\t\t\t(/* check authorization */) ? \n\t\t\t\tnext() : \n\t\t\t\trouter.redirect('/static');\n\t\t}\t\t\t\t\n\t}, {\n\t\tpath: '*',\n\t\tcomponent: import('~/pages/NotFound'),\n\t}],\n\thooks: [\n\t\t(ctx, next) => {\n\t\t\t/* simple hooks to modify context for any route */\n\t\t\tnext();\n\t\t}\n\t],\n\t...options\n});\n\n// simple integrate with Svelte\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: { component: null }\n});\n\nrouter.enter((ctx, next) => {\n\tapp.$set({ ...ctx });\n\ttick().then(next);\n});\n\nrouter.exit((ctx, next) => {\n\tapp.$set({ component: null });\n\ttick().then(next);\n});\n\nrouter.start();\n```\n\nSwitch pages in `App.svelte`:\n\n```html\n<svelte:component \n\tthis={component || Loading} \n\t{...state} \n\t{pathname} \n\t{path} \n\t{hash} \n\t{params} \n\t{query}\n/>\n\n<script>\n\timport Loading from './Loading.svelte';\n\n\texport let component = null,\n\t\tpathname = '',\n\t\tpath = '',\n\t\thash = '',\n\t\tparams = {},\n\t\tquery = {},\n\t\tstate = {};\n</script>\n```\n\nUse `preload` function to preload some data before page component will be rendered:\n\n```html\n<ul>\n{#each items as item}\n\t<li>{item.title}</li>\n{/each}\n</ul>\n\n<script context=\"module\">\n\texport async function preload(ctx) {\n\t\tconst res = fetch(`/items/${ctx.params.id}?type=${ctx.params.type}&page=${ctx.query.page}`);\n\t\tconst items = res.json();\n\t\treturn { items };\n\t}\n</script>\n\n<script>\n\texport let items = [];\n</script>\n```\n\n## Context\n\nIs a context object from [pagejs](http://visionmedia.github.io/page.js/#context) with additional property `component` which is a Svelte component associated with the current route.\n\n## Methods\n\n```javascript\nrouter.base(); // base path\nrouter.strict(true); // strict matching\n\nrouter.before((ctx, next) => { /* ... */ }); // guard before any route\nrouter.after((ctx, next) => { /* ... */ }); // guard after any route\n\nrouter.enter((ctx, next) => { /* ... */ }); // guard entring any route\nrouter.exit((ctx, next) => { /* ... */ }); // guard exiting any route\n\nrouter.start(); // start listening\nrouter.stop(); // stop listening\n\nrouter.redirect('/some'); // redirects\nrouter.back(); // history back\n```\n\n## License\n\nMIT\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 33],
		[3603, 4],
		[3610, 4],
		[3617, 6],
		[3631, 4],
		[3638, 17],
		[3645, 6],
		[3652, 5],
		[3659, 5],
		[3666, 8],
		[3673, 6],
		[3680, 6],
		[3687, 3],
		[3694, 3],
		[3701, 3],
		[3708, 2],
		[3715, 2],
		[3722, 2],
		[3729, 4],
		[3736, 2],
		[3743, 1],
		[3750, 1],
		[3757, 6],
		[3764, 4],
		[3771, 3],
		[3778, 2],
		[3785, 2],
		[3792, 3],
		[3799, 2],
		[3806, 5],
		[3813, 1],
		[3820, 1],
		[3827, 1],
		[3834, 5],
		[3841, 3],
		[3848, 2],
		[3855, 2],
		[3862, 13],
		[3869, 1],
		[3876, 2],
		[3883, 4],
		[3890, 4],
		[3897, 2],
		[3904, 1],
		[3911, 2],
		[3918, 1],
		[3925, 1],
		[3932, 4],
		[3939, 2],
		[3946, 1],
		[3953, 1],
		[3960, 2],
		[3967, 1],
		[3974, 1],
		[3981, 3],
		[3988, 4],
		[3995, 2],
		[4002, 4],
		[4009, 4],
		[4016, 1],
		[4023, 13],
		[4030, 10],
		[4037, 7],
		[4044, 10],
		[4051, 3],
		[4058, 2],
		[4065, 2],
		[4072, 1],
		[4079, 3],
		[4086, 1],
		[4093, 10],
		[4100, 5],
		[4107, 4],
		[4114, 11],
		[4121, 11],
		[4128, 5]
	]
}
