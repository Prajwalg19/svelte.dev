{
	"name": "sly-svelte-location-router",
	"description": "Creates a lightweight router for Svelte applications.",
	"repo_url": "https://github.com/SlyOtis/svelte-router",
	"authors": ["slyotis"],
	"homepage": "https://github.com/SlyOtis/svelte-router",
	"downloads": 18,
	"updated": "2024-10-10T11:43:43.753Z",
	"tags": ["router"],
	"github_stars": 0,
	"typescript": true,
	"version": "2.2.4",
	"svelte_range": "^4.2.18",
	"last_rune_check_version": "2.2.4",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "sly-svelte-location-router",
				"version": "2.2.4",
				"size": 19500
			},
			{
				"name": "path-to-regexp",
				"version": "8.2.0",
				"size": 55246
			}
		],
		"dependencies": [[0, 1]],
		"circular": []
	},
	"readme": "# sly-svelte-location-router\n\nA lightweight and flexible router for Svelte applications, leveraging the power of the Location API and path-to-regexp for advanced routing capabilities.\n\n## Features\n\n- Simple and intuitive API\n- TypeScript support for enhanced developer experience\n- Lazy-loading of route components for optimized performance\n- Custom loading component support\n- Fallback route handling for 404 pages\n- Robust path matching using path-to-regexp\n- Support for path parameters and query parameters\n- Programmatic navigation\n- Automatic route sorting for optimal matching\n\n## Installation\n\n```bash\npnpm install sly-svelte-router\n```\n\n## Usage\n\n```svelte\n<script lang=\"ts\">\n  import { Router } from 'sly-svelte-router';\n  import type { Routes } from 'sly-svelte-router';\n\n  const routes: Routes = {\n    '/': () => import('./routes/Home.svelte'),\n    '/about': () => import('./routes/About.svelte'),\n    '/user/:id': () => import('./routes/User.svelte'),\n    '/posts/:category/:postId': {\n      name: \"posts\",\n      component: () => import('./routes/Post.svelte')\n    },\n    '/redirect': '/about',\n    '*': () => import('./routes/404.svelte'),\n  };\n\n  const fallback = () => import('./routes/404.svelte');\n</script>\n\n<Router {routes} {fallback}>\n  <div>Loading...</div>\n</Router>\n```\n\n## Route Definitions\n\nsly-svelte-router supports three types of route definitions:\n\n1. `RouteComponent`: A function returning a Promise that resolves to a component.\n   Example: `() => import('./routes/Home.svelte')`\n\n2. `RouteData`: An object with 'name' and 'component' properties.\n   Example: `{ name: \"posts\", component: () => import('./routes/Post.svelte') }`\n\n3. `string`: A pathname string for redirection.\n   Example: `'/about'`\n\nRoutes are automatically sorted for optimal matching based on specificity and complexity.\n\n## Path Matching\n\nsly-svelte-router uses [path-to-regexp](https://github.com/pillarjs/path-to-regexp) for powerful and flexible route matching. This allows for:\n\n- **Named Parameters**: `/user/:id` matches `/user/123` and passes `{id: '123'}` as a parameter.\n- **Optional Parameters**: `/post/:id?` matches both `/post/123` and `/post`.\n- **Zero or more**: `/files/*` matches any number of segments after `/files/`.\n- **One or more**: `/files/:path+` requires at least one segment after `/files/`.\n- **Custom matching**: Use regular expressions for fine-grained control.\n\nExamples:\n- `/user/:id` matches `/user/123`\n- `/post/:category/:title?` matches `/post/tech` and `/post/tech/new-article`\n- `/files/:path*` matches `/files`, `/files/document.pdf`, `/files/images/photo.jpg`\n\n## Route Redirection\n\nYou can easily set up route redirections by specifying the target path as a string:\n\n```typescript\nconst routes: Routes = {\n  '/old-path': '/new-path',\n  '/legacy-user/:id': '/user/:id',  // Redirects with parameters\n  '/outdated': '/about',\n};\n```\n\n## API\n\n### `Router` Component\n\nThe main component for setting up routing.\n\nProps:\n- `routes`: An object mapping route paths to component imports or route definitions\n- `fallback`: A function returning a Promise that imports the fallback component\n\n### Navigation\n\nUse the `navigate` function for programmatic navigation:\n\n```typescript\nimport { navigate } from 'sly-svelte-router';\n\nnavigate('/user/123', { someState: 'value' });\n```\n\n### Stores\n\nAccess route information reactively:\n\n```typescript\nimport { currentRoute, queryParams, routeState, routeHash, routeParams } from 'sly-svelte-router';\n\n$: console.log($currentRoute); // Current route path\n$: console.log($queryParams); // Map of query parameters\n$: console.log($routeState); // Current route state\n$: console.log($routeHash); // Current route hash\n$: console.log($routeParams); // Object containing route parameters\n```\n\n## TypeScript Support\n\nsly-svelte-router is written in TypeScript and provides type definitions out of the box for an enhanced development experience.\n\n## Performance\n\nRoute components are lazy-loaded by default, ensuring that only the necessary code is loaded for each route, optimizing your application's performance.\n\n## License\n\nMIT\n\n## Contributing\n\nContributions are welcome! Please feel free to submit a Pull Request.\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3897, 249],
		[3904, 935],
		[3911, 94],
		[3918, 217],
		[3925, 22],
		[3932, 156],
		[3939, 64],
		[3946, 8],
		[3953, 9],
		[3960, 9],
		[3967, 24],
		[3974, 5],
		[3981, 3],
		[3988, 26],
		[3995, 11],
		[4002, 2],
		[4009, 12],
		[4016, 10],
		[4023, 36],
		[4030, 12],
		[4037, 11],
		[4044, 19],
		[4051, 29],
		[4058, 19],
		[4065, 8],
		[4072, 2],
		[4079, 7],
		[4086, 3],
		[4093, 8],
		[4100, 41],
		[4107, 140],
		[4114, 18],
		[4121, 23],
		[4128, 15]
	]
}
