{
	"name": "@fleek-platform/svelte-adapter",
	"description": "Build SvelteKit apps for Fleek Functions deployment.",
	"repo_url": "",
	"authors": ["gabriel.fleek", "helderxyz", "arslan.b3a", "fleek.xyz", "kkudriaiev", "mb-fleek"],
	"downloads": 15,
	"updated": "2024-12-12T16:50:37.748Z",
	"tags": ["adapter"],
	"typescript": true,
	"version": "0.0.2",
	"kit_range": "^2.0.0",
	"last_rune_check_version": "0.0.2",
	"github_stars": 0,
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@fleek-platform/svelte-adapter",
				"version": "0.0.2",
				"size": 14190
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# ‚ö°Ô∏è SvelteKit Adapter for Fleek\n\nSvelteKit adapter that builds your app to run on Fleek Functions. This adapter automatically handles building and preparing your SvelteKit app for deployment on Fleek's infrastructure.\n\n## Installation\n\n```bash\nnpm install -D @fleek-platform/svelte-adapter\n```\n\n## Usage\n\nAdd the adapter to your `svelte.config.js`:\n\n```js\nimport adapter from '@fleek-platform/svelte-adapter';\n\nexport default {\n  kit: {\n    adapter: adapter({\n      // optional configuration\n      outDir: '.fleek', // Defaults to '.fleek'\n    }),\n  },\n};\n```\n\n### Configuration Options\n\n- `outDir`: File path to output the production build. Defaults to `.fleek` if not specified.\n\n## Build Output\n\nWhen you run `npm run build`, this adapter will:\n\n- Create a production build of your SvelteKit app\n- Generate static assets in `.fleek/static`\n- Bundle your server-side functions into `.fleek/dist`\n\n## Deployment\n\nOnce built, deploy to Fleek Functions with:\n\n```bash\nfleek functions deploy --bundle=false --path .fleek/dist/index.js --assets .fleek/static\n```\n\n## Notes\n\n- Make sure you have the [Fleek CLI](https://docs.fleek.xyz/services/sites/#install-fleek-cli) installed and configured\n- This adapter automatically handles:\n  - Static asset serving through IPFS\n  - Pre-rendered pages\n  - Server-side rendering\n  - Client/server routing\n  - TypeScript support\n  - Base path configuration\n\n## Support\n\n- Node.js 18.x and later\n- SvelteKit 2.0 and later\n\n# Release Process\n\nThis project follows SemVer for versioning. Here's how to release a new version:\n\n1. **Update Version Number**: Bump the version number in package.json using npm version (patch/minor/major). This will update the version number in package.json and create a new Git tag.\n\n```bash\npnpm version patch\n```\n\n2. **Push Changes and Tags**\n\n```bash\ngit push origin main --follow-tags\n```\n\n3. **GitHub Actions Automation**: A GitHub Actions workflow automatically publishes the package to npm when a new tag is pushed.\n\n# Contributing\n\nThanks for considering contributing to our project!\n\n## How to Contribute\n\n1. Fork the repository.\n2. Create a new branch: `git checkout -b feature-branch-name`.\n3. Make your changes.\n4. Commit your changes using conventional commits.\n5. Push to your fork and submit a pull request.\n\n## Commit Guidelines\n\nWe use [Conventional Commits](https://www.conventionalcommits.org/) for our commit messages:\n\n- `test`: üíç Adding missing tests\n- `feat`: üé∏ A new feature\n- `fix`: üêõ A bug fix\n- `chore`: ü§ñ Build process or auxiliary tool changes\n- `docs`: ‚úèÔ∏è Documentation only changes\n- `refactor`: üí° A code change that neither fixes a bug or adds a feature\n- `style`: üíÑ Markup, white-space, formatting, missing semi-colons...\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3995, 64],
		[4002, 6],
		[4009, 3],
		[4016, 5],
		[4023, 4],
		[4030, 1],
		[4037, 4],
		[4044, 9],
		[4051, 1],
		[4058, 1],
		[4072, 1],
		[4079, 2],
		[4086, 2],
		[4093, 1],
		[4107, 3],
		[4114, 15],
		[4121, 7],
		[4128, 2]
	],
	"esm": true,
	"cjs": false
}
