{
	"name": "svelte-better-form",
	"description": "Manage forms with validation in Svelte applications.",
	"repo_url": "https://github.com/ragokan/svelte-better-form",
	"authors": ["rago"],
	"homepage": "https://github.com/ragokan/svelte-better-form#readme",
	"downloads": 12,
	"updated": "2022-01-01T11:06:32.927Z",
	"tags": ["miscellaneous"],
	"typescript": true,
	"version": "1.0.8",
	"svelte_range": "^3.44.3",
	"last_rune_check_version": "1.0.8",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-better-form",
				"version": "1.0.8",
				"size": 13097
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# svelte-better-form\n\n## A form management library for Svelte that is very lightweight and simple!;\n\n[![npm](https://img.shields.io/npm/v/svelte-better-form?color=F53B02)](https://www.npmjs.com/package/svelte-better-form)\n[![GitHub Repo stars](https://img.shields.io/github/stars/ragokan/svelte-better-form?label=github%20stars)](https://github.com/ragokan/svelte-better-form)\n\n### Why svelte-better-form?\n\n- Very easy, fast, lightweight and powerful!\n- Has validation already!\n\n### Create form\n\n```ts\n// Simplest\nconst { values } = betterForm({ name: \"better\" });\n\n// Full example!\nconst { values, loading, errors, submit, getValue, setValue } = betterForm(\n  {\n    name: \"\",\n    email: \"\",\n    age: null,\n  },\n  {\n    validators: {\n      name: [\n        requiredValidator(\"Name is required!\"),\n        minLengthValidator(8, \"Name should be longer than 8!\"),\n      ],\n      email: emailValidator(\"Must be email!\"),\n      age: (value) => {\n        // you can validate [age] here manually.\n        if (value < 10) {\n          // return a string if it is invalid.\n          return \"Your age must be older than 10\";\n        }\n      },\n    },\n    onSubmit: async () => {\n      // When you call submit, this one will be executed if the form is valid.\n    },\n  }\n);\n```\n\n### Use Form\n\n```html\n<!-- Bind value -->\n<input type=\"text\" bind:value=\"{$values.name}\" />\n\n<!-- Use errors  -->\n{#if $errors.name}\n<p>Error: {$errors.name}</p>\n{/if}\n\n<!-- Use loading -->\n<button disabled=\"{$loading}\" class=\"button\" on:click=\"{submit}\">Submit</button>\n```\n\nThats all!\n\n### The default validators\n\n- minLengthValidator(minLength, errorMessage)\n- maxLengthValidator(maxLength, errorMessage)\n- requiredValidator(errorMessage)\n- emailValidator(errorMessage)\n\n### Custom Validator\n\n```ts\nparameterName: (value) => {\n  if(value !== \"whatYouWant\"){\n    return \"error text\"\n  }\n },\n```\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 1],
		[3603, 9],
		[3610, 10],
		[3617, 1],
		[3631, 1],
		[3638, 1],
		[3645, 10],
		[3659, 1],
		[3666, 10],
		[3680, 1],
		[3701, 1],
		[3708, 1],
		[3729, 12],
		[3736, 6],
		[3757, 2],
		[3771, 9],
		[3778, 2],
		[3785, 1],
		[3792, 2],
		[3799, 1],
		[3806, 4],
		[3834, 2],
		[3841, 1],
		[3848, 3],
		[3855, 46],
		[3862, 2],
		[3876, 1],
		[3883, 1],
		[3890, 10],
		[3904, 1],
		[3932, 45],
		[3939, 25],
		[3946, 11],
		[3953, 2],
		[3960, 17],
		[3967, 7],
		[3974, 20],
		[3981, 13],
		[3988, 8],
		[3995, 3],
		[4016, 1],
		[4030, 9],
		[4037, 15],
		[4044, 10],
		[4051, 4],
		[4058, 1],
		[4065, 1],
		[4079, 2],
		[4086, 1],
		[4093, 11],
		[4100, 21],
		[4107, 20],
		[4114, 12],
		[4121, 8],
		[4128, 4]
	],
	"esm": true,
	"cjs": false
}
