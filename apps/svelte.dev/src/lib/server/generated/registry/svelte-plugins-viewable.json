{
	"name": "@svelte-plugins/viewable",
	"description": "Track element viewability using rule-based approach in Svelte.",
	"repo_url": "https://github.com/svelte-plugins/svelte-viewable",
	"authors": ["dysfunc"],
	"homepage": "https://github.com/svelte-plugins/svelte-viewable",
	"downloads": 30,
	"updated": "2024-02-12T18:57:19.225Z",
	"tags": ["miscellaneous"],
	"github_stars": 38,
	"typescript": true,
	"version": "2.0.0",
	"svelte_range": "^4.2.8",
	"last_rune_check_version": "2.0.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@svelte-plugins/viewable",
				"version": "2.0.0",
				"size": 46881
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "[![Unit Tests](https://github.com/svelte-plugins/viewable/actions/workflows/unit.yml/badge.svg)](https://github.com/svelte-plugins/viewable/actions/workflows/unit.yml)\n[![Integration Tests](https://github.com/svelte-plugins/viewable/actions/workflows/integration.yml/badge.svg?branch=main)](https://github.com/svelte-plugins/viewable/actions/workflows/integration.yml)\n[![codecov](https://codecov.io/gh/svelte-plugins/viewable/branch/main/graph/badge.svg?token=M4JCW0TXOV)](https://codecov.io/gh/svelte-plugins/viewable)\n\n# @svelte-plugins/viewable\n\nA simple rule-based approach to tracking element viewability.\n\nThis provides the ability to define multiple viewability rules with callbacks for a single element. This comes in handy for instrumentation (specifically dwell time), ad tracking and beaconing, lazy-loading content or images, or doing fancy things at various trigger points.\n\nIf you're simply looking for a Svelte flavor of IntersectionObserver visit [svelte-intersection-observer](https://github.com/metonym/svelte-intersection-observer).\n\nTry it in the [Svelte REPL](https://svelte.dev/repl/47fe04909fd14ee5ad5d02390cc147b1).\n\n## Install\n\n```bash\n# npm\n> npm install @svelte-plugins/viewable\n\n# pnpm\n> pnpm install @svelte-plugins/viewable\n\n# yarn\n> yarn add @svelte-plugins/viewable\n```\n\n## Usage\n```svelte\n<script>\n  import { Viewable } from \"@svelte-plugins/viewable\";\n\n  const immediately = (definition) => {\n    console.log('element has crossed the viewport');\n  };\n\n  const dwell = ({ percentage, duration }) => {\n    console.log(`${percentage}% of the element was visible for at least ${duration} consecutive seconds.`);\n  };\n\n  const rules = {\n    // do something when the element enters the viewport\n    immediately: { duration: 0, percentage: 0, fn: immediately },\n    // do something when 50% of the element is visible for 4.5 seconds (consecutively)\n    dwell: { duration: 4.5, percentage: 50, fn: dwell },\n  };\n\n  let element;\n</script>\n\n<Viewable {rules} {element}>\n  <div bind:this={element}>Hello World</div>\n</Viewable>\n```\n\nTry the basic example in [Svelte REPL](https://svelte.dev/repl/c97c9abb9c944647a7dfed8f90d01da6?version=3.37.0).\n\n## API\n\n### Props\n| Prop name    | Description                                                       | Value                                                                                           |\n| :----------- | :---------------------------------------------------------------- | :---------------------------------------------------------------------------------------------- |\n| element      | Element to observe                                                | `HTMLElement`                                                                                   |\n| [rules](#rules)        | Viewability rules                                                 | `object` (default: `null`)                                                                      |\n| intervalRate | Rate to check measurement while intersecting (ms)                 | `number` (default: `200`)                                                                       |\n| gridSize     | Size of the obstruction grid                                      | `number` (default: `20`)                                                                        |\n| detectObstructions | If `true`, obstructions impacting the observed elements view will be a factor during measurement | `boolean` (default: `false`)                                                          |\n| root         | Containing element                                                | `null` or `HTMLElement` (default: `null`)                                                       |\n| rootMargin   | Margin offset of the containing element                           | `string` (default: `\"0px\"`)                                                                     |\n| intersecting | `true` if the observed element is intersecting                    | `boolean` (default: `false`)                                                                    |\n| observer     | IntersectionObserver instance                                     | [`IntersectionObserver`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver) |\n| entry        | IntersectionObserver Entry                                           | [`IntersectionObserverEntry`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserverEntry) |\n| debug        | If `true`, debug ouput will be logged to console                  | `boolean` (default: `false`)                                                                    |\n\n#### rules\n| Prop name    | Description                                                         | Value                               |\n| :----------- | :------------------------------------------------------------------ | :---------------------------------- |\n| duration     | Consecutive time (seconds) that the element must be in view         | `number` (default: `0`)             |\n| percentage   | Percentage of the element that must be viewable                     | `number` (default: `0`)             |\n| repeat       | If `true`, the rule will be applied indefinitely v once             | `function` (default: `null`)        |\n| fn           | Callback function to execute when rule has been met                 | `function` (default: `null`)        |\n\n\n```js\nconst rules = {\n  dwell: {\n    duration: 1,\n    percentage: 50,\n    fn: () => {\n      console.log('50% of the element was visible for at least 1 consecutive second.');\n    }\n  }\n}\n```\n\n### Debug props\n\nThe properties below can be used to assist with debugging any issues you might have (ex: `bind:duration`, `bind:percent`, etc.)\n\n| Prop name    | Description                                                       | Value                   |\n| :----------- | :---------------------------------------------------------------- | :---------------------- |\n| duration     | Viewable duration of the tracked element                          | `number` (default: `0`) |\n| percent      | Percentage of total viewable area (X+Y)                           | `number` (default: `0`) |\n| percentX     | Percentage of horizontal viewable area                            | `number` (default: `0`) |\n| percentY     | Percentage of vertical viewable area                              | `number` (default: `0`) |\n| entry        | IntersectionObserver Entry                                        | `object` (default: `null`) |\n| observer     | IntersectionObserver                                              | `object` (default: `null`) |\n\n### Events\n\n- **on:observe**: Fired when an intersection change occurs (type `IntersectionObserverEntry`)\n- **on:intersect**: Fired when an intersection change occurs and the element is intersecting (type `IntersectionObserverEntry`)\n- **on:complete**: Fired when all rules have been executed\n\n## Development\n\nRead the [Contributions](CONTRIBUTING.md) for instructions on how to setup your development environment.\n\n## Contributing\n\nContributions are always welcome and appreciated. Before contributing, please read the [Code of Conduct](COC.md).\n\n## Changelog\n\n[Changelog](CHANGELOG.md)\n\n## License\n\n[MIT](LICENSE)\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 47],
		[3596, 88],
		[3603, 68],
		[3610, 64],
		[3617, 63],
		[3624, 40],
		[3631, 55],
		[3638, 53],
		[3645, 39],
		[3652, 29],
		[3659, 58],
		[3666, 49],
		[3673, 52],
		[3680, 59],
		[3687, 73],
		[3694, 162],
		[3701, 56],
		[3708, 80],
		[3715, 65],
		[3722, 61],
		[3729, 72],
		[3736, 35],
		[3743, 45],
		[3750, 52],
		[3757, 43],
		[3764, 74],
		[3771, 48],
		[3778, 58],
		[3785, 78],
		[3792, 43],
		[3799, 29],
		[3806, 39],
		[3813, 45],
		[3820, 52],
		[3827, 42],
		[3834, 44],
		[3841, 61],
		[3848, 66],
		[3855, 90],
		[3862, 58],
		[3869, 26],
		[3876, 42],
		[3883, 51],
		[3890, 72],
		[3897, 68],
		[3904, 50],
		[3911, 58],
		[3918, 41],
		[3925, 40],
		[3932, 41],
		[3939, 44],
		[3946, 44],
		[3953, 37],
		[3960, 40],
		[3967, 39],
		[3974, 43],
		[3981, 115],
		[3988, 32],
		[3995, 31],
		[4002, 30],
		[4009, 40],
		[4016, 30],
		[4023, 29],
		[4030, 41],
		[4037, 52],
		[4044, 70],
		[4051, 70],
		[4058, 71],
		[4065, 41],
		[4072, 40],
		[4079, 19],
		[4086, 34],
		[4093, 26],
		[4100, 17],
		[4107, 6],
		[4114, 30],
		[4121, 25],
		[4128, 33]
	],
	"esm": true,
	"cjs": false
}
