{
	"name": "@didiercatz/sveo",
	"description": "Declare metadata on SvelteKit pages for SEO.",
	"repo_url": "",
	"authors": ["didiercatz"],
	"downloads": 5,
	"updated": "2021-10-22T21:16:01.588Z",
	"tags": ["seo"],
	"typescript": true,
	"version": "0.1.1",
	"svelte_range": "^3.42.6",
	"kit_range": "^1.0.0-next.188",
	"last_rune_check_version": "0.1.1",
	"github_stars": 0,
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@didiercatz/sveo",
				"version": "0.1.1",
				"size": 8648
			}
		],
		"dependencies": [],
		"circular": []
	},
	"legacy_svelte": true,
	"readme": "# SVEO\n\nDependency-free approach to declare metadata on SvelteKit pages â€” for example for SEO.\n\n- Enables you to pass data from page components to `__layout.svelte`\n- :white_check_mark: Works with MDSveX out of the box.\n- `Sveo` component for easy templating of meta tags, Twitter cards, OpenGraph, etc.\n\n## Getting started\n\n### Installing\n\n```bash\nnpm i -D @didiercatz/sveo\n```\n\n### Using\n\nUsing Sveo is quite simple. Create (or edit) a `__layout.svelte` inside your `routes` folder.\n\n```js\nimport { metadata } from '@didiercatz/sveo'\n\nconst seo = await metadata(page)\n```\n\n```svelte\n<script context=\"module\">\n  import { metadata } from '@didiercatz/sveo'\n\n  export const load = async ({ page }) => {\n    // The metadata from the page component\n    const { title, description } = await metadata(page)\n\n    return {\n      props: {\n        title,\n        description\n      }\n    }\n  }\n</script>\n```\n\nThen, in your markup, you can use the `title` property as you please.\n\n```svelte\n<!-- __layout[.reset].svelte -->\n\n<script>\n  export let title\n  export let description\n</script>\n\n<h1>{title}</h1>\n<p>{description}</p>\n```\n\nFinally, you can define metadata in your route's `<script module=\"context\">`:\n\n```svelte\n<script module=\"context\">\n  export const metadata = {\n    title: 'Hello world',\n    description: 'Have a wonderful day.'\n  }\n</script>\n```\n\n### Sveo component\n\nWhile using the `metadata` function is a nice way to grab data from your page components, `sveo` also comes with a more full-fledged component that automatically templates your SEO stuff like meta tags, page titles, Twitter cards, etc.\n\n```svelte\n<!-- __layout[.reset].svelte -->\n<script context=\"module\">\n  import { metadata } from '@didiercatz/sveo'\n\n  export const load = async ({ page }) => {\n    const seo = await metadata(page)\n\n    return {\n      props: { seo }\n    }\n  }\n</script>\n\n<script>\n  import Sveo from '@didiercatz/sveo'\n\n  export let seo = {\n    // You could even fill in some defaults here.\n  }\n</script>\n\n<Sveo {seo}/>\n```\n\n### Options\n\n| `options` | default      | Purpose                                     |\n| --------- | ------------ | ------------------------------------------- |\n| `routes`  | `src/routes` | The folder containing your SvelteKit routes |\n\n## License\n\n[MIT](https://github.com/didier/sveo/blob/main/LICENSE)\n",
	"downloads_history": [
		[3589, 3],
		[3596, 1],
		[3603, 7],
		[3610, 2],
		[3617, 1],
		[3631, 1],
		[3638, 1],
		[3645, 6],
		[3652, 1],
		[3659, 1],
		[3666, 8],
		[3673, 1],
		[3687, 1],
		[3708, 2],
		[3715, 2],
		[3729, 1],
		[3736, 2],
		[3764, 2],
		[3771, 7],
		[3778, 8],
		[3785, 2],
		[3799, 5],
		[3806, 5],
		[3813, 1],
		[3834, 1],
		[3841, 1],
		[3855, 30],
		[3862, 15],
		[3876, 6],
		[3883, 1],
		[3890, 5],
		[3904, 6],
		[3911, 7],
		[3932, 1],
		[3939, 2],
		[3946, 1],
		[3953, 1],
		[3960, 2],
		[3974, 6],
		[3988, 1],
		[4002, 6],
		[4016, 4],
		[4023, 9],
		[4030, 2],
		[4037, 6],
		[4044, 4],
		[4051, 2],
		[4058, 1],
		[4072, 6],
		[4086, 7],
		[4093, 50],
		[4100, 6],
		[4107, 2],
		[4114, 5],
		[4121, 7],
		[4128, 3]
	],
	"esm": true,
	"cjs": false
}
