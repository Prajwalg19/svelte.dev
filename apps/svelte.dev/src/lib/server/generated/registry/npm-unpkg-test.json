{
	"name": "npm-unpkg-test",
	"description": "Generate dynamic forms with custom field types and validation.",
	"repo_url": "https://github.com/arabdevelop/svelte-formly",
	"authors": ["arabedevelop"],
	"homepage": "https://github.com/arabdevelop/svelte-formly#readme",
	"downloads": 11,
	"updated": "2019-12-03T20:47:23.277Z",
	"tags": ["ui"],
	"github_stars": 256,
	"typescript": false,
	"version": "0.0.2",
	"svelte_range": "^3.4.4",
	"last_rune_check_version": "0.0.2",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "npm-unpkg-test",
				"version": "0.0.2",
				"size": 239984
			},
			{
				"name": "clsx",
				"version": "1.2.1",
				"size": 5671
			},
			{
				"name": "lodash.isobject",
				"version": "3.0.2"
			},
			{
				"name": "lodash.tonumber",
				"version": "4.0.3"
			}
		],
		"dependencies": [
			[0, 1],
			[0, 2],
			[0, 3]
		],
		"circular": []
	},
	"readme": "<p align=\"center\">\n  <img width=\"100%\" height=\"300\" src=\"./logo.png\" alt=\"Svelte Formly\" />\n</p>\n\n# Svelte Formly\n\nby [@kamalkech](https://github.com/kamalkech)\n\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com) [![CircleCI](https://circleci.com/gh/beyonk-adventures/svelte-component-livereload-template.svg?style=shield)](https://circleci.com/gh/beyonk-adventures/svelte-component-livereload-template) [![svelte-v3](https://img.shields.io/badge/svelte-v3-blueviolet.svg)](https://svelte.dev)\n\n## Features\n\n- ‚ö°Ô∏è Generate dynamic forms for sveltejs / Sapper js.\n- üòç Easy to extend with custom field type, custom validation.\n\n## Installation\n\nnpm i svelte-formly\n\n## Usage\n\n```javascript\n<script>\n  import { get } from \"svelte/store\";\n  import { valuesForm, Field } from \"svelte-formly\";\n\n  const fields = [\n    {\n      type: \"color\",\n      name: \"color\",\n      id: \"color\",\n      label: \"Color Form\"\n    },\n    {\n      type: \"text\",\n      name: \"firstname\",\n      value: \"\",\n      id: \"firstname\",\n      class: [\"form-control\"],\n      placeholder: \"Tap your first name\",\n      validation: [\"required\", \"min:6\"],\n      messages: {\n        required: \"Firstname field is required!\",\n        min: \"First name field must have more that 6 caracters!\"\n      }\n    },\n    {\n      prefix: {\n        class: [\"custom-form-group\"]\n      },\n      type: \"text\",\n      name: \"lastname\",\n      value: \"\",\n      id: \"lastname\",\n      placeholder: \"Tap your lastname\",\n      description: {\n        class: [\"custom-class-desc\"],\n        text: \"Custom text for description\"\n      }\n    },\n    {\n      type: \"email\",\n      name: \"email\",\n      value: \"\",\n      id: \"email\",\n      placeholder: \"Tap your email\",\n      validation: [\"required\", \"email\"]\n    },\n    {\n      type: \"radio\",\n      name: \"gender\",\n      radios: [\n        {\n          id: \"female\",\n          value: \"female\",\n          title: \"Female\"\n        },\n        {\n          id: \"male\",\n          value: \"male\",\n          title: \"Male\"\n        }\n      ]\n    },\n    {\n      type: \"select\",\n      name: \"city\",\n      id: \"city\",\n      label: \"City\",\n      validation: [\"required\"],\n      options: [\n        {\n          value: 1,\n          title: \"Agadir\"\n        },\n        {\n          value: 2,\n          title: \"Casablanca\"\n        }\n      ]\n    }\n  ];\n\n  let message = \"\";\n  let values = {};\n  let color = \"#ff3e00\";\n\n  function onSubmit() {\n    const data = get(valuesForm);\n    if (data.isValidForm) {\n      values = data.values;\n      color = values.color ? values.color : color;\n      message = \"Congratulation! now your form is valid\";\n    } else {\n      message = \"Your form is not valid!\";\n    }\n  }\n</script>\n```\n\n## For Sapper\n\n```javascript\n<script>\n  import { onMount } from \"svelte\";\n  import { get } from \"svelte/store\";\n\n  let Field;\n  let valuesForm;\n\n  onMount(async () => {\n    const module = await import(\"svelte-formly\");\n    Field = module.Field;\n    valuesForm = module.valuesForm;\n  });\n\n  const fields = [\n    {\n      type: \"text\",\n      name: \"username\",\n      id: \"username\",\n      validation: [\"required\"],\n      messages: {\n        required: \"Username is required!\"\n      }\n    },\n    {\n      type: \"email\",\n      name: \"email\",\n      id: \"email\",\n      validation: [\"required\", \"email\"],\n      messages: {\n        required: \"E-mail is required!\"\n      }\n    }\n  ];\n\n  function onSubmit() {\n    const data = get(valuesForm);\n    if (data.isValidForm) {\n      const values = data.values;\n    }\n  }\n</script>\n```\n\n```css\n<style>\n  * {\n    color: var(--theme-color);\n  }\n  .custom-form :global(.form-group) {\n    padding: 10px;\n    border: solid 1px var(--theme-color);\n    margin-bottom: 10px;\n  }\n  .custom-form :global(.custom-form-group) {\n    padding: 10px;\n    background: var(--theme-color);\n    color: white;\n    margin-bottom: 10px;\n  }\n  .custom-form :global(.class-description) {\n    color: var(--theme-color);\n  }\n</style>\n```\n\n```html\n<h1 style=\"--theme-color: {color}\">Svelte Formly</h1>\n<h3>{message}</h3>\n<form\n  on:submit|preventDefault=\"{onSubmit}\"\n  class=\"custom-form\"\n  style=\"--theme-color: {color}\"\n>\n  <Field {fields} />\n  <button class=\"btn btn-primary\" type=\"submit\">Submit</button>\n</form>\n```\n\n<hr>\n\n### Params\n\nInputs : text, password, email, number, tel\n\n```javascript\n<script>\n  fields = [\n    {\n      type: \"text\", // or password, email, number, tel, required\n      name: \"namefield\", // required\n      id: \"idfield\", // required\n      class: \"\", // optional\n      value: \"\", // optional\n      label: \"\", // optional\n      placeholder: \"\", // optional\n      min: null, // optional\n      max: null, // optional\n      disabled: false, // optional\n      validation: [] // optional\n    }\n  ]\n</script>\n```\n\nTextarea\n\n```javascript\n<script>\n  fields = [\n    {\n      type: \"textarea\", // required\n      name: \"namefield\", // required\n      id: \"idfield\", // required\n      class: \"\", // optional\n      value: \"\", // optional\n      label: \"\", // optional\n      disabled: false, // optional\n      rows: null, // optional\n      cols: null, // optional\n      validation: [] // optional\n    }\n  ]\n</script>\n```\n\nSelect\n\n```javascript\n<script>\n  fields = [\n    {\n      type: \"select\", // required\n      name: \"namefield\", // required\n      id: \"idfield\", // required\n      class: \"\", // optional\n      label: \"\", // optional\n      disabled: false, // optional\n      options: [\n        {\n          value: 1,\n          title: 'option 1'\n        },\n        {\n          value: 2,\n          title: 'option 2'\n        }\n      ], // required\n      validation: [] // optional\n    }\n  ]\n</script>\n```\n\nRadio\n\n```javascript\n<script>\n  fields = [\n    {\n      type: \"radio\", // required\n      name: \"namefield\", // required\n      id: \"idfield\", // required\n      class: \"\", // optional\n      label: \"\", // optional\n      disabled: false, // optional\n      radios: [\n        {\n          id: 'radio1',\n          value: 1,\n          title: 'radio 1'\n        },\n        {\n          id: 'radio2',\n          value: 2,\n          title: 'radio 2'\n        }\n      ], // required\n      validation: [] // optional\n    }\n  ]\n</script>\n```\n\nColor\n\n```javascript\n<script>\n  fields = [\n    {\n      type: \"color\", // required\n      name: \"namefield\", // required\n      id: \"idfield\", // required\n      class: \"\", // optional\n      label: \"\", // optional\n      disabled: false, // optional\n      value: \"#ff3e00\" // optional\n    }\n  ]\n</script>\n```\n\nRange\n\n```javascript\n<script>\n  fields = [\n    {\n      type: \"range\", // required\n      name: \"namefield\", // required\n      id: \"idfield\", // required\n      class: \"\", // optional\n      label: \"\", // optional\n      min: 10, // required\n      max: 100, // required\n      step: 10 // required\n    }\n  ]\n</script>\n```\n\n<hr>\n\n### Validation\n\nList rules to validate form.\n\n```javascript\n<script>\n  const fields = [\n    {\n      ...,\n      validation: [\n        'required',\n        'min:number',\n        'max:number',\n        'between:number:number',\n        'equal:number',\n        'email',\n        'url'\n        fnc\n      ]\n    }\n  ];\n</script>\n```\n\nValidation with custom rule\n\n```javascript\n<script>\n  import { get } from \"svelte/store\";\n  import { Field, valuesForm } from \"svelte-formly\";\n\n  const fields = [\n    {\n      type: \"text\",\n      name: \"firstname\",\n      id: \"firstname\",\n      validation: [\"required\"]\n    },\n    {\n      type: \"text\",\n      name: \"lastname\",\n      id: \"lastname\",\n      validation: [\"required\", notEqual, customRule2],\n      messages: {\n        notEqual: \"Last name not equal to First name\", // Custom message error, property name must equal to function name.\n        customRule2: 'foo bar'\n      }\n    }\n  ];\n\n  // Custom rule to force field\n  function notEqual() {\n    const values = get(valuesForm).values;\n    if (values.firstname === values.lastname) {\n      return false;\n    }\n    return true;\n  }\n\n  function customRule2() {\n    // ...others conditions.\n  }\n</script>\n```\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 1],
		[3596, 3],
		[3603, 5],
		[3617, 5],
		[3624, 4],
		[3631, 2],
		[3638, 1],
		[3645, 13],
		[3652, 2],
		[3659, 2],
		[3666, 5],
		[3673, 9],
		[3680, 4],
		[3701, 2],
		[3708, 6],
		[3715, 2],
		[3722, 7],
		[3729, 1],
		[3736, 4],
		[3743, 4],
		[3750, 5],
		[3757, 4],
		[3764, 4],
		[3771, 6],
		[3778, 11],
		[3785, 2],
		[3792, 5],
		[3799, 5],
		[3806, 4],
		[3813, 49],
		[3820, 2],
		[3827, 2],
		[3834, 4],
		[3841, 3],
		[3848, 4],
		[3855, 6],
		[3862, 15],
		[3869, 4],
		[3876, 8],
		[3883, 2],
		[3890, 12],
		[3897, 4],
		[3904, 3],
		[3918, 3],
		[3925, 2],
		[3932, 4],
		[3939, 3],
		[3946, 2],
		[3953, 4],
		[3960, 5],
		[3967, 5],
		[3974, 1],
		[3981, 2],
		[3988, 1],
		[3995, 10],
		[4002, 3],
		[4009, 2],
		[4016, 4],
		[4023, 13],
		[4030, 19],
		[4037, 7],
		[4044, 8],
		[4051, 4],
		[4058, 1],
		[4065, 5],
		[4072, 1],
		[4079, 3],
		[4086, 5],
		[4093, 9],
		[4100, 4],
		[4107, 3],
		[4114, 11],
		[4121, 9],
		[4128, 4]
	]
}
