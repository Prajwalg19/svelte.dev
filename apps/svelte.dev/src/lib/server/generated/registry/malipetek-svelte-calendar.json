{
	"name": "@malipetek/svelte-calendar",
	"description": "Create date pickers for Svelte applications.",
	"repo_url": "https://github.com/malipetek/svelte-calendar",
	"authors": ["malipetek-personal"],
	"homepage": "https://github.com/malipetek/svelte-calendar#readme",
	"downloads": 6,
	"updated": "2020-07-19T20:28:38.551Z",
	"tags": ["ui"],
	"github_stars": 5,
	"typescript": false,
	"version": "1.0.1",
	"svelte_range": "^3.6.1",
	"last_rune_check_version": "1.0.1",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@malipetek/svelte-calendar",
				"version": "1.0.1",
				"size": 506021
			},
			{
				"name": "timeUtils",
				"version": "2.0.0",
				"size": 59633
			}
		],
		"dependencies": [[0, 1]],
		"circular": []
	},
	"readme": "# svelte-calendar\n\nA small date picker built with Svelte 3. Demo available here: [demo page].\n\n## Basic usage\n\n```html\n<Datepicker start={minDate} end={maxDate} />\n```\n\n## Props\n\nprop name            | type                   | default\n---------------------|------------------------|-------------------------\n`start`              | `date`                 | `new Date(1987, 9, 29)`\n`end`                | `date`                 | `new Date(2020, 9, 29)`\n`selected`           | `date`                 | `today`\n`formattedSelected`  | `string`               | `today`\n`dateChosen`         | `boolean`              | `false`\n`selectableCallback` | `function`             | `null`\n`format`             | `string` \\| `function` | `'#{m}/#{d}/#{Y}'`\n`daysOfWeek`         | `array`                | En-US Locale (see below)\n`monthsOfYear`       | `array`                | En-US Locale (see below)\n\n### `start` and `end`\nThese properties set the minimum and maximum dates that will be rendered by this calendar.  It is **highly** recommended that you do not leave these as their defaults and supply values which suit your application's needs.\n\n### `selected` and `formattedSelected`\nBind to these properties to observe the selected date as either a date or a string.  Use `selected` to set the day which is selected by default.\n\n### `dateChosen`\nBind to this property to observe whether a user has selected a day.\n\n### `selectableCallback`\nProvide a function which accepts a date and returns a boolean determining whether a day between `start` and `end` is selectable.  For example, use this to prevent weekend days from being selected.\n\n### `format`\nDate formatting uses [`timeUtils`] formatting (MM/DD/YYYY by default).  If you would like to use a different formatting library, supply a function which accepts a date and returns a string. \n\n### `daysOfWeek` and `monthsOfYear`\nThese two props are used to internationalize the calendar.  The default values are: \n\n```javascript\nexport let daysOfWeek = [\n  ['Sunday', 'Sun'],\n  ['Monday', 'Mon'],\n  ['Tuesday', 'Tue'],\n  ['Wednesday', 'Wed'],\n  ['Thursday', 'Thu'],\n  ['Friday', 'Fri'],\n  ['Saturday', 'Sat']\n];\nexport let monthsOfYear = [\n  ['January', 'Jan'],\n  ['February', 'Feb'],\n  ['March', 'Mar'],\n  ['April', 'Apr'],\n  ['May', 'May'],\n  ['June', 'Jun'],\n  ['July', 'Jul'],\n  ['August', 'Aug'],\n  ['September', 'Sep'],\n  ['October', 'Oct'],\n  ['November', 'Nov'],\n  ['December', 'Dec']\n];\n```\n\n### Kitchen Sink Example:\n```html\n<script>\n  const daysOfWeek = [\n    [ 'Domingo', 'Dom' ],\n    [ 'Lunes', 'Lun' ],\n    [ 'Martes', 'Mar' ],\n    [ 'Miércoles', 'Mié' ],\n    [ 'Jueves', 'Jue' ],\n    [ 'Viernes', 'Vie' ],\n    [ 'Sábado', 'Sáb' ],\n  ];\n  const monthsOfYear = [\n    [ 'Enero', 'Ene' ],\n    [ 'Febrero', 'Feb' ],\n    [ 'Marzo', 'Mar' ],\n    [ 'Abril', 'Abr' ],\n    [ 'Mayo', 'May' ],\n    [ 'Junio', 'Jun' ],\n    [ 'Julio', 'Jul' ],\n    [ 'Agosto', 'Ago' ],\n    [ 'Septiembre', 'Sep' ],\n    [ 'Octubre', 'Oct' ],\n    [ 'Noviembre', 'Nov' ],\n    [ 'Diciembre', 'Dic' ],\n  ];\n</script>\n\n<Datepicker\n  bind:formattedSelected={selectedDateFormatted}\n  bind:selected={selectedDate}\n  bind:dateChosen={userHasChosenDate}\n  start={threeDaysInPast}\n  end={inThirtyDays}\n  selectableCallback={filterWeekends}\n  daysOfWeek={daysOfWeek}\n  monthsOfYear={monthsOfYear}\n  format={date => dayjs(date).format('DD/MM/YYYY')}\n/>\n```\n\n## Developing/Modifying Svelte-Calendar Guide\n\n*Note that you will need to have [Node.js] installed.*\n\nInstall the dependencies...\n\n```bash\ncd svelte-calendar\nnpm install\n```\n\n...then start [Rollup]:\n\n```bash\nnpm run dev\n```\n\nNavigate to [localhost:5000]. You should see your app running. Edit a component file in `src`, save it, and your browser will reload the page so you can see your changes automatically.\n\n[demo page]: https://6edesign.github.io/svelte-calendar/\n[`timeUtils`]: https://github.com/6eDesign/timeUtils\n[`Date`]: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\n[Node.js]: https://nodejs.org\n[Rollup]: https://rollupjs.org\n[localhost:5000]: http://localhost:5000\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 2],
		[3596, 3],
		[3603, 3],
		[3617, 7],
		[3631, 1],
		[3638, 1],
		[3645, 1],
		[3659, 2],
		[3666, 3],
		[3694, 1],
		[3708, 1],
		[3715, 1],
		[3722, 1],
		[3729, 2],
		[3736, 2],
		[3743, 1],
		[3764, 3],
		[3778, 1],
		[3785, 1],
		[3792, 1],
		[3799, 2],
		[3806, 1],
		[3820, 1],
		[3834, 1],
		[3841, 1],
		[3862, 14],
		[3869, 1],
		[3883, 2],
		[3890, 3],
		[3904, 3],
		[3918, 1],
		[3932, 1],
		[3939, 1],
		[3967, 1],
		[3981, 1],
		[3995, 5],
		[4002, 1],
		[4016, 3],
		[4023, 2],
		[4030, 6],
		[4037, 2],
		[4044, 8],
		[4051, 2],
		[4058, 1],
		[4072, 2],
		[4093, 15],
		[4114, 6],
		[4121, 4],
		[4128, 3]
	],
	"esm": false,
	"cjs": true
}
