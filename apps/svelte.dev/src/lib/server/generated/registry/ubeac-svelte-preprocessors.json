{
	"name": "@ubeac/svelte-preprocessors",
	"description": "Provide useful preprocessors for Svelte projects.",
	"repo_url": "https://github.com/ubeac/svelte-preprocessors",
	"authors": ["ubeac-owner"],
	"homepage": "https://github.com/ubeac/svelte-preprocessors",
	"downloads": 7,
	"updated": "2023-01-15T21:07:09.620Z",
	"tags": ["tooling"],
	"github_stars": 0,
	"typescript": true,
	"version": "0.0.3",
	"svelte_range": "^3.55.0",
	"last_rune_check_version": "0.0.3",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@ubeac/svelte-preprocessors",
				"version": "0.0.3",
				"size": 13816
			},
			{
				"name": "magic-string",
				"version": "0.27.0",
				"size": 404809
			},
			{
				"name": "@jridgewell/sourcemap-codec",
				"version": "1.5.0",
				"size": 112815
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2]
		],
		"circular": []
	},
	"readme": "# Svelte Preprocessors \nList of some useful preprocessors for svelte\n\n## Usage\nyou can install this package as devDependency of your svelte based project.\n\n```bash\nnpm install -D @ubeac/svelte-preprocessors\n```\n\nthen edit your svelte.config.js file:\n```js\nimport {ifProcessor, previewProcessor} from '@ubeac/svelte-preprocessors'\n\nexport default {\n    preprocessors: [\n        ifProcessor(), // to enable if preprocessor\n        previewProcessor() // to enable Preview preprocessor\n    ],\n    ...other configs\n    kit: {\n        ...sveltekit configs\n    }\n}\n```\n\n\n## if Processor\nif processor transforms `if={...}` props to `{#if ...}` in svelte templates for all Components and DOM Elements.\n\n\nafter installation and enabling if Processor you should be able to use if prop in your .sevlte files.\n\n```svelte\n<Button if={2 + 2 === 4}>\n    My Button\n</Button>\n\n<p if={!!user}>\n    name: {user.name}\n    email: {user.email}\n</p>\n```\n\nafter build process above code will be changed to \n```svelte\n{#if 2 + 2 === 4}\n<Button>\n    My Button\n</Button>\n{/if}\n\n{#if !!user}\n<p>\n    name: {user.name}\n    email: {user.email}\n</p>\n{/if}\n```\n\n## Example\n\n```svelte\n<div class=\"actions\">\n    <button if={user.hasAccess('add-item')}>\n        Add\n    </button>\n    <button if={user.hasAccess('edit-item')}>\n        Edit\n    </button>\n    <button if={user.isAdmin()}>\n        Remove\n    </button>\n</div>\n```\n\nafter if processor:\n```svelte\n<div class=\"actions\">\n    {#if user.hasAccess('add-item')}\n    <button>\n        Add\n    </button>\n    {/if}\n    {#if user.hasAccess('edit-item')}\n    <button>\n        Edit\n    </button>\n    {/if}\n    {#if user.isAdmin()}\n    <button>\n        Remove\n    </button>\n    {/if}\n</div>\n```\n\n### typescript support:\nyou can add if as an attribute for all HTML Elements by adding below code in `*.d.ts` file in your project.\n\n```ts\ndeclare\tnamespace svelte.JSX {\n    interface HTMLAttributes<T> {\n        if?: boolean\n    }\n}\n```\n\nalso you need to ignore your editor's Intellisense errors for `if={...}` prop in Components. everything works in dev-mode and after build. only editor doesn't know that you use ifProcessor.\n\nAlternatively, you can add typing for if prop to your component.\n\n```svelte\n\n<script lang=\"ts\">\n\ntype $$Props = {\n    color: string;\n    size: string;\n    // other props\n    if: boolean\n}\n\nexport let color: string = 'primary'\nexport let size: string = 'md'\n// other props\n</script>\n\n<button ...>\n    <slot/>\n</button>\n```\n\n### limitations:\none problem is that you cannot use ifProcessor with `slot` prop in same element:\n\n```svelte\n<Card>\n    <div if={hasHeader} slot=\"header\">\n        Header\n    </div>\n    Body\n</Card>\n```\n\n```svelte\n<Card>\n    {#if hasHeader}\n        <div slot=\"header\"> <!-- cannot have slot=\"**\" inside if conditions -->\n            Header\n        </div>\n    {/if}\n    Body\n</Card>\n```\n\n## Preview Processor\nusing this processor you can extract source code of svelte components as string.\n\nto get started you should have a Preview component which have some props: \n\nPreview.svelte\n```svelte\n<script lang=\"ts\">\n    export let markup: string | undefined = undefined;\n    export let script: string | undefined = undefined;\n    export let style: string | undefined = undefined;\n    export let isTypescript: boolean | undefined = undefined;\n\n    $: finalScript = isTypescript ? script.replace('<script>', '<script lang=\"ts\">')\n</script>\n\n{finalScript}\n<br/>\n{markup}\n<br />\n{style}\n```\n[here](https://github.com/ubeac/svelte/blob/3c8fbe0196815b78ca5bce98494cfc5a58ea5de7/src/docs-components/Preview/Preview.svelte) is an example of Preview.svelte component which uses this preprocessor.   \n\nthis processor is useful when you want to show source code of examples alongside live demo. [Example](https://svelte.ubeac.io/docs/components/buttons)",
	"legacy_svelte": true,
	"downloads_history": [
		[3596, 8],
		[3610, 1],
		[3624, 3],
		[3631, 1],
		[3645, 9],
		[3659, 3],
		[3666, 3],
		[3673, 6],
		[3701, 2],
		[3722, 1],
		[3736, 3],
		[3750, 2],
		[3764, 1],
		[3771, 7],
		[3778, 3],
		[3792, 3],
		[3799, 1],
		[3806, 2],
		[3813, 1],
		[3820, 8],
		[3834, 1],
		[3841, 15],
		[3848, 1],
		[3855, 3],
		[3862, 6],
		[3876, 2],
		[3883, 2],
		[3890, 2],
		[3897, 12],
		[3904, 3],
		[3911, 6],
		[3918, 11],
		[3925, 25],
		[3932, 18],
		[3939, 13],
		[3946, 11],
		[3953, 8],
		[3960, 18],
		[3967, 3],
		[3974, 7],
		[3981, 4],
		[3988, 3],
		[3995, 2],
		[4002, 3],
		[4009, 6],
		[4016, 6],
		[4023, 3],
		[4030, 4],
		[4037, 9],
		[4044, 11],
		[4051, 4],
		[4058, 2],
		[4065, 2],
		[4079, 6],
		[4093, 5],
		[4100, 6],
		[4107, 4],
		[4114, 7],
		[4121, 8],
		[4128, 7],
		[4135, 4]
	],
	"esm": true,
	"cjs": false
}
