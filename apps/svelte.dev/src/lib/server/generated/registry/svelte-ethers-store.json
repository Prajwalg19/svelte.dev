{
	"name": "svelte-ethers-store",
	"description": "Use Ethers.js library as Svelte stores.",
	"repo_url": "https://gitlab.com/clb1/svelte-ethers-store",
	"authors": ["clbrge"],
	"homepage": "https://gitlab.com/clb1/svelte-ethers-store#readme",
	"downloads": 113,
	"updated": "2023-04-10T15:04:33.292Z",
	"tags": ["integration"],
	"typescript": true,
	"version": "2.6.1",
	"svelte_range": "^3.0.0",
	"last_rune_check_version": "2.6.1",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-ethers-store",
				"version": "2.6.1",
				"size": 1323981
			},
			{
				"name": "@metamask/jazzicon",
				"version": "2.0.0",
				"size": 5867
			},
			{
				"name": "color",
				"version": "0.11.4"
			},
			{
				"name": "clone",
				"version": "1.0.4",
				"size": 11132
			},
			{
				"name": "color-string",
				"version": "0.3.0"
			},
			{
				"name": "color-name",
				"version": "1.1.4",
				"size": 6693
			},
			{
				"name": "color-convert",
				"version": "1.9.3",
				"size": 26964
			},
			{
				"name": "color-name",
				"version": "1.1.3"
			},
			{
				"name": "mersenne-twister",
				"version": "1.1.0"
			},
			{
				"name": "ethereum-blockies-base64",
				"version": "1.0.2",
				"size": 16593
			},
			{
				"name": "pnglib",
				"version": "0.0.1"
			},
			{
				"name": "ethers",
				"version": "5.8.0",
				"size": 10752839
			},
			{
				"name": "@ethersproject/abi",
				"version": "5.8.0",
				"size": 497890
			},
			{
				"name": "@ethersproject/address",
				"version": "5.8.0",
				"size": 33051
			},
			{
				"name": "@ethersproject/bignumber",
				"version": "5.8.0",
				"size": 143038
			},
			{
				"name": "@ethersproject/bytes",
				"version": "5.8.0",
				"size": 80915
			},
			{
				"name": "@ethersproject/logger",
				"version": "5.8.0",
				"size": 69490
			},
			{
				"name": "bn.js",
				"version": "5.2.2",
				"size": 99205
			},
			{
				"name": "@ethersproject/keccak256",
				"version": "5.8.0",
				"size": 6091
			},
			{
				"name": "js-sha3",
				"version": "0.8.0",
				"size": 52897
			},
			{
				"name": "@ethersproject/rlp",
				"version": "5.8.0",
				"size": 29552
			},
			{
				"name": "@ethersproject/constants",
				"version": "5.8.0",
				"size": 18673
			},
			{
				"name": "@ethersproject/hash",
				"version": "5.8.0",
				"size": 257107
			},
			{
				"name": "@ethersproject/abstract-signer",
				"version": "5.8.0",
				"size": 82197
			},
			{
				"name": "@ethersproject/abstract-provider",
				"version": "5.8.0",
				"size": 60950
			},
			{
				"name": "@ethersproject/networks",
				"version": "5.8.0",
				"size": 50411
			},
			{
				"name": "@ethersproject/properties",
				"version": "5.8.0",
				"size": 30975
			},
			{
				"name": "@ethersproject/transactions",
				"version": "5.8.0",
				"size": 89645
			},
			{
				"name": "@ethersproject/signing-key",
				"version": "5.8.0",
				"size": 248472
			},
			{
				"name": "elliptic",
				"version": "6.6.1",
				"size": 120131
			},
			{
				"name": "bn.js",
				"version": "4.12.2",
				"size": 99927
			},
			{
				"name": "brorand",
				"version": "1.1.0"
			},
			{
				"name": "hash.js",
				"version": "1.1.7",
				"size": 41697
			},
			{
				"name": "inherits",
				"version": "2.0.4",
				"size": 3958
			},
			{
				"name": "minimalistic-assert",
				"version": "1.0.1",
				"size": 1547
			},
			{
				"name": "hmac-drbg",
				"version": "1.0.1"
			},
			{
				"name": "minimalistic-crypto-utils",
				"version": "1.0.1"
			},
			{
				"name": "@ethersproject/web",
				"version": "5.8.0",
				"size": 127962
			},
			{
				"name": "@ethersproject/base64",
				"version": "5.8.0",
				"size": 11278
			},
			{
				"name": "@ethersproject/strings",
				"version": "5.8.0",
				"size": 118518
			},
			{
				"name": "@ethersproject/sha2",
				"version": "5.8.0",
				"size": 21693
			},
			{
				"name": "@ethersproject/basex",
				"version": "5.8.0",
				"size": 30130
			},
			{
				"name": "@ethersproject/units",
				"version": "5.8.0",
				"size": 20221
			},
			{
				"name": "@ethersproject/hdnode",
				"version": "5.8.0",
				"size": 80706
			},
			{
				"name": "@ethersproject/pbkdf2",
				"version": "5.8.0",
				"size": 17350
			},
			{
				"name": "@ethersproject/wordlists",
				"version": "5.8.0",
				"size": 390237
			},
			{
				"name": "@ethersproject/random",
				"version": "5.8.0",
				"size": 17268
			},
			{
				"name": "@ethersproject/wallet",
				"version": "5.8.0",
				"size": 55226
			},
			{
				"name": "@ethersproject/json-wallets",
				"version": "5.8.0",
				"size": 124998
			},
			{
				"name": "aes-js",
				"version": "3.0.0"
			},
			{
				"name": "scrypt-js",
				"version": "3.0.1",
				"size": 225638
			},
			{
				"name": "@ethersproject/solidity",
				"version": "5.8.0",
				"size": 23237
			},
			{
				"name": "@ethersproject/contracts",
				"version": "5.8.0",
				"size": 249990
			},
			{
				"name": "@ethersproject/providers",
				"version": "5.8.0",
				"size": 1224585
			},
			{
				"name": "bech32",
				"version": "1.1.4",
				"size": 9984
			},
			{
				"name": "ws",
				"version": "8.18.0",
				"size": 146647
			},
			{
				"name": "svelte",
				"version": "3.59.2",
				"size": 10624206
			},
			{
				"name": "svelte-proxied-store",
				"version": "2.0.4",
				"size": 30004
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[2, 3],
			[2, 4],
			[4, 5],
			[2, 6],
			[6, 7],
			[1, 8],
			[0, 9],
			[9, 10],
			[0, 11],
			[11, 12],
			[12, 13],
			[13, 14],
			[14, 15],
			[15, 16],
			[14, 16],
			[14, 17],
			[13, 15],
			[13, 18],
			[18, 15],
			[18, 19],
			[13, 16],
			[13, 20],
			[20, 15],
			[20, 16],
			[12, 14],
			[12, 15],
			[12, 21],
			[21, 14],
			[12, 22],
			[22, 23],
			[23, 24],
			[24, 14],
			[24, 15],
			[24, 16],
			[24, 25],
			[25, 16],
			[24, 26],
			[26, 16],
			[24, 27],
			[27, 13],
			[27, 14],
			[27, 15],
			[27, 21],
			[27, 18],
			[27, 16],
			[27, 26],
			[27, 20],
			[27, 28],
			[28, 15],
			[28, 16],
			[28, 26],
			[28, 17],
			[28, 29],
			[29, 30],
			[29, 31],
			[29, 32],
			[32, 33],
			[32, 34],
			[29, 35],
			[35, 32],
			[35, 34],
			[35, 36],
			[29, 33],
			[29, 34],
			[29, 36],
			[28, 32],
			[24, 37],
			[37, 38],
			[38, 15],
			[37, 15],
			[37, 16],
			[37, 26],
			[37, 39],
			[39, 15],
			[39, 21],
			[39, 16],
			[23, 14],
			[23, 15],
			[23, 16],
			[23, 26],
			[22, 13],
			[22, 38],
			[22, 14],
			[22, 15],
			[22, 18],
			[22, 16],
			[22, 26],
			[22, 39],
			[12, 18],
			[12, 16],
			[12, 26],
			[12, 39],
			[11, 20],
			[11, 37],
			[11, 22],
			[11, 40],
			[40, 15],
			[40, 16],
			[40, 32],
			[11, 41],
			[41, 15],
			[41, 26],
			[11, 15],
			[11, 42],
			[42, 14],
			[42, 21],
			[42, 16],
			[11, 38],
			[11, 43],
			[43, 23],
			[43, 41],
			[43, 14],
			[43, 15],
			[43, 16],
			[43, 44],
			[44, 15],
			[44, 40],
			[43, 26],
			[43, 40],
			[43, 28],
			[43, 39],
			[43, 27],
			[43, 45],
			[45, 15],
			[45, 22],
			[45, 16],
			[45, 26],
			[45, 39],
			[11, 16],
			[11, 44],
			[11, 46],
			[46, 15],
			[46, 16],
			[11, 47],
			[47, 24],
			[47, 23],
			[47, 13],
			[47, 14],
			[47, 15],
			[47, 22],
			[47, 43],
			[47, 48],
			[48, 23],
			[48, 13],
			[48, 15],
			[48, 43],
			[48, 18],
			[48, 16],
			[48, 44],
			[48, 26],
			[48, 46],
			[48, 39],
			[48, 27],
			[48, 49],
			[48, 50],
			[47, 18],
			[47, 16],
			[47, 26],
			[47, 46],
			[47, 28],
			[47, 27],
			[47, 45],
			[11, 13],
			[11, 39],
			[11, 25],
			[11, 51],
			[51, 14],
			[51, 15],
			[51, 18],
			[51, 16],
			[51, 40],
			[51, 39],
			[11, 14],
			[11, 21],
			[11, 52],
			[52, 12],
			[52, 24],
			[52, 23],
			[52, 13],
			[52, 14],
			[52, 15],
			[52, 21],
			[52, 16],
			[52, 26],
			[52, 27],
			[11, 18],
			[11, 53],
			[53, 24],
			[53, 23],
			[53, 13],
			[53, 38],
			[53, 41],
			[53, 14],
			[53, 15],
			[53, 21],
			[53, 22],
			[53, 16],
			[53, 25],
			[53, 26],
			[53, 46],
			[53, 20],
			[53, 40],
			[53, 39],
			[53, 27],
			[53, 37],
			[53, 54],
			[53, 55],
			[11, 45],
			[11, 26],
			[11, 28],
			[11, 48],
			[11, 27],
			[11, 23],
			[11, 24],
			[0, 56],
			[0, 57]
		],
		"circular": []
	},
	"readme": "# svelte-ethers-store\n\nUse the [ethers.js library](https://docs.ethers.io/v5/) as a\ncollection of [readable Svelte stores](https://svelte.dev/tutorial/readable-stores)\nfor Svelte, Sapper or SvelteKit.\n\nThis version only support ethers.js version 5. If you already use ethers.js version 6, please\nuse [ethers-svelte](https://www.npmjs.com/package/ethers-svelte).\n\nIf you prefer to use the [web3.js library](https://web3js.readthedocs.io/) to interact\nwith EVM, you may be interested by the sister package [svelte-web3](https://www.npmjs.com/package/svelte-web3).\n\n### Community\n\nFor additional help or discussion, join us [in our\nDiscord](https://discord.gg/7yXuwDwaHF).\n\n## Installation\n\nAdd the `svelte-ethers-store` package\n\n```bash\nnpm i svelte-ethers-store\n```\n\n## Basic usage (default stores connected to one chain)\n\n### Derived stores\n\nThis library creates a set of readable Svelte stores that are\nautomatically updated when a new connection happens, or when the chain\nor the selected account change. You can import them directly in any\nSvelte or JavaScript files :\n\n```js\nimport {\n  connected,\n  provider,\n  chainId,\n  chainData,\n  signer,\n  signerAddress,\n  contracts\n} from 'svelte-ethers-store'\n```\n\n- connected: store value is true if a connection has been set up.\n- provider: store value is an Ethers.js Provider instance when connected.\n- chainId: store value is the current chainId when connected.\n- chainData: store value is the current blokchain CAIP-2 data (when connected), see below.\n- signer: store value is an Ethers.js Signer instance when connected.\n- signerAddress: store value is a shortcut to get `$signer.getAddress()` when connected.\n- contract: store value is an Object for all ethers.Contract instances you need.\n\nFor these stores to be useful in your Svelte application, a connection\nto an EVM blockchain first need to established . The abstract helper\n`defaultEvmStores` can be used to initiate the connection and\nautomatically instanciate all stores.\n\n```js\nimport { defaultEvmStores } from 'svelte-ethers-store'\n```\n\n### Connection with the browser provider (eg wallets like Metamask)\n\nTo enable a connection with the current [EIP-1193\nprovider](https://eips.ethereum.org/EIPS/eip-1193#appendix-i-consumer-facing-api-documentation)\ninjected in the browser `window` context, simply call `setProvider` on\nthe library abstract helper with no argument:\n\n```js\ndefaultEvmStores.setProvider()\n```\n\nPlease note that `setProvider` can not be called at the top level of `<script>`\nfor Sapper or SvelteKit or without the browser context. Be also careful that you\ncannot use `setProvider` with no argument in SSR context.\n\n```js\nonMount(() => {\n  // add a test to return in SSR context\n  defaultEvmStores.setProvider()\n})\n```\n\nOut of these restrictions, your app should call `setProvider` depending on the\nUX behavior you want to achieve, the library itself doesn't try to enforce\narbitrary logic for you. You may want to use inside `onMount` when some\nconditions are met to connect automatically. Or you may prefer to call it later\nafter an event (like in the click handler of \"connect\" button).\n\n`svelte-ethers-store` will automatically update the stores when the network or\naccounts change and remove listeners at disconnection.\n\n:exclamation: previous version of `svelte-ethers-store` were using a special\nmethod `setBrowserProvider`. The former naming still works but will be\nremoved in later versions. Please update your code!\n\n### Connection with non injected EIP-1193 providers\n\nTo connect to non injected EIP-1193 providers like :\n\n- buidler.dev\n- ethers.js\n- eth-provider\n- WalletConnect\n- Web3Modal\n\nCall `setProvider` on the library abstract helper with the JavaScript provider\ninstance object of the library. For example with Web3Modal :\n\n```js\nconst web3Modal = new Web3Modal(<your config>)\nconst provider = await web3Modal.connect()\ndefaultEvmStores.setProvider(provider)\n```\n\n`svelte-ethers-store` will automatically update the stores when the network or\naccounts change and remove listeners at disconnection.\n\n### Connection with other Ethers.js providers (ws, http, ipc, ...)\n\nYou can instanciate many types of providers using Ethers.js, see the\nrelevant\n[documentation](https://docs.ethers.io/v5/api/providers/other/) and\nsimply pass them as argument to `defaultEvmStores.setProvider()` to inititate the stores:\n\n```js\ndefaultEvmStores.setProvider(new ethers.providers.InfuraProvider(<args>))\n// or\ndefaultEvmStores.setProvider(new ethers.providers.EtherscanProvider(<args>))\n// or\ndefaultEvmStores.setProvider(new ethers.providers.AlchemyProvider(<args>))\n// etc...\n```\n\nAs a shortcut, if you pass an URL string or a valid connection object, a\n[Ethers.js JsonRpcProvider](https://docs.ethers.io/v5/api/providers/jsonrpc-provider/)\nwill be automatically instantiated.\n\nFor provider that support the function `getSigner()`, a Signer Object will be automatically\nassociated with the `signer` store. You can also pass `addressOrIndex` as the second argument\nof `setProvider()` to select another account than the default when possible.\n\n```js\ndefaultEvmStores.setProvider(<Ethers provider>, <addressOrIndex>)\n```\n\nIf you don't need a signer, you might also call `setProvider` with the\nargument `addressOrIndex` as a `null` value and bypass any attempt to\ndetect an account.\n\n### Using the stores\n\nAfter a connection has been established, you may import the stores\nanywhere in your application. Most of the time, you should use the `$`\nprefix Svelte notation to access the stores values.\n\n```html\n<script>\n  import { connected, chainId, signerAddress } from 'svelte-ethers-store'\n</script>\n\n{#if !$connected}\n\n<p>My application is not yet connected</p>\n\n{:else}\n\n<p>Connected to chain (id {$chainId}) with account ($signerAddress)</p>\n\n{/if}\n```\n\n### Using the Ethers.js Providers and Signers API\n\nLikewise use the `$` prefix Svelte notation to access Provider or Signer\nread-only abstractions and use the whole Ethers.js API. (beware, in the Ethers\nlibrary documentation, Provider or Signer instances are always noted as `provider`\nand `signer`, without `$`, but in the context of `svelte-ethers-store`, this naming\nis used by the Svelte stores themselves encapsulating Provider or Signer instances).\n\n```js\n  import { connected, provider, signer } from 'svelte-ethers-store'\n\n  // ...\n\n  const { name, chainId } = await $provider.getNetwork()\n\n  const balance = await $signer.getBalance()\n\n  $signer.sendTransaction({<to>, <value>, <gasLimit>});\n\n```\n\nFor providers that don't support `getSigner`, the value `$signer` will be `null`.\n\n### Using the contracts store for reactive contract calls\n\nTo enjoy the same reactivity as using `$provider` and `$signer` but\nwith a contract instance, you first need to declare its address and\ninterface. To differenciate each `ethers.Contract` instance, you also\nneed to define a logical name. That's the function `attachContract`:\n\n```html\n<script>\n\n  import { defaultEvmStores } from 'svelte-ethers-store'\n\n  // ...\n\n  defaultEvmStores.attachContract('myContract',<address>, <abi>)\n</script>\n```\n\n`attachContract` only needs to be called once and can be called before\nconnection since `ethers.Contract` instances will only be created when\na connection becomes available. You may want to reattach new contract\ndefinition or abi for example when you the current network change. For\nthe old definition will be overwritten and instance updated in the\n`contracts` store, simply use the same logical name.\n\nAfter a contract as be declared, you can use its instance anywhere\nusing the `$` notation and the logical name :\n\n```html\n<script>\n  import { contracts } from 'svelte-ethers-store'\n\n  // ...\n</script>\n\n{#await $contracts.myContract.totalSupply()}\n\n<span>waiting...</span>\n\n{:then value}\n\n<span>result of contract call totalSupply on my contract : { value } </span>\n\n{/await}\n```\n\nBy default, `svelte-ethers-store` build contract instances using the signer if\navailable and if not the provider. You may want to force using the current provider\nby passing `false` as fourth argument.\n\n```html\ndefaultEvmStores.attachContract('myContract',\n<address>\n  , <abi>, <signerIfavailble>)</signerIfavailble></abi>\n</address>\n```\n\n### Reading stores outside of Svelte files\n\nThe `$` prefix Svelte notation to access store values is only\navailable inside Svelte files. To directly access the instantiated\nvalues in pure javascript library without subscribing to the store,\nyou can use a special getter on the library abstract helper:\n\n```js\n// this is not a Svelte file but a standard JavaScript file\nimport { defaultEvmStores } from 'svelte-ethers-store'\n\nif (defaultEvmStores.$selectedAccount) {\n  // do something if store selectedAccount is non null\n}\n```\n\n### Forcing a disconnect (and removing all listeners)\n\nSimply call the function `disconnect` directly on the on the library\nabstract helper:\n\n```js\ndefaultEvmStores.disconnect()\n```\n\n## Human readable chain CAIP-2 information\n\n`chainData` is a store returning the current JavaScript [CAIP-2 representation](https://github.com/ChainAgnostic/CAIPs/blob/master/CAIPs/caip-2.md) object.\n\n### Example\n\nThe information returned by the `chainData` store depends (like all\nother ethers stores) on which chain the current provider is\nconnected. If the store has not yet been connected (with\n`setProvider`), the store value will be `undefined`.\n\nThis object is extremely useful to build components that reactively\nupdate all variables elements that depends on the current active chain\nor account.\n\nBelow is the CAIP-2 formatted information when the default store is\nconnected with the Ethereum Mainnet :\n\n```json\n{\n  \"name\": \"Ethereum Mainnet\",\n  \"chain\": \"ETH\",\n  \"icon\": \"ethereum\",\n  \"rpc\": [\n    \"https://mainnet.infura.io/v3/${INFURA_API_KEY}\",\n    \"https://api.mycryptoapi.com/eth\"\n  ],\n  \"faucets\": [],\n  \"nativeCurrency\": {\n    \"name\": \"Ether\",\n    \"symbol\": \"ETH\",\n    \"decimals\": 18\n  },\n  \"infoURL\": \"https://ethereum.org\",\n  \"shortName\": \"eth\",\n  \"chainId\": 1,\n  \"networkId\": 1,\n  \"slip44\": 60,\n  \"ens\": { \"registry\": \"0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e\" },\n  \"explorers\": [\n    {\n      \"name\": \"etherscan\",\n      \"url\": \"https://etherscan.io\",\n      \"standard\": \"EIP3091\"\n    }\n  ]\n}\n```\n\nYou might want to access all chains CAIP-2 data directly without using the\n`chainData` store. In this case, use the getter `allChainsData`, it returns\nthe list of all CAIP-2 data available.\n\n```js\nimport { allChainsData } from 'svelte-ethers-store'\n\nconsole.log(allChainsData)\n```\n\nAnother solution is to use the helper function `getChainDataByChainId`\nthat takes the chainId as argument and returns\nthe CAIP-2 data or an empty object if not found.\n\n```js\nimport { getChainDataByChainId } from 'svelte-ethers-store'\n\nconsole.log(getChainDataByChainId(5))\n```\n\n## Ethers Svelte components [ experimental ]\n\nWe plan to export generic Svelte low level components both to\ndemonstrate the use of the `svelte-ethers-store` library and as\nresuable and composable best practices components. A `Balance` and\n`Identicon` components have been implemented for now. You are welcome\nto help define and develop new components by joining our discussions\nin our [Discord](https://discord.gg/7yXuwDwaHF).\n\nSee also the `components` route in the example directory.\n\n```html\n  import { Balance } from 'svelte-ethers-store/components'\n</script>\n\n<p>balance = <Balance address=\"0x0000000000000000000000000000000000000000\" /></p>\n\n```\n\n## FAQ\n\n### _Cannot run using SvelteKit, I get error:_ `Cannot read property 'BN' of undefined`\n\nThe module `ethers` has not been detected by Vite. You need `import ethers` somewhere\nin your app or add `optimizeDeps: { include: [ 'ethers' ] }` in `svelte.config.js`\n\n### _how to auto-connect on page load?_\n\nIt is out of scope of this package to implement this function but it\ngenerally depends on the type of provider you are using and a way to\nstore connection information between page loads (for example by using\nlocalStorage).\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 194],
		[3596, 405],
		[3603, 670],
		[3610, 559],
		[3617, 680],
		[3624, 385],
		[3631, 393],
		[3638, 526],
		[3645, 345],
		[3652, 221],
		[3659, 95],
		[3666, 106],
		[3673, 62],
		[3680, 104],
		[3687, 89],
		[3694, 93],
		[3701, 37],
		[3708, 38],
		[3715, 30],
		[3722, 47],
		[3729, 132],
		[3736, 141],
		[3743, 76],
		[3750, 97],
		[3757, 110],
		[3764, 90],
		[3771, 208],
		[3778, 124],
		[3785, 283],
		[3792, 104],
		[3799, 159],
		[3806, 329],
		[3813, 279],
		[3820, 463],
		[3827, 488],
		[3834, 261],
		[3841, 289],
		[3848, 154],
		[3855, 471],
		[3862, 246],
		[3869, 125],
		[3876, 241],
		[3883, 189],
		[3890, 280],
		[3897, 430],
		[3904, 129],
		[3911, 228],
		[3918, 188],
		[3925, 154],
		[3932, 201],
		[3939, 350],
		[3946, 219],
		[3953, 200],
		[3960, 306],
		[3967, 134],
		[3974, 93],
		[3981, 124],
		[3988, 67],
		[3995, 213],
		[4002, 162],
		[4009, 3],
		[4016, 29],
		[4023, 223],
		[4030, 390],
		[4037, 338],
		[4044, 364],
		[4051, 386],
		[4058, 142],
		[4065, 72],
		[4072, 180],
		[4079, 109],
		[4086, 214],
		[4093, 170],
		[4100, 352],
		[4107, 195],
		[4114, 113],
		[4121, 115],
		[4128, 83]
	]
}
