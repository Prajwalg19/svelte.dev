{
	"name": "sveltekit-chessground",
	"description": "Provides Svelte component for Chessground chess UI.",
	"repo_url": "",
	"authors": ["sharlesleglerg"],
	"homepage": "https://github.com/AhsanSarwar45/sveltekit-chessground#readme",
	"downloads": 4,
	"updated": "2023-12-08T06:24:58.312Z",
	"tags": ["ui"],
	"typescript": true,
	"version": "2.0.6",
	"svelte_range": "^4.0.5",
	"kit_range": "^1.15.1",
	"last_rune_check_version": "2.0.6",
	"github_stars": 0,
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "sveltekit-chessground",
				"version": "2.0.6",
				"size": 94514
			},
			{
				"name": "chessground",
				"version": "8.4.0",
				"size": 333656
			}
		],
		"dependencies": [[0, 1]],
		"circular": []
	},
	"readme": "# Svelte Chessground\n\nA Svelte chessboard component.\nSvelte-chessground is a wrapper around the full-featured [Chessground](https://github.com/lichess-org/chessground), the open source chess UI developed for Lichess.\n\n![Chessground screenshots in 2D and 3D](https://github.com/gtim/svelte-chessground/blob/main/static/chessground-screenshot.jpg?raw=true)\n\nTake a look at the [live demos](https://gtim.github.io/svelte-chessground-examples/watch-ai).\n\nNote: Chessground does not contain chess logic. If you want a chessboard with legal moves and pawn promotion without additional code, you're looking for [svelte-chess](https://github.com/gtim/svelte-chess).\n\n## Usage\n\nInstall:\n\n    npm install svelte-chessground\n\nDisplay a chessboard where any pieces can be moved:\n\n    <script>\n        import {Chessground} from 'svelte-chessground';\n    </script>    \n\n    <Chessground />\n    \nThe component expands to maximum width.\nChessground is extensively configurable through props. Parameters and descriptions can be found in the original Chessground's [config.ts](https://github.com/lichess-org/chessground/blob/master/src/config.ts). For instance, to display a specific position and flip the board:\n\n    <script>\n        import {Chessground} from 'svelte-chessground';\n        let fen = '7k/5K2/7P/6pP/8/8/8/8 w - - 0 1'; // Forsyth-Edwards Notation\n        let orientation = 'black';\n    </script>    \n\n    <Chessground {fen} {orientation}/>\n    \nThese props enjoy the usual svelte reactivity magic: changing `orientation` or `fen` at any time will change the board.\nYou can find more examples in the [svelte-chessground-examples](https://github.com/gtim/svelte-chessground-examples/), including:\n* [allowing only legal moves](https://github.com/gtim/svelte-chessground-examples/blob/main/src/routes/legal/%2Bpage.svelte) ([demo](https://gtim.github.io/svelte-chessground-examples/legal))\n* [reactive position and orientation](https://github.com/gtim/svelte-chessground-examples/blob/main/src/routes/reactive/%2Bpage.svelte) ([demo](https://gtim.github.io/svelte-chessground-examples/reactive))\n* [playing against random AI](https://github.com/gtim/svelte-chessground-examples/blob/main/src/routes/vs-ai/%2Bpage.svelte) ([demo](https://gtim.github.io/svelte-chessground-examples/vs-ai))\n* [watching random AI's play](https://github.com/gtim/svelte-chessground-examples/blob/main/src/routes/watch-ai/%2Bpage.svelte) ([demo](https://gtim.github.io/svelte-chessground-examples/watch-ai))\n* [custom CSS](https://github.com/gtim/svelte-chessground-examples/blob/main/src/routes/style/%2Bpage.svelte) ([demo](https://gtim.github.io/svelte-chessground-examples/style))\n\nChessground contains no chess logic, and as such can be used for chess variations. Examples that require chess logic import [chess.js](https://github.com/jhlywa/chess.js).\n    \n### Styling\n\nChessground can be completely restyled through CSS. The component imports default stylesheets. To apply your own, you have two options:\n\n1. Override specific CSS commands with a scoped `:global` and `!important`:\n\n        <div class=\"override_background\">\n            <Chessground />\n        </div>\n        <style>\n            div.override_background :global(.cg-wrap cg-board) {\n                background-image:url(\"/my-board.jpg\") !important; /* replace chessboard image */\n            }\n        </style>\n\n2. Apply your own full chessground stylesheet instead of the defaults by setting the `class` prop and importing your own stylesheet.\nBy changing the class name from the default, none of the default stylesheets will apply, not even the piece SVGs.\nAdditionally, you can use the provided `ChessgroundUnstyled` component, which is completely unstyled.\n\n        <script>\n            import {ChessgroundUnstyled} from 'svelte-chessground';\n            import '$lib/my-chessboard.css';\n        </script>\n        <ChessgroundUnstyled class=\"my-chessboard\" />\n\nYou can find working code for both approaches in the [custom styles examples](https://github.com/gtim/svelte-chessground-examples/blob/main/src/routes/style/%2Bpage.svelte).\n\n## Building the package\n\nTo build the package yourself:\n\n    $ git clone https://github.com/gtim/svelte-chessground.git\n    $ cd svelte-chessground\n    $ npm run build\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3624, 304],
		[3631, 14],
		[3638, 2],
		[3645, 7],
		[3652, 21],
		[3659, 6],
		[3666, 15],
		[3673, 8],
		[3687, 4],
		[3694, 10],
		[3701, 2],
		[3708, 2],
		[3715, 1],
		[3722, 2],
		[3736, 10],
		[3743, 9],
		[3750, 3],
		[3757, 3],
		[3771, 4],
		[3778, 5],
		[3785, 16],
		[3792, 1],
		[3799, 6],
		[3806, 3],
		[3813, 4],
		[3820, 5],
		[3827, 4],
		[3834, 25],
		[3848, 5],
		[3855, 3],
		[3869, 1],
		[3876, 6],
		[3883, 2],
		[3890, 5],
		[3897, 6],
		[3904, 1],
		[3911, 1],
		[3918, 1],
		[3925, 14],
		[3946, 2],
		[3953, 2],
		[3960, 1],
		[3967, 2],
		[3974, 1],
		[3988, 1],
		[4002, 1],
		[4023, 6],
		[4037, 16],
		[4044, 8],
		[4051, 2],
		[4065, 1],
		[4072, 4],
		[4079, 13],
		[4086, 3],
		[4093, 2],
		[4100, 17],
		[4107, 8],
		[4114, 4],
		[4121, 9],
		[4128, 1],
		[4135, 9]
	]
}
