{
	"name": "svelte-simple-table",
	"description": "Create sortable, filterable, and pagable tables in Svelte.",
	"repo_url": "",
	"authors": ["btrauma8"],
	"downloads": 6,
	"updated": "2019-09-28T07:57:57.162Z",
	"tags": ["ui"],
	"typescript": true,
	"version": "0.2.1",
	"svelte_range": "^3.0.0",
	"last_rune_check_version": "0.2.1",
	"github_stars": 0,
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-simple-table",
				"version": "0.2.1",
				"size": 137974
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "Demo: http://jeffbot.org/svtable/\n\nnpm name is svelte-simple-table\n\n...more documentation is coming soon...\n\nbut easiest thing is just check out examples folder.\nI like this approach more than a big config object being defined.\nYou can look right at html and see everything.\nThe magic is the let:table, it gives the template below it all the stuff it  needs.\n\n### What it does\n\n- Turn svelte tables into filterable sortable pagable tables in a nice declarative way.\n\n### What it does not do\n- server side callbacks for paging stuff.\n\n### script looks like this\n    import { MakeSortable, SortLink, SortHeader } from '../../makeSortable';\n\t// only difference between SortLink and SortHeader is one is a th and one a div.\n### Html looks like this\n\n\t<MakeSortable\n\t\t\tdata={items}\n\t\t\tlet:table\n\t\t\tfilter={filter}\n\t\t\tfilterFields={['firstName', 'lastName', 'someNumber', 'address.city', 'address.state', 'dob']}\n\t\t\tsortIconCss=\"fa fa-sort\"\n\t\t\tsortIconAscCss=\"fa fa-sort-asc\"\n\t\t\tsortIconDescCss=\"fa fa-sort-desc\"\n\t\t>\n\t\t\tRows: { table.rows.length }<br />\n\t\t\tFiltered Rows: { table.sortedAndFilteredRows.length }<br />\n\n\t\t\t<table class=\"table table-sm\">\n\t\t\t\t<thead class=\"thead-light\">\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<SortHeader path={(x) => x.firstName + ' ' + x.lastName}>Full Name</SortHeader>\n\t\t\t\t\t\t<SortHeader path=\"firstName\">First Name</SortHeader>\n\t\t\t\t\t\t<SortHeader path=\"lastName\">Last Name</SortHeader>\n\t\t\t\t\t\t<SortHeader path=\"someNumber\">Some Number</SortHeader>\n\t\t\t\t\t\t<SortHeader path=\"address.city\">City</SortHeader>\n\t\t\t\t\t\t<SortHeader path=\"address.state\">State</SortHeader>\n\t\t\t\t\t\t<SortHeader path=\"dob\" asDate>DOB</SortHeader>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{#each table.pageRows as row}\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<td>{ row.firstName } { row.lastName }</td>\n\t\t\t\t\t\t\t<td>{ row.firstName }</td>\n\t\t\t\t\t\t\t<td>{ row.lastName }</td>\n\t\t\t\t\t\t\t<td>{ row.someNumber }</td>\n\t\t\t\t\t\t\t<td>{ row.address.city }</td>\n\t\t\t\t\t\t\t<td>{ row.address.state }</td>\n\t\t\t\t\t\t\t<td>{ niceDate(row.dob) }</td>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t{/each}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t\t<ul class=\"pagination\">\n\t\t\t\t<li class=\"page-item\" class:disabled={table.paging.currentPage === 0}>\n\t\t\t\t\t<button class=\"page-link\" on:click={table.paging.onPrevious}>Previous</button>\n\t\t\t\t</li>\n\t\t\t\t{#each table.paging.buttons as btn (btn)}\n\t\t\t\t\t<li class=\"page-item\" class:active={btn.active}>\n\t\t\t\t\t\t<button class=\"page-link\" on:click={btn.onClick}>{btn.label}</button>\n\t\t\t\t\t</li>\n\t\t\t\t{/each} \n\t\t\t\t<li class=\"page-item\" class:disabled={table.paging.currentPage >= table.paging.pageCount-1}>\n\t\t\t\t\t<button class=\"page-link\" on:click={table.paging.onNext}>Next</button>\n\t\t\t\t</li>\n\t\t\t</ul>\n\t\t</MakeSortable>\n    \n\t\n### pkg.svelte looks like this:\n{\n  \"name\": \"svelte-simple-table\",\n  \"svelte\": \"src/index.js\"\n}\n\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3596, 12],
		[3603, 3],
		[3610, 6],
		[3617, 5],
		[3624, 2],
		[3631, 4],
		[3638, 3],
		[3645, 3],
		[3652, 1],
		[3659, 6],
		[3666, 4],
		[3673, 3],
		[3680, 3],
		[3694, 1],
		[3701, 4],
		[3708, 4],
		[3722, 2],
		[3729, 4],
		[3736, 4],
		[3757, 2],
		[3764, 4],
		[3771, 2],
		[3778, 4],
		[3785, 2],
		[3792, 2],
		[3799, 1],
		[3806, 4],
		[3813, 1],
		[3820, 1],
		[3834, 1],
		[3841, 2],
		[3848, 12],
		[3855, 1],
		[3862, 16],
		[3883, 1],
		[3890, 3],
		[3904, 1],
		[3911, 2],
		[3918, 2],
		[3925, 2],
		[3932, 1],
		[3939, 2],
		[3946, 1],
		[3953, 2],
		[3960, 4],
		[3981, 4],
		[3995, 2],
		[4016, 2],
		[4030, 7],
		[4037, 19],
		[4044, 5],
		[4051, 1],
		[4058, 4],
		[4065, 1],
		[4086, 1],
		[4093, 15],
		[4100, 5],
		[4107, 2],
		[4114, 6],
		[4121, 6],
		[4128, 7],
		[4135, 8]
	],
	"esm": true,
	"cjs": false
}
