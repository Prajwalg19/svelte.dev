{
	"name": "remix-router-svelte",
	"description": "Implement nested routing with Remix Router in Svelte apps.",
	"repo_url": "https://github.com/brophdawg11/remix-routers",
	"authors": ["austincrim"],
	"homepage": "https://github.com/brophdawg11/remix-routers#readme",
	"downloads": 5,
	"updated": "2022-09-17T16:51:46.057Z",
	"tags": ["router"],
	"github_stars": 153,
	"typescript": true,
	"version": "0.3.0",
	"svelte_range": ">=3.47.0",
	"kit_range": "^1.0.0-next.372",
	"last_rune_check_version": "0.3.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "remix-router-svelte",
				"version": "0.3.0",
				"size": 29416
			},
			{
				"name": "@remix-run/router",
				"version": "0.2.0-pre.10",
				"size": 849577
			},
			{
				"name": "svelte",
				"version": "3.59.2",
				"size": 10624206
			}
		],
		"dependencies": [
			[0, 1],
			[0, 2]
		],
		"circular": []
	},
	"readme": "# remix-router-svelte\n\nSvelte UI implementation of the `react-router-dom` API (driven by `@remix-run/router`)\n\n> **Warning**\n>\n> This project is in an early stage so use with caution!\n\n## Installation\n\n```bash\nnpm install remix-router-svelte\n\n# or\n\nyarn add remix-router-svelte\n```\n\n_Note: If you are using TypeScript you will need to use `patch-package` and copy the `@remix-run+router+0.1.0.patch` patch from this repo to internally change the `RouteObject.element` type from `React.ReactNode` to `any` for use with Svelte components._\n\n## Notable API Differences\n\nn/a\n\n## Example Usage\n\nPlease refer to the [beta docs for `react-router@6.4`][rr-docs] for reference on the APIs in question, but the following is a simple example of how to leverage `remix-router-svelte` in a Svelte application. You may also refer to the [reference application][reference-app] for a more extensive usage example.\n\n**App.svelte**\n\n```html\n<script>\n  import { createBrowserRouter, RouterProvider } from \"remix-router-svelte\";\n  import Layout from \"./Layout.svelte\";\n  import Index, { loader as indexLoader } from \"./Index.svelte\";\n\n  // Define your routes in a nested array, providing loaders and actions where\n  // appropriate\n  const routes = [\n    {\n      path: \"/\",\n      element: Layout,\n      children: [\n        {\n          index: true,\n          loader: indexLoader,\n          element: Index,\n        },\n      ],\n    },\n  ];\n\n  // Create a router from your routes\n  const router = createBrowserRouter(routes);\n\n  // Provide a fallbackElement to be displayed during the initial data load\n  const fallbackElement = \"<p>loading...</p>\";\n  // or const fallbackElement = MySvelteComponent\n</script>\n\n<RouterProvider {router} {fallbackElement} />\n```\n\n**Layout.svelte**\n\n```html\n<script>\n  import { Outlet } from \"remix-router-svelte\";\n</script>\n\n<!-- Render global-layout stuff here, such as a header and nav bar -->\n<h1>Welcome to my Svelte Application!</h1>\n<nav><!-- nav links --></nav>\n\n<!-- Render matching child routes via <Outlet /> -->\n<Outlet />\n```\n\n**Index.svelte**\n\n```html\n<script context=\"module\">\n  import { useLoaderData } from 'remix-router-svelte';\n\n  export async function loader() {\n    // Load your data here and return whatever you need access to in the UI\n    return { ... };\n  };\n</script>\n\n<script>\n  // Use the useLoaderData method to access a store of the data returned\n  // from your loader\n  const data = useLoaderData();\n</script>\n\n<template>\n  <p>Check out my data!</p>\n  <pre>{$data}</pre>\n</template>\n```\n\n[rr-docs]: https://reactrouter.com/en/dev\n[reference-app]: ./reference-app/\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3596, 3],
		[3603, 6],
		[3610, 1],
		[3631, 2],
		[3645, 1],
		[3652, 1],
		[3666, 4],
		[3680, 1],
		[3694, 1],
		[3701, 2],
		[3708, 2],
		[3729, 2],
		[3736, 1],
		[3743, 1],
		[3750, 1],
		[3757, 3],
		[3771, 8],
		[3778, 2],
		[3785, 1],
		[3792, 2],
		[3799, 2],
		[3806, 3],
		[3827, 2],
		[3841, 16],
		[3855, 1],
		[3862, 1],
		[3876, 2],
		[3883, 1],
		[3890, 4],
		[3904, 1],
		[3911, 3],
		[3918, 1],
		[3925, 1],
		[3939, 1],
		[3953, 1],
		[3960, 2],
		[3974, 8],
		[3981, 1],
		[3988, 3],
		[3995, 5],
		[4023, 1],
		[4030, 7],
		[4037, 6],
		[4044, 6],
		[4058, 2],
		[4065, 1],
		[4072, 1],
		[4100, 12],
		[4107, 1],
		[4114, 5],
		[4121, 10],
		[4128, 1]
	],
	"esm": true,
	"cjs": false
}
