{
	"name": "svelte-data-tabu",
	"description": "Create simple, light-weight data table in Svelte.",
	"repo_url": "https://github.com/kjj6198/svelte-data-table",
	"authors": ["kjj6198"],
	"homepage": "https://github.com/kjj6198/svelte-data-table#readme",
	"downloads": 5,
	"updated": "2020-05-19T14:49:11.832Z",
	"tags": ["ui"],
	"github_stars": 0,
	"typescript": false,
	"version": "0.1.2",
	"svelte_range": "^3.22.0",
	"last_rune_check_version": "0.1.2",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-data-tabu",
				"version": "0.1.2",
				"size": 264267
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "## svelte-data-tabu\n\nA simple, small, light-weight but powerful data table in svelte.\n\n## Usage\n\n### Config\n\n```js\nexport const config = {\n  no: {\n    name: \"name\", // head column\n    type: \"number\", // number, string -> will align in different way\n    formatter: (t) => `#${t}`, // how to format data\n    hideMobile: true, // hide in mobile (will deprecate probably)\n  },\n  name: {\n    name: \"FISH\",\n    type: \"text\",\n    align: \"left\", // text align\n    className: \"fishName\", // custom class name\n  },\n  price: {\n    name: \"價格\",\n    sortable: true, // sortable in table head\n    formatter: function priceFormatter(t) {\n      return formatNumber(t);\n    },\n    comparator: priceComparator, // when sortable is ture, comparator is required.\n  },\n  price08: {\n    accessor: (d) => d.price, // a function to define how to get data in this column\n  },\n};\n```\n\n## TODOs\n\n- [ ] pagination support\n- [x] Fixed header\n- [x] sortable\n- [ ] slot\n- [ ] expanded view\n- [ ] group\n- [ ] row and column event handler\n- [ ] selectable\n- [ ] Event communication\n- [ ] a11y support\n- [ ] test\n- [ ] TypeScript support\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3589, 1],
		[3596, 6],
		[3603, 4],
		[3610, 5],
		[3631, 1],
		[3645, 1],
		[3659, 1],
		[3666, 6],
		[3680, 1],
		[3701, 1],
		[3708, 1],
		[3715, 1],
		[3722, 1],
		[3729, 5],
		[3757, 2],
		[3764, 6],
		[3771, 3],
		[3778, 1],
		[3785, 1],
		[3792, 2],
		[3799, 1],
		[3806, 3],
		[3827, 1],
		[3834, 3],
		[3848, 2],
		[3855, 1],
		[3862, 21],
		[3869, 1],
		[3883, 1],
		[3890, 4],
		[3897, 1],
		[3904, 1],
		[3925, 1],
		[3932, 1],
		[3960, 2],
		[3974, 3],
		[3981, 1],
		[3995, 1],
		[4023, 1],
		[4030, 4],
		[4037, 9],
		[4044, 5],
		[4051, 2],
		[4058, 2],
		[4065, 1],
		[4079, 1],
		[4093, 9],
		[4100, 5],
		[4107, 2],
		[4114, 5],
		[4121, 4],
		[4128, 4]
	]
}
