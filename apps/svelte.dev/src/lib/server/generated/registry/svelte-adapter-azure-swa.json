{
	"name": "svelte-adapter-azure-swa",
	"description": "Deploy SvelteKit apps to Azure Static Web Apps.",
	"repo_url": "",
	"authors": ["geoffrich"],
	"homepage": "https://github.com/geoffrich/svelte-adapter-azure-swa#readme",
	"downloads": 2450,
	"updated": "2025-05-01T17:51:03.433Z",
	"tags": ["adapter"],
	"typescript": true,
	"version": "0.22.0",
	"kit_range": "^2.0.0",
	"last_rune_check_version": "0.22.0",
	"github_stars": 0,
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-adapter-azure-swa",
				"version": "0.22.0",
				"size": 32558
			},
			{
				"name": "esbuild",
				"version": "0.19.12",
				"size": 133381
			},
			{
				"name": "set-cookie-parser",
				"version": "2.7.1",
				"size": 16074
			}
		],
		"dependencies": [
			[0, 1],
			[0, 2]
		],
		"circular": []
	},
	"readme": "# svelte-adapter-azure-swa\n\nAdapter for Svelte apps that creates an Azure Static Web App, using an Azure function for dynamic server rendering. If your app is purely static, you may be able to use [adapter-static](https://www.npmjs.com/package/@sveltejs/adapter-static) instead.\n\nSee the [demo folder](https://github.com/geoffrich/svelte-adapter-azure-swa/tree/main/demo) for an example integration with the SvelteKit demo app. The demo is automatically deployed to [Azure SWA](https://polite-desert-00b80111e.2.azurestaticapps.net/) on every commit to the main branch.\n\n## Usage\n\nRun `npm install -D svelte-adapter-azure-swa`.\n\nThen in your `svelte.config.js`:\n\n```js\nimport azure from 'svelte-adapter-azure-swa';\n\nexport default {\n\tkit: {\n\t\t...\n\t\tadapter: azure()\n\t}\n};\n```\n\nAnd, if you use TypeScript, add this to the top of your `src/app.d.ts`:\n\n```ts\n/// <reference types=\"svelte-adapter-azure-swa\" />\n```\n\n:warning: **IMPORTANT**: you also need to configure your build so that your SvelteKit site deploys properly. Failing to do so will prevent the project from building and deploying. See the next section for instructions.\n\n## Azure configuration\n\nWhen deploying to Azure, you will need to properly [configure your build](https://docs.microsoft.com/en-us/azure/static-web-apps/build-configuration?tabs=github-actions) so that both the static files and API are deployed.\n\n| property          | value          |\n| ----------------- | -------------- |\n| `app_location`    | `./`           |\n| `api_location`    | `build/server` |\n| `output_location` | `build/static` |\n\nIf you use a custom API directory (see [below](#apiDir)), your `api_location` will be the same as the value you pass to `apiDir`.\n\nIf your `app_location` is in a subfolder (e.g. `./my_app_location`), then your `api_location` should include the path to that subfolder (e.g. `my_app_location/build/server`.) `output_location` should still be `build/static`.\n\n### CUSTOM_BUILD_COMMAND considerations\n\nIf you are setting a [`CUSTOM_BUILD_COMMAND`](https://github.com/microsoft/Oryx/blob/main/doc/configuration.md) in your build pipeline to customize how the API is built (e.g. to run `npm ci` instead of `npm install`), make sure to run `npm install` inside the API directory to install production dependencies. Otherwise, the SvelteKit render function will not be able to start up.\n\n```yaml\n\t...\n\tenv:\n\t\tCUSTOM_BUILD_COMMAND: \"npm ci && npm run build && npm install --prefix ./build/server --omit=dev\"\n\twith:\n\t\tskip_api_build: true\n\t\t...\n```\n\n## Running locally with the Azure SWA CLI\n\nYou can debug using the [Azure Static Web Apps CLI](https://github.com/Azure/static-web-apps-cli). Note that the CLI is currently in preview and you may encounter issues.\n\nTo run the CLI, install `@azure/static-web-apps-cli` and the [Azure Functions Core Tools](https://github.com/Azure/static-web-apps-cli#serve-both-the-static-app-and-api) and add a `swa-cli.config.json` to your project (see sample below). Run `npm run build` to build your project and `swa start` to start the emulator. See the [CLI docs](https://github.com/Azure/static-web-apps-cli) for more information on usage.\n\n### Sample `swa-cli.config.json`\n\n```json\n{\n\t\"configurations\": {\n\t\t\"app\": {\n\t\t\t\"outputLocation\": \"./build/static\",\n\t\t\t\"apiLocation\": \"./build/server\",\n\t\t\t\"host\": \"127.0.0.1\"\n\t\t}\n\t}\n}\n```\n\n## Options\n\n### apiDir\n\nThe directory where the `sk_render` Azure function for SSR will be placed. Most of the time, you shouldn't need to set this.\n\nBy default, the adapter will output the `sk_render` Azure function for SSR in the `build/server` folder. If you want to output it to a different directory instead (e.g. if you have additional Azure functions to deploy), you can set this option.\n\n**Note:** since the `sk_render` function is written using the [v4 Node.js programming model](https://learn.microsoft.com/en-us/azure/azure-functions/functions-reference-node?tabs=javascript%2Cwindows%2Cazure-cli&pivots=nodejs-model-v4), any other Azure functions you deploy with your Static Web App [need to also be written using v4](https://learn.microsoft.com/en-us/azure/azure-functions/functions-node-upgrade-v4?tabs=v4&pivots=programming-language-javascript).\n\n```js\nimport azure from 'svelte-adapter-azure-swa';\n\nexport default {\n\tkit: {\n\t\t...\n\t\tadapter: azure({\n\t\t\tapiDir: 'custom/api'\n\t\t})\n\t}\n};\n```\n\nIf you set this option, you will also need to create a `host.json` and `package.json` in your API directory. The adapter normally generates these files by default, but skips them when a custom API directory is provided to prevent overwriting any existing files. You can see the default files the adapter generates in [this directory](https://github.com/geoffrich/svelte-adapter-azure-swa/tree/main/files/api).\n\nFor instance, by default the adapter outputs these files...\n\n```\nbuild/\n└── server/\n    ├── sk_render/\n    │   └── index.js\n    ├── host.json\n    ├── local.settings.json\n    └── package.json\n```\n\n... but only outputs these files when a custom API directory is provided:\n\n```\ncustom/\n└── api/\n    └── sk_render/\n        └── index.js\n```\n\nThe `main` field in your `package.json` [needs to use a glob pattern](https://learn.microsoft.com/en-us/azure/azure-functions/functions-reference-node?tabs=javascript%2Cwindows%2Cazure-cli&pivots=nodejs-model-v4#registering-a-function) that includes both the `sk_render/index.js` entrypoint as well as the entrypoints for your other Azure functions. Example `package.json`:\n\n```json\n{\n\t\"main\": \"**/index.js\",\n\t\"dependencies\": {\n\t\t\"@azure/functions\": \"^4\"\n\t}\n}\n```\n\nAlso note that the adapter reserves the folder prefix `sk_render` and API route prefix `sk_render` for Azure functions generated by the adapter. So, if you use a custom API directory, you cannot have any other folder starting with `sk_render` or functions available at the `sk_render` route, since these will conflict with the adapter's Azure functions.\n\n### staticDir\n\nThe directory where the static assets will be placed. Most of the time, you shouldn't need to set this.\n\nBy default, the adapter will output the static JS, CSS and HTML files to the `build/static` folder. If you want to output it to a different directory instead you can set this option.\n\n```js\nimport azure from 'svelte-adapter-azure-swa';\n\nexport default {\n\tkit: {\n\t\t...\n\t\tadapter: azure({\n\t\t\tstaticDir: 'custom/static'\n\t\t})\n\t}\n};\n```\n\n### customStaticWebAppConfig\n\nAn object containing additional Azure SWA [configuration options](https://docs.microsoft.com/en-us/azure/static-web-apps/configuration). This will be merged with the `staticwebapp.config.json` generated by the adapter.\n\nAttempting to override the default catch-all route (`route: '*'`) or the `navigationFallback` options will throw an error, since they are critical for server-side rendering.\n\n**Note:** customizing this config (especially `routes`) has the potential to break how SvelteKit handles the request. Make sure to test any modifications thoroughly.\n\n```js\nimport azure from 'svelte-adapter-azure-swa';\n\nexport default {\n\tkit: {\n\t\t...\n\t\tadapter: azure({\n\t\t\tcustomStaticWebAppConfig: {\n\t\t\t\troutes: [\n\t\t\t\t\t{\n\t\t\t\t\t\troute: '/login',\n\t\t\t\t\t\tallowedRoles: ['admin']\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\tglobalHeaders: {\n\t\t\t\t\t'X-Content-Type-Options': 'nosniff',\n\t\t\t\t\t'X-Frame-Options': 'DENY',\n\t\t\t\t\t'Content-Security-Policy': \"default-src https: 'unsafe-eval' 'unsafe-inline'; object-src 'none'\",\n\t\t\t\t},\n\t\t\t\tmimeTypes: {\n\t\t\t\t\t'.json': 'text/json'\n\t\t\t\t},\n\t\t\t\tresponseOverrides: {\n\t\t\t\t\t'401': {\n\t\t\t\t\t\t'redirect': '/login',\n\t\t\t\t\t\t'statusCode': 302\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tplatform: {\n\t\t\t\t\tapiRuntime: 'node:20'\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\t}\n};\n```\n\n### allowReservedSwaRoutes\n\nIn production, Azure SWA will route any requests to `/api` or `/api/*` to the SWA [API backend](https://learn.microsoft.com/en-us/azure/static-web-apps/apis-overview). If you also define SvelteKit routes beginning with `/api`, those requests will work in dev, but return a 404 in production since the request will be routed to the SWA API. Because of this, the adapter will throw an error at build time if it detects any routes beginning with `/api`.\n\nIf you want to disable this check, you can set `allowReservedSwaRoutes` to true. However, this will not start routing `/api` requests to your SvelteKit app. SWA does not allow configuring the `/api` route.\n\n```js\nimport azure from 'svelte-adapter-azure-swa';\n\nexport default {\n\tkit: {\n\t\t...\n\t\tadapter: azure({\n\t\t\tallowReservedSwaRoutes: true\n\t\t})\n\t}\n};\n```\n\n### esbuildOptions\n\nAn object containing additional [esbuild options](https://esbuild.github.io/api/#build-api). Currently only supports [external](https://esbuild.github.io/api/#external), [keepNames](https://esbuild.github.io/api/#keep-names), and [loader](https://esbuild.github.io/api/#loader). If you require additional options to be exposed, please [open an issue](https://github.com/geoffrich/svelte-adapter-azure-swa/issues).\n\n```js\nimport azure from 'svelte-adapter-azure-swa';\n\nexport default {\n\tkit: {\n\t\t...\n\t\tadapter: azure({\n\t\t\tesbuildOptions: {\n\t\t\t\texternal: ['fsevents'],\n\t\t\t\tkeepNames: true\n\t\t\t}\n\t\t})\n\t}\n};\n```\n\n## Platform-specific context\n\nSWA provides some information to the backend functions that this adapter makes available as [platform-specific context](https://kit.svelte.dev/docs/adapters#platform-specific-context). This is available in hooks and server routes through the `platform` property on the `RequestEvent`.\n\nTo get typings for the `platform` property, reference this adapter in your `src/app.d.ts` as described in the [usage section](#usage).\n\n### `clientPrincipal`\n\nThis contains the client principal as parsed from the `x-ms-client-principal` request header. See the [official SWA documentation](https://learn.microsoft.com/en-us/azure/static-web-apps/user-information?tabs=javascript#api-functions) or [the types](index.d.ts) for further details.\n\nThis is currently only available when running in production on SWA. In addition, it is only available in certain circumstances in production - see [this adapter issue](https://github.com/geoffrich/svelte-adapter-azure-swa/issues/102) for more details. Please report any issues you encounter.\n\n### `context`\n\nAll server requests to your SvelteKit app are handled by an Azure function. This property contains that Azure function's [request context](https://learn.microsoft.com/en-us/azure/azure-functions/functions-reference-node#context-object).\n\n### `user`\n\nThe `user` property of the Azure function's [HTTP request](https://learn.microsoft.com/en-us/azure/azure-functions/functions-reference-node?tabs=javascript%2Cwindows%2Cazure-cli&pivots=nodejs-model-v4#http-request).\n\n## Monorepo support\n\nIf you're deploying your app from a monorepo, here's what you need to know.\n\nThe build currently fails if you use `pnpm` as a package manager. You can track [this issue](https://github.com/geoffrich/svelte-adapter-azure-swa/issues/135) for updates. For now, you can work around the issue by using `npm` instead.\n\nAlso, since your SvelteKit app is in a subfolder of the monorepo, you will need to update your deployment workflow.\n\nFor instance, if you have the following folder structure:\n\n```\napps/\n\t├── sveltekit-app\n\t└── other-app\n```\n\nThe `app_location` and `api_location` in your deployment configuration need to point to the `apps/sveltekit-app` subfolder. `output_location` should remain the same. Here's how that would look for an Azure SWA GitHub workflow:\n\n```diff\nsteps:\n\t - uses: actions/checkout@v2\n        with:\n          submodules: true\n      - name: Build And Deploy\n        id: builddeploy\n        uses: Azure/static-web-apps-deploy@v1\n        with:\n          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_ORANGE_GRASS_0778C6300 }}\n          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)\n          action: \"upload\"\n          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######\n          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig\n-         app_location: \"./\" # App source code path\n-         api_location: \"build/server\" # Api source code path - optional\n+         app_location: \"./apps/sveltekit-app\" # App source code path\n+         api_location: \"apps/sveltekit-app/build/server\" # Api source code path - optional\n          output_location: \"build/static\" # Built app content directory - optional\n          ###### End of Repository/Build Configurations ######\n```\n\n## Gotchas\n\nAzure has its share of surprising or quirky behaviors. Here is an evolving list of things to look out for:\n\n> [!CAUTION]\n> Azure silently strips the `content-type` header from requests that have no body.\n>\n> [SvelteKit form actions](https://kit.svelte.dev/docs/form-actions) are valid with no parameters, which can lead to `POST` requests that have an empty body. Unfortunately, [Azure deletes the `content-type` header when the request has an empty body](https://github.com/geoffrich/svelte-adapter-azure-swa/issues/178), which breaks SvelteKit's logic for handling form actions. Until [this is addressed by Azure](https://github.com/Azure/static-web-apps/issues/1512), update to [verson 0.20.1](https://github.com/geoffrich/svelte-adapter-azure-swa/releases/tag/v0.20.1) which contains a workaround for this behavior.\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3589, 925],
		[3596, 1881],
		[3603, 1933],
		[3610, 1987],
		[3617, 1770],
		[3624, 1403],
		[3631, 1472],
		[3638, 1402],
		[3645, 939],
		[3652, 1654],
		[3659, 2003],
		[3666, 2248],
		[3673, 2146],
		[3680, 2229],
		[3687, 2084],
		[3694, 2009],
		[3701, 2328],
		[3708, 1732],
		[3715, 1829],
		[3722, 2092],
		[3729, 2082],
		[3736, 1771],
		[3743, 1963],
		[3750, 2597],
		[3757, 2300],
		[3764, 2269],
		[3771, 2116],
		[3778, 2021],
		[3785, 2614],
		[3792, 2662],
		[3799, 2190],
		[3806, 2428],
		[3813, 2475],
		[3820, 2398],
		[3827, 2092],
		[3834, 2018],
		[3841, 1834],
		[3848, 2173],
		[3855, 2388],
		[3862, 2177],
		[3869, 2118],
		[3876, 2167],
		[3883, 2523],
		[3890, 2440],
		[3897, 2106],
		[3904, 2313],
		[3911, 2149],
		[3918, 2850],
		[3925, 2212],
		[3932, 2108],
		[3939, 2213],
		[3946, 2102],
		[3953, 1846],
		[3960, 2125],
		[3967, 2262],
		[3974, 2639],
		[3981, 2152],
		[3988, 2078],
		[3995, 1904],
		[4002, 1786],
		[4009, 944],
		[4016, 986],
		[4023, 2017],
		[4030, 2152],
		[4037, 2207],
		[4044, 2457],
		[4051, 2022],
		[4058, 2004],
		[4065, 1987],
		[4072, 1981],
		[4079, 1972],
		[4086, 2566],
		[4093, 2335],
		[4100, 2144],
		[4107, 2088],
		[4114, 2450],
		[4121, 1922],
		[4128, 2043]
	]
}
