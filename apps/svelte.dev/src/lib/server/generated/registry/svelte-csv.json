{
	"name": "svelte-csv",
	"description": "Parse and generate CSV files in Svelte apps.",
	"repo_url": "https://github.com/Bunlong/svelte-csv",
	"authors": ["bunlong"],
	"homepage": "https://github.com/Bunlong/svelte-csv",
	"downloads": 114,
	"updated": "2022-02-14T17:53:33.830Z",
	"tags": ["content"],
	"github_stars": 12,
	"typescript": true,
	"version": "1.2.8",
	"svelte_range": "^3.29.0",
	"last_rune_check_version": "1.2.8",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-csv",
				"version": "1.2.8",
				"size": 416640
			},
			{
				"name": "@types/papaparse",
				"version": "5.3.15",
				"size": 24070
			},
			{
				"name": "@types/node",
				"version": "22.15.3",
				"size": 2350386
			},
			{
				"name": "undici-types",
				"version": "6.21.0",
				"size": 83680
			},
			{
				"name": "papaparse",
				"version": "5.5.2",
				"size": 263215
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[2, 3],
			[0, 4]
		],
		"circular": []
	},
	"readme": "# svelte-csv\n\nsvelte-csv is the fastest in-browser CSV (or delimited text) parser for Svelte. It is full of useful features such as CSVDownloader, readString, jsonToCSV, readRemoteFile, CSVReader, ... etc.\n\n## üîß Install\n\nsvelte-csv is available on npm. It can be installed with the following command:\n\n```\nnpm install svelte-csv --save\n```\n\nsvelte-csv is available on yarn as well. It can be installed with the following command:\n\n```\nyarn add svelte-csv --save\n```\n\n## ‚ÑπÔ∏è Note on usage with SvelteKit\n\nIf you are using `svelte-csv` with SvelteKit, you need to configure `svelte.config.js` as follows:\n\n```\n  kit: {\n    // ...\n    vite: {\n      optimizeDeps: {\n        include: ['papaparse']\n      }\n    }\n  }\n```\n\n## üìö Useful Features\n\n* [x] CSVDownloader\n* [x] readString\n* [x] readRemoteFile\n* [x] jsonToCSV\n* [ ] CSVReader\n\n## üí° Usage\n\n### üéÄ CSVDownloader\n\nIf you want to open your CSV files in Excel, you might want to set `bom={true}` or `bom`, default is `false`. This option adds the so called BOM byte `'\\ufeff'` to the beginning of your CSV files and tells Excel that the encoding is UTF8.\n\n#### Link\n\n```javascript\nimport { CSVDownloader } from 'svelte-csv';\n\n<CSVDownloader\n  data={[\n    {\n      \"Column 1\": \"1-1\",\n      \"Column 2\": \"1-2\",\n      \"Column 3\": \"1-3\",\n      \"Column 4\": \"1-4\",\n    },\n    {\n      \"Column 1\": \"2-1\",\n      \"Column 2\": \"2-2\",\n      \"Column 3\": \"2-3\",\n      \"Column 4\": \"2-4\",\n    },\n    {\n      \"Column 1\": \"3-1\",\n      \"Column 2\": \"3-2\",\n      \"Column 3\": \"3-3\",\n      \"Column 4\": \"3-4\",\n    },\n    {\n      \"Column 1\": 4,\n      \"Column 2\": 5,\n      \"Column 3\": 6,\n      \"Column 4\": 7,\n    },\n  ]}\n  filename={'filename'}\n  bom={true}\n>\n  Download\n</CSVDownloader>\n```\n\n#### Link\n\n```javascript\nimport { CSVDownloader } from 'svelte-csv';\n\n<CSVDownloader\n  data={[\n    {\n      \"Column 1\": \"1-1\",\n      \"Column 2\": \"1-2\",\n      \"Column 3\": \"1-3\",\n      \"Column 4\": \"1-4\",\n    },\n    {\n      \"Column 1\": \"2-1\",\n      \"Column 2\": \"2-2\",\n      \"Column 3\": \"2-3\",\n      \"Column 4\": \"2-4\",\n    },\n    {\n      \"Column 1\": \"3-1\",\n      \"Column 2\": \"3-2\",\n      \"Column 3\": \"3-3\",\n      \"Column 4\": \"3-4\",\n    },\n    {\n      \"Column 1\": 4,\n      \"Column 2\": 5,\n      \"Column 3\": 6,\n      \"Column 4\": 7,\n    },\n  ]}\n  type={'button'}\n  filename={'filename'}\n  bom={true}\n>\n  Download\n</CSVDownloader>\n```\n\n### üéÄ readString\n\n```javascript\nimport { readString } from 'svelte-csv';\n\nconst str = `Column 1,Column 2,Column 3,Column 4\n1-1,1-2,1-3,1-4\n2-1,2-2,2-3,2-4\n3-1,3-2,3-3,3-4\n4,5,6,7`;\n\nconst results = readString(str);\n```\n\n### üéÄ readRemoteFile\n\n```javascript\nimport { readRemoteFile } from 'svelte-csv'\n\nreadRemoteFile(\n  url,\n  {\n    complete: (results) => {\n      console.log('Results:', results)\n    }\n  }\n);\n```\n\n### üéÄ jsonToCSV\n\n```javascript\nimport { jsonToCSV } from 'svelte-csv';\n\nconst jsonData = `[\n  {\n      \"Column 1\": \"1-1\",\n      \"Column 2\": \"1-2\",\n      \"Column 3\": \"1-3\",\n      \"Column 4\": \"1-4\"\n  },\n  {\n      \"Column 1\": \"2-1\",\n      \"Column 2\": \"2-2\",\n      \"Column 3\": \"2-3\",\n      \"Column 4\": \"2-4\"\n  },\n  {\n      \"Column 1\": \"3-1\",\n      \"Column 2\": \"3-2\",\n      \"Column 3\": \"3-3\",\n      \"Column 4\": \"3-4\"\n  },\n  {\n      \"Column 1\": 4,\n      \"Column 2\": 5,\n      \"Column 3\": 6,\n      \"Column 4\": 7\n  }\n]`;\n\nconst results = jsonToCSV(jsonData);\n```\n\n## üìú Changelog\n\nLatest version 1.2.8 (2022-02-15):\n\n  * Fix `'/node_modules/papaparse/papaparse.min.js?v=8573111b' does not provide an export named 'default`\n\nDetails changes for each release are documented in the [CHANGELOG.md](https://github.com/Bunlong/svelte-csv/blob/master/CHANGELOG.md).\n\n## ‚ùó Issues\n\nIf you think any of the `svelte-csv` can be improved, please do open a PR with any updates and submit any issues. Also, I will continue to improve this, so you might want to watch/star this repository to revisit.\n\n## üåü Contribution\n\nWe'd love to have your helping hand on contributions to `svelte-csv` by forking and sending a pull request!\n\nYour contributions are heartily ‚ô° welcome, recognized and appreciated. (‚úø‚ó†‚Äø‚ó†)\n\nHow to contribute:\n\n- Open pull request with improvements\n- Discuss ideas in issues\n- Spread the word\n- Reach out with any feedback\n\n## ‚öñÔ∏è License\n\nThe MIT License [![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 120],
		[3596, 201],
		[3603, 191],
		[3610, 175],
		[3617, 140],
		[3624, 100],
		[3631, 81],
		[3638, 93],
		[3645, 23],
		[3652, 74],
		[3659, 143],
		[3666, 122],
		[3673, 121],
		[3680, 135],
		[3687, 192],
		[3694, 167],
		[3701, 110],
		[3708, 93],
		[3715, 53],
		[3722, 100],
		[3729, 101],
		[3736, 69],
		[3743, 80],
		[3750, 93],
		[3757, 119],
		[3764, 201],
		[3771, 114],
		[3778, 112],
		[3785, 122],
		[3792, 43],
		[3799, 119],
		[3806, 164],
		[3813, 120],
		[3820, 86],
		[3827, 67],
		[3834, 54],
		[3841, 17],
		[3848, 151],
		[3855, 129],
		[3862, 90],
		[3869, 170],
		[3876, 168],
		[3883, 101],
		[3890, 202],
		[3897, 90],
		[3904, 173],
		[3911, 122],
		[3918, 91],
		[3925, 154],
		[3932, 144],
		[3939, 85],
		[3946, 127],
		[3953, 149],
		[3960, 174],
		[3967, 76],
		[3974, 77],
		[3981, 76],
		[3988, 206],
		[3995, 98],
		[4002, 91],
		[4009, 15],
		[4016, 32],
		[4023, 56],
		[4030, 50],
		[4037, 66],
		[4044, 100],
		[4051, 129],
		[4058, 79],
		[4065, 121],
		[4072, 225],
		[4079, 140],
		[4086, 104],
		[4093, 96],
		[4100, 186],
		[4107, 120],
		[4114, 114],
		[4121, 155],
		[4128, 113]
	],
	"esm": false,
	"cjs": true
}
