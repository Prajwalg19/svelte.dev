{
	"name": "sveltekit-route-guard",
	"description": "Implement route guards for SvelteKit applications.",
	"repo_url": "https://github.com/rkanik/sveltekit-route-guard",
	"authors": ["rkanik"],
	"homepage": "https://github.com/rkanik/sveltekit-route-guard",
	"downloads": 5,
	"updated": "2023-01-30T17:52:27.964Z",
	"tags": ["router"],
	"github_stars": 2,
	"typescript": true,
	"version": "1.0.5",
	"kit_range": "^1.0.0",
	"last_rune_check_version": "1.0.5",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "sveltekit-route-guard",
				"version": "1.0.5",
				"size": 8581
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# Sveltekit Route Guard\r\n\r\n`sveltekit-route-guard` is a JavaScript library for creating route guard for [SvelteKit](https://kit.svelte.dev).\r\n\r\nThe `sveltekit-route-guard` package contains only the functionality necessary to create a handle function for [`hooks.server.js`](https://kit.svelte.dev/docs/hooks) to handle the route guard. There is no extra dependency needed for this library.\r\n\r\n[![npm version](https://img.shields.io/npm/v/sveltekit-route-guard.svg?style=flat-square)](https://www.npmjs.org/package/sveltekit-route-guard)\r\n[![install size](https://img.shields.io/badge/dynamic/json?url=https://packagephobia.com/v2/api.json?p=sveltekit-route-guard&query=$.install.pretty&label=install%20size&style=flat-square)](https://packagephobia.now.sh/result?p=sveltekit-route-guard)\r\n[![npm bundle size](https://img.shields.io/bundlephobia/minzip/sveltekit-route-guard?style=flat-square)](https://bundlephobia.com/package/sveltekit-route-guard@latest)\r\n[![npm downloads](https://img.shields.io/npm/dm/sveltekit-route-guard.svg?style=flat-square)](https://npm-stat.com/charts.html?package=sveltekit-route-guard)\r\n[![Known Vulnerabilities](https://snyk.io/test/npm/sveltekit-route-guard/badge.svg)](https://snyk.io/test/npm/sveltekit-route-guard)\r\n\r\n## Installation\r\n\r\nUsing npm:\r\n\r\n```shell\r\nnpm install sveltekit-route-guard\r\n```\r\n\r\nUsing yarn:\r\n\r\n```shell\r\nyarn add sveltekit-route-guard\r\n```\r\n\r\nUsing pnpm:\r\n\r\n```shell\r\npnpm add sveltekit-route-guard\r\n```\r\n\r\n## Example\r\n\r\n> **Note** You don't have to pass all the routes in your `/routes` directory. Just pass the routes you want to add guard. Other routes will be marked as allowed by default.\r\n\r\n```ts\r\n// src/hook.server.ts\r\nimport { createRouteGuard } from 'sveltekit-route-guard'\r\nimport { redirect, type Handle } from '@sveltejs/kit'\r\nexport const handle: Handle = createRouteGuard({\r\n redirect,\r\n routes: [\r\n  { pathname: '/protected' },\r\n  { pathname: '/login' }\r\n ],\r\n beforeEach(to, event, next) {\r\n  if (to.pathname === '/protected') {\r\n   return next('/login')\r\n  }\r\n  return next()\r\n }\r\n})\r\n\r\n```\r\n\r\nUsing alongside [trpc](https://trpc.io/)[-sveltekit](https://icflorescu.github.io/trpc-sveltekit/):\r\n\r\n```ts\r\n// src/hook.server.ts\r\nimport { router } from '$lib/trpc/router'\r\nimport { createTRPCHandle } from 'trpc-sveltekit'\r\nimport { createContext } from '$lib/trpc/context'\r\nimport { createRouteGuard } from 'sveltekit-route-guard'\r\nimport { redirect, type Handle } from '@sveltejs/kit'\r\n\r\nconst trpcHandle = createTRPCHandle({\r\n router,\r\n createContext\r\n})\r\n\r\nexport const handle: Handle = createRouteGuard({\r\n redirect,\r\n next: trpcHandle,\r\n routes: [\r\n  { pathname: '/protected' },\r\n  { pathname: '/login' }\r\n ],\r\n beforeEach(to, event, next) {\r\n  if (to.pathname === '/protected') {\r\n   return next('/login')\r\n  }\r\n  return next()\r\n }\r\n})\r\n\r\n```\r\n\r\nUsing authentication\r\n\r\n```ts\r\n// src/hook.server.ts\r\nimport { verify } from 'jsonwebtoken'\r\nimport { JWT_SECRET } from '$env/static/private'\r\nimport { createRouteGuard } from 'sveltekit-route-guard'\r\n\r\nimport type { User } from '@prisma/client'\r\nimport type { Handle, RequestEvent } from '@sveltejs/kit'\r\n\r\nconst getCurrentUser = (event: RequestEvent) => {\r\n try {\r\n  const token = event.cookies.get('token')\r\n  return verify(token || '', JWT_SECRET) as User\r\n } catch (_) {\r\n  return null\r\n }\r\n}\r\n\r\nexport const handle: Handle = createRouteGuard({\r\n redirect,\r\n routes: [\r\n  {\r\n   pathname: '/projects',\r\n   meta: {\r\n    auth: true\r\n   }\r\n  },\r\n  {\r\n   pathname: '/login',\r\n   meta: {\r\n    auth: false\r\n   }\r\n  }\r\n ],\r\n beforeEach(to, event, next) {\r\n  // check if the user is authenticated ot not\r\n  const user = getCurrentUser(event)\r\n  if (user) event.locals.user = user\r\n\r\n  // not authenticated and requires authentication is true\r\n  if (!user && to.meta?.auth) {\r\n   return next('/login')\r\n  }\r\n\r\n  // already authenticated, can't go to /login\r\n  if (user && to.meta?.auth === false) {\r\n   return next('/')\r\n  }\r\n\r\n  // no guard, continue the request\r\n  return next()\r\n }\r\n})\r\n```\r\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 4],
		[3603, 80],
		[3610, 10],
		[3617, 4],
		[3624, 6],
		[3631, 6],
		[3638, 2],
		[3645, 7],
		[3652, 4],
		[3659, 3],
		[3666, 81],
		[3673, 1],
		[3680, 1],
		[3687, 17],
		[3694, 7],
		[3701, 6],
		[3708, 3],
		[3715, 5],
		[3722, 6],
		[3729, 5],
		[3736, 7],
		[3743, 3],
		[3757, 30],
		[3764, 1],
		[3771, 17],
		[3778, 10],
		[3785, 7],
		[3792, 19],
		[3799, 6],
		[3806, 7],
		[3813, 4],
		[3820, 1],
		[3827, 1],
		[3834, 2],
		[3841, 62],
		[3848, 22],
		[3855, 10],
		[3862, 4],
		[3869, 3],
		[3876, 10],
		[3883, 20],
		[3890, 14],
		[3897, 11],
		[3904, 4],
		[3911, 9],
		[3918, 5],
		[3925, 4],
		[3932, 3],
		[3939, 2],
		[3946, 1],
		[3953, 2],
		[3960, 8],
		[3967, 2],
		[3974, 11],
		[3981, 12],
		[3988, 10],
		[3995, 4],
		[4002, 20],
		[4009, 18],
		[4016, 4],
		[4023, 2],
		[4030, 4],
		[4037, 18],
		[4044, 16],
		[4051, 12],
		[4058, 1],
		[4065, 6],
		[4072, 10],
		[4079, 1],
		[4086, 7],
		[4100, 19],
		[4107, 26],
		[4114, 5],
		[4121, 6],
		[4128, 7],
		[4135, 9]
	],
	"esm": true,
	"cjs": true
}
