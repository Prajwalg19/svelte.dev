{
	"name": "svelte-city-selection",
	"description": "Provides city selection component for Svelte applications.",
	"repo_url": "",
	"authors": ["llllllleon"],
	"downloads": 7,
	"updated": "2022-08-30T05:40:15.831Z",
	"tags": ["ui"],
	"typescript": true,
	"version": "0.0.2",
	"svelte_range": "^3.44.0",
	"last_rune_check_version": "0.0.2",
	"github_stars": 0,
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-city-selection",
				"version": "0.0.2",
				"size": 22435
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# Svelte + TS + Vite\n\nThis template should help get you started developing with Svelte and TypeScript in Vite.\n\n## Recommended IDE Setup\n\n[VS Code](https://code.visualstudio.com/) + [Svelte](https://marketplace.visualstudio.com/items?itemName=svelte.svelte-vscode).\n\n## Need an official Svelte framework?\n\nCheck out [SvelteKit](https://github.com/sveltejs/kit#readme), which is also powered by Vite. Deploy anywhere with its serverless-first approach and adapt to various platforms, with out of the box support for TypeScript, SCSS, and Less, and easily-added support for mdsvex, GraphQL, PostCSS, Tailwind CSS, and more.\n\n## Technical considerations\n\n**Why use this over SvelteKit?**\n\n- It brings its own routing solution which might not be preferable for some users.\n- It is first and foremost a framework that just happens to use Vite under the hood, not a Vite app.\n  `vite dev` and `vite build` wouldn't work in a SvelteKit environment, for example.\n\nThis template contains as little as possible to get started with Vite + TypeScript + Svelte, while taking into account the developer experience with regards to HMR and intellisense. It demonstrates capabilities on par with the other `create-vite` templates and is a good starting point for beginners dipping their toes into a Vite + Svelte project.\n\nShould you later need the extended capabilities and extensibility provided by SvelteKit, the template has been structured similarly to SvelteKit so that it is easy to migrate.\n\n**Why `global.d.ts` instead of `compilerOptions.types` inside `jsconfig.json` or `tsconfig.json`?**\n\nSetting `compilerOptions.types` shuts out all other types not explicitly listed in the configuration. Using triple-slash references keeps the default TypeScript setting of accepting type information from the entire workspace, while also adding `svelte` and `vite/client` type information.\n\n**Why include `.vscode/extensions.json`?**\n\nOther templates indirectly recommend extensions via the README, but this file allows VS Code to prompt the user to install the recommended extension upon opening the project.\n\n**Why enable `allowJs` in the TS template?**\n\nWhile `allowJs: false` would indeed prevent the use of `.js` files in the project, it does not prevent the use of JavaScript syntax in `.svelte` files. In addition, it would force `checkJs: false`, bringing the worst of both worlds: not being able to guarantee the entire codebase is TypeScript, and also having worse typechecking for the existing JavaScript. In addition, there are valid use cases in which a mixed codebase may be relevant.\n\n**Why is HMR not preserving my local component state?**\n\nHMR state preservation comes with a number of gotchas! It has been disabled by default in both `svelte-hmr` and `@sveltejs/vite-plugin-svelte` due to its often surprising behavior. You can read the details [here](https://github.com/rixo/svelte-hmr#svelte-hmr).\n\nIf you have state that's important to retain within a component, consider creating an external store which would not be replaced by HMR.\n\n```ts\n// store.ts\n// An extremely simple external store\nimport { writable } from 'svelte/store'\nexport default writable(0)\n```\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 1],
		[3603, 2],
		[3610, 3],
		[3617, 1],
		[3624, 2],
		[3638, 1],
		[3645, 2],
		[3659, 1],
		[3666, 4],
		[3673, 2],
		[3687, 1],
		[3708, 2],
		[3722, 1],
		[3736, 1],
		[3757, 2],
		[3764, 2],
		[3771, 2],
		[3778, 5],
		[3785, 1],
		[3792, 2],
		[3799, 1],
		[3806, 2],
		[3813, 1],
		[3834, 2],
		[3841, 10],
		[3848, 1],
		[3855, 1],
		[3862, 1],
		[3883, 1],
		[3890, 3],
		[3911, 1],
		[3932, 1],
		[3946, 1],
		[3960, 2],
		[3988, 1],
		[4030, 3],
		[4037, 4],
		[4044, 6],
		[4051, 2],
		[4058, 1],
		[4065, 1],
		[4100, 6],
		[4114, 7],
		[4121, 6],
		[4128, 2]
	]
}
