{
	"name": "svelte-media-queries",
	"description": "Use CSS media queries in Svelte components.",
	"repo_url": "https://github.com/fedorovvvv/svelte-media-queries",
	"authors": ["fedorovvvv"],
	"homepage": "https://github.com/fedorovvvv/svelte-media-queries#readme",
	"downloads": 2109,
	"updated": "2023-10-13T16:20:11.544Z",
	"tags": ["miscellaneous"],
	"github_stars": 41,
	"typescript": true,
	"version": "1.6.2",
	"svelte_range": "^3.44.0",
	"kit_range": "next",
	"last_rune_check_version": "1.6.2",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-media-queries",
				"version": "1.6.2",
				"size": 16676
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# Svelte CSS media queries üê• \n\n[![npm version](http://img.shields.io/npm/v/svelte-media-queries.svg)](https://www.npmjs.com/package/svelte-media-queries)\n[![npm downloads](https://img.shields.io/npm/dm/svelte-media-queries.svg)](https://www.npmjs.com/package/svelte-media-queries)\n![license](https://img.shields.io/npm/l/svelte-media-queries)\n\n### [Demo - Svelte REPL](https://svelte.dev/repl/7e97f1a1d1654701a0661e076037d160?version=3.48.0)\n### Lightweight, comfortable, like Svelteüê£ | Svelte store / Svelte component\nWith TypeScript supportüíô  \n\n[![Rate this package](https://badges.openbase.com/js/rating/svelte-media-queries.svg?style=openbase&token=myaBaR9V2YuM2LLiUs0nOTMlrXb1fGC6F9XuQa3Y0sw=)](https://openbase.com/js/svelte-media-queries?utm_source=embedded&amp;utm_medium=badge&amp;utm_campaign=rate-badge)\n\n## how to install\n```npm\nnpm i svelte-media-queries\n```\n### What can I do?\n\n```js\nquery = {\n  \"mobile\": \"(max-width: 480px)\",\n  \"tablet\": \"(min-width: 480px) and (max-width: 768px)\",\n  \"largeTablet\": \"(min-width: 768px) and (max-width: 1200px)\",\n  \"desktop\": \"(min-width: 1200px)\",\n  \"other\": [\n    \"(min-width: 1200px)\",\n    \"(max-height: 900px)\"\n  ],\n  \"themes\": {\n    \"dark\": \"(prefers-color-scheme: dark)\",\n    \"light\": \"(prefers-color-scheme: light)\"\n  }\n} // \n```\n```js\nmatches = {\n  \"mobile\": false,\n  \"tablet\": true,\n  \"largeTablet\": false,\n  \"desktop\": false,\n  \"other\": [\n    false,\n    true\n  ],\n  \"themes\": {\n    \"dark\": false,\n    \"light\": true\n  }\n}\n```\n<img src=\"https://media.giphy.com/media/oYtVHSxngR3lC/giphy-tumblr.gif\" width=\"350\"/>\n\nYes, yes, and it's all recursive and reactiveüêπ  \nTry it in [Svelte REPL](https://svelte.dev/repl/7e97f1a1d1654701a0661e076037d160?version=3.48.0)  \n\n## How to use\n\n### Query? Yes, just like in CSSüôä\n```js\nquery='(min-width: 768px) and (max-width: 1280px)'\n```\n### Matches? This is your result\n#### Component (`bind:` directive)\n```\nbind:matches\n------------------\nbind:matches={foo}\n```\n#### Slot (`let:` directive)\n```\nlet:matches\n------------------\nlet:matches={foo}\n```\n### Examples\n#### Store\n```js\n<script>\n  import { onDestroy } from 'svelte'\n  import { createMediaStore } from 'svelte-media-queries'\n  \n  const matches = createMediaStore(query) //The type of the store will completely repeat the query\n  \n  onDestroy(() => matches.destroy()) //Stop events for calculation\n</script>\n```\n[query example](https://github.com/fedorovvvv/svelte-media-queries#what-can-i-do)\n#### Slot\n```svelte\n<script>\n  import MediaQuery from 'svelte-media-queries'\n</script>\n\n<MediaQuery query='(max-width: 480px)' let:matches>\n  {#if matches}\n    mobile!!\n  {/if}\n</MediaQuery>\n```\n#### Bind\n```svelte\n<script>\n  import MediaQuery from 'svelte-media-queries'\n\n  let matches\n</script>\n\n<MediaQuery query='(max-width: 480px)' bind:matches/>\n\n{#if matches}\n  mobile!!\n{/if}\n\n{#if matches}\n  Oh my God, it's really mobile\n{/if}\n```\n\n### That's not all!\n#### You can use an array from `query`\n```js\nquery={['(max-width: 1200px)', '(min-width: 800px)']}\n```\nWhat about matches?  \nMatches will take everything from `query` in order  \n```js\nmatches=[boolean, boolean]\n```\n#### You can test this in [Svelte REPL](https://svelte.dev/repl/7e97f1a1d1654701a0661e076037d160?version=3.48.0)üê•\n#### Example\n```svelte\n<script>\n  import MediaQuery from 'svelte-media-queries'\n</script>\n\n<MediaQuery query={['(max-width: 768px)', '(min-width: 768px) and (max-width: 1280px)', '(min-width: 1280px)']} let:matches>\n  {@const [mobile, tablet, desktop] = matches}\n  <h5>\n    mobile: '(max-width: 768px)' = {mobile}\n    tablet: '(max-width: 1280px)' = {tablet}\n    desktop: '(min-width: 1280px)' = {desktop}\n  </h5>\n</MediaQuery>\n```\n`{@const}` - [Svelte Docs](https://svelte.dev/docs#template-syntax-const)üêπ  \nYou can also use it through the array index `tablet = matches[1]`  \nWith `bind:`, everything is the sameüê•\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 1034],
		[3596, 1427],
		[3603, 1407],
		[3610, 1210],
		[3617, 1168],
		[3624, 1484],
		[3631, 1965],
		[3638, 1048],
		[3645, 964],
		[3652, 1160],
		[3659, 1746],
		[3666, 1523],
		[3673, 2091],
		[3680, 1802],
		[3687, 1319],
		[3694, 1099],
		[3701, 1079],
		[3708, 1205],
		[3715, 1247],
		[3722, 1889],
		[3729, 1402],
		[3736, 1251],
		[3743, 1372],
		[3750, 1453],
		[3757, 1416],
		[3764, 1561],
		[3771, 1259],
		[3778, 1510],
		[3785, 1404],
		[3792, 1428],
		[3799, 1128],
		[3806, 1406],
		[3813, 1468],
		[3820, 1643],
		[3827, 1585],
		[3834, 1417],
		[3841, 1390],
		[3848, 1467],
		[3855, 1588],
		[3862, 1490],
		[3869, 1252],
		[3876, 1203],
		[3883, 1108],
		[3890, 1024],
		[3897, 931],
		[3904, 1269],
		[3911, 1108],
		[3918, 1210],
		[3925, 1082],
		[3932, 1290],
		[3939, 2024],
		[3946, 2097],
		[3953, 1425],
		[3960, 1482],
		[3967, 5905],
		[3974, 9552],
		[3981, 7310],
		[3988, 1837],
		[3995, 1793],
		[4002, 1779],
		[4009, 657],
		[4016, 1234],
		[4023, 2069],
		[4030, 2097],
		[4037, 2288],
		[4044, 2094],
		[4051, 2147],
		[4058, 2635],
		[4065, 3050],
		[4072, 2957],
		[4079, 2459],
		[4086, 2978],
		[4093, 2729],
		[4100, 2345],
		[4107, 2403],
		[4114, 2109],
		[4121, 1739],
		[4128, 1743]
	],
	"esm": true,
	"cjs": false
}
