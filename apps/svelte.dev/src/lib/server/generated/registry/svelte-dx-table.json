{
	"name": "svelte-dx-table",
	"description": "Creates dx friendly Svelte table component.",
	"repo_url": "https://github.com/thecodejack/svelte-dx-table",
	"authors": ["thecodejack"],
	"homepage": "https://github.com/thecodejack/svelte-dx-table#readme",
	"downloads": 6,
	"updated": "2022-01-04T17:48:23.882Z",
	"tags": ["ui"],
	"github_stars": 1,
	"typescript": false,
	"version": "1.0.0",
	"svelte_range": "3.44.3",
	"last_rune_check_version": "1.0.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-dx-table",
				"version": "1.0.0",
				"size": 50387
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# svelte-dx-table\r\n\r\n[![NPM](https://img.shields.io/npm/v/svelte-dx-table.svg)](https://www.npmjs.com/package/svelte-dx-table)\r\n[![npm bundle size (minified + gzip)](https://img.shields.io/bundlephobia/minzip/svelte-dx-table.svg)](https://www.npmjs.com/package/svelte-dx-table)\r\n\r\nSimple dev friendly Svelte component for building a HTML Table with basic features like sorting by default. Generated component is a raw HTML one which has classes to apply styling as well.\r\n\r\nYou can generate table by just passing array of objects as following.\r\n\r\n```svelte\r\n<SimpleTable data={data} />\r\n```\r\n\r\n> Note: `svelte-dx-table` is for simplicity as of now. It is more of making a table out of array of objects instead spending time on building config to render a simple table. If you are looking for advanced features, would recommend to check [svelte-table](https://github.com/dasDaniel/svelte-table)\r\n\r\nYou can also provide `ignoreKeys` incase you want to ignore from default.\r\n\r\n```svelte\r\n<Table {data} ignoreKeys={[\"dob\"]} />\r\n```\r\n\r\nColumns config(via `columns` prop) is not a array of objects instead it will be map, which can make you add config for a necessary columns only. Check example\r\n\r\n```svelte\r\n<Table {data} columns={{\r\n      dob: {\r\n        key: \"dob\",\r\n        formatter: (val) => {\r\n          return new Intl.DateTimeFormat(\"en-US\").format(new Date(val));\r\n        }\r\n      }\r\n    }}/>\r\n```\r\n\r\n> Note that `key` inside column config is mandatory.\r\n\r\nIf incase, you want to specify order of columns, you can use `keys` prop in which you can provide `keys` of row object in the order you want.\r\n\r\n```svelte\r\n<Table {data} keys={[\"name\", \"gender\",\"age\", \"email\"]} />\r\n```\r\n\r\n## Demo\r\n\r\n[Click here for Storybook link](https://svelte-dx-table.netlify.app/)\r\n\r\n## Installation\r\n\r\n```\r\nnpm install svelte-dx-table\r\n\r\nor\r\n\r\nyarn add svelte-dx-table\r\n```\r\n\r\n## API\r\n\r\n### Props\r\n\r\n| Prop Name  | mandatory | Description                                                                                       | Default Value |\r\n| ---------- | --------- | ------------------------------------------------------------------------------------------------- | ------------- |\r\n| data       | yes       | rows of data that needs to be passed                                                              | []            |\r\n| columns    |           | column config for necessary columns as a map. Refer following for more info available properties. | {}            |\r\n| keys       |           | keys of array of objects(data) that needs to be rendered                                          | []            |\r\n| ignoreKeys |           | ignore keys of object that shouldn't be rendered                                                  | []            |\r\n| tableClass |           | class that needs to be added as part of Table                                                     | \"\"            |\r\n| sortKey    |           | column/object key on which sort needs to be applied                                               | \"\"            |\r\n| sortType   |           | \"normal\" or \"reverse\"                                                                             | \"normal\"      |\r\n\r\n### keys of column config\r\n\r\n| key Name     | Description                | definition                                       |\r\n| ------------ | -------------------------- | ------------------------------------------------ |\r\n| key          | key of objects in the data | mandatory field if added in column config        |\r\n| header       |                            | `(key) => string`                                |\r\n| format       |                            | `(val) => string`                                |\r\n| headerClass  | string                     | \"\"                                               |\r\n| sortFunction | compare function           | `(firstValue, SecondValue, key) => 1 or -1 or 0` |\r\n\r\nAs informed previously columns prop is a map. Check columns prop of following a reference\r\n\r\n```svelte\r\n<Table {data} columns={{\r\n  dob: {\r\n    key: \"dob\",\r\n    formatter: (val) => {\r\n      return new Intl.DateTimeFormat(\"en-US\").format(new Date(val));\r\n    },\r\n  },\r\n  age: {\r\n    key: \"age\",\r\n    formatter: (val) => {\r\n      return `${val} years`;\r\n    },\r\n  }\r\n}}/>\r\n\r\n```\r\n\r\n### Development\r\n\r\n```\r\nnpm install\r\nnpm run storybook\r\n```\r\n\r\n## License\r\n\r\nMIT\r\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3596, 1],
		[3603, 2],
		[3610, 3],
		[3631, 2],
		[3638, 17],
		[3645, 10],
		[3652, 5],
		[3659, 6],
		[3666, 7],
		[3673, 4],
		[3680, 5],
		[3687, 3],
		[3694, 2],
		[3701, 3],
		[3708, 3],
		[3715, 1],
		[3722, 1],
		[3729, 5],
		[3736, 1],
		[3743, 1],
		[3750, 1],
		[3757, 3],
		[3764, 1],
		[3771, 3],
		[3778, 2],
		[3785, 2],
		[3792, 3],
		[3799, 2],
		[3806, 5],
		[3813, 1],
		[3820, 1],
		[3827, 1],
		[3834, 3],
		[3841, 3],
		[3848, 2],
		[3855, 7],
		[3862, 2],
		[3869, 1],
		[3876, 1],
		[3883, 2],
		[3890, 3],
		[3897, 3],
		[3904, 1],
		[3911, 2],
		[3918, 2],
		[3925, 1],
		[3932, 2],
		[3939, 2],
		[3946, 1],
		[3953, 2],
		[3960, 2],
		[3967, 2],
		[3974, 1],
		[3981, 2],
		[3988, 8],
		[3995, 1],
		[4002, 2],
		[4009, 1],
		[4016, 1],
		[4023, 4],
		[4030, 5],
		[4037, 6],
		[4044, 6],
		[4051, 2],
		[4058, 2],
		[4065, 3],
		[4072, 2],
		[4079, 1],
		[4086, 1],
		[4093, 9],
		[4100, 5],
		[4107, 4],
		[4114, 6],
		[4121, 7],
		[4128, 3]
	]
}
