{
	"name": "svelte-adapter-bun",
	"description": "Generates a standalone Bun.js server for SvelteKit apps.",
	"repo_url": "https://github.com/gornostay25/svelte-adapter-bun",
	"authors": ["gornostay25"],
	"homepage": "https://github.com/gornostay25/svelte-adapter-bun#readme",
	"downloads": 4453,
	"updated": "2024-02-20T12:20:33.288Z",
	"tags": ["adapter"],
	"github_stars": 568,
	"typescript": true,
	"version": "0.5.2",
	"kit_range": "^1.30.4",
	"last_rune_check_version": "0.5.2",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-adapter-bun",
				"version": "0.5.2",
				"size": 52808
			},
			{
				"name": "tiny-glob",
				"version": "0.2.9",
				"size": 12092
			},
			{
				"name": "globalyzer",
				"version": "0.1.0",
				"size": 11416
			},
			{
				"name": "globrex",
				"version": "0.1.2",
				"size": 14164
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[1, 3]
		],
		"circular": []
	},
	"readme": "# svelte-adapter-bun\n\n[Adapter](https://kit.svelte.dev/docs/adapters) for SvelteKit apps that generates a standalone [Bun](https://github.com/oven-sh/bun) server.\n\n## :zap: Usage\n\nInstall with `bun add -d svelte-adapter-bun`, then add the adapter to your `svelte.config.js`:\n\n```js\n// svelte.config.js\nimport adapter from \"svelte-adapter-bun\";\n\nexport default {\n  kit: {\n    adapter: adapter(),\n  },\n};\n```\n\nAfter building the server (`vite build`), use the following command to start:\n\n```\n# go to build directory\ncd build/\n\n# run Bun\nbun run start\n```\n\n## :gear: Options\n\nThe adapter can be configured with various options:\n\n```js\n// svelte.config.js\nimport adapter from \"svelte-adapter-bun\";\nexport default {\n  kit: {\n    adapter: adapter({\n      out: \"build\",\n      assets: true,\n      envPrefix: \"MY_CUSTOM_\",\n      development: true,\n      // precompress: true,\n      precompress: {\n        brotli: true,\n        gzip: true,\n        files: [\"htm\", \"html\"],\n      },\n      dynamic_origin: true,\n      xff_depth: 1,\n    }),\n  },\n};\n```\n\n### out\n\nThe directory to build the server to. It defaults to `build` — i.e. `bun run start` would start the server locally after it has been created.\n\n### assets\n\nBrowse a static assets. Default: `true`\n\n- [x] Support [HTTP range requests](https://developer.mozilla.org/en-US/docs/Web/HTTP/Range_requests)\n\n### precompress\n\nEnables precompressing using gzip and brotli for assets and prerendered pages. It defaults to `false`.\n\n#### brotli\n\nEnable brotli precompressing. It defaults to `false`.\n\n#### gzip\n\nEnable gzip precompressing. It defaults to `false`.\n\n#### files\n\nfile extensions to compress.It defaults to `['html','js','json','css','svg','xml','wasm']`.\n\n### envPrefix\n\nIf you need to change the name of the environment variables used to configure the deployment (for example, to deconflict with environment variables you don't control), you can specify a prefix:\n\n```js\nenvPrefix: \"MY_CUSTOM_\";\n```\n\n```\nMY_CUSTOM_HOST=127.0.0.1 \\\nMY_CUSTOM_PORT=4000 \\\nMY_CUSTOM_ORIGIN=https://my.site \\\nbun build/index.js\n```\n\n### development\n\nThis enables bun's error page. Default: `false`\n\n### dynamic_origin\n\nIf enabled use `PROTOCOL_HEADER` `HOST_HEADER` like origin. Default: `false`\n\n### xff_depth\n\nThe default value of XFF_DEPTH if environment is not set. Default: `1`\n\n## :spider_web: WebSocket Server\n\nhttps://bun.sh/docs/api/websockets\n\n```js\n// hooks.server.js\n\n/** @type {import(\"svelte-adapter-bun\").WebSocketHandler} */\nexport const handleWebsocket = {\n  open(ws) {\n    console.log(\"WebSocket opened\");\n    ws.send(\"Slava Ukraїni\");\n  },\n  /**\n   * @param {Request} request\n   * @param {Function} upgrade\n   */\n  upgrade(request, upgrade) {\n    const url = new URL(request.url);\n    if (url.pathname.startsWith(\"/ws\")) {\n      return upgrade(request);\n    }\n  },\n};\n```\n\n## Polyfills\n\nIf you need to use polyfills in your app, you can add them to the [`src/polyfills.js`](src/polyfills.js) file:\n\n```js\nclass Polifill {\n  constructor() {\n    ...\n  }\n}\n\nconst globals = {\n  Polifill,\n};\n```\n\n## :desktop_computer: Environment variables\n\n> Bun automatically reads configuration from `.env.local`, `.env.development` and `.env`\n\n### `PORT` and `HOST`\n\nBy default, the server will accept connections on `0.0.0.0` using port 3000. These can be customized with the `PORT` and `HOST` environment variables:\n\n```\nHOST=127.0.0.1 PORT=4000 bun build/index.js\n```\n\n### `ORIGIN`, `PROTOCOL_HEADER` and `HOST_HEADER`\n\nHTTP doesn't give SvelteKit a reliable way to know the URL that is currently being requested. The simplest way to tell SvelteKit where the app is being served is to set the `ORIGIN` environment variable:\n\n```\nORIGIN=https://my.site bun build/index.js\n```\n\nWith this, a request for the `/stuff` pathname will correctly resolve to `https://my.site/stuff`. Alternatively, you can specify headers that tell SvelteKit about the request protocol and host, from which it can construct the origin URL:\n\n```\nPROTOCOL_HEADER=x-forwarded-proto HOST_HEADER=x-forwarded-host bun build/index.js\n```\n\n> [`x-forwarded-proto`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-Proto) and [`x-forwarded-host`](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Forwarded-Host) are de facto standard headers that forward the original protocol and host if you're using a reverse proxy (think load balancers and CDNs). You should only set these variables if your server is behind a trusted reverse proxy; otherwise, it'd be possible for clients to spoof these headers.\n\n### `ADDRESS_HEADER` and `XFF_DEPTH`\n\nThe [RequestEvent](https://kit.svelte.dev/docs/types#additional-types-requestevent) object passed to hooks and endpoints includes an `event.clientAddress` property representing the client's IP address. [Bun.js haven't got functionality](https://github.com/Jarred-Sumner/bun/issues/518) to get client's IP address, so SvelteKit will receive `127.0.0.1` or if your server is behind one or more proxies (such as a load balancer), you can get an IP address from headers, so we need to specify an `ADDRESS_HEADER` to read the address from:\n\n```\nADDRESS_HEADER=True-Client-IP bun build/index.js\n```\n\n> Headers can easily be spoofed. As with `PROTOCOL_HEADER` and `HOST_HEADER`, you should [know what you're doing](https://adam-p.ca/blog/2022/03/x-forwarded-for/) before setting these.\n> If the `ADDRESS_HEADER` is `X-Forwarded-For`, the header value will contain a comma-separated list of IP addresses. The `XFF_DEPTH` environment variable should specify how many trusted proxies sit in front of your server. E.g. if there are three trusted proxies, proxy 3 will forward the addresses of the original connection and the first two proxies:\n\n```\n<client address>, <proxy 1 address>, <proxy 2 address>\n```\n\nSome guides will tell you to read the left-most address, but this leaves you [vulnerable to spoofing](https://adam-p.ca/blog/2022/03/x-forwarded-for/):\n\n```\n<spoofed address>, <client address>, <proxy 1 address>, <proxy 2 address>\n```\n\nInstead, we read from the _right_, accounting for the number of trusted proxies. In this case, we would use `XFF_DEPTH=3`.\n\n> If you need to read the left-most address instead (and don't care about spoofing) — for example, to offer a geolocation service, where it's more important for the IP address to be _real_ than _trusted_, you can do so by inspecting the `x-forwarded-for` header within your app.\n\n## License\n\n[MIT](LICENSE) © [Volodymyr Palamar](https://github.com/gornostay25)\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3589, 1523],
		[3596, 2692],
		[3603, 2255],
		[3610, 2484],
		[3617, 2231],
		[3624, 1677],
		[3631, 2225],
		[3638, 3248],
		[3645, 908],
		[3652, 1519],
		[3659, 2160],
		[3666, 1939],
		[3673, 1410],
		[3680, 1724],
		[3687, 1475],
		[3694, 1929],
		[3701, 2263],
		[3708, 1892],
		[3715, 2095],
		[3722, 1937],
		[3729, 2267],
		[3736, 1830],
		[3743, 2595],
		[3750, 2372],
		[3757, 1934],
		[3764, 2198],
		[3771, 1998],
		[3778, 2627],
		[3785, 2331],
		[3792, 1806],
		[3799, 2075],
		[3806, 1713],
		[3813, 1748],
		[3820, 1921],
		[3827, 2123],
		[3834, 2146],
		[3841, 2537],
		[3848, 2337],
		[3855, 2636],
		[3862, 2660],
		[3869, 2745],
		[3876, 2771],
		[3883, 3059],
		[3890, 2746],
		[3897, 3216],
		[3904, 3073],
		[3911, 3580],
		[3918, 3760],
		[3925, 3856],
		[3932, 4354],
		[3939, 3997],
		[3946, 3808],
		[3953, 4335],
		[3960, 4160],
		[3967, 4772],
		[3974, 4348],
		[3981, 3494],
		[3988, 3273],
		[3995, 3619],
		[4002, 3728],
		[4009, 2463],
		[4016, 2306],
		[4023, 3774],
		[4030, 3901],
		[4037, 4081],
		[4044, 5046],
		[4051, 4939],
		[4058, 5114],
		[4065, 4398],
		[4072, 4894],
		[4079, 5181],
		[4086, 5262],
		[4093, 5020],
		[4100, 4808],
		[4107, 4780],
		[4114, 4453],
		[4121, 3548],
		[4128, 3866]
	]
}
