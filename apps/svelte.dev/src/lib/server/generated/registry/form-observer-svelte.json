{
	"name": "@form-observer/svelte",
	"description": "Provide form validation and observation utilities for Svelte apps.",
	"repo_url": "https://github.com/enthusiastic-js/form-observer",
	"authors": ["itenthusiasm"],
	"homepage": "https://github.com/enthusiastic-js/form-observer#readme",
	"downloads": 38,
	"updated": "2024-05-05T17:20:03.222Z",
	"tags": ["miscellaneous"],
	"github_stars": 10,
	"typescript": true,
	"version": "0.9.1",
	"svelte_range": "^4.2.13",
	"last_rune_check_version": "0.9.1",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@form-observer/svelte",
				"version": "0.9.1",
				"size": 26600
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# Form Observer: Svelte Integration\n\nA Svelte-specific utility package that provides a more ergonomic developer experience for the complex classes in [`@form-observer/core`](https://www.npmjs.com/package/@form-observer/core). For convenience, this package also exposes all of the utilities in `@form-observer/core`.\n\nWhat distinguishes `@form-observer/svelte` from `@form-observer/core` is the enhanced developer experience that it provides for the `FormValidityObserver`. The core `FormValidityObserver` allows you to validate form fields as users interact with them, and to configure custom error messages for those fields. The `createFormValidityObserver` function provided by `@form-observer/svelte` goes a step further by allowing you to configure the constraints for your fields as well.\n\n## Features and Benefits\n\n<!--\n  Note: This section should have the benefits listed in `@form-observer/core`, but the details should be catered to Svelte.\n-->\n\n- **Performant**: The `Form Observer` leverages [event delegation](https://gomakethings.com/why-is-javascript-event-delegation-better-than-attaching-events-to-each-element/) to minimize memory usage. Moreover, it avoids any of the overhead that could come from relying on state.\n- **No External Dependencies**: The `Form Observer` packs _a lot_ of power into a _tiny_ bundle to give your users the best experience.\n- **Simple and Familiar API**: The `Form Observer` gives you a clear, easy-to-use API that has a similar feel to the standardized observers, such as the [`Mutation Observer`](https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver) and the [`Intersection Observer`](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver).\n- [**Web Component Support**](https://developer.mozilla.org/en-US/docs/Web/API/Web_components)\n- **Flexible**: Without requiring any additional setup, the `Form Observer` allows you to work with fields dynamically added to (or removed from) your forms, fields [externally associated](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#form) with your forms, and more.\n- **Easily Extendable**: If you have a set of sophisticated form logic that you'd like to reuse, you can [extend](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes/extends) the `Form Observer` to encapsulate all of your functionality. We provide a [local storage](https://github.com/enthusiastic-js/form-observer/tree/main/docs/form-storage-observer) solution and a [form validation](https://github.com/enthusiastic-js/form-observer/blob/main/docs/form-validity-observer/integrations/svelte.md) solution out of the box.\n\n## Install\n\n```\nnpm install @form-observer/svelte\n```\n\n## Quick Start\n\n```svelte\n<form id=\"example\" use:autoObserve on:submit={handleSubmit}>\n  <h1>Feedback Form</h1>\n\n  <!-- The browser's default error messages for `#name` will be accessibly displayed inside `#name-error` -->\n  <label for=\"name\">Full Name</label>\n  <input id=\"name\" name=\"name\" type=\"text\" required aria-describedby=\"name-error\" />\n  <div id=\"name-error\"></div>\n\n  <!-- Custom error messages for `#email` will be accessibly displayed inside `#email-error` -->\n  <label for=\"email\">Email</label>\n  <input\n    id=\"email\"\n    {...configure(\"email\", {\n      type: { value: \"email\", message: \"Email is invalid\" },\n      required: { value: true, message: \"You MUST allow us to stalk you!\" },\n    })}\n    aria-describedby=\"email-error\"\n  />\n  <div id=\"email-error\"></div>\n\n  <!-- A custom error message will be accessibly displayed for the `pattern` constraint. -->\n  <!-- The browser's default error message will be accessibly displayed for the `required` constraint. -->\n  <label for=\"donation\">Donation</label>\n  <input\n    id=\"donation\"\n    {...configure(\"donation\", { pattern: { value: \"\\\\d+\", message: \"Please provide a valid number\" } })}\n    inputmode=\"numeric\"\n    required\n    aria-describedby=\"donation-error\"\n  />\n  <div id=\"donation-error\"></div>\n</form>\n\n<label for=\"comments\">Comments</label>\n<textarea id=\"comments\" name=\"comments\" form=\"example\" minlength=\"30\" aria-describedby=\"comments-error\"></textarea>\n<div id=\"comments-error\"></div>\n\n<button type=\"submit\" form=\"example\">Submit</button>\n\n<script>\n  import { createFormValidityObserver } from \"@form-observer/svelte\";\n  const { autoObserve, configure, validateFields } = createFormValidityObserver(\"focusout\");\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const success = validateFields({ focus: true });\n\n    if (success) {\n      // Submit data to server\n    }\n  }\n</script>\n```\n\nFor more details on what `createFormValidityObserver` can do (like custom validation, manual error handling, and more), see our [documentation](https://github.com/enthusiastic-js/form-observer/blob/main/docs/form-validity-observer/integrations/svelte.md).\n\n## Other Uses\n\nIn addition to providing an enhanced version of the `FormValidityObserver`, `@form-observer/svelte` exposes all of the utilities found in `@form-observer/core`. You can learn more about these tools from our [core documentation](https://github.com/enthusiastic-js/form-observer/tree/main/docs).\n\n### `FormObserver`\n\n```svelte\n<form id=\"example\" bind:this={form} on:submit={handleSubmit}>\n  <!-- Internal Fields -->\n</form>\n\n<!-- External Fields -->\n\n<script>\n  import { onMount } from \"svelte\";\n  import { FormObserver } from \"@form-observer/svelte\";\n\n  let form;\n  const observer = new FormObserver(\"focusout\", (event) => event.target.setAttribute(\"data-visited\", String(true)));\n\n  onMount(() => {\n    observer.observe(form);\n    return () => observer.disconnect();\n  });\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    const visitedFields = Array.from(event.currentTarget.elements).filter((e) => e.hasAttribute(\"data-visited\"));\n    // Do something with visited fields...\n  }\n</script>\n```\n\n### `FormStorageObserver`\n\n```svelte\n<form id=\"example\" bind:this={form} on:submit={handleSubmit}>\n  <!-- Internal Fields -->\n</form>\n\n<!-- External Fields -->\n\n<script>\n  import { onMount } from \"svelte\";\n  import { FormStorageObserver } from \"@form-observer/svelte\";\n\n  let form;\n  const observer = new FormStorageObserver(\"change\");\n\n  onMount(() => {\n    observer.observe(form);\n    return () => observer.disconnect();\n  });\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    FormStorageObserver.clear(event.currentTarget); // User no longer needs their progress saved after a form submission\n  }\n</script>\n```\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3589, 169],
		[3596, 202],
		[3603, 27],
		[3610, 13],
		[3617, 9],
		[3624, 124],
		[3631, 28],
		[3638, 69],
		[3645, 96],
		[3652, 10],
		[3659, 23],
		[3666, 40],
		[3673, 3],
		[3680, 5],
		[3687, 2],
		[3694, 93],
		[3701, 2],
		[3708, 15],
		[3715, 7],
		[3722, 11],
		[3729, 18],
		[3736, 6],
		[3743, 9],
		[3750, 37],
		[3757, 79],
		[3764, 18],
		[3771, 111],
		[3778, 59],
		[3785, 12],
		[3792, 3],
		[3799, 1],
		[3806, 5],
		[3813, 7],
		[3827, 2],
		[3834, 36],
		[3841, 12],
		[3848, 1],
		[3862, 32],
		[3869, 3],
		[3876, 1],
		[3883, 1],
		[3890, 1],
		[3897, 24],
		[3904, 1],
		[3911, 7],
		[3918, 10],
		[3925, 2],
		[3932, 1],
		[3939, 7],
		[3946, 4],
		[3953, 4],
		[3960, 1],
		[3967, 1],
		[3974, 6],
		[3981, 1],
		[3988, 5],
		[3995, 3],
		[4002, 1],
		[4016, 33],
		[4023, 5],
		[4037, 3],
		[4044, 11],
		[4051, 10],
		[4058, 1],
		[4065, 1],
		[4072, 94],
		[4079, 71],
		[4086, 20],
		[4093, 32],
		[4100, 32],
		[4107, 99],
		[4114, 38],
		[4121, 15],
		[4128, 3]
	],
	"esm": false,
	"cjs": true
}
