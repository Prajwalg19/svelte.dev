{
	"name": "svelte-lingui",
	"description": "Translate Svelte apps using Lingui for internationalization.",
	"repo_url": "https://github.com/hyperlab/svelte-lingui",
	"authors": ["mrlundis"],
	"downloads": 5,
	"updated": "2019-11-04T16:39:26.182Z",
	"tags": ["integration", "content"],
	"github_stars": 3,
	"homepage": "",
	"typescript": false,
	"version": "1.1.0",
	"svelte_range": "^3.12.1",
	"last_rune_check_version": "1.1.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-lingui",
				"version": "1.1.0",
				"size": 8451
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# svelte-lingui â€“ i10n for Svelte\n\nThis is a first stab at building a reusable module for internationalization,\nlocalization and translation of Svelte and Sapper apps.\n\n## Installation\n\n```sh\nyarn add --dev svelte-lingui # or npm i --save-dev svelte-lingui\n```\n\n## Usage\n\nWrap your app in a provider:\n```jsx\n<Provider config={{ ...LinguiConfig }}>\n  <App />\n</Provider>\n```\n\nUse `Text` component for messages:\n```jsx\n<Text message={'Hello {name}'} props={{ name }} />\n```\n\nOr use context to access the `i18n` object from Lingui directly:\n```js\nconst i18n = getContext(\"i18n\");   // returns a store\n$i18n._(message, props)\n```\n\nCheckout the code inside `/dev` for a full example.\n\n## Development\n\nThere is a dev app available inside the `/dev` folder that can be used for\ntesting and experimenting with the components. To start it simply run:\n\n```sh\nyarn dev # or npm run dev\n```\n\n## Todo\n\n- [ ] Evaluate other i18n/translation libraries (fluent + fluent-compiler, ttag, etc)\n- [ ] Implement language detection/negotiation (client side + sapper middleware)\n- [ ] Sapper routing\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3596, 4],
		[3603, 5],
		[3610, 4],
		[3617, 1],
		[3631, 1],
		[3659, 1],
		[3666, 4],
		[3673, 1],
		[3680, 1],
		[3701, 1],
		[3708, 1],
		[3729, 4],
		[3736, 1],
		[3750, 2],
		[3757, 2],
		[3771, 3],
		[3778, 1],
		[3785, 1],
		[3792, 5],
		[3799, 3],
		[3806, 2],
		[3813, 1],
		[3834, 2],
		[3841, 3],
		[3848, 2],
		[3855, 1],
		[3862, 15],
		[3883, 2],
		[3890, 4],
		[3904, 1],
		[3911, 1],
		[3918, 3],
		[3925, 1],
		[3932, 2],
		[3960, 1],
		[3981, 2],
		[3988, 3],
		[4016, 1],
		[4023, 2],
		[4030, 6],
		[4037, 13],
		[4044, 4],
		[4051, 1],
		[4058, 1],
		[4065, 1],
		[4093, 8],
		[4100, 5],
		[4107, 3],
		[4114, 5],
		[4121, 3],
		[4128, 5]
	],
	"esm": true,
	"cjs": false
}
