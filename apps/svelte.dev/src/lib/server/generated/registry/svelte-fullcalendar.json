{
	"name": "svelte-fullcalendar",
	"description": "Svelte component wrapper around FullCalendar.",
	"repo_url": "https://github.com/YogliB/svelte-fullcalendar",
	"authors": ["yoglib"],
	"homepage": "https://github.com/YogliB/svelte-fullcalendar#readme",
	"downloads": 938,
	"updated": "2023-09-14T15:26:31.125Z",
	"tags": ["ui"],
	"github_stars": 198,
	"typescript": true,
	"version": "3.0.0",
	"svelte_range": "4.2.0",
	"last_rune_check_version": "3.0.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-fullcalendar",
				"version": "3.0.0",
				"size": 10702
			},
			{
				"name": "@fullcalendar/interaction",
				"version": "6.1.17",
				"size": 329441
			}
		],
		"dependencies": [[0, 1]],
		"circular": []
	},
	"readme": "[![Known Vulnerabilities](https://snyk.io/test/github/YogliB/svelte-fullcalendar/badge.svg)](https://snyk.io/test/github/YogliB/svelte-fullcalendar)\n[![install size](https://badgen.net/packagephobia/install/svelte-fullcalendar)](https://packagephobia.now.sh/result?p=svelte-fullcalendar)\n[![npm package version](https://badgen.net/npm/v/svelte-fullcalendar)](https://npm.im/svelte-fullcalendar)\n[![Contributor Covenant](https://img.shields.io/badge/Contributor%20Covenant-v1.4%20adopted-ff69b4.svg)](CODE-OF-CONDUCT.md)\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](http://makeapullrequest.com)\n[![Gitpod ready-to-code](https://img.shields.io/badge/Gitpod-ready--to--code-blue?logo=gitpod)](https://gitpod.io/#https://github.com/YogliB/svelte-fullcalendar)\n\n# svelte-fullcalendar\n\n## A Svelte 3 component-wrapper for [FullCalendar](https://fullcalendar.io)\n\n### Please @mention me for any issue (I'm unwatching for [renovate](https://renovatebot.com) reasons)\n\nFullCalendar (almost) seamlessly integrates with the [Svelte](https://svelte.dev) JavaScript compiler and the [SvelteKit](https://kit.svelte.dev/) JavaScript framework. It provides a component that matches the functionality of FullCalendar's standard API.\n\nThis guide does not go into depth about initializing a Svelte/SvelteKit project. Please consult [the example](https://github.com/YogliB/svelte-fullcalendar/tree/main/examples/kit) for that.\n\n## First steps\n\nThe first step is to install the FullCalendar-related dependencies. You'll need the Svelte adapter and some plugins to handle the styles.\n\n```bash\nnpm install @fullcalendar/core @fullcalendar/common\nnpm install --save-dev svelte-preprocess svelte-fullcalendar\n```\n\nThen install any additional plugins you plan to use:\n\n```bash\nnpm install @fullcalendar/daygrid\n```\n\nAfter that you should update your `svelte.config.js`:\n\n```javascript\nimport adapter from '@sveltejs/adapter-auto';\nimport preprocess from 'svelte-preprocess';\n\n/** @type {import('@sveltejs/kit').Config} */\nconst config = {\n\t// Consult https://github.com/sveltejs/svelte-preprocess\n\t// for more information about preprocessors\n\tpreprocess: preprocess(),\n\n\tkit: {\n\t\tadapter: adapter(),\n+++\t\tvite: {\n+++\t\t\tresolve: {\n+++\t\t\t\tdedupe: ['@fullcalendar/common'],\n+++\t\t\t},\n+++\t\t\toptimizeDeps: {\n+++\t\t\t\tinclude: ['@fullcalendar/common'],\n+++\t\t\t},\n\t\t},\n\t},\n};\n\nexport default config;\n```\n\n-   This is crutial for the component to work with SvelteKit.\n\nYou may then begin to write a parent component that leverages the `<FullCalendar>` component:\n\n```html\n<script lang=\"ts\">\n\timport type { CalendarOptions } from 'svelte-fullcalendar';\n\timport FullCalendar from 'svelte-fullcalendar';\n\timport daygridPlugin from '@fullcalendar/daygrid';\n\n\tlet options: CalendarOptions = {\n\t\tinitialView: 'dayGridMonth',\n\t\tplugins: [daygridPlugin],\n\t};\n</script>\n\n<FullCalendar {options} />\n```\n\n-   You must initialized your calendar with at least one plugin that provides a view!\n\n## Example\n\n[Here you can find a working example](https://github.com/YogliB/svelte-fullcalendar/tree/master/examples/kit).\n\n## Props and Emitted Events\n\nFor the FullCalendar connector, there is no distinction between props and events. Everything is passed into the master `options` object as key-value pairs. Here is an example that demonstrates passing in an `events` array and a `dateClick` handler:\n\n```html\n<script>\n\tlet options = {\n\t\tdateClick: (event) => alert('date click! ' + event.dateStr),\n\t\tevents: [\n\t\t\t{ title: 'event 1', date: '2019-04-01' },\n\t\t\t{ title: 'event 2', date: '2019-04-02' },\n\t\t],\n\t\tinitialView: dayGridMonth,\n\t\tplugins: [...],\n\t};\n</script>\n\n<FullCalendar {options} />\n```\n\n## Modifying Options\n\nYou can modify your calendar’s options after initialization by reassigning them within the options object and reassign the `options` object. This is an example of changing the `weekends` options:\n\n```html\n<script>\n\timport FullCalendar from 'svelte-fullcalendar';\n\n\tlet options = {\n\t\tinitialView: dayGridMonth,\n\t\tplugins: [...],\n\t\tweekends: false,\n\t};\n\n\tfunction toggleWeekends() {\n\t\toptions = {\n\t\t\t\t...options,\n\t\t\t\tweekends: !options.weekends\n\t\t};\n\t}\n</script>\n\n<button on:click=\"{toggleWeekends}\">toggle weekends</button>\n<FullCalendar {options} />\n```\n\n## Calendar API\n\nHopefully you won’t need to do it often, but sometimes it’s useful to access the underlying `Calendar` object for raw data and methods.\n\nThis is especially useful for controlling the current date. The [initialDate](https://fullcalendar.io/docs/initialDate) prop will set the initial date of the calendar, but to change it after that, you’ll need to rely on the [date navigation methods](https://fullcalendar.io/docs/date-navigation).\n\nTo do something like this, you’ll need to get ahold of the component’s ref (short for “reference”). In the template:\n\n```html\n<FullCalendar bind:this=\"{calendarRef}\" {options} />\n```\n\nOnce you have the ref, you can get the underlying Calendar object via the getApi method:\n\n```html\n<script>\n\tlet calendarRef;\n\n\tfunction next() {\n\t\tconst calendarApi = calendarRef.getAPI();\n\t\tcalendarApi.next();\n\t}\n</script>\n```\n\n## Scheduler\n\nHow do you use [FullCalendar Scheduler's](https://fullcalendar.io/docs/premium) premium plugins with Svelte? They are no different than any other plugin. Just follow the same instructions as you did `dayGridPlugin` in the above example. Also, make sure to include your `schedulerLicenseKey`:\n\n```html\n<script>\n\timport FullCalendar from 'svelte-fullcalendar';\n\n\tlet options = {\n\t\tplugins: [(await import('@fullcalendar/resource-timeline')).default],\n\t\tschedulerLicenseKey: 'your-license-key',\n\t};\n</script>\n\n<FullCalendar {options} />\n```\n\n## Draggable external events\n\nYou'll need to install the `interactionPlugin`:\n\n```bash\nnpm install @fullcalendar/interaction\n```\n\nSee the [official docs](https://fullcalendar.io/docs/external-dragging) for all available props.\n\nHere is a simple usage example:\n\n```html\n<script>\n\timport FullCalendar, { Draggable } from 'svelte-fullcalendar';\n\timport resourceTimelinePlugin from '@fullcalendar/resource-timeline';\n\timport interactionPlugin from '@fullcalendar/interaction';\n\n\tlet options = {\n\t\tschedulerLicenseKey: \"XXX\",\n\t\tplugins: [resourceTimelinePlugin, interactionPlugin],\n\t\tdroppable: true\n\t};\n</script>\n\n<Draggable eventData={{ title: 'my event', duration: '02:00' }}>\n\tDrag me!\n</Draggable>\n\n<FullCalendar {options}/>\n```\n\n## License\n\nThis component is released under the MIT license, same as the FullCalendar library.\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 481],
		[3596, 573],
		[3603, 628],
		[3610, 513],
		[3617, 551],
		[3624, 954],
		[3631, 508],
		[3638, 645],
		[3645, 353],
		[3652, 439],
		[3659, 657],
		[3666, 678],
		[3673, 847],
		[3680, 419],
		[3687, 409],
		[3694, 332],
		[3701, 586],
		[3708, 1061],
		[3715, 958],
		[3722, 628],
		[3729, 509],
		[3736, 513],
		[3743, 418],
		[3750, 565],
		[3757, 872],
		[3764, 766],
		[3771, 891],
		[3778, 692],
		[3785, 1031],
		[3792, 932],
		[3799, 1179],
		[3806, 1448],
		[3813, 972],
		[3820, 460],
		[3827, 465],
		[3834, 448],
		[3841, 450],
		[3848, 473],
		[3855, 507],
		[3862, 632],
		[3869, 603],
		[3876, 463],
		[3883, 592],
		[3890, 714],
		[3897, 650],
		[3904, 664],
		[3911, 692],
		[3918, 750],
		[3925, 664],
		[3932, 586],
		[3939, 492],
		[3946, 543],
		[3953, 406],
		[3960, 531],
		[3967, 444],
		[3974, 532],
		[3981, 486],
		[3988, 610],
		[3995, 516],
		[4002, 587],
		[4009, 422],
		[4016, 384],
		[4023, 643],
		[4030, 2293],
		[4037, 909],
		[4044, 1071],
		[4051, 2297],
		[4058, 2136],
		[4065, 1695],
		[4072, 2548],
		[4079, 2011],
		[4086, 1453],
		[4093, 1547],
		[4100, 1419],
		[4107, 1229],
		[4114, 938],
		[4121, 1044],
		[4128, 789]
	],
	"esm": true,
	"cjs": false
}
