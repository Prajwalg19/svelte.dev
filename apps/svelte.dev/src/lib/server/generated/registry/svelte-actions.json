{
	"name": "svelte-actions",
	"description": "Provide reusable Svelte actions for various UI interactions.",
	"repo_url": "https://github.com/sw-yx/svelte-actions",
	"authors": ["sw-yx"],
	"homepage": "https://github.com/sw-yx/svelte-actions#readme",
	"downloads": 13,
	"updated": "2022-03-07T21:09:39.307Z",
	"tags": ["miscellaneous"],
	"github_stars": 226,
	"typescript": true,
	"version": "0.2.2",
	"svelte_range": "^3.29.4",
	"last_rune_check_version": "0.2.2",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-actions",
				"version": "0.2.2",
				"size": 56476
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# svelte-actions\n\nA Prototype svelte actions for inclusion into official actions in future. [See RFC](https://github.com/sveltejs/rfcs/pull/24) and [Discuss High Level Policy](https://github.com/sw-yx/svelte-actions/issues/7).\n\n> ⚠️ Tests are kindly provided by [@geoffrich](https://github.com/sw-yx/svelte-actions/pull/18) - but do not rely on this library yet! APIs may change - this is a strawman for discussion.\n\n## Install Instructions\n\n```bash\nnpm i svelte-actions\n```\n\nAvailable actions:\n\n| name              | description                                                                                                                                                            |\n|-------------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| `clickOutside`    | [Demo](https://svelte.dev/repl/dae848c2157e48ab932106779960f5d5?version=3.19.2) - Call callback when user clicks outside a given element.                              |\n| `longpress`       | [Demo](https://svelte.dev/tutorial/adding-parameters-to-actions) - Creates `longpress` event when mousedown above `duration` milliseconds.                             |\n| `pannable`        | [Demo](https://svelte.dev/tutorial/actions) - Creates `panstart`, `panmove`, `panend` events so you can drag elements.                                                 |\n| `lazyload`        | [Demo](https://svelte.dev/repl/f12988de576b4bf9b541a2a59eb838f6?version=3.23.2) - Lazily attach properties to any DOM element (e.g. `<img>`) when it is in the window. |\n| `preventTabClose` | [Demo](https://svelte.dev/repl/a95db12c1b46433baac2817a0963dc93) - Prevent current tab from being closed by user.                                                      |\n| `shortcut`        | [Demo](https://svelte.dev/repl/aca51811429c4127b1e7ff7eb67a172f?version=3.38.2) - Add a keyboard shortcut to a div or a button.                                                       |\n\n\n## Included Actions\n\n### `clickOutside`\n\n```ts\nexport function clickOutside(node: HTMLElement, params: {\n\tenabled: boolean, \n\tcallback?: (node?: HTMLElement) => void;\n}): ReturnType<Action>\n```\n\nCall callback when user clicks outside a given element.\n\nDemo: https://svelte.dev/repl/dae848c2157e48ab932106779960f5d5?version=3.19.2\n\n\n```svelte\n<script>\n  import {clickOutside} from 'svelte-actions'\n  let open = true;\n</script>\n\n\n<div use:clickOutside={{ enabled: open, callback: () => open = false }}>\n   <button on:click={() => open = true}>Open</button>\n   {#if open}\n    <span>\n      Opened\n    </span>\n  {/if}\n</div>\n```\n\nDiscuss this action: https://github.com/sw-yx/svelte-actions/issues/4\n\n### `longpress`\n\n`export function longpress(node: HTMLElement, duration: number): ReturnType<Action>`\n\nCreates `longpress` event when mousedown above `duration` milliseconds.\n\nDemo: https://svelte.dev/tutorial/adding-parameters-to-actions\n\n```svelte\n<script>\n  import {longpress} from 'svelte-actions'\n</script>\n\n<button use:longpress={duration}\n    on:longpress=\"{() => pressed = true}\"\n    on:mouseenter=\"{() => pressed = false}\"\n  >press and hold</button>\n```\n\nDiscuss this action: https://github.com/sw-yx/svelte-actions/issues/3\n\n### `pannable`\n\n`export function pannable(node: HTMLElement): ReturnType<Action>`\n\nCreates `panstart`, `panmove`, `panend` events so you can drag elements. \n\nDemo: https://svelte.dev/tutorial/actions\n\n```svelte\n<div class=\"box\"\n\tuse:pannable\n\ton:panstart={handlePanStart}\n\ton:panmove={handlePanMove}\n\ton:panend={handlePanEnd}\n></div>\n```\n\nThe events contain `clientX` and `clientY` coordinates (or diffs in the case of `panmove`):\n\n- `panstart` event: `{ detail: { x, y }}`\n- `panmove` event: `{ detail: { dx, dy }}`\n- `panend` event: `{ detail: { x, y }}`\n\nDiscuss this action: https://github.com/sw-yx/svelte-actions/issues/6\n\n### `lazyload`\n\n`export function lazyLoad(node: HTMLElement, attributes: Object): ReturnType<Action>`\n\nLazily attach properties to any DOM element when it is in the window. Useful for lazy loading images, and other properties.\n\nDemo: https://svelte.dev/repl/f12988de576b4bf9b541a2a59eb838f6?version=3.23.2\n\n```svelte\n<script>\n  import {lazyload} from 'svelte-actions'\n</script>\n\n<img use:lazyLoad={{src:\"/myimage\"}} alt=\"\">\n```\n\nDiscuss this action: https://github.com/sw-yx/svelte-actions/issues/2\n\n### `preventTabClose`\n\n`export function preventTabClose(_, enabled: boolean)`\n\nPrevent current tab from being closed by user.\n\nDemo: https://svelte.dev/repl/a95db12c1b46433baac2817a0963dc93\n\n```svelte\n<script>\n  import {preventTabClose} from 'svelte-actions'\n  let isOn = false\n</script>\n\n<button use:preventTabClose={isOn} on:click={() => isOn = !isOn}>Click me</button>\n```\n\nDiscuss this action: https://github.com/sw-yx/svelte-actions/pull/11\n\n### `shortcut`\n\n```ts\nexport function shortcut(node: Action, {\n  control?: boolean;\n  shift?: boolean;\n  alt?: boolean;\n  code: string;\n  callback?: (node?: HTMLElement) => void;\n})\n```\n\nAdd a keyboard shortcut to a div or a button.\n\nIt either calls a callback or clicks on the node it was put on.\n\nDemo: https://svelte.dev/repl/aca51811429c4127b1e7ff7eb67a172f?version=3.38.2\n\n```svelte\n<script>\n  import {shortcut} from 'svelte-actions'\n\tlet buttonCount = 0, divCount = 0;\n</script>\n\n<button use:shortcut={{shift: true, code: 'Digit1'}} on:click={() => buttonCount++}>\n\tTriggers a click on the button (Shift + 1)\t\t\t\t\n</button>\n\nClicked: {buttonCount}\n```\n\n## Future actions considering adding\n\nYou can vote for or discuss proposed actions:\n\n- `closeOnEscape`/`closeOnScroll`/`closeOnFocusOutside`: https://github.com/sveltejs/rfcs/pull/24#issuecomment-645094235\n- `selectTextOnFocus`/`clearTextOnEscape`\n- `blurOnEscape`/`blurOnEnter`\n- `viewport`: creates `enterViewport`/`leaveViewport` events https://github.com/sveltejs/rfcs/pull/24#issuecomment-645392769\n- `activeLink`: adds a class if the current link is \"active\" https://github.com/sw-yx/svelte-actions/issues/13#issuecomment-767844419\n- `focus` as a JS version of `autofocus` HTML attribute https://github.com/sw-yx/svelte-actions/issues/22\n\nClick to vote:\n\n[![](https://api.gh-polls.com/poll/01EP26KTTPK3XJMAV132PP1Z6P/viewport)](https://api.gh-polls.com/poll/01EP26KTTPK3XJMAV132PP1Z6P/viewport/vote)\n[![](https://api.gh-polls.com/poll/01EP26KTTPK3XJMAV132PP1Z6P/selectTextOnFocus%2CclearTextOnEscape)](https://api.gh-polls.com/poll/01EP26KTTPK3XJMAV132PP1Z6P/selectTextOnFocus%2CclearTextOnEscape/vote)\n[![](https://api.gh-polls.com/poll/01EP26KTTPK3XJMAV132PP1Z6P/blurOnEscape%2CblurOnEnter)](https://api.gh-polls.com/poll/01EP26KTTPK3XJMAV132PP1Z6P/blurOnEscape%2CblurOnEnter/vote)\n[![](https://api.gh-polls.com/poll/01EP26KTTPK3XJMAV132PP1Z6P/closeOn%7BEscape%2CScroll%2CFocusOutside%7D)](https://api.gh-polls.com/poll/01EP26KTTPK3XJMAV132PP1Z6P/closeOn%7BEscape%2CScroll%2CFocusOutside%7D/vote)\n\n\n\n[Propose a new action here!](https://github.com/sw-yx/svelte-actions/issues/new)\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3589, 2],
		[3596, 7],
		[3603, 17],
		[3610, 8],
		[3617, 2],
		[3624, 3],
		[3631, 2],
		[3638, 7],
		[3645, 3],
		[3659, 2],
		[3666, 7],
		[3673, 7],
		[3680, 7],
		[3687, 3],
		[3694, 3],
		[3701, 5],
		[3708, 4],
		[3722, 4],
		[3729, 12],
		[3736, 1],
		[3743, 4],
		[3750, 7],
		[3757, 4],
		[3764, 2],
		[3771, 17],
		[3778, 7],
		[3785, 8],
		[3792, 2],
		[3799, 4],
		[3806, 30],
		[3813, 8],
		[3820, 13],
		[3827, 4],
		[3834, 3],
		[3841, 13],
		[3848, 2],
		[3855, 36],
		[3862, 1],
		[3876, 2],
		[3883, 8],
		[3890, 8],
		[3897, 3],
		[3904, 14],
		[3911, 1],
		[3918, 3],
		[3925, 1],
		[3932, 1],
		[3939, 4],
		[3946, 3],
		[3953, 5],
		[3960, 8],
		[3967, 6],
		[3981, 8],
		[3988, 1],
		[3995, 6],
		[4009, 3],
		[4016, 1],
		[4023, 2],
		[4030, 6],
		[4037, 26],
		[4044, 17],
		[4051, 18],
		[4058, 8],
		[4065, 9],
		[4072, 3],
		[4079, 1],
		[4086, 7],
		[4093, 12],
		[4100, 8],
		[4107, 12],
		[4114, 13],
		[4121, 10],
		[4128, 5]
	],
	"esm": true,
	"cjs": false
}
