{
	"name": "svbuild",
	"description": "Build Svelte files without bundling, useful for specific environments.",
	"repo_url": "https://github.com/wheezard/svbuild",
	"authors": ["wheezard"],
	"homepage": "https://github.com/wheezard/svbuild#readme",
	"downloads": 4,
	"updated": "2023-01-25T13:03:13.546Z",
	"tags": ["tooling"],
	"github_stars": 2,
	"typescript": true,
	"version": "2.1.0",
	"svelte_range": "^3.46.4",
	"last_rune_check_version": "2.1.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svbuild",
				"version": "2.1.0",
				"size": 25063
			},
			{
				"name": "acorn",
				"version": "8.14.1",
				"size": 547473
			},
			{
				"name": "chalk",
				"version": "5.4.1",
				"size": 44242
			},
			{
				"name": "chokidar",
				"version": "3.6.0",
				"size": 90200
			},
			{
				"name": "braces",
				"version": "3.0.3",
				"size": 44635
			},
			{
				"name": "fill-range",
				"version": "7.1.1",
				"size": 16743
			},
			{
				"name": "to-regex-range",
				"version": "5.0.1",
				"size": 22939
			},
			{
				"name": "is-number",
				"version": "7.0.0",
				"size": 9615
			},
			{
				"name": "is-glob",
				"version": "4.0.3",
				"size": 13609
			},
			{
				"name": "is-extglob",
				"version": "2.1.1"
			},
			{
				"name": "anymatch",
				"version": "3.1.3",
				"size": 9654
			},
			{
				"name": "picomatch",
				"version": "2.3.1",
				"size": 89952
			},
			{
				"name": "normalize-path",
				"version": "3.0.0",
				"size": 9219
			},
			{
				"name": "readdirp",
				"version": "3.6.0",
				"size": 20472
			},
			{
				"name": "glob-parent",
				"version": "5.1.2",
				"size": 12134
			},
			{
				"name": "is-binary-path",
				"version": "2.1.0",
				"size": 3078
			},
			{
				"name": "binary-extensions",
				"version": "2.3.0",
				"size": 5030
			},
			{
				"name": "commander",
				"version": "9.5.0",
				"size": 173252
			},
			{
				"name": "fs-extra",
				"version": "10.1.0",
				"size": 63278
			},
			{
				"name": "jsonfile",
				"version": "6.1.0",
				"size": 19750
			},
			{
				"name": "universalify",
				"version": "2.0.1",
				"size": 4675
			},
			{
				"name": "graceful-fs",
				"version": "4.2.11",
				"size": 32535
			},
			{
				"name": "svelte",
				"version": "3.59.2",
				"size": 10624206
			},
			{
				"name": "url-join",
				"version": "5.0.0",
				"size": 4742
			}
		],
		"dependencies": [
			[0, 1],
			[0, 2],
			[0, 3],
			[3, 4],
			[4, 5],
			[5, 6],
			[6, 7],
			[3, 8],
			[8, 9],
			[3, 10],
			[10, 11],
			[10, 12],
			[3, 13],
			[13, 11],
			[3, 14],
			[14, 8],
			[3, 15],
			[15, 16],
			[3, 12],
			[0, 17],
			[0, 18],
			[18, 19],
			[19, 20],
			[18, 21],
			[18, 20],
			[0, 22],
			[0, 23]
		],
		"circular": []
	},
	"readme": "# svbuild (beta)\r\n\r\n>  A simple tool that builds your svelte files without bundling them.\r\n\r\n## Why\r\n\r\nSometimes, bundlers are a bit too much. They have a lot of configuration and the output they produce is sometimes unnecessary. For example, when you're building an embedded application in CEF or in Electron, you know for a fact that the latest js features are supported. This is a tool that will build your dependencies for svelte and produce browser-friendly imports: `import { onMount } from \"svelte\"` becomes `import { onMount } from \"../modules/svelte/index.mjs\"`.\r\n\r\nThis tool is **not** for making websites. For that, use `SvelteKit` or a bundler.\r\n\r\n## Getting started\r\n\r\n- Install svbuild globally by running `npm i svbuild -g` or locally: `npm i svbuild -D`\r\n\r\n- Create a folder with two subfolders: `/src` and `/out`.\r\n\r\n- In the root of this folder place a `package.json` with `\"type\": \"module\"`.\r\n\r\n- In the root also create a file called `svbuild.config.js`. What to write in it is explained below.\r\n\r\n- Write your svelte code in the src dir.\r\n\r\n- Run `svbuild`.\r\n\r\n- Enjoy.\r\n\r\n## Configuration\r\n\r\nAll configuration is in the `svbuild.config.js`.\r\n\r\nThis is the type for the config file:\r\n\r\n```ts\r\nexport type Config = {\r\n  /** Path to source directory with svelte code */\r\n  src: string,\r\n  /** Path to output directory */\r\n  out: string,\r\n  /** Svelte compiler options */\r\n  compilerOptions?: {\r\n    /** Whether to generate code with ES6 imports and exports. Note that svbuild doesn't provide a `require()` funtion! */\r\n    esm?: boolean,\r\n    /** Developer mode */\r\n    dev?: boolean,\r\n    /** Path to the svelte module. Ignored if `moduleOptions.buildSvelte` is `true` */\r\n    sveltePath?: string,\r\n    /** Whether to set accessors on components' states */\r\n    accessors?: boolean,\r\n    /** Tells the compiler that you promise not to mutate any objects. This allows it to be less conservative about checking whether values have changed. */\r\n    immutable?: boolean,\r\n    /** A number that tells Svelte to break the loop if it blocks the thread for more than `loopGuardTimeout` ms. This is useful to prevent infinite loops. Only available when `dev: true` */\r\n    loopGuardTimeout?: number\r\n  },\r\n  /** Preprocessors allow for integration of different languages and features into svelte. */\r\n  preprocess?: PreprocessorGroup | PreprocessorGroup[]\r\n  /** Options for the module resolver. This **must not** be defined if `compilerOptions.esm` is `false` */\r\n  moduleOptions?: {\r\n    /** The folder where the compiled modules are or will be built to.\r\n     * > Note: this path is relative to the `out` directory */\r\n    root?: string\r\n    /** Whether svbuild should build all the dependencies */\r\n    buildModules?: boolean\r\n    /** Path to the folder, from which the dependencies are taken from. Default is `\"node_modules\"`\r\n     * @default \"node_modules\" */\r\n    modulesSrc?: string\r\n    /** Whether svbuild should build svelte like a regular dependency */\r\n    buildSvelte?: boolean\r\n    /** Whether svbuild should preprocess module code. Can be either set to boolean, or to an object with module names as keys. */\r\n    usePreprocessorsWithModules?: boolean | {\r\n      [moduleName: string]: string\r\n    }\r\n    /** The preferred type of the `exports` field. Is usually `\"browser\"`, but can be set to anything else if that's causing problems */\r\n    preferredResolutionType?: {\r\n      [moduleName: string]: string\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nAn example config file looks like this:\r\n\r\n```js\r\n/**\r\n * @type {import('svbuild/types').Config}\r\n */\r\nconst config = {\r\n  src: './svelte',\r\n  out: './out',\r\n  compilerOptions: {\r\n    esm: true,\r\n    dev: true\r\n  },\r\n  moduleOptions: {\r\n    root: 'modules',\r\n    buildModules: true,\r\n    buildSvelte: true,\r\n    modulesSrc: 'node_modules'\r\n  }\r\n}\r\n\r\nexport default config\r\n```\r\n\r\n## CLI tool\r\n\r\nThis is how to use the `svbuild` tool\r\n\r\n`svbuild`\r\n\r\n- `-c, --config <path>` - Path to the configuration file (default: `./svbuild.config.js`)\r\n\r\n- `-v, --verbose` - Log internal information\r\n\r\n- `-w, --watch` - Watch the src directory for changes.\r\n\r\n- `-B, --no-build` - Don't build the project at first, only works with --watch\r\n\r\n## Limitations\r\n\r\nCurrently, svbuild doesn't support source maps. This will probably be implemented in a next major version.\r\n\r\nAlso note that svbuild is still in beta so it can include bugs. Please report all issues on Github.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 10],
		[3603, 9],
		[3610, 10],
		[3631, 1],
		[3645, 2],
		[3659, 1],
		[3666, 11],
		[3680, 1],
		[3708, 2],
		[3736, 1],
		[3757, 2],
		[3771, 9],
		[3778, 1],
		[3785, 10],
		[3792, 2],
		[3799, 1],
		[3806, 3],
		[3820, 1],
		[3827, 1],
		[3834, 4],
		[3841, 36],
		[3848, 2],
		[3855, 27],
		[3883, 2],
		[3890, 9],
		[3904, 1],
		[3911, 1],
		[3918, 1],
		[3932, 1],
		[3939, 1],
		[3946, 1],
		[3960, 1],
		[3981, 1],
		[3988, 2],
		[3995, 1],
		[4016, 13],
		[4023, 5],
		[4030, 2],
		[4037, 20],
		[4044, 22],
		[4051, 7],
		[4058, 2],
		[4065, 1],
		[4086, 1],
		[4100, 28],
		[4107, 2],
		[4114, 4],
		[4121, 10],
		[4128, 1]
	]
}
