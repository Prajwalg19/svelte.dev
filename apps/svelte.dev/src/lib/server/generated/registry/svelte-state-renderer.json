{
	"name": "svelte-state-renderer",
	"description": "Use abstract-state-router with Svelte.",
	"repo_url": "https://github.com/TehShrike/svelte-state-renderer",
	"authors": ["tehshrike"],
	"homepage": "https://github.com/TehShrike/svelte-state-renderer#readme",
	"downloads": 41,
	"updated": "2025-04-25T17:31:31.500Z",
	"tags": ["router"],
	"github_stars": 37,
	"typescript": false,
	"version": "6.0.0",
	"svelte_range": "^5.0.5",
	"last_rune_check_version": "6.0.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-state-renderer",
				"version": "6.0.0",
				"size": 4912
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "Use [Svelte](https://svelte.technology/) with [abstract-state-router](https://github.com/TehShrike/abstract-state-router)!\n\n- `svelte-state-renderer` 1 is compatible with `svelte` 1\n- `svelte-state-renderer` 2 is compatible with `svelte` >=1.8.1\n- `svelte-state-renderer` 3 is compatible with `svelte` 3 & 4\n- `svelte-state-renderer` 4 & 5 are compatible with `svelte` 5\n\n## Usage\n\n```js\nconst StateRouter = require('abstract-state-router')\nconst makeSvelteStateRenderer = require('svelte-state-renderer')\n\n\nconst defaultParameters = {\n\tprops: {\n\t\tannoy() {\n\t\t\talert('Modal dialogs are annoying')\n\t\t}\n\t}\n}\n\nconst renderer = makeSvelteStateRenderer(defaultParameters)\nconst stateRouter = StateRouter(renderer, document.querySelector('body'))\n\n// add whatever states to the state router\n\nstateRouter.evaluateCurrentRoute('login')\n```\n\n## `makeSvelteStateRenderer(defaultParameters)`\n\nAny parameters you pass in the `defaultParameters` object will be passed to all Svelte components when they are constructed.  In addition, any members of the `methods` object will be added to the object itself.\n\n## In templates\n\nTo access the `asr` object with its `makePath` and `stateIsActive` and `go` and `getActiveState` functions, you can `export let asr` in your template.\n\nYou will access any properties of the object returned by your `resolve` function in the same way â€“ if your `resolve` function returns `{ userId: 13 }` then you would access that value by putting `export let userId` into your component.\n\n```html\n<script>\n\texport let asr\n\texport let userId\n</script>\n\n<a\n\thref=\"{ asr.makePath('app.topics.tasks', { topicId: topic.id }) }\"\n\tclass=\"{ asr.stateIsActive('app.topics.tasks', { topicId: topic.id }) ? 'active' : '' }\"\n>\n\t{topic.name}\n</a>\n```\n\nTo embed child states, add a `<uiView></uiView>` element to the parent template.\n\n## Passing templates to `addState`\n\nWhen calling the abstract-state-router's `addState` function, you may provide any of these values as the `template`:\n\n- a Svelte component constructor function\n- an object with two properties:\n\t- `component`, a Svelte component constructor function\n\t- `options`, an object whose properties will be merged into the other default options and used to instantiate the Svelte components\n\n# License\n\n[WTFPL](http://wtfpl2.com/)\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 51],
		[3603, 43],
		[3610, 43],
		[3617, 28],
		[3624, 38],
		[3631, 88],
		[3638, 68],
		[3645, 39],
		[3652, 47],
		[3659, 20],
		[3666, 39],
		[3673, 20],
		[3680, 13],
		[3687, 49],
		[3694, 27],
		[3701, 19],
		[3708, 47],
		[3715, 9],
		[3722, 16],
		[3729, 41],
		[3736, 12],
		[3743, 6],
		[3750, 6],
		[3757, 28],
		[3764, 29],
		[3771, 24],
		[3778, 26],
		[3785, 13],
		[3792, 13],
		[3799, 47],
		[3806, 50],
		[3813, 26],
		[3820, 31],
		[3827, 16],
		[3834, 33],
		[3841, 46],
		[3848, 28],
		[3855, 20],
		[3862, 70],
		[3869, 30],
		[3876, 20],
		[3883, 42],
		[3890, 44],
		[3897, 68],
		[3904, 45],
		[3911, 48],
		[3918, 36],
		[3925, 24],
		[3932, 22],
		[3939, 23],
		[3946, 79],
		[3953, 171],
		[3960, 41],
		[3967, 30],
		[3974, 47],
		[3981, 33],
		[3988, 36],
		[3995, 32],
		[4002, 23],
		[4009, 23],
		[4016, 17],
		[4023, 26],
		[4030, 67],
		[4037, 79],
		[4044, 98],
		[4051, 104],
		[4058, 35],
		[4065, 32],
		[4072, 75],
		[4079, 111],
		[4086, 87],
		[4093, 103],
		[4100, 64],
		[4107, 50],
		[4114, 41],
		[4121, 69],
		[4128, 100],
		[4135, 23]
	]
}
