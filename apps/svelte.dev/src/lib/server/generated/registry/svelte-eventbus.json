{
	"name": "svelte-eventbus",
	"description": "Implements simple eventbus using Svelte's internal tools.",
	"repo_url": "https://github.com/AlexxNB/svelte-eventbus",
	"authors": ["alexxnb"],
	"homepage": "https://github.com/AlexxNB/svelte-eventbus#readme",
	"downloads": 8,
	"updated": "2022-02-18T12:24:22.806Z",
	"tags": ["miscellaneous"],
	"github_stars": 38,
	"typescript": false,
	"version": "0.2.0",
	"svelte_range": "3.x",
	"last_rune_check_version": "0.2.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-eventbus",
				"version": "0.2.0",
				"size": 3101
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# svelte-eventbus\n\nSimple eventbus realization based on internal Svelte's tools only.\n\nUse when you need handle events from deeply-nested child components without events forwarding.\n\n### Features\n\n* You can set event listeners on `Eventbus` component and catch any event created with `createEventbusDispatcher` in any child component.\n\n* Events are isolated inside of `Eventbus` component instance. You can have more than one `Eventbus` in the parent component. Each will listen events from it's child components only.\n\n* If you have several nested `Eventbus` components, events will bubble through them while needed event listener will be occurred. \n\n\n\n### Usage example:\n\n*Parent - App.svelte*\n\n```html\n<script>\n    import {Eventbus} from 'svelte-eventbus';\n    import Child from './Child.svelte';\n\n    let totalclicks = 0;\n</script>\n\n<p>Total clicks: {totalclicks}</p>\n\n<Eventbus on:button_click={()=>totalclicks++}>\n    <!-- There can be childs in any nest level-->\n    <Child />\n</Eventbus>\n```\n\n*Nested - Child.svelte*\n\n```html\n<script>\n    import {createEventbusDispatcher} from 'svelte-eventbus';\n    const dispatch = createEventbusDispatcher();\n</script>\n\n<button on:click={()=>dispatch('button_click')}>Click</button>\n```",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 9],
		[3596, 45],
		[3603, 11],
		[3610, 13],
		[3617, 8],
		[3624, 9],
		[3631, 9],
		[3638, 25],
		[3645, 13],
		[3652, 8],
		[3659, 12],
		[3666, 12],
		[3673, 17],
		[3680, 9],
		[3687, 3],
		[3694, 9],
		[3701, 10],
		[3708, 2],
		[3715, 2],
		[3722, 23],
		[3729, 13],
		[3736, 17],
		[3743, 16],
		[3750, 20],
		[3757, 15],
		[3764, 9],
		[3771, 5],
		[3778, 9],
		[3785, 8],
		[3792, 26],
		[3799, 34],
		[3806, 11],
		[3813, 7],
		[3820, 24],
		[3827, 9],
		[3834, 23],
		[3841, 17],
		[3848, 8],
		[3855, 11],
		[3862, 19],
		[3869, 3],
		[3876, 5],
		[3883, 8],
		[3890, 4],
		[3897, 4],
		[3904, 2],
		[3911, 4],
		[3918, 4],
		[3925, 6],
		[3932, 7],
		[3939, 5],
		[3946, 6],
		[3953, 7],
		[3960, 3],
		[3967, 2],
		[3974, 5],
		[3981, 5],
		[3988, 7],
		[3995, 6],
		[4002, 5],
		[4009, 3],
		[4016, 2],
		[4023, 4],
		[4030, 17],
		[4037, 9],
		[4044, 7],
		[4051, 10],
		[4058, 9],
		[4065, 7],
		[4072, 6],
		[4079, 7],
		[4086, 5],
		[4093, 11],
		[4100, 11],
		[4107, 3],
		[4114, 8],
		[4121, 14],
		[4128, 4]
	],
	"esm": false,
	"cjs": true
}
