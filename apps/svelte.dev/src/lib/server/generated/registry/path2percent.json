{
	"name": "path2percent",
	"description": "Animate SVG paths to a given percentage in Svelte.",
	"repo_url": "",
	"authors": ["studentofjs"],
	"downloads": 21,
	"updated": "2020-02-04T05:13:37.738Z",
	"tags": ["ui"],
	"typescript": false,
	"version": "4.0.0",
	"svelte_range": "^3.0.0",
	"last_rune_check_version": "4.0.0",
	"github_stars": 0,
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "path2percent",
				"version": "4.0.0",
				"size": 44730
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# path2percent\r\n\r\nAnimate a path to a given percent with path2percent and [svelte](http://svelte.dev).\r\n\r\n### Installation üîß\r\n\r\n_To install using yarn_\r\n\r\n`yarn add path2percent -D`\r\n\r\n_or npm_\r\n\r\n`npm i path2percent -D`\r\n\r\n## LazyLoad\r\n\r\nA lazy loading component is included. It provides a slot with props, that returns a boolean true if the component is in the viewport. If the browser does not support the IntersectionObserver api, the component will return true immediately. I considered adding a fallback using bounds from getBoundingClientRect, but ultimately opted to save a few kb instead.\r\n\r\n## drawPathToPercent\r\n\r\nThis function builds on top off the excellent ![draw](https://svelte.dev/docs#draw) animation from svelte. Adding percent plus a few small tweaks to allow you to animate along a path to a given percent.\r\n\r\n## coordinates\r\n\r\nA subscribable store, providing the coordinates of the the end of the path. This is helpful if you want to animate an svg along a path.\r\n\r\n### Usage üì¶\r\n\r\n```\r\n<script>\r\n  import { path2percent, LazyLoad } from \"path2percent\";\r\n  export let percent = 50;\r\n  let x = 0;\r\n  let y = 0;\r\n  let { coordinates, drawPathToPercent } = path2Percent();\r\n  const unsubscribe = coordinates.subscribe(position => {\r\n    x = position.x;\r\n    y = position.y;\r\n  });\r\n</script>\r\n\r\n<style>\r\n  .meter path {\r\n    will-change: auto;\r\n    stroke-width: 12px;\r\n    stroke-miterlimit: round;\r\n    transition: stroke-dashoffset 1.5s linear;\r\n    stroke-linecap: round;\r\n  }\r\n</style>\r\n\r\n<LazyLoad let:viewport={show}>\r\n  <svg\r\n    class=\"meter\"\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 200 200\"\r\n    height=\"180\"\r\n    width=\"180\">\r\n    <path stroke=\"#ccc\" d=\"M41 149.5a77 77 0 1 1 117.93 0\" fill=\"none\" />\r\n    {#if show}\r\n      <path\r\n        in:drawPathToPercent={{ percent, speed: 0.3 }}\r\n        stroke=\"#0AC0DD\"\r\n        d=\"M41 149.5a77 77 0 1 1 117.93 0\"\r\n        fill=\"none\" />\r\n    {/if}\r\n    {#if x && y && percent}\r\n      <circle\r\n        cx={x}\r\n        cy={y}\r\n        r=\"12\"\r\n        fill=\"#0AC0DD\"\r\n        stroke=\"rgba(10, 192, 221, 0.4)\"\r\n        stroke-width=\"17\" />\r\n    {/if}\r\n  </svg>\r\n</LazyLoad>\r\n\r\n```\r\n\r\n_change easing_\r\n\r\n```\r\n<script>\r\n  import { quadIn } from \"svelte/easing\";\r\n</script>\r\n<svg\r\n    xmlns=\"http://www.w3.org/2000/svg\"\r\n    viewBox=\"0 0 200 200\"\r\n    height=\"180\"\r\n    width=\"180\">\r\n    <path stroke=\"#ccc\" d=\"M41 149.5a77 77 0 1 1 117.93 0\" fill=\"none\" />\r\n    <path\r\n      in:drawPathToPercentWithCallback={{ percent = 80, speed: 0.2, easing: quadIn }}\r\n      stroke=\"#0AC0DD\"\r\n      d=\"M41 149.5a77 77 0 1 1 117.93 0\"\r\n      fill=\"none\" />\r\n  </svg>\r\n```\r\n\r\n## Options üõ†Ô∏è\r\n\r\n_defaults_\r\n\r\n- percent _default = 0_\r\n- delay _default = 0_\r\n- speed\r\n- duration _default = 800 #if speed is not provided_\r\n- easing _default = expoIn_\r\n\r\n## Authors ‚úíÔ∏è\r\n\r\n- ** Rod Lewis ** - [StudentOfJS](https://github.com/StudentOfJS)\r\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 8],
		[3596, 15],
		[3603, 35],
		[3610, 10],
		[3617, 15],
		[3624, 16],
		[3638, 1],
		[3645, 5],
		[3652, 3],
		[3659, 8],
		[3666, 12],
		[3673, 11],
		[3680, 10],
		[3687, 5],
		[3694, 3],
		[3701, 12],
		[3708, 18],
		[3715, 22],
		[3722, 16],
		[3729, 11],
		[3736, 18],
		[3743, 6],
		[3750, 15],
		[3757, 17],
		[3764, 15],
		[3771, 14],
		[3778, 10],
		[3785, 6],
		[3792, 14],
		[3799, 5],
		[3806, 6],
		[3813, 8],
		[3820, 2],
		[3827, 2],
		[3834, 7],
		[3841, 4],
		[3848, 8],
		[3855, 7],
		[3862, 34],
		[3869, 16],
		[3876, 10],
		[3883, 16],
		[3890, 13],
		[3897, 11],
		[3904, 5],
		[3911, 2],
		[3918, 9],
		[3925, 13],
		[3932, 6],
		[3939, 9],
		[3946, 12],
		[3953, 11],
		[3960, 3],
		[3967, 7],
		[3974, 7],
		[3981, 5],
		[3995, 8],
		[4002, 10],
		[4016, 4],
		[4023, 10],
		[4030, 16],
		[4037, 13],
		[4044, 14],
		[4051, 7],
		[4058, 6],
		[4065, 6],
		[4072, 9],
		[4079, 16],
		[4086, 6],
		[4093, 21],
		[4100, 15],
		[4107, 24],
		[4114, 21],
		[4121, 12],
		[4128, 11]
	]
}
