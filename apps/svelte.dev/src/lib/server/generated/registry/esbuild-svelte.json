{
	"name": "esbuild-svelte",
	"description": "esbuild plugin to resolve and compile Svelte components.",
	"repo_url": "https://github.com/EMH333/esbuild-svelte",
	"authors": ["emh333"],
	"homepage": "https://github.com/EMH333/esbuild-svelte#readme",
	"downloads": 20641,
	"updated": "2025-03-14T02:28:58.960Z",
	"tags": ["tooling"],
	"github_stars": 253,
	"typescript": true,
	"version": "0.9.2",
	"svelte_range": ">=4.2.1 <6",
	"last_rune_check_version": "0.9.2",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "esbuild-svelte",
				"version": "0.9.2",
				"size": 40596
			},
			{
				"name": "@jridgewell/trace-mapping",
				"version": "0.3.25",
				"size": 169330
			},
			{
				"name": "@jridgewell/resolve-uri",
				"version": "3.1.2",
				"size": 53153
			},
			{
				"name": "@jridgewell/sourcemap-codec",
				"version": "1.5.0",
				"size": 112815
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[1, 3]
		],
		"circular": []
	},
	"readme": "# esbuild-svelte\n\n[![npm version](https://badge.fury.io/js/esbuild-svelte.svg)](https://badge.fury.io/js/esbuild-svelte) [![npm downloads](http://img.shields.io/npm/dm/esbuild-svelte.svg)](https://www.npmjs.org/package/esbuild-svelte) [![CI](https://github.com/EMH333/esbuild-svelte/actions/workflows/ci.yml/badge.svg)](https://github.com/EMH333/esbuild-svelte/actions/workflows/ci.yml)\n\nPlugin to compile svelte components for bundling with esbuild.\n\n## Install\n\nInstall this plugin, [esbuild](https://github.com/evanw/esbuild) and [Svelte](https://github.com/sveltejs/svelte).\n\nA simple build script looks like\n\n```javascript\nimport esbuild from \"esbuild\";\nimport sveltePlugin from \"esbuild-svelte\";\n\nesbuild\n  .build({\n    entryPoints: [\"app.js\"],\n    mainFields: [\"svelte\", \"browser\", \"module\", \"main\"],\n    conditions: [\"svelte\", \"browser\"],\n    bundle: true,\n    outfile: \"out.js\",\n    plugins: [sveltePlugin()],\n    logLevel: \"info\",\n  })\n  .catch(() => process.exit(1));\n```\n\nThe `example-js` folder of this repository is a great starting off point for a \"complete\" project. You can quickly get started using [degit](https://github.com/Rich-Harris/degit):\n\n```sh\n# Clone the JavaScript example to get started\nnpx degit EMH333/esbuild-svelte/example-js my-svelte-app\n\n# Clone the TypeScript example to get started\nnpx degit EMH333/esbuild-svelte/example-ts my-svelte-app\n```\n\n### CSS Output\n\nBy default, `esbuild-svelte` emits external css files from Svelte for `esbuild` to process. If this isn't desired, use a configuration that turns off external css output and instead includes it in the javascript output. For example: `sveltePlugin({compilerOptions: {css: \"injected\"}})`\n\n### Typescript and Other Svelte Preprocessing\n\nIn order to support Typescript and other languages that require preprocessing before being fed into the Svelte compiler, simply add the preprocessor to the `preprocess` option (which accepts both a single preprocessor or an array of them). The example script below is a great place to start, you can also look at the `example-ts` folder for a more complete project.\n\n```javascript\nimport esbuild from \"esbuild\";\nimport esbuildSvelte from \"esbuild-svelte\";\nimport sveltePreprocess from \"svelte-preprocess\";\n\nesbuild\n  .build({\n    entryPoints: [\"index.js\"],\n    mainFields: [\"svelte\", \"browser\", \"module\", \"main\"],\n    conditions: [\"svelte\", \"browser\"],\n    bundle: true,\n    outdir: \"./dist\",\n    plugins: [\n      esbuildSvelte({\n        preprocess: sveltePreprocess(),\n      }),\n    ],\n  })\n  .catch(() => process.exit(1));\n```\n\nTypescript in `.svelte.ts` files is supported natively.\n\n### `svelte` exports condition\n\nIf you are importing a svelte component library, you need to add `\"svelte\"` to `conditions` in esbuild build options. This lets esbuild use the `svelte` property in svelte component's `exports` conditions in `package.json` .\n\n## Advanced\n\nFor incremental or watch build modes, esbuild-svelte will automatically cache files if they haven't changed. This allows esbuild to skip the Svelte compiler for those files altogether, saving time. Setting `cache: false` will disable this file level cache if an issue arises (please report).\n\nYou can see the full API for this plugin [here](https://github.com/EMH333/esbuild-svelte/blob/main/dist/index.d.ts), which includes support for Svelte's compiler options, preprocessing API, and more.\n\n## Developing\n\nClone, `npm install`, `npm link` and it's good to go! Releases are automated (with the right permissions), just by running `npm version patch|minor|major`.\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3589, 11667],
		[3596, 13811],
		[3603, 11042],
		[3610, 11835],
		[3617, 14967],
		[3624, 18363],
		[3631, 12776],
		[3638, 10398],
		[3645, 9335],
		[3652, 11712],
		[3659, 15380],
		[3666, 16197],
		[3673, 17621],
		[3680, 18336],
		[3687, 17160],
		[3694, 16378],
		[3701, 14592],
		[3708, 16185],
		[3715, 17813],
		[3722, 19337],
		[3729, 27776],
		[3736, 28513],
		[3743, 31380],
		[3750, 21069],
		[3757, 28506],
		[3764, 27526],
		[3771, 27984],
		[3778, 24139],
		[3785, 31569],
		[3792, 32434],
		[3799, 34922],
		[3806, 39543],
		[3813, 41565],
		[3820, 39446],
		[3827, 34419],
		[3834, 31910],
		[3841, 32033],
		[3848, 29286],
		[3855, 36595],
		[3862, 36245],
		[3869, 25455],
		[3876, 26118],
		[3883, 34198],
		[3890, 32148],
		[3897, 30087],
		[3904, 28951],
		[3911, 32846],
		[3918, 31455],
		[3925, 27941],
		[3932, 30927],
		[3939, 26395],
		[3946, 40383],
		[3953, 30782],
		[3960, 27317],
		[3967, 35572],
		[3974, 37012],
		[3981, 41184],
		[3988, 41945],
		[3995, 36718],
		[4002, 28928],
		[4009, 15281],
		[4016, 14002],
		[4023, 32656],
		[4030, 23656],
		[4037, 18878],
		[4044, 20630],
		[4051, 29141],
		[4058, 23645],
		[4065, 21779],
		[4072, 21711],
		[4079, 19898],
		[4086, 20957],
		[4093, 20645],
		[4100, 21604],
		[4107, 19092],
		[4114, 20641],
		[4121, 17469],
		[4128, 22932]
	],
	"esm": true,
	"cjs": false
}
