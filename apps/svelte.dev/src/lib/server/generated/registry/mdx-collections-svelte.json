{
	"name": "mdx-collections-svelte",
	"description": "Create collections of markdown pages in SvelteKit.",
	"repo_url": "https://github.com/babakfp/mdx-collections-svelte",
	"authors": ["babakfp"],
	"homepage": "https://github.com/babakfp/mdx-collections-svelte#readme",
	"downloads": 6,
	"updated": "2025-03-01T18:53:32.749Z",
	"tags": ["content"],
	"github_stars": 0,
	"typescript": true,
	"version": "2.0.1",
	"svelte_range": "5",
	"kit_range": "2",
	"last_rune_check_version": "2.0.1",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "mdx-collections-svelte",
				"version": "2.0.1",
				"size": 13794
			},
			{
				"name": "zod",
				"version": "3.23.8",
				"size": 666786
			}
		],
		"dependencies": [[0, 1]],
		"circular": []
	},
	"readme": "[![NPM version](https://img.shields.io/npm/v/mdx-collections-svelte?style=for-the-badge&label=NPM&color=%23cb0000)](https://npmjs.com/package/mdx-collections-svelte \"View on NPM\")\r\n\r\n# MDX Collections Svelte\r\n\r\nAn easy way to create collections of markdown pages in SvelteKit.\r\n\r\n-   ðŸªµ [CHANGELOG](https://github.com/babakfp/mdx-collections-svelte/blob/main/CHANGELOG.md)\r\n-   ðŸ“¦ [NPM](https://npmjs.com/package/mdx-collections-svelte)\r\n\r\n## Example\r\n\r\n`$lib/collections.ts`:\r\n\r\n```ts\r\nimport {\r\n    useTypedCollections,\r\n    type ImportGlobMarkdownMap,\r\n} from \"mdx-collections-svelte\"\r\nimport { z } from \"mdx-collections-svelte/zod\"\r\n\r\n/**\r\n * All markdown pages.\r\n *\r\n * Paths that contain (`_`) in their name are ignored to avoid conflict between pages and components.\r\n *\r\n * [Glob Import](https://vite.dev/guide/features.html#glob-import).\r\n */\r\nexport const pages = import.meta.glob(\r\n    [\r\n        \"/src/content/*/**/*.md\",\r\n        \"!/src/content/*/**/_*/*.md\", // ignored\r\n        \"!/src/content/*/**/_*.md\", // ignored\r\n    ],\r\n    { eager: true },\r\n) satisfies ImportGlobMarkdownMap\r\n\r\nconst postsSchema = z.object({\r\n    title: z.string().min(1),\r\n    description: z.string().min(1),\r\n})\r\n\r\nconst productsSchema = z.object({\r\n    title: z.string().min(1),\r\n    price: z.number().min(1),\r\n})\r\n\r\nexport const collections = useTypedCollections(pages, {\r\n    posts: postsSchema,\r\n    products: productsSchema,\r\n})\r\n```\r\n\r\n`posts/+page.ts`:\r\n\r\n```ts\r\nimport { collections } from \"$lib/collections.js\"\r\n\r\nexport const load = async () => {\r\n    const allPosts = collections.getEntries(\"posts\") // You'll get type suggestions.\r\n    const helloWorldPost = collections.getEntry(\"hello-world\") // You'll get type suggestions.\r\n    return { allPosts, helloWorldPost }\r\n}\r\n```\r\n\r\n### Empty frontmatter\r\n\r\nUse this schema if you don't use frontmatter for a collection.\r\n\r\n```ts\r\nz.object({}).default({})\r\n```\r\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3960, 190],
		[3967, 12],
		[3974, 3],
		[3981, 2],
		[3988, 5],
		[3995, 7],
		[4009, 2],
		[4016, 5],
		[4023, 8],
		[4030, 7],
		[4037, 6],
		[4044, 6],
		[4051, 2],
		[4065, 1],
		[4072, 63],
		[4079, 7],
		[4086, 2],
		[4093, 5],
		[4100, 4],
		[4107, 1],
		[4114, 6],
		[4121, 7],
		[4128, 7]
	]
}
