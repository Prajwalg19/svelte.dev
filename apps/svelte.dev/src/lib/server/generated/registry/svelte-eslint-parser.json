{
	"name": "svelte-eslint-parser",
	"description": "Parse Svelte code for ESLint.",
	"repo_url": "https://github.com/sveltejs/svelte-eslint-parser",
	"authors": ["conduitry", "ota-meshi", "svelte-admin", "baseballyama"],
	"homepage": "https://github.com/sveltejs/svelte-eslint-parser#readme",
	"downloads": 522000,
	"updated": "2025-04-19T01:01:20.499Z",
	"tags": ["tooling"],
	"github_stars": 101,
	"typescript": true,
	"version": "1.1.3",
	"svelte_range": "^3.37.0 || ^4.0.0 || ^5.0.0",
	"last_rune_check_version": "1.1.3",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-eslint-parser",
				"version": "1.1.3",
				"size": 340046
			},
			{
				"name": "eslint-scope",
				"version": "8.3.0",
				"size": 155422
			},
			{
				"name": "esrecurse",
				"version": "4.3.0",
				"size": 13527
			},
			{
				"name": "estraverse",
				"version": "5.3.0",
				"size": 37094
			},
			{
				"name": "eslint-visitor-keys",
				"version": "4.2.0",
				"size": 36136
			},
			{
				"name": "espree",
				"version": "10.3.0",
				"size": 79348
			},
			{
				"name": "acorn",
				"version": "8.14.1",
				"size": 547473
			},
			{
				"name": "acorn-jsx",
				"version": "5.3.2",
				"size": 24385
			},
			{
				"name": "postcss",
				"version": "8.5.3",
				"size": 201969
			},
			{
				"name": "nanoid",
				"version": "3.3.11",
				"size": 32583
			},
			{
				"name": "picocolors",
				"version": "1.1.1",
				"size": 6373
			},
			{
				"name": "source-map-js",
				"version": "1.2.1",
				"size": 139872
			},
			{
				"name": "postcss-scss",
				"version": "4.0.9",
				"size": 19425
			},
			{
				"name": "postcss-selector-parser",
				"version": "7.1.0",
				"size": 187187
			},
			{
				"name": "cssesc",
				"version": "3.0.0",
				"size": 17488
			},
			{
				"name": "util-deprecate",
				"version": "1.0.2"
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[2, 3],
			[1, 3],
			[0, 4],
			[0, 5],
			[5, 6],
			[5, 7],
			[5, 4],
			[0, 8],
			[8, 9],
			[8, 10],
			[8, 11],
			[0, 12],
			[0, 13],
			[13, 14],
			[13, 15]
		],
		"circular": []
	},
	"readme": "[![NPM license](https://img.shields.io/npm/l/svelte-eslint-parser.svg)](https://www.npmjs.com/package/svelte-eslint-parser)\n[![NPM version](https://img.shields.io/npm/v/svelte-eslint-parser.svg)](https://www.npmjs.com/package/svelte-eslint-parser)\n[![NPM downloads](https://img.shields.io/badge/dynamic/json.svg?label=downloads&colorB=green&suffix=/day&query=$.downloads&uri=https://api.npmjs.org//downloads/point/last-day/svelte-eslint-parser&maxAge=3600)](http://www.npmtrends.com/svelte-eslint-parser)\n[![NPM downloads](https://img.shields.io/npm/dw/svelte-eslint-parser.svg)](http://www.npmtrends.com/svelte-eslint-parser)\n[![NPM downloads](https://img.shields.io/npm/dm/svelte-eslint-parser.svg)](http://www.npmtrends.com/svelte-eslint-parser)\n[![NPM downloads](https://img.shields.io/npm/dy/svelte-eslint-parser.svg)](http://www.npmtrends.com/svelte-eslint-parser)\n[![NPM downloads](https://img.shields.io/npm/dt/svelte-eslint-parser.svg)](http://www.npmtrends.com/svelte-eslint-parser)\n[![Build Status](https://github.com/sveltejs/svelte-eslint-parser/workflows/CI/badge.svg?branch=main)](https://github.com/sveltejs/svelte-eslint-parser/actions?query=workflow%3ACI)\n[![Coverage Status](https://coveralls.io/repos/github/sveltejs/svelte-eslint-parser/badge.svg?branch=main)](https://coveralls.io/github/sveltejs/svelte-eslint-parser?branch=main)\n\n<div align=\"center\">\n\n# svelte-eslint-parser\n\n## [Svelte](https://svelte.dev/) parser for [ESLint](https://eslint.org/).\n\n[Live DEMO](https://sveltejs.github.io/svelte-eslint-parser/playground) •\n[Discord](https://svelte.dev/chat)\n\n</div>\n\n## Motivation\n\nThe `svelte-eslint-parser` aims to make it easy to create your own ESLint rules for [Svelte](https://svelte.dev/).\n\n[eslint-plugin-svelte](https://github.com/sveltejs/eslint-plugin-svelte) is an ESLint plugin built upon this parser, and it already [implements some rules](https://sveltejs.github.io/eslint-plugin-svelte/rules/).\n\n### ESLint Plugins Using svelte-eslint-parser\n\n#### [eslint-plugin-svelte](https://sveltejs.github.io/eslint-plugin-svelte/)\n\nESLint plugin for Svelte.  \nProvides a variety of template-based checks using the Svelte AST.\n\n#### [@intlify/eslint-plugin-svelte](https://github.com/intlify/eslint-plugin-svelte)\n\nESLint plugin for internationalization (i18n) in Svelte applications, offering helpful i18n-related rules.\n\n---\n\n## Installation\n\n```bash\nnpm install --save-dev eslint svelte-eslint-parser\n```\n\n---\n\n## Usage\n\n### ESLint Config (`eslint.config.js`)\n\n```js\nimport js from \"@eslint/js\";\nimport svelteParser from \"svelte-eslint-parser\";\n\nexport default [\n  js.configs.recommended,\n  {\n    files: [\n      \"**/*.svelte\",\n      \"*.svelte\",\n      // Need to specify the file extension for Svelte 5 with rune symbols\n      \"**/*.svelte.js\",\n      \"*.svelte.js\",\n      \"**/*.svelte.ts\",\n      \"*.svelte.ts\",\n    ],\n    languageOptions: {\n      parser: svelteParser,\n    },\n  },\n];\n```\n\n### CLI\n\n```bash\neslint \"src/**/*.{js,svelte}\"\n```\n\n---\n\n## Options\n\nThe [parserOptions](https://eslint.org/docs/latest/use/configure/parser#configure-parser-options) for this parser generally match what [espree](https://github.com/eslint/espree#usage)—ESLint's default parser—supports.\n\nFor example:\n\n```js\nimport svelteParser from \"svelte-eslint-parser\";\n\nexport default [\n  // ...\n  {\n    files: [\n      // Set .svelte/.js/.ts files. See above for more details.\n    ],\n    languageOptions: {\n      parser: svelteParser,\n      parserOptions: {\n        sourceType: \"module\",\n        ecmaVersion: 2021,\n        ecmaFeatures: {\n          globalReturn: false,\n          impliedStrict: false,\n          jsx: false,\n        },\n      },\n    },\n  },\n];\n```\n\n### parserOptions.parser\n\nUse the `parserOptions.parser` property to define a custom parser for `<script>` tags. Any additional parser options (besides the parser itself) are passed along to the specified parser.\n\n```js\nimport tsParser from \"@typescript-eslint/parser\";\n\nexport default [\n  {\n    files: [\n      // Set .svelte/.js/.ts files. See above for more details.\n    ],\n    languageOptions: {\n      parser: svelteParser,\n      parserOptions: {\n        parser: tsParser,\n      },\n    },\n  },\n];\n```\n\n#### Using TypeScript in `<script>`\n\nIf you use `@typescript-eslint/parser` for TypeScript within `<script>` of `.svelte` files, additional configuration is needed. For example:\n\n```js\nimport tsParser from \"@typescript-eslint/parser\";\n\nexport default [\n  // Other config for non-Svelte files\n  {\n    languageOptions: {\n      parser: tsParser,\n      parserOptions: {\n        project: \"path/to/your/tsconfig.json\",\n        extraFileExtensions: [\".svelte\"],\n      },\n    },\n  },\n  // Svelte config\n  {\n    files: [\n      // Set .svelte/.js/.ts files. See above for more details.\n    ],\n    languageOptions: {\n      parser: svelteParser,\n      // Parse the `<script>` in `.svelte` as TypeScript by adding the following configuration.\n      parserOptions: {\n        parser: tsParser,\n      },\n    },\n  },\n];\n```\n\n#### Multiple parsers\n\nTo switch parsers for each language, provide an object:\n\n```js\nimport tsParser from \"@typescript-eslint/parser\";\nimport espree from \"espree\";\n\nexport default [\n  {\n    files: [\n      // Set .svelte/.js/.ts files. See above for more details.\n    ],\n    languageOptions: {\n      parser: svelteParser,\n      parserOptions: {\n        parser: {\n          ts: tsParser,\n          js: espree,\n          typescript: tsParser,\n        },\n      },\n    },\n  },\n];\n```\n\n### parserOptions.svelteConfig\n\nIf you use `eslint.config.js`, you can specify a `svelte.config.js` file via `parserOptions.svelteConfig`.\n\n```js\nimport svelteConfig from \"./svelte.config.js\";\n\nexport default [\n  {\n    files: [\n      // Set .svelte/.js/.ts files. See above for more details.\n    ],\n    languageOptions: {\n      parser: svelteParser,\n      parserOptions: {\n        svelteConfig,\n      },\n    },\n  },\n];\n```\n\nIf `parserOptions.svelteConfig` is not set, the parser attempts to statically read some config from `svelte.config.js`.\n\n### parserOptions.svelteFeatures\n\nYou can configure how Svelte-specific features are parsed via `parserOptions.svelteFeatures`.\n\nFor example:\n\n```js\nexport default [\n  {\n    files: [\n      // Set .svelte/.js/.ts files. See above for more details.\n    ],\n    languageOptions: {\n      parser: svelteParser,\n      parserOptions: {\n        svelteFeatures: {\n          // This is for Svelte 5. The default is true.\n          // If false, ESLint won't recognize rune symbols.\n          // If not specified, the parser tries to read compilerOptions.runes from `svelte.config.js`.\n          // If `parserOptions.svelteConfig` is not given and static analysis fails, it defaults to true.\n          runes: true,\n        },\n      },\n    },\n  },\n];\n```\n\n---\n\n## Editor Integrations\n\n### Visual Studio Code\n\nUse the [dbaeumer.vscode-eslint](https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint) extension provided by Microsoft.\n\nBy default, it only targets `*.js` and `*.jsx`, so you need to configure `.svelte` file support. For example, in **.vscode/settings.json**:\n\n```json\n{\n  \"eslint.validate\": [\"javascript\", \"javascriptreact\", \"svelte\"]\n}\n```\n\n---\n\n## Usage for Custom Rules / Plugins\n\n- See [AST.md](./docs/AST.md) for the AST specification. You can explore it on the [Live DEMO](https://sveltejs.github.io/svelte-eslint-parser/).\n- This parser generates its own [ScopeManager](https://eslint.org/docs/developer-guide/scope-manager-interface). Check the [Live DEMO](https://sveltejs.github.io/svelte-eslint-parser/scope).\n- Several rules are [already implemented] in [`eslint-plugin-svelte`], and their source code can be a helpful reference.\n\n---\n\n## Contributing\n\nContributions are welcome! Please open an issue or submit a PR on GitHub.  \nFor internal details, see [internal-mechanism.md](./docs/internal-mechanism.md).\n\n---\n\n## License\n\nSee [LICENSE](LICENSE) (MIT) for rights and limitations.\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3589, 124044],
		[3596, 179837],
		[3603, 181496],
		[3610, 171800],
		[3617, 192008],
		[3624, 204264],
		[3631, 214933],
		[3638, 211505],
		[3645, 98485],
		[3652, 152750],
		[3659, 213095],
		[3666, 260475],
		[3673, 223530],
		[3680, 213507],
		[3687, 239864],
		[3694, 245481],
		[3701, 257776],
		[3708, 240485],
		[3715, 239847],
		[3722, 256768],
		[3729, 291247],
		[3736, 238563],
		[3743, 270753],
		[3750, 300656],
		[3757, 299476],
		[3764, 306323],
		[3771, 286867],
		[3778, 279376],
		[3785, 314357],
		[3792, 300330],
		[3799, 312122],
		[3806, 322273],
		[3813, 389747],
		[3820, 384248],
		[3827, 360402],
		[3834, 325580],
		[3841, 345447],
		[3848, 338551],
		[3855, 355869],
		[3862, 337872],
		[3869, 316575],
		[3876, 298829],
		[3883, 319616],
		[3890, 313961],
		[3897, 318257],
		[3904, 334664],
		[3911, 353880],
		[3918, 365557],
		[3925, 339461],
		[3932, 362170],
		[3939, 368229],
		[3946, 402016],
		[3953, 393165],
		[3960, 354860],
		[3967, 379546],
		[3974, 414149],
		[3981, 407573],
		[3988, 417590],
		[3995, 410075],
		[4002, 375911],
		[4009, 232297],
		[4016, 253872],
		[4023, 372002],
		[4030, 405450],
		[4037, 408592],
		[4044, 386974],
		[4051, 426190],
		[4058, 411204],
		[4065, 399857],
		[4072, 445595],
		[4079, 464750],
		[4086, 470852],
		[4093, 484941],
		[4100, 479452],
		[4107, 556727],
		[4114, 522000],
		[4121, 461408],
		[4128, 469933]
	],
	"esm": true,
	"cjs": false
}
