{
	"name": "@alanchenchen/svelte-store-persisted",
	"description": "Persist Svelte store data to browser storage, with global and module use.",
	"repo_url": "https://github.com/alanchenchen/svelte-store-persisted",
	"authors": ["alanchenchen"],
	"homepage": "https://github.com/alanchenchen/svelte-store-persisted",
	"downloads": 8,
	"updated": "2020-01-19T09:42:20.915Z",
	"tags": ["miscellaneous"],
	"github_stars": 2,
	"typescript": true,
	"version": "0.1.1",
	"svelte_range": "^3.17.0",
	"last_rune_check_version": "0.1.1",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@alanchenchen/svelte-store-persisted",
				"version": "0.1.1",
				"size": 8937
			}
		],
		"dependencies": [],
		"circular": []
	},
	"legacy_svelte": false,
	"readme": "# svelte-store-persisted\n![](https://img.shields.io/npm/v/@alanchenchen/svelte-store-persisted.svg)\n![](https://img.shields.io/npm/dt/@alanchenchen/svelte-store-persisted.svg)\n[![LICENSE](https://img.shields.io/badge/license-Anti%20996-blue.svg)](https://github.com/996icu/996.ICU/blob/master/LICENSE)\n\nA persisted plugin for svelte store manager\n> 基于svelte store manager开发的将state状态持久化的插件\n\n> Author：Alan Chen\n\n> Version: 0.1.1\n\n> Date: 2020/1/19\n\n## features\n1. 自动同步state到浏览器本地存储，初始化同步一次，在每次commit都会更新。\n2. 本地存储默认是window.localStorage，可选window.sessionStorage。\n3. 由于和mutaion绑定，所以只支持同步操作的本地存储，而不支持web IndexDB。\n4. 本插件支持store单独调用，也支持全局调用，当全局调用时，store必须提供模块的name。\n5. 支持存储指定store的指定数据。\n\n## installation\n`npm install --save-dev @alanchenchen/svelte-store-persisted` or `yarn add @alanchenchen/svelte-store-persisted --dev`\n\n## usage\n```js\n// 全局使用\nimport { useGlobalPlugins } from \"@alanchenchen/svelte-store\";\nimport persisted from \"@alanchenchen/svelte-store-persisted\";\n\nuseGlobalPlugins([\n    persisted()\n]);\n```\n\n```js\n// 分模块使用\n// a.js\nimport { createStore } from \"@alanchenchen/svelte-store\";\nimport persisted from \"@alanchenchen/svelte-store-persisted\";\n\nconst a = createStore({name: \"A\"});\na.use(persisted());\n// b.js\nimport { createStore } from \"@alanchenchen/svelte-store\";\nimport persisted from \"@alanchenchen/svelte-store-persisted\";\n\nconst b = createStore({name: \"B\"});\nb.use(persisted());\n```\n\n## options\npersisted的参数是个对象，格式如下：\n* key - storage存储的key值，默认svelte-store，当全局使用时，会取store实例的name属性，全局使用必须要补全store实例的name。\n* paths - store实例存储在storage里的数据路径，由store实例初始值的key的数组，默认空数组，全部的属性都会存储。\n* filter - 过滤某些不需要存储的情况，回调函数，返回值为true的数据才会被存储，参数如下：\n    * storeName - 应用此插件的store实例名称，当全局使用时，可以过滤某些store不被存储\n    * type - mutation的类型\n* storage - storage的类型，默认window.localStorage，可选window.sessionStorage。\n\n## build\n1. `git clone https://github.com/alanchenchen/svelte-store-persisted.git`\n2. 然后`yarn`安装好依赖\n3. 接着使用下面的脚本命令即可，目前入口文件是src/index.ts\n\n## scripts\n1. `npm run build`编译ts文件到dist目录.\n\n## license\n* Anti 996(996.ICU)\n",
	"downloads_history": [
		[3589, 8],
		[3596, 11],
		[3603, 9],
		[3610, 1],
		[3631, 1],
		[3638, 1],
		[3645, 1],
		[3652, 5],
		[3659, 7],
		[3666, 4],
		[3673, 7],
		[3680, 3],
		[3687, 5],
		[3694, 1],
		[3701, 4],
		[3708, 4],
		[3715, 9],
		[3722, 3],
		[3729, 2],
		[3736, 1],
		[3757, 1],
		[3764, 6],
		[3771, 1],
		[3778, 5],
		[3785, 1],
		[3799, 2],
		[3806, 2],
		[3813, 1],
		[3827, 1],
		[3834, 1],
		[3841, 3],
		[3848, 3],
		[3862, 22],
		[3869, 3],
		[3876, 4],
		[3883, 3],
		[3890, 3],
		[3897, 5],
		[3904, 9],
		[3911, 2],
		[3918, 7],
		[3925, 1],
		[3932, 1],
		[3939, 2],
		[3953, 1],
		[3960, 1],
		[3967, 5],
		[3974, 1],
		[3981, 1],
		[3988, 2],
		[3995, 7],
		[4002, 5],
		[4009, 1],
		[4016, 4],
		[4023, 5],
		[4030, 10],
		[4037, 3],
		[4044, 7],
		[4051, 1],
		[4058, 4],
		[4065, 1],
		[4072, 1],
		[4086, 11],
		[4093, 36],
		[4100, 16],
		[4114, 8],
		[4121, 14],
		[4128, 3]
	],
	"esm": true,
	"cjs": false
}
