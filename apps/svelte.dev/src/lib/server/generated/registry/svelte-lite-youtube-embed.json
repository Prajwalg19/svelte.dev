{
	"name": "svelte-lite-youtube-embed",
	"description": "Embed YouTube videos with a lightweight Svelte component.",
	"repo_url": "https://github.com/zamanruhy/svelte-lite-youtube-embed",
	"authors": ["zamanruhy"],
	"homepage": "https://github.com/zamanruhy/svelte-lite-youtube-embed",
	"downloads": 49,
	"updated": "2022-07-31T03:49:11.345Z",
	"tags": ["media"],
	"typescript": true,
	"version": "1.1.0",
	"svelte_range": "^3.49.0",
	"kit_range": "^1.0.0-next.396",
	"last_rune_check_version": "1.1.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-lite-youtube-embed",
				"version": "1.1.0",
				"size": 14645
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# Svelte Lite YouTube Embed\n\n**Port of Paul Irish's\n[Lite YouTube Embed](https://github.com/paulirish/lite-youtube-embed) to\nSvelte.**\n\n## Install\n\n```bash\nnpm install svelte-lite-youtube-embed\n```\n\n## Basic Usage\n\n```svelte\n<script>\n  import LiteYouTube from 'svelte-lite-youtube-embed'\n</script>\n\n<LiteYouTube\n  videoId=\"AdNJ3fydeao\"\n  videoTitle=\"Rich Harris - Rethinking reactivity\"\n/>\n```\n\n## Pro Usage\n\n```svelte\n<script>\n  import LiteYouTube from 'svelte-lite-youtube-embed'\n</script>\n\n<LiteYouTube\n  videoId=\"VLrYOji75Vc\"\n  videoTitle=\"Speed at Scale\"\n  playlistId=\"PL-G5r6j4GptH5JTveoLTVqpp7w2oc27Q9\"\n  params=\"enablejsapi=1\"\n  posterQuality=\"hqdefault\"\n  on:iframeLoaded={(e) => console.log(e.detail.iframe)}\n/>\n```\n\n## Options & events\n\n| Prop            |                                       Type                                       | Description                                                                                                 |\n| --------------- | :------------------------------------------------------------------------------: | ----------------------------------------------------------------------------------------------------------- |\n| **videoId**     |                                      string                                      | Id of the video                                                                                             |\n| **videoTitle**  |                                      string                                      | Title of the video                                                                                          |\n| videoPlay       |                                      string                                      | Default: `Play`. This will be added to the button label for the announcement: `\"{videoPlay}: {videoTitle}\"` |\n| posterQuality   | string. One of `default`, `mqdefault`, `hqdefault`, `sddefault`, `maxresdefault` | Quality of the poster image                                                                                 |\n| params          |                                      string                                      | Any params to pass to the URL                                                                               |\n| playlistId      |                                      string                                      | Id of the playlist. Note, videoId is still needed to display the poster                                     |\n| noCookie        |                                     boolean                                      | Default: `true`. Use `youtube-nocookie.com` domain (instead of `youtube.com`) to prevent cookie tracking    |\n| posterLoading   |                          string. One of `lazy`, `eager`                          | Default: `lazy`. Loading attribute value of poster img element                                              |\n| on:iframeLoaded |                                     function                                     | Callback that will fired when iframe loads                                                                  |\n\n## License\n\n[MIT License](LICENSE.md)\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 154],
		[3596, 134],
		[3603, 226],
		[3610, 161],
		[3617, 291],
		[3624, 177],
		[3631, 150],
		[3638, 195],
		[3645, 43],
		[3652, 76],
		[3659, 153],
		[3666, 247],
		[3673, 256],
		[3680, 410],
		[3687, 185],
		[3694, 254],
		[3701, 290],
		[3708, 236],
		[3715, 208],
		[3722, 381],
		[3729, 279],
		[3736, 190],
		[3743, 161],
		[3750, 153],
		[3757, 259],
		[3764, 259],
		[3771, 126],
		[3778, 184],
		[3785, 228],
		[3792, 139],
		[3799, 135],
		[3806, 131],
		[3813, 70],
		[3820, 118],
		[3827, 108],
		[3834, 87],
		[3841, 88],
		[3848, 125],
		[3855, 102],
		[3862, 178],
		[3869, 111],
		[3876, 46],
		[3883, 62],
		[3890, 123],
		[3897, 72],
		[3904, 163],
		[3911, 148],
		[3918, 405],
		[3925, 356],
		[3932, 120],
		[3939, 56],
		[3946, 82],
		[3953, 151],
		[3960, 153],
		[3967, 97],
		[3974, 128],
		[3981, 143],
		[3988, 130],
		[3995, 254],
		[4002, 102],
		[4009, 12],
		[4016, 14],
		[4023, 94],
		[4030, 75],
		[4037, 101],
		[4044, 117],
		[4051, 70],
		[4058, 149],
		[4065, 127],
		[4072, 145],
		[4079, 130],
		[4086, 100],
		[4093, 76],
		[4100, 93],
		[4107, 109],
		[4114, 49],
		[4121, 47],
		[4128, 48]
	],
	"esm": true,
	"cjs": false
}
