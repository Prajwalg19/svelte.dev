{
	"name": "sk-lanyard",
	"description": "Integrate SvelteKit with Lanyard, fetch Discord presence.",
	"repo_url": "https://github.com/nebulatgs/sk-lanyard",
	"authors": ["nebulatgs"],
	"homepage": "https://github.com/nebulatgs/sk-lanyard#readme",
	"downloads": 21,
	"updated": "2023-09-10T05:43:44.019Z",
	"tags": ["integration"],
	"github_stars": 8,
	"typescript": true,
	"version": "0.2.7",
	"svelte_range": "^4.2.0",
	"last_rune_check_version": "0.2.7",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "sk-lanyard",
				"version": "0.2.7",
				"size": 20587
			},
			{
				"name": "vite",
				"version": "4.5.14",
				"size": 3357865
			},
			{
				"name": "esbuild",
				"version": "0.18.20",
				"size": 131272
			},
			{
				"name": "postcss",
				"version": "8.5.3",
				"size": 201969
			},
			{
				"name": "nanoid",
				"version": "3.3.11",
				"size": 32583
			},
			{
				"name": "picocolors",
				"version": "1.1.1",
				"size": 6373
			},
			{
				"name": "source-map-js",
				"version": "1.2.1",
				"size": 139872
			},
			{
				"name": "rollup",
				"version": "3.29.5",
				"size": 2520676
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[1, 3],
			[3, 4],
			[3, 5],
			[3, 6],
			[1, 7]
		],
		"circular": []
	},
	"readme": "# `sk-lanyard` (SvelteKit + Lanyard)\n\nSvelteKit integration with [Lanyard](https://github.com/Phineas/lanyard), an API to fetch your Discord presence.\n\n`sk-lanyard` is fully typed and supports the entire Lanyard API, using both REST and WebSockets.\n\nThe `useLanyard` function returns a reactive store containing presence data.\n\n## [Demo](https://stackblitz.com/edit/sk-lanyard-demo?file=src/routes/index.svelte)\n\n```html\n<script>\n\timport { useLanyard } from 'sk-lanyard';\n\tconst presence = useLanyard({ method: 'rest', id: '524722785302609941' });\n</script>\n\n<pre>\n    <!-- Because presence is a reactive store, use $presence to access the data -->\n    <code>{JSON.stringify($presence ?? {}, null, 2)}</code>\n</pre>\n```\n\n## Usage\n\n```ts\nimport { useLanyard } from 'sk-lanyard';\n\n// Optionally import Lanyard types\nimport type { LanyardData, LanyardHello } from 'sk-lanyard';\n```\n\n### REST\n\n```ts\n// Use the REST API to fetch a single user\nconst lanyard = useLanyard({ method: 'rest', id: '524722785302609941' });\n```\n\n```ts\n// Use an interval of 1000 ms\nconst lanyard = useLanyard({\n\tmethod: 'rest',\n\tpollInterval: 1000,\n\tid: '524722785302609941'\n});\n```\n\n```ts\n// Use a custom endpoint\nconst lanyard = useLanyard({\n\tmethod: 'rest',\n\trestUrl: 'https://lanyard.example.com/rest',\n\tid: '524722785302609941'\n});\n```\n\n### WebSockets\n\n```ts\n// Use the WebSockets API to subscribe to a single user\nconst lanyard = useLanyard({ method: 'ws', id: '524722785302609941' });\n```\n\n```ts\n// Subscribe to multiple users\nconst lanyard = useLanyard({\n\tmethod: 'ws',\n\tids: ['524722785302609941', '299707523370319883']\n});\n```\n\n```ts\n// Subscribe to all users tracked by Lanyard\nconst lanyard = useLanyard({ method: 'ws', all: true });\n```\n\n```ts\n// Use a custom endpoint\nconst lanyard = useLanyard({\n\tmethod: 'ws',\n\twsUrl: 'wss://lanyard.example.com/ws',\n\tid: '524722785302609941'\n});\n```\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3589, 23],
		[3596, 45],
		[3603, 13],
		[3610, 35],
		[3617, 43],
		[3624, 41],
		[3631, 42],
		[3638, 20],
		[3645, 14],
		[3652, 28],
		[3659, 39],
		[3666, 54],
		[3673, 25],
		[3680, 11],
		[3687, 23],
		[3694, 17],
		[3701, 16],
		[3708, 52],
		[3715, 19],
		[3722, 13],
		[3729, 24],
		[3736, 21],
		[3743, 2],
		[3750, 24],
		[3757, 4],
		[3764, 15],
		[3771, 15],
		[3778, 9],
		[3785, 26],
		[3792, 10],
		[3799, 14],
		[3806, 15],
		[3813, 18],
		[3820, 12],
		[3827, 51],
		[3834, 51],
		[3841, 85],
		[3848, 18],
		[3855, 13],
		[3862, 60],
		[3869, 23],
		[3876, 14],
		[3883, 15],
		[3890, 23],
		[3897, 24],
		[3904, 9],
		[3911, 12],
		[3918, 8],
		[3925, 4],
		[3932, 29],
		[3939, 15],
		[3946, 14],
		[3953, 80],
		[3960, 14],
		[3967, 21],
		[3974, 27],
		[3981, 12],
		[3988, 12],
		[3995, 11],
		[4002, 20],
		[4009, 10],
		[4016, 9],
		[4023, 19],
		[4030, 15],
		[4037, 31],
		[4044, 73],
		[4051, 21],
		[4058, 4],
		[4065, 7],
		[4072, 5],
		[4079, 8],
		[4086, 6],
		[4093, 16],
		[4100, 72],
		[4107, 20],
		[4114, 21],
		[4121, 40],
		[4128, 28]
	]
}
