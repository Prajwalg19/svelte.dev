{
	"name": "svelte-carousel",
	"description": "Create carousel components for Svelte applications.",
	"repo_url": "https://github.com/vadimkorr/svelte-carousel",
	"authors": ["vadimkorr"],
	"homepage": "https://github.com/vadimkorr/svelte-carousel#readme",
	"downloads": 6774,
	"updated": "2023-04-03T20:55:32.574Z",
	"tags": ["ui"],
	"github_stars": 292,
	"typescript": false,
	"version": "1.0.25",
	"svelte_range": "^3.31.2",
	"last_rune_check_version": "1.0.25",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-carousel",
				"version": "1.0.25",
				"size": 66371
			},
			{
				"name": "easy-reactive",
				"version": "1.0.4",
				"size": 18245
			},
			{
				"name": "lodash.clonedeep",
				"version": "4.5.0"
			},
			{
				"name": "lodash.get",
				"version": "4.4.2"
			},
			{
				"name": "lodash.isequal",
				"version": "4.5.0"
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[1, 3],
			[1, 4]
		],
		"circular": []
	},
	"readme": "![svelte-carousel](./docs/svelte-carousel-logo-md.png)\r\n\r\n\r\n# svelte-carousel\r\n\r\n<div align=\"left\">\r\n\r\n[![npm](https://img.shields.io/npm/v/svelte-carousel.svg)](https://www.npmjs.com/package/svelte-carousel) [![npm](https://img.shields.io/npm/dm/svelte-carousel.svg)](https://www.npmjs.com/package/svelte-carousel)\r\n<br />\r\n[![GitHub repo](https://img.shields.io/badge/github-repo-green.svg?style=flat)](https://github.com/vadimkorr/svelte-carousel) [![GitHub followers](https://img.shields.io/github/followers/vadimkorr.svg?style=social&label=Follow)](https://github.com/vadimkorr)\r\n\r\n</div>\r\n\r\nThe awesome carousel component for Svelte 3\r\n\r\n## Demo\r\n* [vadimkorr.github.io/svelte-carousel](https://vadimkorr.github.io/svelte-carousel)\r\n* [REPL](https://svelte.dev/repl/f503a458832f4a358d9ec00f88945ff5)\r\n\r\n## Installation\r\n```bash\r\nyarn add svelte-carousel\r\n```\r\n```bash\r\nnpm install svelte-carousel\r\n```\r\n\r\nImport component\r\n```jsx\r\n<script>\r\n  import Carousel from 'svelte-carousel'\r\n  // ...\r\n</script>\r\n```\r\n\r\n## SvelteKit support\r\nThere are several things to keep in mind when `svelte-carousel` is used with SvelteKit. This is because `svelte-carousel` is a client-side library and depends on `document` and `window`. [See more in SvelteKit FAQ](https://kit.svelte.dev/faq).\r\n\r\n1. Install `svelte-carousel` as a dev dependency. [Why as a dev dependency?](https://github.com/sveltejs/sapper-template#using-external-components)\r\n\r\n```bash\r\nyarn add svelte-carousel -D\r\n```\r\n```bash\r\nnpm install svelte-carousel -D\r\n```\r\n\r\n2. Extend `kit` in `svelte.config.js` to include the `vite` property\r\n\r\n```js\r\nconst config = {\r\n  // existing props\r\n  kit: {\r\n    // existing props\r\n    vite: {\r\n      optimizeDeps: {\r\n        include: ['lodash.get', 'lodash.isequal', 'lodash.clonedeep']\r\n      }\r\n      // plugins: []\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n3. Import and use it:\r\n\r\n```jsx\r\n\r\n<script>\r\n  import Carousel from 'svelte-carousel';\r\n  import { browser } from '$app/environment';\r\n\r\n  let carousel; // for calling methods of the carousel instance\r\n  \r\n  const handleNextClick = () => {\r\n    carousel.goToNext()\r\n  }\r\n</script>\r\n\r\n{#if browser}\r\n  <Carousel\r\n    bind:this={carousel}\r\n  >\r\n    <div>1</div>\r\n    <div>2</div>\r\n    <div>3</div>\r\n  </Carousel>\r\n{/if}\r\n\r\n<button on:click={handleNextClick}>Next</button>\r\n```\r\n\r\n## Vite support\r\n1. Extend `optimizeDeps.include` in `vite.config.js`\r\n\r\n```js\r\nexport default defineConfig({\r\n  optimizeDeps: {\r\n    include: ['lodash.get', 'lodash.isequal', 'lodash.clonedeep']\r\n  }\r\n})\r\n```\r\n\r\n2. Import and use it:\r\n\r\n```jsx\r\n\r\n<script>\r\n  import Carousel from 'svelte-carousel'\r\n\r\n  let carousel; // for calling methods of the carousel instance\r\n  const handleNextClick = () => {\r\n    carousel.goToNext()\r\n  }\r\n</script>\r\n\r\n<Carousel\r\n  bind:this={carousel}\r\n>\r\n  <div>1</div>\r\n  <div>2</div>\r\n  <div>3</div>\r\n</Carousel>\r\n\r\n<button on:click={handleNextClick}>Next</button>\r\n```\r\n\r\n## Props\r\n| Prop                      | Type       | Default         | Description                                   | \r\n|---------------------------|------------|-----------------|-----------------------------------------------|\r\n| `arrows`                  | `boolean`  | `true`          | Enables next/prev arrows                      |\r\n| `infinite`                | `boolean`  | `true`          | Infinite looping                              |\r\n| `initialPageIndex`        | `number`   | `0`             | Page to start on                              |\r\n| `duration`                | `number`   | `500`           | Transition duration (ms)                      |\r\n| `autoplay`                | `boolean`  | `false`         | Enables autoplay of pages                     |\r\n| `autoplayDuration`        | `number`   | `3000`          | Autoplay change interval (ms)                 |\r\n| `autoplayDirection`       | `string`   | `'next'`        | Autoplay change direction (`next` or `prev`)  |\r\n| `pauseOnFocus`            | `boolean`  | `false`         | Pauses autoplay on focus (for touchable devices - tap the carousel to toggle the autoplay, for non-touchable devices - hover over the carousel to pause the autoplay) |\r\n| `autoplayProgressVisible` | `boolean`  | `false`         | Shows autoplay duration progress indicator    |\r\n| `dots`                    | `boolean`  | `true`          | Current page indicator dots                   |\r\n| `timingFunction`          | `string`   | `'ease-in-out'` | CSS animation timing function                 |\r\n| `swiping`                 | `boolean`  | `true`          | Enables swiping                               |\r\n| `particlesToShow`         | `number`   | `1`             | Number of elements to show                    |\r\n| `particlesToScroll`       | `number`   | `1`             | Number of elements to scroll                  |\r\n\r\n## Events\r\n\r\n### `pageChange`\r\nIt is dispatched on page change\r\n\r\n| Payload field      | Type        | Description                           | \r\n|--------------------|-------------|---------------------------------------|\r\n| `event.detail`     | `number`    | Current page index                    |\r\n\r\n```jsx\r\n<Carousel\r\n  on:pageChange={\r\n    event => console.log(`Current page index: ${event.detail}`)\r\n  }\r\n>\r\n  <!-- -->\r\n</Carousel>\r\n```\r\n\r\n## Slots\r\n\r\n### `prev` and `next`\r\nThey are used for customizing prev and next buttons.\r\n\r\nSlot props:\r\n\r\n| Prop               | Type        | Description                           | \r\n|--------------------|-------------|---------------------------------------|\r\n| `showPrevPage`     | `function`  | Call it to switch to the previos page |\r\n| `showNextPage`     | `function`  | Call it to switch to the next page    |\r\n\r\n```jsx\r\n<Carousel\r\n  let:showPrevPage\r\n  let:showNextPage\r\n>\r\n  <div slot=\"prev\">\r\n    <!-- -->\r\n  </div>\r\n  <div slot=\"next\">\r\n    <!-- -->\r\n  </div>\r\n  <!-- -->\r\n</Carousel>\r\n```\r\n\r\n### `dots`\r\nThis slot is used for customizing how dots look like.\r\n\r\nSlot props:\r\n\r\n| Prop                | Type         | Description                                  | \r\n|---------------------|--------------|----------------------------------------------|\r\n| `currentPageIndex`  | `number`     | Represents current page index (start from 0) |\r\n| `pagesCount`        | `number`     | Total pages amount                           |\r\n| `showPage`          | `function`   | Takes index as page to be shown              |\r\n\r\n```jsx\r\n<Carousel\r\n  let:currentPageIndex\r\n  let:pagesCount\r\n  let:showPage\r\n>\r\n  <div slot=\"dots\">\r\n    <!-- -->\r\n  </div>\r\n  <!-- -->\r\n</Carousel>\r\n```\r\n\r\n### Default slot\r\nThis slot takes content for the carousel.\r\n\r\nSlot props:\r\n\r\n| Prop               | Type       | Description                                                          | \r\n|--------------------|------------|----------------------------------------------------------------------|\r\n| `loaded`           | `number[]` | Contains indexes of pages to be loaded. Can be used for lazy loading |\r\n| `currentPageIndex` | `number`   | Represents current page index (start from 0)                         |\r\n\r\n```jsx\r\n<Carousel\r\n  let:loaded\r\n>\r\n  <div>\r\n    <!-- -->\r\n  </div>\r\n  <!-- -->\r\n</Carousel>\r\n```\r\n\r\n## Methods\r\n\r\n### `goTo`\r\nNavigates to a page by index. `(pageIndex, options) => Promise<void>`.\r\n\r\nArguments:\r\n\r\n| Argument           | Type        | Default | Description                           | \r\n|--------------------|-------------|---------|---------------------------------------|\r\n| `pageIndex`        | `number`    |         | Page number                           |\r\n| `options.animated` | `boolean`   | `true`  | Should it be animated or not          |\r\n\r\n```jsx\r\n<script>\r\n  // ...\r\n  let carousel;\r\n  function goToStartPage() {\r\n    carousel.goTo(0, { animated: false })\r\n  }\r\n</script>\r\n\r\n<Carousel\r\n  bind:this={carousel}\r\n>\r\n  <!--  -->\r\n</Carousel>\r\n<button class=\"button\" on:click={goToStartPage}>Go</button>\r\n```\r\n\r\n### `goToPrev`\r\nNavigates to the previous page. `(options) => Promise<void>`.\r\n\r\nArguments:\r\n\r\n| Argument           | Type        | Default | Description                   | \r\n|--------------------|-------------|---------|-------------------------------|\r\n| `options.animated` | `boolean`   | `true`  | Should it be animated or not  |\r\n\r\n```jsx\r\n<script>\r\n  // ...\r\n  let carousel;\r\n  function goToPrevPage() {\r\n    carousel.goToPrev({ animated: false })\r\n  }\r\n</script>\r\n\r\n<Carousel\r\n  bind:this={carousel}\r\n>\r\n  <!--  -->\r\n</Carousel>\r\n<button class=\"button\" on:click={goToPrevPage}>Go</button>\r\n```\r\n\r\n### `goToNext`\r\nNavigates to the next page. `(options) => Promise<void>`.\r\n\r\nArguments:\r\n\r\n| Argument           | Type        | Default | Description                  | \r\n|--------------------|-------------|---------|------------------------------|\r\n| `options.animated` | `boolean`   | `true`  | Should it be animated or not |\r\n\r\n```jsx\r\n<script>\r\n  // ...\r\n  let carousel;\r\n  function goToNextPage() {\r\n    carousel.goToNext({ animated: false })\r\n  }\r\n</script>\r\n\r\n<Carousel\r\n  bind:this={carousel}\r\n>\r\n  <!--  -->\r\n</Carousel>\r\n<button class=\"button\" on:click={goToNextPage}>Go</button>\r\n```\r\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3589, 4190],
		[3596, 5448],
		[3603, 5801],
		[3610, 6080],
		[3617, 6294],
		[3624, 5711],
		[3631, 5858],
		[3638, 4631],
		[3645, 4283],
		[3652, 4524],
		[3659, 6298],
		[3666, 6830],
		[3673, 7093],
		[3680, 7211],
		[3687, 6527],
		[3694, 6251],
		[3701, 6766],
		[3708, 6907],
		[3715, 6617],
		[3722, 6763],
		[3729, 6493],
		[3736, 5604],
		[3743, 6743],
		[3750, 7158],
		[3757, 6656],
		[3764, 6619],
		[3771, 6762],
		[3778, 6877],
		[3785, 7211],
		[3792, 6895],
		[3799, 7065],
		[3806, 6495],
		[3813, 7086],
		[3820, 6932],
		[3827, 7193],
		[3834, 6017],
		[3841, 6537],
		[3848, 7091],
		[3855, 6989],
		[3862, 7288],
		[3869, 6628],
		[3876, 6287],
		[3883, 7157],
		[3890, 7155],
		[3897, 7195],
		[3904, 7371],
		[3911, 6885],
		[3918, 7126],
		[3925, 6918],
		[3932, 7770],
		[3939, 8154],
		[3946, 8505],
		[3953, 7503],
		[3960, 8635],
		[3967, 10518],
		[3974, 17197],
		[3981, 12366],
		[3988, 8112],
		[3995, 7899],
		[4002, 7352],
		[4009, 3833],
		[4016, 4522],
		[4023, 7296],
		[4030, 7754],
		[4037, 7743],
		[4044, 7830],
		[4051, 8138],
		[4058, 7953],
		[4065, 8008],
		[4072, 8634],
		[4079, 7328],
		[4086, 6916],
		[4093, 7244],
		[4100, 7532],
		[4107, 7293],
		[4114, 6774],
		[4121, 5699],
		[4128, 5503]
	]
}
