{
	"name": "svelte-style-action",
	"description": "Manage style attributes using Svelte action.",
	"repo_url": "https://github.com/dimfeld/svelte-style-action",
	"authors": ["dimfeld"],
	"homepage": "https://github.com/dimfeld/svelte-style-action#readme",
	"downloads": 17,
	"updated": "2020-12-31T00:49:08.959Z",
	"tags": ["ui"],
	"github_stars": 4,
	"typescript": false,
	"version": "0.0.5",
	"svelte_range": "^3.0.0",
	"last_rune_check_version": "0.0.5",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-style-action",
				"version": "0.0.5",
				"size": 8189
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# svelte-style-action\n\nThis is a simple Svelte action that makes it easier to manage style attributes without needing to manually concatenate strings together.\n\nThis action uses `node.style.setProperty` to set the property values, which means that the object keys should dash-separated as when typing CSS, not camel-cased. (i.e. `font-weight` instead of `fontWeight`). This also means that CSS custom properties work properly.\n\n```svelte\n<script>\n  import { style } from 'svelte-style-action';\n\n  const styles = {\n    color: 'green',\n    '--aVariable': '40px',\n    'font-weight': 700\n  };\n\n  setTimeout(() => {\n    styles = {\n      ...styles,\n      color: 'red'\n    };\n  }, 1000);\n</script>\n\n<div use:style={styles}>\n  Some content\n</div>\n```\n\nFor convenience, you can also pass a string instead of an object, but you may be better off just setting the `style` attribute directly in that case.\n\nCheck it out in the [Svelte REPL](https://svelte.dev/repl/c45857614b4f41c198688f2108f22387?version=3.31.0)!\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 28],
		[3603, 23],
		[3610, 27],
		[3617, 17],
		[3624, 12],
		[3631, 17],
		[3638, 14],
		[3645, 13],
		[3652, 16],
		[3659, 20],
		[3666, 22],
		[3673, 28],
		[3680, 10],
		[3687, 26],
		[3694, 22],
		[3701, 29],
		[3708, 24],
		[3715, 18],
		[3722, 26],
		[3729, 36],
		[3736, 19],
		[3743, 16],
		[3750, 23],
		[3757, 28],
		[3764, 27],
		[3771, 27],
		[3778, 22],
		[3785, 33],
		[3792, 21],
		[3799, 23],
		[3806, 19],
		[3813, 7],
		[3820, 22],
		[3827, 25],
		[3834, 20],
		[3841, 30],
		[3848, 17],
		[3855, 49],
		[3862, 15],
		[3869, 12],
		[3876, 14],
		[3883, 25],
		[3890, 20],
		[3897, 14],
		[3904, 10],
		[3911, 19],
		[3918, 26],
		[3925, 19],
		[3932, 15],
		[3939, 16],
		[3946, 22],
		[3953, 11],
		[3960, 20],
		[3967, 10],
		[3974, 13],
		[3981, 25],
		[3988, 13],
		[3995, 19],
		[4002, 19],
		[4009, 16],
		[4016, 12],
		[4023, 21],
		[4030, 30],
		[4037, 42],
		[4044, 16],
		[4051, 20],
		[4058, 17],
		[4065, 69],
		[4072, 8],
		[4079, 18],
		[4086, 32],
		[4093, 56],
		[4100, 40],
		[4107, 17],
		[4114, 17],
		[4121, 11],
		[4128, 20],
		[4135, 9]
	],
	"esm": true,
	"cjs": false
}
