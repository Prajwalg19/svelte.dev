{
	"name": "@bonosoft/sveltekit-base32",
	"description": "Encode/decode strings to/from base32 in SvelteKit.",
	"repo_url": "https://github.com/bonosoft/sveltekit-base32",
	"authors": ["bonosoft"],
	"homepage": "https://github.com/bonosoft/sveltekit-base32#readme",
	"downloads": 4,
	"updated": "2023-04-07T21:04:37.255Z",
	"tags": ["miscellaneous"],
	"github_stars": 0,
	"typescript": true,
	"version": "0.0.1",
	"svelte_range": "^3.54.0",
	"kit_range": "^1.5.0",
	"last_rune_check_version": "0.0.1",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@bonosoft/sveltekit-base32",
				"version": "0.0.1",
				"size": 9277
			}
		],
		"dependencies": [],
		"circular": []
	},
	"legacy_svelte": false,
	"readme": "# Base32 encode or decode for SvelteKit\nWith this module, you are able use base32 encoding on you Sveltekit site. \n\n## Install\nUse your package manager to install the module:\n```shell\nnpm install @bonosoft/sveltekit-base32\n```\n\n## Using base32 in a svelte file in SvelteKit\nNow you can start using the Base32 class in your pages.\n```ts\n<script lang=\"ts\">\n  import Base32 from \"@bonosoft/sveltekit-base32\"\n  const base32 = new Base32();\n</script>\n```\n\n## Encode or EncodeString\nWith the encode you can use base32 to tranform your data info a string of standard capital letters and digits. The encoding is not an encryption, and can easily be transformed back into the original data.\n```ts\n    var myEncodedString = base32.encodeString(\"mySecret\");\n\n    const secret = new Uint8Array(10);\n    for(let i=0; i<10; i++) {\n        secret[i] = Math.floor(Math.random() * 256);\n    }\n    let base32secret: string = base32.encode(secret);\n```\n\n## Decode or DecodeString\nThe decode functions return the base32 strings back into your original data.\n```ts\n    var mySecret : string = base32.decodeString(\"NV4VGZLDOJSXI===\");\n\n    console.log( base32.decode(\"5GJGHSQGJXXNSB5Y\") );\n```\n\n## TOTP Time based One Time Password secrets\nMost TOTP applications requires that your shared secret is a base32 encoded string.<br>\nIn your browser you are able to make a more secure random secret for your TOTP app.\n```ts\n    const secret = new Uint8Array(10);\n    self.crypto.getRandomValues(secret);\n\n    let totpsecret: string = base32.encode(secret);\n\n```\n",
	"downloads_history": [
		[3589, 2],
		[3596, 2],
		[3603, 4],
		[3610, 1],
		[3631, 2],
		[3638, 1],
		[3645, 2],
		[3652, 2],
		[3659, 3],
		[3666, 1],
		[3680, 1],
		[3708, 1],
		[3729, 1],
		[3757, 1],
		[3771, 1],
		[3778, 3],
		[3799, 1],
		[3806, 3],
		[3827, 1],
		[3834, 2],
		[3841, 6],
		[3855, 1],
		[3862, 3],
		[3876, 2],
		[3883, 2],
		[3904, 2],
		[3911, 2],
		[3925, 7],
		[3932, 3],
		[3953, 1],
		[3981, 2],
		[3995, 1],
		[4009, 2],
		[4016, 2],
		[4023, 1],
		[4030, 1],
		[4037, 1],
		[4044, 4],
		[4051, 2],
		[4058, 1],
		[4065, 1],
		[4072, 1],
		[4086, 4],
		[4100, 3],
		[4114, 4],
		[4121, 6],
		[4128, 1]
	],
	"esm": true,
	"cjs": false
}
