{
	"name": "svelte-dispatchable",
	"description": "Implement dispatchable reactive store, alternative to Svelte stores.",
	"repo_url": "https://github.com/ravid7000/svelte-dispatchable",
	"authors": ["ravid7000"],
	"downloads": 7,
	"updated": "2022-01-22T21:57:11.071Z",
	"tags": ["miscellaneous"],
	"github_stars": 1,
	"homepage": null,
	"typescript": true,
	"version": "0.0.4",
	"svelte_range": "^3.0.0",
	"last_rune_check_version": "0.0.4",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-dispatchable",
				"version": "0.0.4",
				"size": 7612
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "\n# Dispatchable\n\nDispatchable reactive store, alternative to svelte stores\n\n\n\n\n![Logo](https://raw.githubusercontent.com/ravid7000/svelte-dispatchable/master/public/dispatable-logo.svg)\n\n\n## Installation\n\nInstall svelte-dispatchable with npm\n\n```bash\nnpm install svelte-dispatchable\n```\n\nInstall svelte-dispatchable with yarn\n\n```bash\nyarn add svelte-dispatchable\n```\n    \n## Usage/Examples\n\n```js\n// counterStore.js\n\nimport { dispatchable } from 'svelte-dispatchable'\n\nexport const counter = dispatchable(0, (state, action) => {\n  switch (action.type) {\n    case 'INCREMENT':\n      return state + 1\n    case 'DECREMENT':\n      return state - 1\n    default:\n      return state\n  }\n})\n```\n\nImport the store in svelte component\n```svelte\n<script>\n  import { counter } from './counterStore';\n\n  const increment = () => {\n    counter.dispatch({ type: 'INCREMENT' });\n  };\n\n  const decrement = () => {\n    counter.dispatch({ type: 'DECREMENT' });\n  };\n\n  const reset = () => {\n    counter.dispatch({ type: 'RESET' });\n  };\n</script>\n\n<div>\n  <h1>Counter</h1>\n  <p>\n    <button name=\"increment\" on:click={increment}>+</button>\n    <span class=\"counter\">{$counter}</span>\n    <button name=\"decrement\" on:click={decrement}>-</button>\n    <button name=\"reset\" on:click={reset}>reset</button>\n  </p>\n</div>\n\n```\n\n### The Store\nDispatchable takes initialState as first argument and reducer function as second argument.\n\n```js\n\nconst reducer = (state, action) => {\n  // handle state\n  return state\n}\n\nconst store = dispatchable(0 /* <initialState> */, reducer /* <reducerFn> */)\n```\n\n**Dispatch update to the store**\n\nDispatch method takes first argument as object { type: string }, `type` key is required\n\n```js\nstore.dispatch({\n  type: 'string',\n})\n```\n\n**Dispatch update to the store with additional data**\n\n```js\nstore.dispatch({\n  type: 'string',\n  value: 1,\n  // ...other data\n})\n```\n\n**Dispatch update with additional arguments**\n\n```js\nstore.dispatch({ type: 'string' }, ...additionalArgs)\n```\n\n\n## FAQ\n\n#### Why are the issue with svelte stores?\n\n- Svelte allows to directly modify the store value from components which sometime becomes very hard to find which component is updating the store. Multiple updates on store from multiple places.\n```\n$counter = 10;\n```\n\n- It is not a scalable approach as your project grows it becomes difficult to manage the state.\n- To solve these issue introducing dispatchable store.\n\n#### Why not redux?\n\nRedux is a very popular state management library mostly used with React framework. Redux mainly focus on creating a single store and adding reducers based on requirement. And redux also has so much boilerplate code to setup a reducer. Which defeats the purpose of writing multiple independent stores with very less boilerplate code in svelte.\n\n\n\n## Authors\n\n- [@ravid7000](https://www.github.com/ravid7000)\n\n\n## License\n\n[MIT](https://github.com/ravid7000/svelte-dispatchable/blob/master/LICENSE)\n\n\n## Contributing\n\nContributions are always welcome!\n\nSee [`contributing.md`](https://github.com/ravid7000/svelte-dispatchable/blob/master/contributing.md) for ways to get started.\n\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 1],
		[3603, 5],
		[3610, 6],
		[3617, 2],
		[3631, 1],
		[3645, 4],
		[3652, 3],
		[3659, 1],
		[3666, 6],
		[3680, 1],
		[3701, 1],
		[3708, 1],
		[3729, 7],
		[3750, 2],
		[3757, 4],
		[3771, 5],
		[3778, 1],
		[3785, 1],
		[3792, 2],
		[3799, 1],
		[3806, 3],
		[3813, 1],
		[3834, 1],
		[3848, 1],
		[3855, 26],
		[3876, 3],
		[3883, 1],
		[3890, 5],
		[3897, 1],
		[3904, 1],
		[3925, 1],
		[3932, 1],
		[3939, 1],
		[3953, 1],
		[3960, 1],
		[3974, 1],
		[3981, 1],
		[3988, 1],
		[4002, 1],
		[4023, 1],
		[4030, 5],
		[4037, 10],
		[4044, 11],
		[4051, 1],
		[4058, 6],
		[4065, 1],
		[4093, 10],
		[4100, 8],
		[4107, 3],
		[4114, 7],
		[4121, 3],
		[4128, 4]
	]
}
