{
	"name": "sly-svelte-file-tree",
	"description": "Create customizable file tree view component for Svelte.",
	"repo_url": "https://github.com/SlyOtis/svelte-file-tree",
	"authors": ["slyotis"],
	"homepage": "https://github.com/SlyOtis/svelte-file-tree",
	"downloads": 6,
	"updated": "2024-09-27T12:54:46.154Z",
	"tags": ["ui"],
	"github_stars": 0,
	"typescript": true,
	"version": "1.0.3",
	"svelte_range": "^4.0.0",
	"last_rune_check_version": "1.0.3",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "sly-svelte-file-tree",
				"version": "1.0.3",
				"size": 56506
			},
			{
				"name": "uuid",
				"version": "10.0.0",
				"size": 168173
			}
		],
		"dependencies": [[0, 1]],
		"circular": []
	},
	"readme": "# Sly Svelte File Tree\n\nA customizable file tree view component for Svelte.\n\n## Features\n\n- Hierarchical file and folder structure display\n- File selection with multi-select support\n- Folder expansion and collapse\n- Custom sorting and grouping\n- Metadata display\n- Customizable item actions\n- Loading and empty states\n- Responsive design\n\n\n## Installation\n\nTo install the Svelte File Tree component using pnpm, run the following command in your project directory:\n\n```bash\npnpm add sly-svelte-file-tree\n```\n\n## Usage\n\n```svelte\n<script lang=\"ts\">\nimport FileTree, { type FileDescriptor, type SelectedFiles, displayDateISO } from 'sly-svelte-file-tree';\n\n// Example file structure\nconst fileStructure: FileDescriptor = {\n  id: 'root',\n  name: 'Root',\n  selected: false,\n  expanded: true,\n  mimeType: 'folder',\n  href: '/',\n  path: '/',\n  children: [\n    {\n      id: 'folder1',\n      name: 'Folder 1',\n      selected: false,\n      expanded: false,\n      mimeType: 'folder',\n      href: '/folder1',\n      path: '/folder1',\n      children: [\n        {\n          id: 'file1',\n          name: 'File 1.txt',\n          selected: false,\n          mimeType: 'text/plain',\n          href: '/folder1/file1.txt',\n          path: '/folder1/file1.txt',\n          metadata: {\n            size: { name: 'Size', value: 1024, displayValue: (v) => `${v} bytes` },\n            created_at: { name: 'Created', value: new Date(), displayValue: displayDateISO }\n          }\n        }\n      ]\n    },\n    {\n      id: 'file2',\n      name: 'File 2.pdf',\n      selected: false,\n      mimeType: 'application/pdf',\n      href: '/file2.pdf',\n      path: '/file2.pdf',\n      metadata: {\n        size: { name: 'Size', value: 2048, displayValue: (v) => `${v} bytes` },\n        created_at: { name: 'Created', value: new Date(), displayValue: displayDateISO }\n      }\n    }\n  ]\n};\n\nlet selectedFiles: SelectedFiles = {};\n\nfunction handleClick(event: CustomEvent<FileDescriptor>) {\n  console.log('Clicked:', event.detail);\n}\n\nfunction handleSelection(event: CustomEvent<FileDescriptor>) {\n  console.log('Selection changed:', event.detail);\n}\n</script>\n\n<FileTree\n  fileDesc={fileStructure}\n  on:click={handleClick}\n  on:selected={handleSelection}\n  bind:selectedFiles\n  fileGrouping={{\n    \"size\": {\n      name: \"File size\",\n      orderOf: 'number',\n      displayValue: (v) => `${v} bytes`\n    },\n    \"created_at\": {\n      name: \"Created At\",\n      orderOf: 'date',\n      displayValue: displayDateISO,\n    }\n  }}\n  noFolderClick={false}\n  notSelectable={false}\n  noMenuBar={false}\n  noIndentation={false}\n  noActionsTransition={false}\n  metadataAsTags={false}\n>\n  <div slot=\"loading\">\n    <span>Loading file tree...</span>\n  </div>\n\n  <div slot=\"item-actions\" let:data>\n    <button on:click={() => console.log('Delete', data)}>\n      <span class=\"material-icons\">delete</span>\n    </button>\n  </div>\n\n  <div slot=\"selection-actions\" let:data>\n    <button on:click={() => console.log('Bulk delete', Object.values(data))}>\n      <span class=\"material-icons\">delete_sweep</span>\n    </button>\n  </div>\n\n  <div slot=\"item-loading\">\n    <span>Loading item...</span>\n  </div>\n\n  <div slot=\"item-no-content\" let:data>\n    <span>Failed to load content for {data.name}</span>\n  </div>\n\n  <div slot=\"empty-list\">\n    <span>This folder is empty</span>\n  </div>\n</FileTree>\n\n<style>\n  :global(.sly-file-tree) {\n    --sly-color-control: #e0e0e0;\n    --sly-color-hover: #f5f5f5;\n    --sly-color-select: #bbdefb;\n    --sly-item-indentation: 20px;\n  }\n</style>\n```\n\n## Customization\n\n### CSS Variables\n\nOverride these CSS variables to customize the appearance:\n\n- `--sly-color-control`\n- `--sly-color-content`\n- `--sly-color-no-content`\n- `--sly-color-hover`\n- `--sly-color-select`\n- `--sly-color-on-content`\n- `--sly-color-on-hover`\n- `--sly-color-on-select`\n- `--sly-color-metadata`\n- `--sly-color-on-metadata`\n- `--sly-color-header`\n- `--sly-item-indentation`\n- `--sly-item-cell-gap`\n- `--sly-item-transition`\n\n### Slots\n\nCustomize various parts of the tree using slots:\n\n- `loading`: Content to show while loading\n- `item-actions`: Custom actions for each item\n- `selection-actions`: Actions for selected items\n- `item-loading`: Content for loading items\n- `item-no-content`: Content for items that failed to load\n\n## Props\n\n- `fileDesc`: File structure descriptor\n- `selectedFiles`: Currently selected files\n- `fileGrouping`: Grouping configuration\n- `notSelectable`: Disable selection\n- `noMenuBar`: Hide menu bar\n- `noFolderClick`: Disable folder click\n- `noIndentation`: Remove indentation\n- `noActionsTransition`: Disable action transitions\n- `metadataAsTags`: Display metadata as tags\n\nRefer to the component's TypeScript definitions for more detailed prop information.\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3918, 263],
		[3925, 15],
		[3932, 3],
		[3939, 11],
		[3946, 3],
		[3953, 8],
		[3960, 9],
		[3967, 61],
		[3974, 3],
		[3981, 4],
		[3988, 5],
		[3995, 4],
		[4009, 3],
		[4016, 1],
		[4023, 9],
		[4030, 3],
		[4037, 11],
		[4044, 10],
		[4051, 4],
		[4058, 1],
		[4065, 4],
		[4072, 2],
		[4079, 2],
		[4086, 4],
		[4093, 2],
		[4100, 4],
		[4107, 11],
		[4114, 6],
		[4121, 10],
		[4128, 33]
	],
	"esm": true,
	"cjs": false
}
