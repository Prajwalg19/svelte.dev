{
	"name": "@animelist/auth-sveltekit",
	"description": "Integrates authentication with SvelteKit.",
	"repo_url": "https://github.com/Neo-Ciber94/animelist",
	"authors": ["neociber94"],
	"homepage": "https://github.com/Neo-Ciber94/animelist#readme",
	"downloads": 14,
	"updated": "2025-03-23T19:36:38.727Z",
	"tags": ["auth"],
	"github_stars": 5,
	"typescript": true,
	"version": "0.1.2",
	"svelte_range": "^4.0.5",
	"kit_range": "^1.25.0",
	"last_rune_check_version": "0.1.2",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "@animelist/auth-sveltekit",
				"version": "0.1.2",
				"size": 22165
			},
			{
				"name": "@animelist/auth",
				"version": "0.1.2",
				"size": 125349
			},
			{
				"name": "@animelist/client",
				"version": "0.1.2",
				"size": 49056
			},
			{
				"name": "@animelist/core",
				"version": "0.1.0",
				"size": 16065
			},
			{
				"name": "cookie",
				"version": "0.5.0",
				"size": 23137
			},
			{
				"name": "crypto-es",
				"version": "2.0.4",
				"size": 237213
			},
			{
				"name": "jose",
				"version": "4.15.9",
				"size": 548521
			},
			{
				"name": "zod",
				"version": "3.22.2",
				"size": 616049
			},
			{
				"name": "svelte",
				"version": "4.2.19",
				"size": 2633608
			},
			{
				"name": "acorn",
				"version": "8.14.1",
				"size": 547473
			},
			{
				"name": "code-red",
				"version": "1.0.4",
				"size": 55185
			},
			{
				"name": "@jridgewell/sourcemap-codec",
				"version": "1.5.0",
				"size": 112815
			},
			{
				"name": "@types/estree",
				"version": "1.0.7",
				"size": 26147
			},
			{
				"name": "estree-walker",
				"version": "3.0.3",
				"size": 17599
			},
			{
				"name": "periscopic",
				"version": "3.1.0",
				"size": 11219
			},
			{
				"name": "is-reference",
				"version": "3.0.3",
				"size": 3953
			},
			{
				"name": "css-tree",
				"version": "2.3.1",
				"size": 1190591
			},
			{
				"name": "mdn-data",
				"version": "2.0.30",
				"size": 602138
			},
			{
				"name": "source-map-js",
				"version": "1.2.1",
				"size": 139872
			},
			{
				"name": "aria-query",
				"version": "5.3.2",
				"size": 176114
			},
			{
				"name": "magic-string",
				"version": "0.30.17",
				"size": 467464
			},
			{
				"name": "axobject-query",
				"version": "4.1.0",
				"size": 110878
			},
			{
				"name": "locate-character",
				"version": "3.0.0",
				"size": 5325
			},
			{
				"name": "@ampproject/remapping",
				"version": "2.3.0",
				"size": 78946
			},
			{
				"name": "@jridgewell/gen-mapping",
				"version": "0.3.8",
				"size": 81596
			},
			{
				"name": "@jridgewell/set-array",
				"version": "1.2.1",
				"size": 17945
			},
			{
				"name": "@jridgewell/trace-mapping",
				"version": "0.3.25",
				"size": 169330
			},
			{
				"name": "@jridgewell/resolve-uri",
				"version": "3.1.2",
				"size": 53153
			}
		],
		"dependencies": [
			[0, 1],
			[1, 2],
			[1, 3],
			[1, 4],
			[1, 5],
			[1, 6],
			[1, 7],
			[0, 2],
			[0, 3],
			[0, 8],
			[8, 9],
			[8, 10],
			[10, 11],
			[10, 12],
			[10, 9],
			[10, 13],
			[13, 12],
			[10, 14],
			[14, 12],
			[14, 13],
			[14, 15],
			[15, 12],
			[8, 16],
			[16, 17],
			[16, 18],
			[8, 19],
			[8, 14],
			[8, 15],
			[8, 20],
			[20, 11],
			[8, 12],
			[8, 13],
			[8, 21],
			[8, 22],
			[8, 23],
			[23, 24],
			[24, 25],
			[24, 11],
			[24, 26],
			[26, 27],
			[26, 11],
			[23, 26],
			[8, 26],
			[8, 11]
		],
		"circular": []
	},
	"legacy_svelte": false,
	"readme": "# @animelist/auth-next\r\n\r\nImplementation of the `@animelist/auth` for `SvelteKit`.\r\n\r\nYou can checkout this [Example](https://github.com/Neo-Ciber94/animelist/tree/main/examples/sveltekit-mal-auth).\r\n\r\n## Table of Contents\r\n\r\n1. [Setup](#setup)\r\n2. [Get Current User](#get-current-user)\r\n3. [Load user from server](#load-user-from-server)\r\n4. [License](#license)\r\n\r\n\r\n## Setup\r\n\r\nIn your `Sveltekit` project install the packages:\r\n\r\n_npm_\r\n\r\n```bash\r\nnpm install @animelist/auth-sveltekit @animelist/client\r\n```\r\n\r\n_yarn_\r\n\r\n```bash\r\nyarn add @animelist/auth-sveltekit @animelist/client\r\n```\r\n\r\n_pnpm_\r\n\r\n```bash\r\npnpm install @animelist/auth-sveltekit @animelist/client\r\n```\r\n\r\n1.  This package reads environment variables from `process.env`, which is not available for some targets, for that you need to define them in your `vite.config.ts`.\r\n\r\nYou can define them directly, `dotenv` or any other plugin that do the job.\r\n\r\nThis is an example on how can be done:\r\n\r\n\r\n  ```ts\r\n    import { sveltekit } from \"@sveltejs/kit/vite\";\r\n    import { defineConfig } from \"vite\";\r\n    import dotenv from \"dotenv\"; // npm install -D dotenv\r\n    dotenv.config();\r\n\r\n    const defineProcessEnv = () => {\r\n      const definedEnvs = Object.fromEntries(\r\n        Object.entries(process.env || {}).map(([key, value]) => [\r\n          `process.env.${key}`,\r\n          JSON.stringify(value),\r\n        ])\r\n      );\r\n\r\n      return definedEnvs;\r\n    };\r\n\r\n    export default defineConfig({\r\n      plugins: [sveltekit()],\r\n      define: defineProcessEnv(),\r\n    });\r\n  ```\r\n\r\n  > You may need to mark `@animelist/auth` as external to allow vite to replace the values correctly.\r\n  >```ts\r\n  >    export default defineConfig({\r\n  >      ssr: {\r\n  >        noExternal: [\"@animelist/auth\"]\r\n  >      },\r\n  >      // ...\r\n  >  });\r\n  >```\r\n\r\n2.  You need to provide the following environment variables:\r\n\r\n    ```bash\r\n    MAL_CLIENT_ID = <client_id>\r\n    MAL_CLIENT_SECRET = <client_secret>\r\n    MAL_REQUEST_DEBUG = true # optional\r\n    ```\r\n\r\n    To get the **client id** and **client secret** you need to log into your <https://myanimelist.net/>:\r\n\r\n    - Go to `Preferences > API` and create a new client.\r\n    - On the `App Redirect URL` use `<url>/api/myanimelist/auth/callback`.\r\n      - For example `http://localhost:3000/api/myanimelist/auth/callback` if your app is running on `localhost:3000`.\r\n\r\n    If you used the example `vite.config.ts` you can just create a `.env` file and the `dotenv` will load the variables.\r\n\r\n3.  Create a `hooks.server.ts` with the contents:\r\n\r\n```ts\r\nimport type { Handle } from \"@sveltejs/kit\";\r\nimport {\r\n  createMyAnimeListFetchHandler,\r\n  getUser,\r\n} from \"@animelist/auth-sveltekit/server\";\r\n\r\nconst handler = createMyAnimeListFetchHandler();\r\n\r\nexport const handle: Handle = async ({ event, resolve }) => {\r\n  event.locals.session = await getUser(event.cookies);\r\n\r\n  if (event.url.pathname.startsWith(\"/api/myanimelist\")) {\r\n    return handler(event.request);\r\n  }\r\n\r\n  return resolve(event);\r\n};\r\n```\r\n\r\nAlso may need to modify your `app.d.ts`\r\n\r\n```ts\r\nimport type { Session } from \"@animelist/auth-sveltekit/client\";\r\n\r\ndeclare global {\r\n  namespace App {\r\n    interface Locals {\r\n      session?: Session | null;\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n4. In your `src/routes/+layout.svelte` initializes the session\r\n\r\n```svelte\r\n<script lang=\"ts\">\r\n  import { session } from \"@animelist/auth-sveltekit/client\";\r\n  session.initialize().catch(console.error);\r\n</script>\r\n\r\n<slot />\r\n```\r\n\r\n5. You are ready! in a `src/routes/+page.svelte` you can add this:\r\n\r\n```svelte\r\n<script lang=\"ts\">\r\n  import { signIn, signOut, session } from \"@animelist/auth-sveltekit/client\";\r\n</script>\r\n\r\n{#if $session.loading}\r\n  <p>Loading...</p>\r\n{:else if $session.user == null}\r\n  <button on:click=\"{signIn}\">Sign In</button>\r\n{:else if $session.user}\r\n  <p>Hello {$session.user.name}</p>\r\n  <button on:click=\"{signOut}\">Sign Out</button>\r\n{/if}\r\n```\r\n\r\n6. `$session` also returns an `accessToken` that can be used to make requests.\r\n\r\n```svelte\r\n<script lang=\"ts\">\r\n  import { signIn, signOut, session } from \"@animelist/auth-sveltekit/client\";\r\n  import { MALClient } from \"@animelist/client\";\r\n\r\n$: (async function(){\r\n    if (!$session.accessToken) {\r\n      return;\r\n    }\r\n\r\n    // We need the 'proxyUrl' because we are running on the client\r\n    const client = new MALClient({\r\n      proxyUrl: \"/api/myanimelist\",\r\n      accessToken: $session.accessToken,\r\n    });\r\n\r\n    const result = await client.getSuggestedAnime();\r\n    console.log(result);\r\n})()\r\n</script>\r\n```\r\n\r\n## Get Current User\r\n\r\nAfter the user is logged you can get the current user information using `getServerSession`.\r\n\r\nWhich returns `null` if the user is not logged or `UserSession`:\r\n\r\n```ts\r\ntype UserSession = {\r\n  userId: number;\r\n  refreshToken: string;\r\n  accessToken: string;\r\n};\r\n```\r\n\r\n```ts\r\nimport { getServerSession } from \"@animelist/auth-next/server\";\r\n\r\nconst session = await getServerSession(cookies);\r\n\r\nif (session) {\r\n  console.log(\"User is logged in\");\r\n}\r\n```\r\n\r\nYou can also use `getRequiredServerSession(cookies)` which throws an error if the user is not logged in.\r\n\r\n> If you want to get the user information you can use the `getUser`, keep in mind this fetches the user,\r\ninstead of just retrieve the information from the cookie.\r\n\r\n```ts\r\nimport { getUser } from \"@animelist/auth-next/server\";\r\n\r\nconst user = await getUser(cookies);\r\n\r\nif (user) {\r\n  console.log(\"User is logged in\");\r\n}\r\n```\r\n\r\n## Load user from server\r\n\r\nEach time we load a page `session.initialize` will fetch the user from the client side,\r\nso you may need to show a spinner while the user is loading.\r\nTo prevent this we can fetch the user from the server side.\r\n\r\nFollowing our **setup** example, we can add a `+layout.server.ts` to load the user to all our pages.\r\n\r\n```ts\r\nimport type { LayoutServerLoad } from './$types';\r\n\r\n// `hooks.server.ts` already set the session\r\nexport const load: LayoutServerLoad = async ({ locals }) => {\r\n  return { session: locals.session };\r\n};\r\n\r\n```\r\n\r\n```svelte\r\n<script lang=\"ts\">\r\n  import { session } from \"@animelist/auth-sveltekit/client\";\r\n  import type { LayoutServerData } from './$types';\r\n\r\n  export let data: LayoutServerData;\r\n\r\n  session.initialize(data.session).catch(console.error);\r\n</script>\r\n\r\n<slot />\r\n```\r\n\r\nAlternatively you can drop the usage of `$session` and just access the `$page.data.session`.\r\n\r\n```svelte\r\n<script lang=\"ts\">\r\nimport { page } from '$app/stores';\r\n</script>\r\n\r\n<div>{$page.data.session?.user.name}</div>\r\n```\r\n\r\nRemember to also update your `app.d.ts` for type safety.\r\n\r\n```ts\r\n// app.d.ts\r\nimport type { Session } from '@animelist/auth-sveltekit/client';\r\n\r\ndeclare global {\r\n  namespace App {\r\n    interface Locals {\r\n      session?: Session | null;\r\n    }\r\n\r\n    interface PageData {\r\n      session?: Session | null;\r\n    }\r\n    \r\n    // interface Error {}\r\n    // interface Platform {}\r\n  }\r\n}\r\n```\r\n\r\n---\r\n\r\n## Good to know\r\n\r\nYou may also notice you are receiving this warning:\r\n\r\n> ⚠️ 'process.env.MAL_SECRET_KEY' was not set, using a default secret key\r\n\r\nTo fix that add other environment variable `MAL_SECRET_KEY`, to generate a secret key you can use:\r\n\r\n```bash\r\nopenssl rand --base64 32\r\n```\r\n\r\nOr this beauty:\r\n\r\n```bash\r\necho \"console.log(require('crypto').randomBytes(32).toString('base64'))\" | node\r\n```\r\n\r\n## License\r\n\r\nThis project is licensed under the MIT License - see the LICENSE file for details.\r\n",
	"downloads_history": [
		[3589, 15],
		[3596, 30],
		[3603, 4],
		[3610, 3],
		[3617, 16],
		[3624, 5],
		[3631, 15],
		[3638, 2],
		[3645, 33],
		[3659, 10],
		[3666, 31],
		[3687, 15],
		[3694, 1],
		[3708, 2],
		[3715, 21],
		[3722, 6],
		[3729, 11],
		[3743, 1],
		[3750, 4],
		[3764, 1],
		[3771, 14],
		[3778, 18],
		[3785, 1],
		[3792, 1],
		[3799, 1],
		[3806, 4],
		[3820, 1],
		[3827, 1],
		[3841, 12],
		[3848, 1],
		[3855, 1],
		[3862, 31],
		[3869, 1],
		[3876, 16],
		[3883, 3],
		[3890, 2],
		[3897, 16],
		[3904, 3],
		[3911, 3],
		[3918, 3],
		[3925, 2],
		[3932, 7],
		[3939, 1],
		[3946, 2],
		[3953, 1],
		[3960, 1],
		[3967, 17],
		[3974, 13],
		[3981, 1],
		[3988, 4],
		[3995, 16],
		[4002, 4],
		[4009, 2],
		[4016, 8],
		[4023, 3],
		[4030, 4],
		[4037, 7],
		[4044, 13],
		[4051, 6],
		[4058, 1],
		[4072, 1],
		[4086, 46],
		[4093, 51],
		[4100, 61],
		[4107, 4],
		[4114, 14],
		[4121, 15],
		[4128, 9]
	]
}
