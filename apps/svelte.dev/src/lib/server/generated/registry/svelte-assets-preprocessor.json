{
	"name": "svelte-assets-preprocessor",
	"description": "Preprocessor for extracting assets in Svelte components.",
	"repo_url": "https://github.com/pchynoweth/svelte-assets-preprocessor",
	"authors": ["pchynoweth"],
	"homepage": "https://github.com/pchynoweth/svelte-assets-preprocessor#readme",
	"downloads": 16,
	"updated": "2021-03-28T19:21:52.047Z",
	"tags": ["tooling"],
	"github_stars": 0,
	"typescript": true,
	"version": "0.0.7",
	"svelte_range": "^3.35.0",
	"last_rune_check_version": "0.0.7",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-assets-preprocessor",
				"version": "0.0.7",
				"size": 19266
			},
			{
				"name": "lodash",
				"version": "4.17.21",
				"size": 1412415
			},
			{
				"name": "node-html-parser",
				"version": "3.3.6",
				"size": 183747
			},
			{
				"name": "he",
				"version": "1.2.0",
				"size": 124138
			},
			{
				"name": "css-select",
				"version": "4.3.0",
				"size": 82444
			},
			{
				"name": "boolbase",
				"version": "1.0.0"
			},
			{
				"name": "css-what",
				"version": "6.1.0",
				"size": 66038
			},
			{
				"name": "domhandler",
				"version": "4.3.1",
				"size": 44583
			},
			{
				"name": "domelementtype",
				"version": "2.3.0",
				"size": 11359
			},
			{
				"name": "domutils",
				"version": "2.8.0",
				"size": 56647
			},
			{
				"name": "dom-serializer",
				"version": "1.4.1",
				"size": 28312
			},
			{
				"name": "entities",
				"version": "2.2.0",
				"size": 57673
			},
			{
				"name": "nth-check",
				"version": "2.1.1",
				"size": 42555
			},
			{
				"name": "svelte",
				"version": "3.59.2",
				"size": 10624206
			},
			{
				"name": "tslib",
				"version": "2.1.0",
				"size": 35212
			}
		],
		"dependencies": [
			[0, 1],
			[0, 2],
			[2, 3],
			[2, 4],
			[4, 5],
			[4, 6],
			[4, 7],
			[7, 8],
			[4, 9],
			[9, 7],
			[9, 10],
			[10, 8],
			[10, 7],
			[10, 11],
			[9, 8],
			[4, 12],
			[12, 5],
			[0, 13],
			[0, 14]
		],
		"circular": []
	},
	"readme": "![Node.js CI](https://github.com/pchynoweth/svelte-assets-preprocessor/workflows/Node.js%20CI/badge.svg)\n![new-version](https://github.com/pchynoweth/svelte-assets-preprocessor/workflows/new-version/badge.svg)\n[![Build Status](https://travis-ci.org/pchynoweth/svelte-assets-preprocessor.svg?branch=master)](https://travis-ci.org/pchynoweth/svelte-assets-preprocessor)\n[![version](https://img.shields.io/npm/v/svelte-assets-preprocessor.svg?style=flat-square)](http://npm.im/svelte-assets-preprocessor)\n\n# svelte-assets-preprocessor\n\n> A [Svelte](https://svelte.dev) preprocessor that extracts assets.\n\n## Overview\n\nThis preprocessor is based on the webpack [html-loader](https://github.com/webpack-contrib/html-loader).  It works in a similar way and shares some config options.\n\n## Installation\n\nUsing npm:\n```bash\n$ npm i -D svelte-assets-preprocessor\n```\n\n## Example\n\n### Input\n\n```html\n<img src=\"./example.png\">\n```\n\n### Output\n\n```html\n<script>\n    import ___ASSET___1 from './example.png';\n</script>\n\n<img src=\"{___ASSET___1}\">\n```\n\n## Usage\n\n### With `rollup-plugin-svelte`\n\nYou will need to use [@rollup/plugin-url](https://github.com/rollup/plugins/tree/master/packages/url) to load assets.\n\n```js\n// rollup.config.js\nimport svelte from 'rollup-plugin-svelte';\nimport assetsPreprocessor from 'svelte-assets-preprocessor'\nimport url from '@rollup/plugin-url'\n\nexport default {\n  ...,\n  plugins: [\n    url({ destDir: 'public' }),\n    svelte({\n      preprocess: assetsPreprocessor({ /* options */ })\n    })\n  ]\n}\n```\n\n### With `svelte-loader`\n\nYou will need to install another loader to handle the imports appropriately such as [file-loader](https://webpack.js.org/loaders/file-loader/) or [url-loader](https://webpack.js.org/loaders/url-loader/).\n\n```js\n  ...\n  module: {\n    rules: [\n      ...\n      {\n        test: /\\.(png|svg|jpg|gif)$/,\n        loader: 'file-loader',\n        options: {\n          outputPath: 'images',\n        }\n      },\n      {\n        test: /\\.(html|svelte)$/,\n        exclude: /node_modules/,\n        use: {\n          loader: 'svelte-loader',\n          options: {\n            preprocess: require('svelte-assets-preprocessor')({ /* options */ exclude: [ (attr) => !/\\.(png|svg|jpg|gif)$/.test(attr)} ])\n          },\n        },\n      },\n      ...\n    ]\n  }\n  ...\n```\n\n### With Sapper\n\n[Sapper](https://sapper.svelte.dev/) has two build configurations, one for the client bundle and one for the server. To use `svelte-assets-preprocessor` with Sapper, you need to define it on both configurations.  You will need to use [@rollup/plugin-url](https://github.com/rollup/plugins/tree/master/packages/url) to load assets.\n\n```js\n// ...\nimport assetsPreprocessor from 'svelte-assets-preprocessor';\nimport path from 'path';\nimport url from '@rollup/plugin-url';\n\nconst preprocess = assetsPreprocessor({});\n\nexport default {\n  client: {\n    plugins: [\n      svelte({\n        preprocess,\n        // ...\n      }),\n      url({\n        fileName: path.join('client', 'assets', '[name].[hash][extname]'),\n        destDir: path.resolve(config.client.output().dir, '..')\n      }),\n  },\n  server: {\n    plugins: [\n      svelte({\n        preprocess,\n        // ...\n      }),\n      url({\n        fileName: path.join('server', 'assets', '[name].[hash][extname]'),\n        destDir: path.resolve(config.server.output().dir, '..')\n      }),\n    ],\n  },\n};\n```\n\n## Options\n\n### `attributes`\n\nA list of tags and attributes to process.  For each tag and attribute a type is provided ('src' or 'srcset') and an optional filter function.  The filter function can be used to add further conditions.\n\n#### Default\n\n```js\n[\n  {\n    tag: 'audio',\n    attribute: 'src',\n    type: 'src',\n  },\n  {\n    tag: 'embed',\n    attribute: 'src',\n    type: 'src',\n  },\n  {\n    tag: 'img',\n    attribute: 'src',\n    type: 'src',\n  },\n  {\n    tag: 'img',\n    attribute: 'srcset',\n    type: 'srcset',\n  },\n  {\n    tag: 'input',\n    attribute: 'src',\n    type: 'src',\n  },\n  {\n    tag: 'link',\n    attribute: 'href',\n    type: 'src',\n    filter: (tag, attribute, attributes) => {\n      if (!attributes.rel || !/stylesheet/i.test(attributes.rel)) {\n        return false;\n      }\n\n      if (\n        attributes.type &&\n        attributes.type.trim().toLowerCase() !== 'text/css'\n      ) {\n        return false;\n      }\n\n      return true;\n    },\n  },\n  {\n    tag: 'object',\n    attribute: 'data',\n    type: 'src',\n  },\n  {\n    tag: 'script',\n    attribute: 'src',\n    type: 'src',\n  },\n  {\n    tag: 'source',\n    attribute: 'src',\n    type: 'src',\n  },\n  {\n    tag: 'source',\n    attribute: 'srcset',\n    type: 'srcset',\n  },\n  {\n    tag: 'track',\n    attribute: 'src',\n    type: 'src',\n  },\n  {\n    tag: 'video',\n    attribute: 'poster',\n    type: 'src',\n  },\n  {\n    tag: 'video',\n    attribute: 'src',\n    type: 'src',\n  },\n];\n```\n\n### `exclude`\n\nA list of functions used to exclude specific assets.\n\n#### Default `[]`\n\n#### Example\n\nOnly apply to images with specific extensions.\n\n```js\n...\nexclude: [ (attr) => !/\\.(png|svg|jpg|gif)$/.test(attr)} ]\n...\n```\n\n### `http`\n\nProcess urls starting with `http`.  This is disabled by default.\n\n#### Default `false`\n\n### `prefix`\n\nThe prefix used for generated variable names.\n\n#### Default `___ASSET___`\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3589, 38],
		[3596, 99],
		[3603, 69],
		[3610, 40],
		[3617, 13],
		[3624, 30],
		[3631, 2],
		[3645, 5],
		[3652, 4],
		[3659, 4],
		[3666, 17],
		[3673, 19],
		[3680, 14],
		[3687, 12],
		[3694, 11],
		[3701, 14],
		[3708, 25],
		[3715, 2],
		[3722, 3],
		[3729, 22],
		[3736, 5],
		[3743, 13],
		[3750, 9],
		[3757, 9],
		[3764, 7],
		[3771, 5],
		[3778, 3],
		[3785, 5],
		[3792, 7],
		[3799, 2],
		[3806, 2],
		[3820, 1],
		[3827, 1],
		[3834, 1],
		[3841, 1],
		[3848, 3],
		[3855, 14],
		[3862, 26],
		[3869, 1],
		[3876, 1],
		[3883, 1],
		[3890, 12],
		[3897, 2],
		[3904, 2],
		[3911, 3],
		[3925, 1],
		[3932, 1],
		[3953, 1],
		[3960, 4],
		[3967, 1],
		[3974, 2],
		[3981, 2],
		[3988, 4],
		[3995, 7],
		[4002, 1],
		[4016, 11],
		[4030, 7],
		[4037, 8],
		[4044, 10],
		[4051, 3],
		[4058, 1],
		[4065, 2],
		[4072, 1],
		[4093, 11],
		[4100, 13],
		[4107, 7],
		[4114, 16],
		[4121, 18],
		[4128, 6]
	],
	"esm": false,
	"cjs": true
}
