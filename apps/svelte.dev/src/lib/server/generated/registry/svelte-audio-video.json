{
	"name": "svelte-audio-video",
	"description": "Create audio and video components with track management.",
	"repo_url": "https://github.com/relm-us/svelte-audio-video",
	"authors": ["canadaduane"],
	"downloads": 8,
	"updated": "2020-10-23T00:46:11.833Z",
	"tags": ["media"],
	"typescript": true,
	"version": "0.2.0",
	"svelte_range": "^3.24.0",
	"last_rune_check_version": "0.2.0",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svelte-audio-video",
				"version": "0.2.0",
				"size": 221275
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# svelte-audio-video\n\nProvides `<Audio />` and `<Video />` components that automatically attach and detach a track, if provided. This is particularly useful for video conferencing applications, but can also be used for plain video or audio applications.\n\n```bash\nyarn add svelte-audio-video\n```\n\n## Example Usage (video conferencing)\n```svelte\n<script>\n  import { Audio, Video } from 'svelte-audio-video'\n\n  const track = {\n    attach: (element, _track) => {\n      // when fired, do whatever is needed to attach the track\n      // Note: `this` refers to the `track` object\n    },\n\n    detach: (element, _track) => {\n      // when fired, do whatever is needed to detach the track\n      // Note: `this` refers to the `track` object\n    },\n  }\n</script>\n\n<!-- \n  `svelte-audio-video` guarantees that regardless of the order in which the element is\n  mounted or the track exists (i.e. is non-null), the passed-in track will be\n  \"attached\" to the underlying `<video>` HTML element.\n  -->\n<Video {track} />\n```\n\n## Example Usage (streaming video)\n```svelte\n<script>\n  import { Audio, Video } from 'svelte-audio-video'\n</script>\n\n<Video controls={true}>\n  <source\n    src=\"https://ia800208.us.archive.org/4/items/Popeye_forPresident/Popeye_forPresident_512kb.mp4\"\n    type=\"video/mp4\" />\n</Video>\n```\n",
	"legacy_svelte": true,
	"downloads_history": [
		[3596, 3],
		[3603, 4],
		[3610, 3],
		[3624, 1],
		[3631, 1],
		[3652, 2],
		[3659, 1],
		[3666, 2],
		[3673, 1],
		[3680, 1],
		[3708, 2],
		[3715, 1],
		[3729, 6],
		[3757, 2],
		[3764, 1],
		[3771, 2],
		[3778, 1],
		[3785, 1],
		[3792, 2],
		[3799, 1],
		[3806, 3],
		[3834, 1],
		[3848, 1],
		[3855, 2],
		[3862, 10],
		[3883, 1],
		[3890, 8],
		[3904, 3],
		[3911, 2],
		[3932, 1],
		[3946, 1],
		[3960, 1],
		[3974, 1],
		[3981, 3],
		[3995, 3],
		[4023, 3],
		[4030, 3],
		[4037, 6],
		[4044, 5],
		[4051, 3],
		[4065, 2],
		[4093, 7],
		[4100, 5],
		[4107, 2],
		[4114, 8],
		[4121, 7],
		[4128, 3]
	],
	"esm": true,
	"cjs": false
}
