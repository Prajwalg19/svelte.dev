{
	"name": "svup",
	"description": "Provides Yup validation for Svelte forms using actions.",
	"repo_url": "https://github.com/FalkaiPeter/svup",
	"authors": ["falkai_peter"],
	"homepage": "https://github.com/FalkaiPeter/svup#readme",
	"downloads": 12,
	"updated": "2022-12-29T15:39:07.945Z",
	"tags": ["tooling"],
	"github_stars": 0,
	"typescript": true,
	"version": "0.0.7",
	"svelte_range": "^3.49.0",
	"last_rune_check_version": "0.0.7",
	"dependency_tree": {
		"rootIndex": 0,
		"packages": [
			{
				"name": "svup",
				"version": "0.0.7",
				"size": 5818
			}
		],
		"dependencies": [],
		"circular": []
	},
	"readme": "# Yup validator for Svelte\n\n- ### Elegant\n- ### Using Svelte actions\n- ### Full yup support\n\n## Usage\n\n```typescript\n<script lang=\"ts\">\n  import validator from \"svup\";\n  import { string } from \"yup\";\n\n  const { register, isValid, onSubmit, errors } = validator({\n    validateOnInput: true,\n    schema: {\n      email: string().required().email(),\n      password: string().required().min(8),\n    },\n  });\n</script>\n\n<form on:submit(onSubmit(console.log))>\n    <input type=\"email\" name=\"email\" use:register />\n    <input type=\"password\" name=\"password\" use:register />\n    <button disabled={!$isValid}>Submit</button>\n</form>\n```\n\n## Options\n\n- ### `schema`(required): The validation schema to test against.\n- ### `validateOnInput`: Validate on `on:input` event or not. If not set validation happen on `on:blur` event.\n\n## Returns\n\n- ### `register` is an action what should used on `<input>` element, it will prepare everything for the validaton.\n- ### `isValid` is a `Readable<boolean>` store what notify you if the form is valid or not.\n- ### `errors` is a `Readable<boolean>` store what contains the error messages from yup schema.\n- ### `onSubmit` is an `on:submit` event handler. It expect a callback what get the form values.\n\n## NOTE\n\n- ### `<input>` `name` property and schema `key` must match for validation.\n- ### Simply throw `use:register` action onto inputfield and u good to go.\n- ### You can define custom `on:input` and `on:blur` listeners, they will called before validation\n",
	"legacy_svelte": false,
	"downloads_history": [
		[3596, 8],
		[3603, 8],
		[3610, 7],
		[3624, 1],
		[3631, 1],
		[3638, 1],
		[3645, 1],
		[3659, 1],
		[3666, 8],
		[3680, 1],
		[3687, 1],
		[3708, 2],
		[3729, 1],
		[3736, 7],
		[3757, 2],
		[3764, 2],
		[3771, 6],
		[3778, 2],
		[3792, 2],
		[3799, 1],
		[3806, 3],
		[3827, 1],
		[3834, 1],
		[3841, 35],
		[3848, 13],
		[3855, 3],
		[3869, 1],
		[3883, 1],
		[3890, 7],
		[3897, 1],
		[3904, 1],
		[3911, 2],
		[3925, 2],
		[3932, 1],
		[3953, 2],
		[3960, 1],
		[3974, 1],
		[3981, 1],
		[3995, 1],
		[4002, 1],
		[4016, 2],
		[4023, 5],
		[4037, 16],
		[4044, 33],
		[4051, 5],
		[4058, 1],
		[4065, 2],
		[4100, 21],
		[4107, 2],
		[4114, 12],
		[4121, 11],
		[4128, 2],
		[4135, 4]
	],
	"esm": false,
	"cjs": true
}
